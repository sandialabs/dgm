#==============================================================================
#   Title:     DGM Utilities Makefile
#
#   Author:    Curtis Ober        ccober@sandia.gov
#              Scott Collis       sscoll@sandia.gov
#
#   Copyright: (C)2012 Sandia National Laboratories
#==============================================================================

# Use .ARCH to help determine build architecture
# Set default architecture.
ARCH = GCC

# Override the uname value with a local ARCHitecture file
LARCH = $(shell if [ -e ../.ARCH ] ; then echo 1; else echo 0 ; fi)
ifeq ($(LARCH),1)
  ARCH = $(shell cat ../.ARCH)
endif

# ==============================================================================
# If you have netcdf, atlas and boost installed in $DGM_TPL and 
# $TRILINOS_HOME is defined, then you should not need to change
# things in this section.
#
# You likely have exodus installed in one of two ways: a separate
# installation of exodus, or exodus installed with Trilinos.
# We assume use have installed exodus with Trilinos for the default.
# 
# Default settings
ifdef DGM_TPL
TPL = $(DGM_TPL)
else
TPL = $(HOME)/local
endif

ifdef TRILINOS_HOME
EXODUS_HOME = $(TRILINOS_HOME)/serial/opt
EXODUS = exodus
else
EXODUS_HOME = $(TPL)/exodusii
EXODUS = exoIIv2c
endif

# If the libraries are in another location, then set them explicitly below.
#TPL = $(HOME)/local
#EXODUS_HOME = $(HOME)/local/exodus              # Separate exodus installation
#EXODUS_HOME = $(HOME)/local/trilinos/serial/opt # Installed with Trilinos
# ==============================================================================

# Libs for individual executables
EXO2IEN_INCDIR = -I../src -I$(TPL)/atlas/include -I$(TPL)/netcdf/include -I$(TPL)/boost/include -I$(EXODUS_HOME)/include
EXO2IEN_LIBDIR = -L$(EXODUS_HOME)/lib -L$(TPL)/atlas/lib -L$(TPL)/netcdf/lib -L$(TPL)/hdf5/lib -l$(EXODUS) -lnetcdf -lhdf5 -lhdf5_hl
EXO2IEN_LIBS = -lcurl -lz -lm

include $(TPL)/trilinos/mpi/opt/include/Makefile.export.Zoltan
Zoltan2_TPL_INCLUDE_DIRS = -I$(TPL)/atlas/include -I$(TPL)/netcdf/mpi/opt/include -I$(TPL)/boost/include
Zoltan2_TPL_LIBRARY_DIRS = -L$(TPL)/atlas/lib -L$(TPL)/netcdf/mpi/opt/lib -L$(TPL)/hdf5/mpi/opt/lib -L$(TPL)/boost/lib 
Zoltan2_TPL_LIBRARIES = -lboost_mpi -lblas
#
# OS specific settings
#
ifeq ($(ARCH),Linux)                    # Linux
  CXX = g++
  CC  = gcc
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),Linux-x86_64)             # Linux-x86_64
  CXX = g++
  CC  = gcc
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),GCC)                      # Generic GCC compiler
  CXX = g++
  CC  = gcc
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),ICC)                      # Intel CC compiler
  CXX = icpc
  CC  = icc
  FC  = ifort 
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),Linux64)                  # Intel CC compiler on IA64
  CXX = g++
  CC  = gcc
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),Darwin)                   # GCC compiler on Apple Darwin
  CXX = g++ 
  CC  = gcc 
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),Darwin-x86_64)            # GCC compiler on Apple Darwin x86-64
  CXX = g++ 
  CC  = gcc 
  FC  = g77
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),TLCC)                     # TLCC MPP 
  CXX = icpc
  CC  = icc
  FC  = ifort 
  MPICXX = mpicxx
  MPICC  = mpicc
endif

ifeq ($(ARCH),CRAY)                     # Cray XT using Cray C++
  CXX = CC 
  CC  = cc
  FC  = ftn 
  MPICXX = CC 
  MPICC = cc
  EXO2IEN_INCDIR = -I../src -I$(TPL)/atlas/include -I$(TPL)/boost/include -I$(EXODUS_HOME)/include
  EXO2IEN_LIBDIR = -L$(EXODUS_HOME)/lib -L$(TPL)/atlas/lib -l$(EXODUS) -lnetcdf -lhdf5 -lhdf5_hl
  EXO2IEN_LIBS = -lz -lm
  Zoltan2_TPL_LIBRARIES = -lboost_mpi
endif


ifdef TRILINOS_HOME
all: exo2ien zoltan2

# exo2ien converts standard finite element mesh files to DGM format
exo2ien: exo2ien.cpp ../src/Vector.hpp ../src/Matrix.hpp ../src/Types.hpp
	@echo '----------------------------------------------------'
	@echo 'Building exo2ien with Trilinos and ARCH = '$(ARCH)
	@echo '----------------------------------------------------'
	$(CXX) exo2ien.cpp -DGCC4 $(EXO2IEN_INCDIR) $(EXO2IEN_LIBDIR) $(EXO2IEN_LIBS) -o exo2ien

zoltan2: zoltan2.cpp 
	@echo '----------------------------------------------------'
	@echo 'Building zoltan2 with Trilinos and ARCH = '$(ARCH)
	@echo '----------------------------------------------------'
	$(MPICXX) -g zoltan2.cpp -I ../src ../src/CaseInsensitiveString.cpp -DGCC4 $(Zoltan2_TPL_INCLUDE_DIRS) $(Zoltan_INCLUDE_DIRS) $(Zoltan_LIBRARY_DIRS) $(Zoltan_LIBRARIES) $(Zoltan2_TPL_LIBRARY_DIRS) $(Zoltan2_TPL_LIBRARIES) -o zoltan2

else
# exo2ien converts standard finite element mesh files to DGM format
exo2ien: exo2ien.cpp ../src/Vector.hpp ../src/Matrix.hpp ../src/Types.hpp
	@echo '----------------------------------------------------'
	@echo 'Building exo2ien with Exodus and ARCH = '$(ARCH)
	@echo '----------------------------------------------------'
	$(CXX) exo2ien.cpp -DGCC4 $(EXO2IEN_INCDIR) $(EXO2IEN_LIBDIR) $(EXO2IEN_LIBS) -o exo2ien
endif

docs:
	doxygen exo2ien.cfg

clean:
	rm -f exo2ien zoltan2
