<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>a_trivial_mpi_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>a__trivial__mpi__test_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>a__trivial__mpi__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
    <member kind="variable" static="yes">
      <type>static bool</type>
      <name>verbose</name>
      <anchorfile>Amesos_8cpp.html</anchorfile>
      <anchor>ab3f078684998b83967d507d0f453f454</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos_8h</filename>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <class kind="class">Amesos</class>
  </compound>
  <compound kind="file">
    <name>amesos_amd.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Include/</path>
    <filename>amesos__amd_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a77366c1bd428629dc898e188bfd182a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_CONTROL</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>affdc598f13446fa7f4dbd2e55aeeba36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_INFO</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ad4d0388011f3a533198976feb69ae5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DENSE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>aa5d6b72c4e51b57087a55b99d5072792</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_AGGRESSIVE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a51a25f4c648f8be90e5db00ff10f89c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEFAULT_DENSE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a4ab439dcb1b2034b0cf7b92c5ad60e6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEFAULT_AGGRESSIVE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a2da83d1a74137be92385ffd239e5e4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_STATUS</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a11d69311f252e19d4435029812065206</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_N</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ad593079a13107070ba76e539b3b1c19a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NZ</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a4f88b4f4705995693bc017d717dad36e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_SYMMETRY</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ae8211d71b1b50b77c06984a07275edd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NZDIAG</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a835a095afffcd03e5ed5c2632c2dc1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NZ_A_PLUS_AT</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a2f9a02baa3b1a848dce862fbea0f2e64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NDENSE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a17c486f4577c5914e975e270ea7c8b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_MEMORY</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a947c29267a22a2c462c55e8912ba2432</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NCMPA</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ae7b45589f33fbdad203bf330abb423e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_LNZ</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a0bb2d3b5a2436760e9ea6cefdfcd90af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NDIV</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a35be9f9c7b66f2a449dbadd022ebb4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NMULTSUBS_LDL</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>aa45c6a9529df13508f551cd9d366fe22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_NMULTSUBS_LU</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a6608c6d00d7e671f92baa675990619a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DMAX</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a7fa264773307cae6f5c829f29e2e8efa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_OK</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a7bf9fb29997a2f5c025d8647ccd446ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_OUT_OF_MEMORY</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a3a1e5404ad34ec4faf624d2416410103</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_INVALID</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a7dce2cf7732f27fad7ab5700347ff4b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_OK_BUT_JUMBLED</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ad8b8eddc9133dfab5b1cebe6f85b1dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DATE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a3cc33507c4130196ea26e685d9fd634d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_VERSION_CODE</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ae315a02a72fdc20262c4a3d55b8954e9</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_MAIN_VERSION</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a8e7394a28c884e0559d7b252c1beea5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_SUB_VERSION</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>aa055fcdf57343e1744fb114add9d0086</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_SUBSUB_VERSION</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ab2cabd46ed253019dee4cfa046e08dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_VERSION</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ac15fe8d35e7859df7fa5d8fbc892d42d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_amd_order</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ac03073065fb96292ea7bde987d0edc40</anchor>
      <arglist>(int n, const int Ap[], const int Ai[], int P[], double Control[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_amd_l_order</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a6a24716b49b1e79ffba0442d1cf899b0</anchor>
      <arglist>(UF_long n, const UF_long Ap[], const UF_long Ai[], UF_long P[], double Control[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_2</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a7014f9820f673f57ed8fcc576b21dadf</anchor>
      <arglist>(int n, int Pe[], int Iw[], int Len[], int iwlen, int pfree, int Nv[], int Next[], int Last[], int Head[], int Elen[], int Degree[], int W[], double Control[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_l2</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>aa72cd5ecf793faea68060b644600ea60</anchor>
      <arglist>(UF_long n, UF_long Pe[], UF_long Iw[], UF_long Len[], UF_long iwlen, UF_long pfree, UF_long Nv[], UF_long Next[], UF_long Last[], UF_long Head[], UF_long Elen[], UF_long Degree[], UF_long W[], double Control[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_amd_valid</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a89900792bc955b6f087e55410046a52c</anchor>
      <arglist>(int n_row, int n_col, const int Ap[], const int Ai[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_amd_l_valid</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a0836c3781976873a532115596406c1b4</anchor>
      <arglist>(UF_long n_row, UF_long n_col, const UF_long Ap[], const UF_long Ai[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_defaults</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a0c5b2b0851a1e51a6214df66a5f0064f</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_l_defaults</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a67f781c88499c0166af3351b3abffc31</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_control</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a4f703682dfa345f750c15eb9132f6a7e</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_l_control</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a12ebda7263a20c4829417472efe576d4</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_info</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a31f890b8427d542ade9c85d7b8127292</anchor>
      <arglist>(double Info[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_amd_l_info</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a4c7f0308aa74c989e5724c967c48becc</anchor>
      <arglist>(double Info[])</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_amd_malloc</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>ade2787c24173bbbe7fb00e9b3378faea</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void(*</type>
      <name>amesos_amd_free</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>aa4f0d78bafae1e742acba256e78a1193</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_amd_realloc</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a13ddf14292a103007b81f3bdb854497f</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_amd_calloc</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a9c3a3a82cc8cace2e99a7ca40d93791b</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN int(*</type>
      <name>amesos_amd_printf</name>
      <anchorfile>amesos__amd_8h.html</anchorfile>
      <anchor>a5491d5a922183acb2994a4082a49997f</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_1.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__1_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_1</name>
      <anchorfile>amesos__amd__1_8c.html</anchorfile>
      <anchor>ae62c0cecb674f77e9d4f53f42043ae7b</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], Int Pinv[], Int Len[], Int slen, Int S[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_2.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__2_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_clear_flag</name>
      <anchorfile>amesos__amd__2_8c.html</anchorfile>
      <anchor>a2ad8b937c74b5f1d421fe75302b5a3cb</anchor>
      <arglist>(Int wflg, Int wbig, Int W[], Int n)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_2</name>
      <anchorfile>amesos__amd__2_8c.html</anchorfile>
      <anchor>a5a58f9a9d1d8e401434327b7dc584ee7</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree,   Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_aat.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__aat_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL size_t</type>
      <name>AMD_aat</name>
      <anchorfile>amesos__amd__aat_8c.html</anchorfile>
      <anchor>a22794dbc073d2ac546abb64392e8652e</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Len[], Int Tp[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_control.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__control_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_control</name>
      <anchorfile>amesos__amd__control_8c.html</anchorfile>
      <anchor>a8f9debffb6d19f0cbe2373a9199614bf</anchor>
      <arglist>(double Control[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_defaults.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__defaults_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_defaults</name>
      <anchorfile>amesos__amd__defaults_8c.html</anchorfile>
      <anchor>abe3dace384c517a5688e6cb6f1ce1b44</anchor>
      <arglist>(double Control[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_dump.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__dump_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_debug_init</name>
      <anchorfile>amesos__amd__dump_8c.html</anchorfile>
      <anchor>a4c4fb89821cf2a9bae9542bed24f5864</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_dump</name>
      <anchorfile>amesos__amd__dump_8c.html</anchorfile>
      <anchor>ad7940fffb810168ff293ff00da3ac8da</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree, Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], Int nel)</arglist>
    </member>
    <member kind="variable">
      <type>GLOBAL Int</type>
      <name>AMD_debug</name>
      <anchorfile>amesos__amd__dump_8c.html</anchorfile>
      <anchor>aeceeb6b1698e37055e239d82b0fca301</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_global.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__global_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_amd_malloc</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>a335ace496930b8a8fa6baee8abce7416</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>amesos_amd_free</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>a4267f833d69cfd4fdcf120e661dd797c</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_amd_realloc</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>aa665654c1f08c8a36b801394cba16ddf</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_amd_calloc</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>a79fa2ffb5a940fb6fe2a9f73a65793a6</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>amesos_amd_printf</name>
      <anchorfile>amesos__amd__global_8c.html</anchorfile>
      <anchor>a277cf8e2f92b6413685f13e9d33cacd2</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_info.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__info_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRI</name>
      <anchorfile>amesos__amd__info_8c.html</anchorfile>
      <anchor>af42ac74333112ba9640a191bea4230c0</anchor>
      <arglist>(format, x)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_info</name>
      <anchorfile>amesos__amd__info_8c.html</anchorfile>
      <anchor>a5b07b75239e39b14e3d9273218eecd9d</anchor>
      <arglist>(double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_internal.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Include/</path>
    <filename>amesos__amd__internal_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <includes id="amesos__amd_8h" name="amesos_amd.h" local="yes" imported="no">amesos_amd.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLIP</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a9b17a06cbb01e7b7a165c13e5640fd46</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNFLIP</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a58d80900906670c5df232e3c288dbec9</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLIES</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aa2faa268dbd9c43a8e7aac92bd70114f</anchor>
      <arglist>(p, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIZE_T_MAX</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>acfa3af56d5e0045c1d7a5682fd1d2853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_order</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ad0a7a2b7611f040ab0fe5b2d21315038</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_defaults</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ab95de05cfb0c5289b12c9680a38d2bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_control</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a929f2d9484aa213d8d118b9020318d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_info</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a9f5748f9d35403b59f66710ee1212a82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_1</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a94cc01405c92793818283753af88cd2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_2</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a84e7b06fe5121a773a03f601eb6b48ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_valid</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a73783eda41bbecd6671f619cab1650d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_aat</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aaaf1c74d82ed1bc639d31aa886a26902</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_postorder</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a0b2a248bbe495b6731e5d93383376f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_post_tree</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a2e30376c31e65ef69fe9624fe0377907</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_dump</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ad6a599d15b6481a28fc572961e0c873a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_debug</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a345a39fc2e311324fa1d45033b692ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_debug_init</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ad8e2519f3d40b5bc00b7d28c25b41903</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_preprocess</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aee4f02bea7a424a10cccdef6e493f989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEBUG0</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aa7a9799073f6b5fb48d087321121345e</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEBUG1</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a37fa7f2b8b3ac668a7e1c2613445b16d</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEBUG2</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>affe04eb97a59a9cb13e0b537b1844197</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEBUG3</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>afd254e4246734c9bb9bb01350196f2bd</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_DEBUG4</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>aab6224578a8462cdc28a6e511cafa6b1</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL size_t</type>
      <name>AMD_aat</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a22794dbc073d2ac546abb64392e8652e</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Len[], Int Tp[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_1</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ae62c0cecb674f77e9d4f53f42043ae7b</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], Int Pinv[], Int Len[], Int slen, Int S[], double Control[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_postorder</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a5f120a93853d9bd2f1111a6a78a8bc15</anchor>
      <arglist>(Int nn, Int Parent[], Int Npiv[], Int Fsize[], Int Order[], Int Child[], Int Sibling[], Int Stack[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_post_tree</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>afa29d5e69f6511b9de8281a892ef3c21</anchor>
      <arglist>(Int root, Int k, Int Child[], const Int Sibling[], Int Order[], Int Stack[], Int nn)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_preprocess</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>abe9911e9d13c483af0160977d0894adf</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Rp[], Int Ri[], Int W[], Int Flag[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_debug_init</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a4c4fb89821cf2a9bae9542bed24f5864</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_dump</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>ad7940fffb810168ff293ff00da3ac8da</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree, Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], Int nel)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN Int</type>
      <name>AMD_debug</name>
      <anchorfile>amesos__amd__internal_8h.html</anchorfile>
      <anchor>a11999c7361727f175f77c7b6911199f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l1.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l1_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l1_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_1</name>
      <anchorfile>amesos__amd__l1_8c.html</anchorfile>
      <anchor>ae62c0cecb674f77e9d4f53f42043ae7b</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], Int Pinv[], Int Len[], Int slen, Int S[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l2.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l2_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l2_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_clear_flag</name>
      <anchorfile>amesos__amd__l2_8c.html</anchorfile>
      <anchor>a2ad8b937c74b5f1d421fe75302b5a3cb</anchor>
      <arglist>(Int wflg, Int wbig, Int W[], Int n)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_2</name>
      <anchorfile>amesos__amd__l2_8c.html</anchorfile>
      <anchor>a5a58f9a9d1d8e401434327b7dc584ee7</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree,   Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_aat.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__aat_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__aat_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL size_t</type>
      <name>AMD_aat</name>
      <anchorfile>amesos__amd__l__aat_8c.html</anchorfile>
      <anchor>a22794dbc073d2ac546abb64392e8652e</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Len[], Int Tp[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_order.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__order_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__order_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_order</name>
      <anchorfile>amesos__amd__l__order_8c.html</anchorfile>
      <anchor>ac7b0b745b4ff68a74fced7cd6b776dd1</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_post_tree.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__post__tree_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__post__tree_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_post_tree</name>
      <anchorfile>amesos__amd__l__post__tree_8c.html</anchorfile>
      <anchor>afa29d5e69f6511b9de8281a892ef3c21</anchor>
      <arglist>(Int root, Int k, Int Child[], const Int Sibling[], Int Order[], Int Stack[], Int nn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__postorder_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__postorder_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_postorder</name>
      <anchorfile>amesos__amd__l__postorder_8c.html</anchorfile>
      <anchor>a254843af8c9dd1836a7264b8d9347ba9</anchor>
      <arglist>(Int nn, Int Parent[], Int Nv[], Int Fsize[],   Int Order[],   Int Child[], Int Sibling[], Int Stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_preprocess.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__preprocess_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__preprocess_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_preprocess</name>
      <anchorfile>amesos__amd__l__preprocess_8c.html</anchorfile>
      <anchor>a7f797dae2c1b7b06b2861f805010cdfc</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[],   Int Rp[], Int Ri[], Int W[], Int Flag[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_l_valid.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__l__valid_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__amd__l__valid_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_valid</name>
      <anchorfile>amesos__amd__l__valid_8c.html</anchorfile>
      <anchor>a27cc60e86354a6e5c81c5d2f8c3f6874</anchor>
      <arglist>(Int n_row, Int n_col, const Int Ap[], const Int Ai[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_order.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__order_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_order</name>
      <anchorfile>amesos__amd__order_8c.html</anchorfile>
      <anchor>ac7b0b745b4ff68a74fced7cd6b776dd1</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], double Control[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_post_tree.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__post__tree_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_post_tree</name>
      <anchorfile>amesos__amd__post__tree_8c.html</anchorfile>
      <anchor>afa29d5e69f6511b9de8281a892ef3c21</anchor>
      <arglist>(Int root, Int k, Int Child[], const Int Sibling[], Int Order[], Int Stack[], Int nn)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__postorder_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_postorder</name>
      <anchorfile>amesos__amd__postorder_8c.html</anchorfile>
      <anchor>a254843af8c9dd1836a7264b8d9347ba9</anchor>
      <arglist>(Int nn, Int Parent[], Int Nv[], Int Fsize[],   Int Order[],   Int Child[], Int Sibling[], Int Stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_preprocess.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__preprocess_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>AMD_preprocess</name>
      <anchorfile>amesos__amd__preprocess_8c.html</anchorfile>
      <anchor>a7f797dae2c1b7b06b2861f805010cdfc</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[],   Int Rp[], Int Ri[], Int W[], Int Flag[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_amd_valid.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/AMD/Source/</path>
    <filename>amesos__amd__valid_8c</filename>
    <includes id="amesos__amd__internal_8h" name="amesos_amd_internal.h" local="yes" imported="no">amesos_amd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>AMD_valid</name>
      <anchorfile>amesos__amd__valid_8c.html</anchorfile>
      <anchor>a27cc60e86354a6e5c81c5d2f8c3f6874</anchor>
      <arglist>(Int n_row, Int n_col, const Int Ap[], const Int Ai[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_BaseSolver.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__BaseSolver_8h</filename>
    <class kind="class">Amesos_BaseSolver</class>
    <member kind="variable">
      <type>const int</type>
      <name>StructurallySingularMatrixError</name>
      <anchorfile>Amesos__BaseSolver_8h.html</anchorfile>
      <anchor>a6a08258404a15a611bbeb944bfd1bc38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>NumericallySingularMatrixError</name>
      <anchorfile>Amesos__BaseSolver_8h.html</anchorfile>
      <anchor>a69bbaf10c4fee27d29956763f170a139</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_BTF.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__BTF_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <class kind="class">Amesos_Btf</class>
  </compound>
  <compound kind="file">
    <name>amesos_btf_decl.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Include/</path>
    <filename>amesos__btf__decl_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>BTF_FLIP</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a7a3e4a49dba27de4d6966491151f72ca</anchor>
      <arglist>(j)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_ISFLIPPED</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a9a19d18dab0bb7824e1965b6220e585e</anchor>
      <arglist>(j)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_UNFLIP</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>ad7414ecf8b5e0c35d8d5150a92363514</anchor>
      <arglist>(j)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_DATE</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a435284bae4ef908eda8d5c981c9d99da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_VERSION_CODE</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a35acd788aee1bae40ba6401381dec2a1</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_MAIN_VERSION</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a7f33545a86dc99595ba39af714d641a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_SUB_VERSION</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>ad1df1045c57cd49d66199e0559264484</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_SUBSUB_VERSION</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>ab83fea2aa9c10824637c113d3b60e5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_VERSION</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a8ee95b172c07d365b11f8024196e1314</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_btf_maxtrans</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>ae26d38b2819655c6eed8cce5bc23dcc0</anchor>
      <arglist>(int nrow, int ncol, int Ap[], int Ai[], double maxwork,   double *work, int Match[],   int Work[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_btf_l_maxtrans</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a830a9cbeb5d45b2fb02c2387a9a082b9</anchor>
      <arglist>(UF_long, UF_long, UF_long *, UF_long *, double, double *, UF_long *, UF_long *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_btf_strongcomp</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a75e58fc78808ebcbbc08d7b1b1064394</anchor>
      <arglist>(int n, int Ap[], int Ai[],   int Q[],   int P[], int R[],   int Work[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_btf_l_strongcomp</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a8486049a95bce822faebe28e68977700</anchor>
      <arglist>(UF_long, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_btf_order</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a9f9bae2979828239e49e2eb3f5bef4ea</anchor>
      <arglist>(int n, int Ap[], int Ai[], double maxwork,   double *work, int P[], int Q[], int R[], int *nmatch,   int Work[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_btf_l_order</name>
      <anchorfile>amesos__btf__decl_8h.html</anchorfile>
      <anchor>a0eba79cf512efd8494f8a8054fa2ec1b</anchor>
      <arglist>(UF_long, UF_long *, UF_long *, double, double *, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_internal.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Include/</path>
    <filename>amesos__btf__internal_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_id</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a0b0a54b619c7ea4c090b655efdcf0325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>aa2169f252f24cc52f757c3a101406dbe</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NPRINT</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>afae91e38b7bd1aef5a5fff6912a35244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a5d5f62b566bd3a77d449fccb7b1a9656</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>ac37a18b85d5dd782f46858266be25995</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__btf__internal_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_l_maxtrans.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__l__maxtrans_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__btf__l__maxtrans_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_augment</name>
      <anchorfile>amesos__btf__l__maxtrans_8c.html</anchorfile>
      <anchor>a6665721c21891d9338707ab8504dae22</anchor>
      <arglist>(Int k, Int Ap[], Int Ai[], Int Match[], Int Cheap[], Int Flag[], Int Istack[], Int Jstack[], Int Pstack[], double *work, double maxwork)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__l__maxtrans_8c.html</anchorfile>
      <anchor>ae2ea3f7582ea03615b7950ea92f11a3e</anchor>
      <arglist>(maxtrans)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_l_order.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__l__order_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__btf__l__order_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__l__order_8c.html</anchorfile>
      <anchor>acccb33927ce6aa68457a4a58b81c1b78</anchor>
      <arglist>(order)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_l_strongcomp.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__l__strongcomp_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__btf__l__strongcomp_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNVISITED</name>
      <anchorfile>amesos__btf__l__strongcomp_8c.html</anchorfile>
      <anchor>ac5e53f242a9c7613a7499cfc28fdb607</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNASSIGNED</name>
      <anchorfile>amesos__btf__l__strongcomp_8c.html</anchorfile>
      <anchor>a7f2a734b84f750bb35708fd8f3d0121e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_dfs</name>
      <anchorfile>amesos__btf__l__strongcomp_8c.html</anchorfile>
      <anchor>adaace781248f00796f2bcce81f1ca4dd</anchor>
      <arglist>(Int j, Int Ap[], Int Ai[], Int Q[],   Int Time[], Int Flag[], Int Low[], Int *p_nblocks, Int *p_timestamp,   Int Cstack[], Int Jstack[], Int Pstack[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__l__strongcomp_8c.html</anchorfile>
      <anchor>aeee66837347547183121d263e44c5616</anchor>
      <arglist>(strongcomp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_maxtrans.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__maxtrans_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_augment</name>
      <anchorfile>amesos__btf__maxtrans_8c.html</anchorfile>
      <anchor>a6665721c21891d9338707ab8504dae22</anchor>
      <arglist>(Int k, Int Ap[], Int Ai[], Int Match[], Int Cheap[], Int Flag[], Int Istack[], Int Jstack[], Int Pstack[], double *work, double maxwork)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__maxtrans_8c.html</anchorfile>
      <anchor>ae2ea3f7582ea03615b7950ea92f11a3e</anchor>
      <arglist>(maxtrans)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_order.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__order_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__order_8c.html</anchorfile>
      <anchor>acccb33927ce6aa68457a4a58b81c1b78</anchor>
      <arglist>(order)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_btf_strongcomp.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/BTF/Source/</path>
    <filename>amesos__btf__strongcomp_8c</filename>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__btf__internal_8h" name="amesos_btf_internal.h" local="yes" imported="no">amesos_btf_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>UNVISITED</name>
      <anchorfile>amesos__btf__strongcomp_8c.html</anchorfile>
      <anchor>ac5e53f242a9c7613a7499cfc28fdb607</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNASSIGNED</name>
      <anchorfile>amesos__btf__strongcomp_8c.html</anchorfile>
      <anchor>a7f2a734b84f750bb35708fd8f3d0121e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_dfs</name>
      <anchorfile>amesos__btf__strongcomp_8c.html</anchorfile>
      <anchor>adaace781248f00796f2bcce81f1ca4dd</anchor>
      <arglist>(Int j, Int Ap[], Int Ai[], Int Q[],   Int Time[], Int Flag[], Int Low[], Int *p_nblocks, Int *p_timestamp,   Int Cstack[], Int Jstack[], Int Pstack[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>BTF</name>
      <anchorfile>amesos__btf__strongcomp_8c.html</anchorfile>
      <anchor>aeee66837347547183121d263e44c5616</anchor>
      <arglist>(strongcomp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Include/</path>
    <filename>amesos__camd_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a77366c1bd428629dc898e188bfd182a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_CONTROL</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a3609acae65b1124d914c2e7c70ee22ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_INFO</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a71c2fa286bf93e865c8461b03f766242</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DENSE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>acef777a9a1dfe0ac974b2bdd7f73dade</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_AGGRESSIVE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ad702201c4d185f667ef79d77d7dbaf7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEFAULT_DENSE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a28ca7321e3c14b06a245b24aeb25ad85</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEFAULT_AGGRESSIVE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ae910f413811b21515255e64aaa6496ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_STATUS</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a77563dc145d7cb7ea5a97a138b5c8a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_N</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a95a0a881fb64ca085ab7c90f53b1084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NZ</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>afa56b1ebacd4691a49afc36e773e2728</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_SYMMETRY</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>acd0d1cd875ac02b1dd772d4260da1d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NZDIAG</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a33ec6453bdcef37ddb311cdd693a4a2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NZ_A_PLUS_AT</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a66887183f088cc752a1e177ace6e71d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NDENSE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a42a790fdea9f933d3fc67534aa620fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_MEMORY</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ad05ddf1dd31a8dc7efbd0aa1791c0b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NCMPA</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a2f0f83c07e72b19afd71a0787f2b65d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_LNZ</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a3075b18d50ec2152417aa264241a7442</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NDIV</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ad40b34df14359d8009c923d4701cb25c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NMULTSUBS_LDL</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a0e58d4d7719e2e0dd6a7af87bdd21e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_NMULTSUBS_LU</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a9d8b99b98f0fd7c458d53162bbe557c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DMAX</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ac980db823cad43cb388f549cf63471a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_OK</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a1d70c11f60750651adb4e340da22fbda</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_OUT_OF_MEMORY</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>acb552755cf3d6c567ba191a042394371</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_INVALID</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a4a927938585b64a25a6adcea8c1c0a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_OK_BUT_JUMBLED</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a6dca55cfbce642d1e22b9aecba7adf0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DATE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a1c28412e5f450db7fa4a5743059490da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_VERSION_CODE</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a83ebd5c1a9ca2d1db55e5ba9ab846330</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_MAIN_VERSION</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a6a3bbcd9f6608456f63e8183e9360b36</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_SUB_VERSION</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a1ba2df7f8aaf4824de123d2a0c36fa3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_SUBSUB_VERSION</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a0bb6461ae52eb2dbccb25ed4e62061e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_VERSION</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a853b8ff78bba83ce5ff51e797220d4af</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_camd_order</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a6e9a5b3889b6564b42ebd7c043b0d84b</anchor>
      <arglist>(int n, const int Ap[], const int Ai[], int P[], double Control[], double Info[], const int C[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_camd_l_order</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a1e967f5634339cba109455e1422a1f8e</anchor>
      <arglist>(UF_long n, const UF_long Ap[], const UF_long Ai[], UF_long P[], double Control[], double Info[], const UF_long C[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_2</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>abe5b1598de86d2498853324c6f509d9b</anchor>
      <arglist>(int n, int Pe[], int Iw[], int Len[], int iwlen, int pfree, int Nv[], int Next[], int Last[], int Head[], int Elen[], int Degree[], int W[], double Control[], double Info[], const int C[], int BucketSet[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_l2</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a6e90487a9bfe71313a328b44bbc06610</anchor>
      <arglist>(UF_long n, UF_long Pe[], UF_long Iw[], UF_long Len[], UF_long iwlen, UF_long pfree, UF_long Nv[], UF_long Next[], UF_long Last[], UF_long Head[], UF_long Elen[], UF_long Degree[], UF_long W[], double Control[], double Info[], const UF_long C[], UF_long BucketSet[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_camd_valid</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>abdbf2a594e7748ec1d8cff93a0378d70</anchor>
      <arglist>(int n_row, int n_col, const int Ap[], const int Ai[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_camd_l_valid</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ad6c743c90631fbe9eb3e7b1f92eb2d5c</anchor>
      <arglist>(UF_long n_row, UF_long n_col, const UF_long Ap[], const UF_long Ai[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_camd_cvalid</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>adeda85265ada1bd85ba8ffe2fb950287</anchor>
      <arglist>(int n, const int C[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_camd_l_cvalid</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>afbf0a4b6a3ae4598b956af61f4da4526</anchor>
      <arglist>(UF_long n, const UF_long C[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_defaults</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a8b251239a3c2f8f2d6905fbf52909caf</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_l_defaults</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a5121a78529406e2c98e9d20be4e5a7b3</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_control</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ab3a262c07dcb45b90d4c10534235d951</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_l_control</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>aa3fe70e3d9a08c5a96094f165f35497b</anchor>
      <arglist>(double Control[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_info</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a98e3fffee35079eedda3c91e1fe043b0</anchor>
      <arglist>(double Info[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_camd_l_info</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a26bf1e43f80daa0960541f7ad3ceb2a0</anchor>
      <arglist>(double Info[])</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_camd_malloc</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>af94750f6e8af7d67255ecf5f270bc0ae</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void(*</type>
      <name>amesos_camd_free</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a49c303f09276212bbc81fc09f8311ff7</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_camd_realloc</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>ac890d9cc301d3b48cc967dde63868202</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN void *(*</type>
      <name>amesos_camd_calloc</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a7b6337dac62d095574c6471423b9f588</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN int(*</type>
      <name>amesos_camd_printf</name>
      <anchorfile>amesos__camd_8h.html</anchorfile>
      <anchor>a564f894662be41e4759b687e3f563106</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_1.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__1_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_1</name>
      <anchorfile>amesos__camd__1_8c.html</anchorfile>
      <anchor>aabfa1dbc0cf8f89b1204b95329b5136b</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], Int Pinv[], Int Len[], Int slen, Int S[], double Control[], double Info[], const Int C[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_2.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__2_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IsInCurrentSet</name>
      <anchorfile>amesos__camd__2_8c.html</anchorfile>
      <anchor>a30c826f5588064a6446c237c889fb25d</anchor>
      <arglist>(C, i, curC)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>InSameConstraintSet</name>
      <anchorfile>amesos__camd__2_8c.html</anchorfile>
      <anchor>a9c71432aab044f16664f44768285060b</anchor>
      <arglist>(C, i, j)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_clear_flag</name>
      <anchorfile>amesos__camd__2_8c.html</anchorfile>
      <anchor>a2ad8b937c74b5f1d421fe75302b5a3cb</anchor>
      <arglist>(Int wflg, Int wbig, Int W[], Int n)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_2</name>
      <anchorfile>amesos__camd__2_8c.html</anchorfile>
      <anchor>a6f8f46e55334d22b0dce9b42383fee0d</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree,   Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[],   double Control[], double Info[],   const Int C[],   Int BucketSet[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_aat.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__aat_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL size_t</type>
      <name>CAMD_aat</name>
      <anchorfile>amesos__camd__aat_8c.html</anchorfile>
      <anchor>af48df268e82830e91a05a60d81b2ff1e</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Len[], Int Tp[], double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_control.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__control_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_control</name>
      <anchorfile>amesos__camd__control_8c.html</anchorfile>
      <anchor>a5670e31c95ce920344755f95e836d822</anchor>
      <arglist>(double Control[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_defaults.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__defaults_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_defaults</name>
      <anchorfile>amesos__camd__defaults_8c.html</anchorfile>
      <anchor>a2afb3b451a9d58e80e2d1d34e785e407</anchor>
      <arglist>(double Control[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_dump.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__dump_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_debug_init</name>
      <anchorfile>amesos__camd__dump_8c.html</anchorfile>
      <anchor>a70106ec1bd726d365af0f5f4756e85bf</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_dump</name>
      <anchorfile>amesos__camd__dump_8c.html</anchorfile>
      <anchor>a80bc37ecb0ee78df5ca7b9a9995f8d41</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree, Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], Int nel, Int BucketSet[], const Int C[], Int CurC)</arglist>
    </member>
    <member kind="variable">
      <type>GLOBAL Int</type>
      <name>CAMD_debug</name>
      <anchorfile>amesos__camd__dump_8c.html</anchorfile>
      <anchor>aac1e5d38dfda1c4c60a1d2bfa4ec9157</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_global.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__global_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_camd_malloc</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>aa445b0481f28363057d29193c7d4f707</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>amesos_camd_free</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>ab8fa32f0ea3c7c6eacec45f61e2beecf</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_camd_realloc</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>a560fa77edcc28bf31041cd845684f1c1</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>amesos_camd_calloc</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>a72b07f22fbf6a6112d63309b3bb67598</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>amesos_camd_printf</name>
      <anchorfile>amesos__camd__global_8c.html</anchorfile>
      <anchor>a3240119a7c6079aa674cbd7e93bc5aac</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_info.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__info_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>PRI</name>
      <anchorfile>amesos__camd__info_8c.html</anchorfile>
      <anchor>af42ac74333112ba9640a191bea4230c0</anchor>
      <arglist>(format, x)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_info</name>
      <anchorfile>amesos__camd__info_8c.html</anchorfile>
      <anchor>ae7f13fcd4a17b7dfdbd2653da41d4f53</anchor>
      <arglist>(double Info[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_internal.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Include/</path>
    <filename>amesos__camd__internal_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <includes id="amesos__camd_8h" name="amesos_camd.h" local="yes" imported="no">amesos_camd.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLIP</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a9b17a06cbb01e7b7a165c13e5640fd46</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNFLIP</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a58d80900906670c5df232e3c288dbec9</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLIES</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>aa2faa268dbd9c43a8e7aac92bd70114f</anchor>
      <arglist>(p, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIZE_T_MAX</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>acfa3af56d5e0045c1d7a5682fd1d2853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_order</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a8e703b70259147cb03ec6e0db8190729</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_defaults</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a65f6d42fb7511bf0ef2042ddf0aeba71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_control</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a39ed5ef1d89105ced2e4b8badf53a73c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_info</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a25dc4f742fbae304c72358587bbcc5e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_1</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a959f0fae9663f7545e8341ddb5b800fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_2</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a1e1d429a77c71a1ae9c451c5958579df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_valid</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>af7d0c6cecb08e52d92a2eed5aeb8a1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_cvalid</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>aa1acf2e9101972f4ea71696657b98dbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_aat</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a6fc73b2a2da4036ea510775f1bb00780</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_postorder</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a7c15c50cb90a7ac532ce255a8e862381</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_post_tree</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>ae950ab56a95ee1a54bdce42911912088</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_dump</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a8c5ed2ed26bf9bd403b3a909681ae13b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_debug</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a2e5b5b3161d3d9dd1df22dc89b9c3fb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_debug_init</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a42e6cf71079e447dcce59060024b97f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_preprocess</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>abcb6f56ae37fc0cfcc40f16e5d3cbba8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEBUG0</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a9406e2dee69deb5636b8db89b8a52c39</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEBUG1</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a115b66eaecf4f7d73a5e4c34cdea21e5</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEBUG2</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a4c597f9ce16c0466bab015bf5b02336d</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEBUG3</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>ae217afe7bce5b0462823f8136101dc9b</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CAMD_DEBUG4</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a62b179c46f9a885d5bb0375b6e317b7a</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL size_t</type>
      <name>CAMD_aat</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>af48df268e82830e91a05a60d81b2ff1e</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Len[], Int Tp[], double Info[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_1</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>aabfa1dbc0cf8f89b1204b95329b5136b</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], Int Pinv[], Int Len[], Int slen, Int S[], double Control[], double Info[], const Int C[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_postorder</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a51b341249af0dfa314225e70c2a48d4d</anchor>
      <arglist>(Int j, Int k, Int n, Int head[], Int next[], Int post[], Int stack[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_preprocess</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a6c0f058d6ae9b427a8ee8e6bf7439078</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int Rp[], Int Ri[], Int W[], Int Flag[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_debug_init</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>a70106ec1bd726d365af0f5f4756e85bf</anchor>
      <arglist>(char *s)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_dump</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>ae05761339278c084fb91955089912e56</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree, Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[], Int nel, Int BucketSet[], const Int C[], Int Curc)</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN Int</type>
      <name>CAMD_debug</name>
      <anchorfile>amesos__camd__internal_8h.html</anchorfile>
      <anchor>ad3d82929a809a20d7499326245295fd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_l2.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__l2_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>IsInCurrentSet</name>
      <anchorfile>amesos__camd__l2_8c.html</anchorfile>
      <anchor>a30c826f5588064a6446c237c889fb25d</anchor>
      <arglist>(C, i, curC)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>InSameConstraintSet</name>
      <anchorfile>amesos__camd__l2_8c.html</anchorfile>
      <anchor>a9c71432aab044f16664f44768285060b</anchor>
      <arglist>(C, i, j)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__camd__l2_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_clear_flag</name>
      <anchorfile>amesos__camd__l2_8c.html</anchorfile>
      <anchor>a2ad8b937c74b5f1d421fe75302b5a3cb</anchor>
      <arglist>(Int wflg, Int wbig, Int W[], Int n)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_2</name>
      <anchorfile>amesos__camd__l2_8c.html</anchorfile>
      <anchor>a6f8f46e55334d22b0dce9b42383fee0d</anchor>
      <arglist>(Int n, Int Pe[], Int Iw[], Int Len[], Int iwlen, Int pfree,   Int Nv[], Int Next[], Int Last[], Int Head[], Int Elen[], Int Degree[], Int W[],   double Control[], double Info[],   const Int C[],   Int BucketSet[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_l_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__l__postorder_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__camd__l__postorder_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_postorder</name>
      <anchorfile>amesos__camd__l__postorder_8c.html</anchorfile>
      <anchor>a51b341249af0dfa314225e70c2a48d4d</anchor>
      <arglist>(Int j, Int k, Int n, Int head[], Int next[], Int post[], Int stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_order.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__order_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_order</name>
      <anchorfile>amesos__camd__order_8c.html</anchorfile>
      <anchor>abefc0a4b992f5122db0fc9ce05e5c68f</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[], Int P[], double Control[], double Info[], const Int C[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__postorder_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_postorder</name>
      <anchorfile>amesos__camd__postorder_8c.html</anchorfile>
      <anchor>a51b341249af0dfa314225e70c2a48d4d</anchor>
      <arglist>(Int j, Int k, Int n, Int head[], Int next[], Int post[], Int stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_preprocess.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__preprocess_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CAMD_preprocess</name>
      <anchorfile>amesos__camd__preprocess_8c.html</anchorfile>
      <anchor>a69efd097476a119647442e0816c5890f</anchor>
      <arglist>(Int n, const Int Ap[], const Int Ai[],   Int Rp[], Int Ri[], Int W[], Int Flag[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_camd_valid.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CAMD/Source/</path>
    <filename>amesos__camd__valid_8c</filename>
    <includes id="amesos__camd__internal_8h" name="amesos_camd_internal.h" local="yes" imported="no">amesos_camd_internal.h</includes>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_valid</name>
      <anchorfile>amesos__camd__valid_8c.html</anchorfile>
      <anchor>ac09b6b372a2673959706e9b4b9a994e6</anchor>
      <arglist>(Int n_row, Int n_col, const Int Ap[], const Int Ai[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CAMD_cvalid</name>
      <anchorfile>amesos__camd__valid_8c.html</anchorfile>
      <anchor>ae4221a6126433db13cacb9bd2d2f9559</anchor>
      <arglist>(Int n, const Int C[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_ccolamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CCOLAMD/Source/</path>
    <filename>amesos__ccolamd_8c</filename>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <class kind="struct">CColamd_Col_struct</class>
    <class kind="struct">CColamd_Row_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_recommended</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ae40f23fa20443a6f8029b797f459d8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_set_defaults</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ab4ffb168aa319b6d23780d3fdaccd820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_2</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ab6e0c313b98b7255973a8a20c778cd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_MAIN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>adfe07f5c083f6016735d49e2786bcab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_apply_order</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>abccce952a10bed41201e825afe10b27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_postorder</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a161461c9e386430197b0faada66bf09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_post_tree</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a5cb66eaff1c5b018524ae2a680ff2373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_fsize</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a9d622a7ea9a91cf32c7b5d00bb95ca63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CSYMAMD_MAIN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ae8a9ede9ba317ff20497fc2fadf9ed24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_report</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a7c4657a0e943fc7a1f761c75fe047498</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CSYMAMD_report</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a71ae464998ef744f615134e0d387c873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ad17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DENSE_DEGREE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a64a06cacfdac263aeecfc3cadff002b7</anchor>
      <arglist>(alpha, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMEMBER</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a2bf8eb36ea68b9fbaacaf0773686ed7c</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_NAN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ac4562270a0fbe08e23d8797f67169824</anchor>
      <arglist>(x)            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_OVERFLOW</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a05236034e369b70c2a62f11cfbbedeab</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONES_COMPLEMENT</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>af4201cc2809d450d2484680ee1b958ca</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIVE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ad8beef706da0344be19d59438fcdab6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3c8793c7acb4598d2ebcd8288f29ee69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ac0adce1e7d70351cef4752f3373709af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_NON_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0f66923672bcc495333995f7d238945f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_DEAD</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ae200d2ac8149305712af7230f9ee24d5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_MARKED_DEAD</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0d68b03acc587c11fe6dffbfede78c2d</anchor>
      <arglist>(row_mark)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_ALIVE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>abc775359cfa45ffaf6250522c521110d</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa08664bd5b8133f28dbeedc9a030fc86</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_ALIVE</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a50f9ca65904b13f345862cb46d08d84b</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a003c0e2dae54bcb7c680333304dd4dcb</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_ROW</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>adde21248544152df48ab70b6da1b38b5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_PRINCIPAL_COL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a7882929a7898e09a3de9e7676ae1aa29</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_NON_PRINCIPAL_COL</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0458a358e752473d86e6f21a56b44a26</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INDEX</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa5fad23b2a5eed790e6661e896a506b7</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG0</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a144524f0a43ebe1a97d576a76f6557a0</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG1</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a5083dbf79682be78336cc6b458c32ab4</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG2</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a65bd10ffc88aa9edca29d4f6ae0da2df</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG3</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a86ce320fe5d3f3088d89fdf451943008</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG4</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0ff047166d36dd8103bd12a4fbc7f7f9</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_C</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a9fdbac6e26f4841b7652380abf34a931</anchor>
      <arglist>(n_col, ok)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_R</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ad90519709652ea2f9819d4f06dfa2d75</anchor>
      <arglist>(n_row, ok)</arglist>
    </member>
    <member kind="typedef">
      <type>struct CColamd_Col_struct</type>
      <name>CColamd_Col</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a651197b276b33db91f479d699523b867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CColamd_Row_struct</type>
      <name>CColamd_Row</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3907cb22a356476f88e22c148f236aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>init_rows_cols</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a7abbb07caa12d8204a3a7a24c4097de2</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int p[], Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>init_scoring</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa14b65b11ab80c3052be7903add5e26e</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int head[], double knobs[CCOLAMD_KNOBS], Int *p_n_row2, Int *p_n_col2, Int *p_max_deg, Int cmember[], Int n_cset, Int cset_start[], Int dead_cols[], Int *p_ndense_row, Int *p_nempty_row, Int *p_nnewlyempty_row, Int *p_ndense_col, Int *p_nempty_col, Int *p_nnewlyempty_col)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>find_ordering</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0ddf729a1d3a4052ed79730b4e63360d</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int head[], Int max_deg, Int pfree, Int cset[], Int cset_start[], Int cmember[], Int Front_npivcol[], Int Front_nrows[], Int Front_ncols[], Int Front_parent[], Int Front_cols[], Int *p_nfr, Int aggressive, Int InFront[], Int order_for_lu)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>detect_super_cols</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3a12c39edf7e9a505ccedbd16ebf7c2d</anchor>
      <arglist>(CColamd_Col Col[], Int A[], Int head[], Int row_start, Int row_length, Int in_set[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>garbage_collection</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a294a4d43151e5422608a4e779604551a</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int *pfree)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>clear_mark</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ae9757082cd40db79ab598ba98f20628c</anchor>
      <arglist>(Int tag_mark, Int max_mark, Int n_row, CColamd_Row Row[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>print_report</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a11e945bc1ffbac87cc0e7f8db2c293f9</anchor>
      <arglist>(char *method, Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_add</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aad3dda97381807f40d5de2cd9c76cdec</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_mult</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a3c5479ead565e62b314dca6ecee35acf</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>ccolamd_need</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ab459f90403912a704013241da7174c4f</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC size_t</type>
      <name>CCOLAMD_recommended</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a4af0fc0376e960986a1ea938a21a4511</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CCOLAMD_set_defaults</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>ad8f415d27b9d657c0621c97cf9d0e009</anchor>
      <arglist>(double knobs[CCOLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CSYMAMD_MAIN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a16b36caa8cbaaa009184a4873431378f</anchor>
      <arglist>(Int n, Int A[], Int p[], Int perm[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS], void *(*allocate)(size_t, size_t), void(*release)(void *),   Int cmember[], Int stype)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CCOLAMD_MAIN</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aed45f1279805d1c0c4b66f65e187c473</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CCOLAMD_2</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>aa33bd43373499d184cb18b647d09c9d5</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS],   Int Front_npivcol[], Int Front_nrows[], Int Front_ncols[], Int Front_parent[], Int Front_cols[], Int *p_nfr, Int InFront[], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CCOLAMD_report</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a565b9432b22436032f2557c29210b7da</anchor>
      <arglist>(Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CSYMAMD_report</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a230268cbbabf92ffb6a58899f2943c11</anchor>
      <arglist>(Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_apply_order</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a683afe1db8528a479a60709c5f8e16ae</anchor>
      <arglist>(Int Front[], const Int Order[], Int Temp[], Int nn, Int nfr)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_fsize</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a0ccbbb1c59cc1da37f70c96ae1719998</anchor>
      <arglist>(Int nn, Int Fsize[], Int Fnrows[], Int Fncols[], Int Parent[], Int Npiv[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_postorder</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a954bd57242dc81fcd7b7ad963d86cb65</anchor>
      <arglist>(Int nn, Int Parent[], Int Nv[], Int Fsize[],   Int Order[],   Int Child[], Int Sibling[], Int Stack[], Int Front_cols[], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CCOLAMD_post_tree</name>
      <anchorfile>amesos__ccolamd_8c.html</anchorfile>
      <anchor>a4b640a4ff15677caca5978092bc29fbf</anchor>
      <arglist>(Int root, Int k, Int Child[], const Int Sibling[], Int Order[], Int Stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_ccolamd.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CCOLAMD/Include/</path>
    <filename>amesos__ccolamd_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_DATE</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a2ed0f31a03942b9f39961c59a2a8a73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_VERSION_CODE</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a581da0bf934c3c6cd0ae8c37118c670d</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_MAIN_VERSION</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aa6f0e997b1d113e0679b8ec9d4873e6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_SUB_VERSION</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a598bbd10b09b90ebcb816139497c9a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_SUBSUB_VERSION</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aec1b02454807a3e1f8d2107534226257</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_VERSION</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a2ee975cabb732587f1c0997af0246473</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_KNOBS</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a7ab44d594ed1c9053f4b56577426b448</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_STATS</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aaba750b9f203897095d35b2045476578</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_DENSE_ROW</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a17da63546008a1dde2b5364769c54c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_DENSE_COL</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a6fd0462eb6745e392bbc978e13e1831b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_AGGRESSIVE</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a2bf984706827e9d33a95326b5b75eaf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_LU</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ae9556efafbbda12301b7befb74f98a20</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_DEFRAG_COUNT</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a4f7515555b8c42ada8b56a5be944e964</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_STATUS</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a1019480deecc2011d6ce3b95cac4729c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_INFO1</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a927ebb3c941825c25a40b9071925ac9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_INFO2</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>addf119f2c6e4088d82f89bdfd5035f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_INFO3</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a1e609c5cb618ff5f2a868b9e83468773</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_EMPTY_ROW</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a5ca1db52b143edb3d04b80b1ec10b63f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_EMPTY_COL</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a42ab2782ef621f089e9a2590077e5833</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_NEWLY_EMPTY_ROW</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a422c6d6b8c08ca93ad6d29130621c50c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_NEWLY_EMPTY_COL</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ac3b9c9a0b63fab8086b12bcf7fbf4ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_OK</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aa36545d28ff4caa5305aee543903405d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_OK_BUT_JUMBLED</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a2f4caecaf2dcc2d823ee3171329e084d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_A_not_present</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a88cd5870955974c190bd5deb1a4c2300</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_p_not_present</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a5869c8e9725ece17db2fb008d0ef1317</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_nrow_negative</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aa54ddef98955f35e1b27ec9f9809686b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_ncol_negative</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a56c6602959c014278d090fbf7bb4c9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_nnz_negative</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>accc1ddcec811f192dc87850dd3b05be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_p0_nonzero</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a2adfc6603eb9ec25dae08b2bf3c65ca7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_A_too_small</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ab595c077d9fdcd9672b8e91adc141444</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_col_length_negative</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aebeb1138b85ea35afcb036494141724e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_row_index_out_of_bounds</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a36b580cc663f22b4dc6679d8569c744b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_out_of_memory</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>afbb2d201193e4f31e49a9db3bd2a0110</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_invalid_cmember</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aaac1088eb8de2b5bb814be51d947cc3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_ERROR_internal_error</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ac82c41db2ef9eff3152b92f48f8ff158</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a77366c1bd428629dc898e188bfd182a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_ccolamd_recommended</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>afc53829596ca9ff4d0701a984f455bb9</anchor>
      <arglist>(int nnz, int n_row, int n_col)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_ccolamd_l_recommended</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ac29b32a581c6cf4c9b7eec72d0d472af</anchor>
      <arglist>(UF_long nnz, UF_long n_row, UF_long n_col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_set_defaults</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a11d0f82ce00ec5f20cfc856b6506bf94</anchor>
      <arglist>(double knobs[CCOLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_l_set_defaults</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a629153de272a4eadb5669820dd5e2d7f</anchor>
      <arglist>(double knobs[CCOLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_ccolamd</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a1a4dd29d5c16914aa8f9b56a87dfb33c</anchor>
      <arglist>(int n_row, int n_col, int Alen, int A[], int p[], double knobs[CCOLAMD_KNOBS], int stats[CCOLAMD_STATS], int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_ccolamd_l</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a3b0fafe13e9812635e49cb47d5fefb49</anchor>
      <arglist>(UF_long n_row, UF_long n_col, UF_long Alen, UF_long A[], UF_long p[], double knobs[CCOLAMD_KNOBS], UF_long stats[CCOLAMD_STATS], UF_long cmember[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_csymamd</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a434bda47f55adbf13f00b2d1fe4e4ef2</anchor>
      <arglist>(int n, int A[], int p[], int perm[], double knobs[CCOLAMD_KNOBS], int stats[CCOLAMD_STATS], void *(*allocate)(size_t, size_t),   void(*release)(void *),   int cmember[], int stype)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_csymamd_l</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aa23f6cb711eddbd16f6049ba439c3100</anchor>
      <arglist>(UF_long n, UF_long A[], UF_long p[], UF_long perm[], double knobs[CCOLAMD_KNOBS], UF_long stats[CCOLAMD_STATS], void *(*allocate)(size_t, size_t), void(*release)(void *), UF_long cmember[], UF_long stype)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_report</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ac0232ab4e469bdea9f997475741621dc</anchor>
      <arglist>(int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_l_report</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aebad81731d0f850a76692c2232ca4d40</anchor>
      <arglist>(UF_long stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_csymamd_report</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>abc6f96895c6f0b9aaccded4873ae3250</anchor>
      <arglist>(int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_csymamd_l_report</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>ac4b9c83d951ee2a26022145497a2c91b</anchor>
      <arglist>(UF_long stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_ccolamd2</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>afb49d42f30009e8ee010b7f02430c9d9</anchor>
      <arglist>(int n_row, int n_col, int Alen, int A[], int p[], double knobs[CCOLAMD_KNOBS], int stats[CCOLAMD_STATS],   int Front_npivcol[], int Front_nrows[], int Front_ncols[], int Front_parent[], int Front_cols[], int *p_nfr, int InFront[], int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_ccolamd2_l</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a1d9d508ebd86871fabf3f06306cd9216</anchor>
      <arglist>(UF_long n_row, UF_long n_col, UF_long Alen, UF_long A[], UF_long p[], double knobs[CCOLAMD_KNOBS], UF_long stats[CCOLAMD_STATS], UF_long Front_npivcol[], UF_long Front_nrows[], UF_long Front_ncols[], UF_long Front_parent[], UF_long Front_cols[], UF_long *p_nfr, UF_long InFront[], UF_long cmember[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_apply_order</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a8a52ee0ad4dd66349a54baf6c838544a</anchor>
      <arglist>(int Front[], const int Order[], int Temp[], int nn, int nfr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_l_apply_order</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a4bf5d1bcd071a1fa756d831dfffecf06</anchor>
      <arglist>(UF_long Front[], const UF_long Order[], UF_long Temp[], UF_long nn, UF_long nfr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_fsize</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aee67fcd0d8bed7de84d520ba0d7aa594</anchor>
      <arglist>(int nn, int MaxFsize[], int Fnrows[], int Fncols[], int Parent[], int Npiv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_l_fsize</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a08a7d8a5293f7127ffd2725a44414857</anchor>
      <arglist>(UF_long nn, UF_long MaxFsize[], UF_long Fnrows[], UF_long Fncols[], UF_long Parent[], UF_long Npiv[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_postorder</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a3103bf44f40cf811902dde8cc7bc8a17</anchor>
      <arglist>(int nn, int Parent[], int Npiv[], int Fsize[], int Order[], int Child[], int Sibling[], int Stack[], int Front_cols[], int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_ccolamd_l_postorder</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>aad974554ef82370a3bdaab5acf63ee56</anchor>
      <arglist>(UF_long nn, UF_long Parent[], UF_long Npiv[], UF_long Fsize[], UF_long Order[], UF_long Child[], UF_long Sibling[], UF_long Stack[], UF_long Front_cols[], UF_long cmember[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_ccolamd_post_tree</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a6193b3f6b414ed1aebf9408313938529</anchor>
      <arglist>(int root, int k, int Child[], const int Sibling[], int Order[], int Stack[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_ccolamd_l_post_tree</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>a0ddb050b600e5377887fe4d87bb985eb</anchor>
      <arglist>(UF_long root, UF_long k, UF_long Child[], const UF_long Sibling[], UF_long Order[], UF_long Stack[])</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN int(*</type>
      <name>amesos_ccolamd_printf</name>
      <anchorfile>amesos__ccolamd_8h.html</anchorfile>
      <anchor>af3584fa837d8b7ce7bdb8810f6025cb6</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_ccolamd_global.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CCOLAMD/Source/</path>
    <filename>amesos__ccolamd__global_8c</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>amesos_ccolamd_printf</name>
      <anchorfile>amesos__ccolamd__global_8c.html</anchorfile>
      <anchor>a1795daa4a756ba3c9110f469bf87560d</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_ccolamd_l.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CCOLAMD/Source/</path>
    <filename>amesos__ccolamd__l_8c</filename>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <class kind="struct">CColamd_Col_struct</class>
    <class kind="struct">CColamd_Row_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_recommended</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ae40f23fa20443a6f8029b797f459d8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_set_defaults</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ab4ffb168aa319b6d23780d3fdaccd820</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_2</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ab6e0c313b98b7255973a8a20c778cd7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_MAIN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>adfe07f5c083f6016735d49e2786bcab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_apply_order</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>abccce952a10bed41201e825afe10b27b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_postorder</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a161461c9e386430197b0faada66bf09e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_post_tree</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a5cb66eaff1c5b018524ae2a680ff2373</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_fsize</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a9d622a7ea9a91cf32c7b5d00bb95ca63</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CSYMAMD_MAIN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ae8a9ede9ba317ff20497fc2fadf9ed24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_report</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a7c4657a0e943fc7a1f761c75fe047498</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CSYMAMD_report</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a71ae464998ef744f615134e0d387c873</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GLOBAL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3de33738fd3c7e77bffbcfaefc3e7645</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ad17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DENSE_DEGREE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a64a06cacfdac263aeecfc3cadff002b7</anchor>
      <arglist>(alpha, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CMEMBER</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a2bf8eb36ea68b9fbaacaf0773686ed7c</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_NAN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ac4562270a0fbe08e23d8797f67169824</anchor>
      <arglist>(x)            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_OVERFLOW</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a05236034e369b70c2a62f11cfbbedeab</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONES_COMPLEMENT</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>af4201cc2809d450d2484680ee1b958ca</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIVE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ad8beef706da0344be19d59438fcdab6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3c8793c7acb4598d2ebcd8288f29ee69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ac0adce1e7d70351cef4752f3373709af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_NON_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0f66923672bcc495333995f7d238945f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_DEAD</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ae200d2ac8149305712af7230f9ee24d5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_MARKED_DEAD</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0d68b03acc587c11fe6dffbfede78c2d</anchor>
      <arglist>(row_mark)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_ALIVE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>abc775359cfa45ffaf6250522c521110d</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa08664bd5b8133f28dbeedc9a030fc86</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_ALIVE</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a50f9ca65904b13f345862cb46d08d84b</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD_PRINCIPAL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a003c0e2dae54bcb7c680333304dd4dcb</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_ROW</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>adde21248544152df48ab70b6da1b38b5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_PRINCIPAL_COL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a7882929a7898e09a3de9e7676ae1aa29</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_NON_PRINCIPAL_COL</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0458a358e752473d86e6f21a56b44a26</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INDEX</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa5fad23b2a5eed790e6661e896a506b7</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG0</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a144524f0a43ebe1a97d576a76f6557a0</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG1</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a5083dbf79682be78336cc6b458c32ab4</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG2</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a65bd10ffc88aa9edca29d4f6ae0da2df</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG3</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a86ce320fe5d3f3088d89fdf451943008</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG4</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0ff047166d36dd8103bd12a4fbc7f7f9</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_C</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a9fdbac6e26f4841b7652380abf34a931</anchor>
      <arglist>(n_col, ok)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CCOLAMD_R</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ad90519709652ea2f9819d4f06dfa2d75</anchor>
      <arglist>(n_row, ok)</arglist>
    </member>
    <member kind="typedef">
      <type>struct CColamd_Col_struct</type>
      <name>CColamd_Col</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a651197b276b33db91f479d699523b867</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct CColamd_Row_struct</type>
      <name>CColamd_Row</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3907cb22a356476f88e22c148f236aec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>init_rows_cols</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a7abbb07caa12d8204a3a7a24c4097de2</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int p[], Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>init_scoring</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa14b65b11ab80c3052be7903add5e26e</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int head[], double knobs[CCOLAMD_KNOBS], Int *p_n_row2, Int *p_n_col2, Int *p_max_deg, Int cmember[], Int n_cset, Int cset_start[], Int dead_cols[], Int *p_ndense_row, Int *p_nempty_row, Int *p_nnewlyempty_row, Int *p_ndense_col, Int *p_nempty_col, Int *p_nnewlyempty_col)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>find_ordering</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0ddf729a1d3a4052ed79730b4e63360d</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int head[], Int max_deg, Int pfree, Int cset[], Int cset_start[], Int cmember[], Int Front_npivcol[], Int Front_nrows[], Int Front_ncols[], Int Front_parent[], Int Front_cols[], Int *p_nfr, Int aggressive, Int InFront[], Int order_for_lu)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>detect_super_cols</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3a12c39edf7e9a505ccedbd16ebf7c2d</anchor>
      <arglist>(CColamd_Col Col[], Int A[], Int head[], Int row_start, Int row_length, Int in_set[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>garbage_collection</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a294a4d43151e5422608a4e779604551a</anchor>
      <arglist>(Int n_row, Int n_col, CColamd_Row Row[], CColamd_Col Col[], Int A[], Int *pfree)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>clear_mark</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ae9757082cd40db79ab598ba98f20628c</anchor>
      <arglist>(Int tag_mark, Int max_mark, Int n_row, CColamd_Row Row[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>print_report</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a11e945bc1ffbac87cc0e7f8db2c293f9</anchor>
      <arglist>(char *method, Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_add</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aad3dda97381807f40d5de2cd9c76cdec</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_mult</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a3c5479ead565e62b314dca6ecee35acf</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>ccolamd_need</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ab459f90403912a704013241da7174c4f</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC size_t</type>
      <name>CCOLAMD_recommended</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a4af0fc0376e960986a1ea938a21a4511</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CCOLAMD_set_defaults</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>ad8f415d27b9d657c0621c97cf9d0e009</anchor>
      <arglist>(double knobs[CCOLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CSYMAMD_MAIN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a16b36caa8cbaaa009184a4873431378f</anchor>
      <arglist>(Int n, Int A[], Int p[], Int perm[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS], void *(*allocate)(size_t, size_t), void(*release)(void *),   Int cmember[], Int stype)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CCOLAMD_MAIN</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aed45f1279805d1c0c4b66f65e187c473</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>CCOLAMD_2</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>aa33bd43373499d184cb18b647d09c9d5</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[CCOLAMD_KNOBS], Int stats[CCOLAMD_STATS],   Int Front_npivcol[], Int Front_nrows[], Int Front_ncols[], Int Front_parent[], Int Front_cols[], Int *p_nfr, Int InFront[], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CCOLAMD_report</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a565b9432b22436032f2557c29210b7da</anchor>
      <arglist>(Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>CSYMAMD_report</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a230268cbbabf92ffb6a58899f2943c11</anchor>
      <arglist>(Int stats[CCOLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_apply_order</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a683afe1db8528a479a60709c5f8e16ae</anchor>
      <arglist>(Int Front[], const Int Order[], Int Temp[], Int nn, Int nfr)</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_fsize</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a0ccbbb1c59cc1da37f70c96ae1719998</anchor>
      <arglist>(Int nn, Int Fsize[], Int Fnrows[], Int Fncols[], Int Parent[], Int Npiv[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL void</type>
      <name>CCOLAMD_postorder</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a954bd57242dc81fcd7b7ad963d86cb65</anchor>
      <arglist>(Int nn, Int Parent[], Int Nv[], Int Fsize[],   Int Order[],   Int Child[], Int Sibling[], Int Stack[], Int Front_cols[], Int cmember[])</arglist>
    </member>
    <member kind="function">
      <type>GLOBAL Int</type>
      <name>CCOLAMD_post_tree</name>
      <anchorfile>amesos__ccolamd__l_8c.html</anchorfile>
      <anchor>a4b640a4ff15677caca5978092bc29fbf</anchor>
      <arglist>(Int root, Int k, Int Child[], const Int Sibling[], Int Order[], Int Stack[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod_8h</filename>
    <includes id="amesos__cholmod__io64_8h" name="amesos_cholmod_io64.h" local="yes" imported="no">amesos_cholmod_io64.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <includes id="amesos__cholmod__config_8h" name="amesos_cholmod_config.h" local="yes" imported="no">amesos_cholmod_config.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__cholmod__check_8h" name="amesos_cholmod_check.h" local="yes" imported="no">amesos_cholmod_check.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_aat.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__aat_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>aat</name>
      <anchorfile>amesos__cholmod__aat_8c.html</anchorfile>
      <anchor>a9ac23e8e071ba820fd5028f023341637</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int mode,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_add.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__add_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>add</name>
      <anchorfile>amesos__cholmod__add_8c.html</anchorfile>
      <anchor>a57efa9a50e75e887a2ab05763fe49ac1</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *B, double alpha[2], double beta[2], int values, int sorted,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_amd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__amd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__amd_8h" name="amesos_amd.h" local="yes" imported="no">amesos_amd.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>amd</name>
      <anchorfile>amesos__cholmod__amd_8c.html</anchorfile>
      <anchor>af72fadf17fd7bc9245518359e5176f1b</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_analyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__analyze_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FREE_WORKSPACE_AND_RETURN</name>
      <anchorfile>amesos__cholmod__analyze_8c.html</anchorfile>
      <anchor>a26581f164d720f76253d9499f345dd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>analyze</name>
      <anchorfile>amesos__cholmod__analyze_8c.html</anchorfile>
      <anchor>a0461185d37e9ce8927f4244724daad3b</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>amesos_permute_matrices</name>
      <anchorfile>amesos__cholmod__analyze_8c.html</anchorfile>
      <anchor>a131402e43173b339dcb701e4b71acaef</anchor>
      <arglist>(cholmod_sparse *A, Int ordering, Int *Perm, Int *fset, size_t fsize, Int do_rowcolcounts, cholmod_sparse **A1_handle, cholmod_sparse **A2_handle, cholmod_sparse **S_handle, cholmod_sparse **F_handle, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>analyze_ordering</name>
      <anchorfile>amesos__cholmod__analyze_8c.html</anchorfile>
      <anchor>a2527f0970dc9ac361b12f07a7a0481d3</anchor>
      <arglist>(cholmod_sparse *A, int ordering, Int *Perm, Int *fset, size_t fsize,   Int *Parent, Int *Post, Int *ColCount,   Int *First, Int *Level,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>analyze_p</name>
      <anchorfile>amesos__cholmod__analyze_8c.html</anchorfile>
      <anchor>a3e5811941d99cb10be3fd8fe2847a784</anchor>
      <arglist>(cholmod_sparse *A, Int *UserPerm, Int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_band.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__band_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *</type>
      <name>band</name>
      <anchorfile>amesos__cholmod__band_8c.html</anchorfile>
      <anchor>a07731fd4f54fa2fc91831a1a8c411b71</anchor>
      <arglist>(cholmod_sparse *A, UF_long k1, UF_long k2, int mode, int inplace,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>band</name>
      <anchorfile>amesos__cholmod__band_8c.html</anchorfile>
      <anchor>a1edc4915de40d168b8c3c5631173f190</anchor>
      <arglist>(cholmod_sparse *A, UF_long k1, UF_long k2, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>band_inplace</name>
      <anchorfile>amesos__cholmod__band_8c.html</anchorfile>
      <anchor>a33eaefb01b6d588a29a7a142c7027f3d</anchor>
      <arglist>(UF_long k1, UF_long k2, int mode,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_blas.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__blas_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_ARCHITECTURE</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a586537f3e32cad2bc636f1dfbd3ac73d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DTRSV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a65efbef70cce493e400d8ca6a2bc0386</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DGEMV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a47debe3e3002283b65a7da046270b41f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DTRSM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a6108a05d5cc498afc5319b190a44926e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DGEMM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a6bc37fe8eb4f2c40ca5a9e16d24148e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DSYRK</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a5ca7c604423c40607139711f907d2fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DGER</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>adf6aef98ff35ed5b9defaba335cd9d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_DSCAL</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ad51ab8edcdf37a02e3ef380418bf22fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAPACK_DPOTRF</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aafa96867ae545780b46faa871650246f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZTRSV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a2a38c614c9448e203629d3f517f5bf78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZGEMV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a794f01cbaa93ce965fa5666aca52afe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZTRSM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a1ecc11001f97ff1f07afb96d59388c6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZGEMM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a074b5e3ea4fb3978bd98b5230d6b0960</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZHERK</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aac59aaea2ffcbaf9cfe34d77cb559824</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZGER</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>af79de56706a98cc78178faa99f2dd4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ZSCAL</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a388c2a575ac75aa4b6dc136ff3489be9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAPACK_ZPOTRF</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a9c0fa19ec203b1aeb6ecdc5e3b2435f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_INT</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a0a7ba0ed301d1b2398733a77dd9a603d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHECK_BLAS_INT</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a589df5874164bcd426d3cbc82e695f84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EQ</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a213d3b279a6756c5ea44b42c92df29dd</anchor>
      <arglist>(K, k)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dgemv</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a8fc7f0b2e6a6c45ec64325f06950f6ea</anchor>
      <arglist>(trans, m, n, alpha, A, lda, X, incx, beta, Y, incy)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_zgemv</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>af07c377c0729915143280fcabd5b4c2d</anchor>
      <arglist>(trans, m, n, alpha, A, lda, X, incx, beta, Y, incy)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dtrsv</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a9f5f31cdf6396b34d6d2d4db87ac61f5</anchor>
      <arglist>(uplo, trans, diag, n, A, lda, X, incx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ztrsv</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ab35bab8ca5f6efd6b789a3ce7f530f2e</anchor>
      <arglist>(uplo, trans, diag, n, A, lda, X, incx)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dtrsm</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a6bca8e58772a07e53f620dc3c054f580</anchor>
      <arglist>(side, uplo, transa, diag, m, n, alpha, A, lda, B, ldb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_ztrsm</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ae203409eda2d09c92879f02557b8df2b</anchor>
      <arglist>(side, uplo, transa, diag, m, n, alpha, A, lda, B, ldb)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dgemm</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a80d021c6613a4537b22bb8e6d080ff82</anchor>
      <arglist>(transa, transb, m, n, k, alpha, A, lda, B, ldb, beta, C, ldc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_zgemm</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ad9ace319f15fcbccfec194c1dedfe5eb</anchor>
      <arglist>(transa, transb, m, n, k, alpha, A, lda, B, ldb, beta, C, ldc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dsyrk</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a00db5870c4bce7811c1c194e0800f0aa</anchor>
      <arglist>(uplo, trans, n, k, alpha, A, lda, beta, C, ldc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_zherk</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a5b404a6b8c77661ad28fbb7206c27176</anchor>
      <arglist>(uplo, trans, n, k, alpha, A, lda, beta, C, ldc)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAPACK_dpotrf</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a6ac9a27330dee3831ce154b28e74c2c6</anchor>
      <arglist>(uplo, n, A, lda, info)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LAPACK_zpotrf</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>abeb81e0ecb3705038eafabcff454e4a7</anchor>
      <arglist>(uplo, n, A, lda, info)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dscal</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a7f03317909d09e9ce61b385e84f4125b</anchor>
      <arglist>(n, alpha, Y, incy)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_zscal</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>af8b5128a32ec3b81cbaa0506956cb0bb</anchor>
      <arglist>(n, alpha, Y, incy)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_dger</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a2bc7b1a7049db1a1d33ab4e18c4820e8</anchor>
      <arglist>(m, n, alpha, X, incx, Y, incy, A, lda)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLAS_zgeru</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a4ae08780ed044bfe875ea16c4188dadc</anchor>
      <arglist>(m, n, alpha, X, incx, Y, incy, A, lda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DGEMV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a432e1df4db4c214aa67ee9c6fa1be74f</anchor>
      <arglist>(char *trans, BLAS_INT *m, BLAS_INT *n, double *alpha, double *A, BLAS_INT *lda, double *X, BLAS_INT *incx, double *beta, double *Y, BLAS_INT *incy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZGEMV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aa0d4409d6f70daf1229a2f0e55955607</anchor>
      <arglist>(char *trans, BLAS_INT *m, BLAS_INT *n, double *alpha, double *A, BLAS_INT *lda, double *X, BLAS_INT *incx, double *beta, double *Y, BLAS_INT *incy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DTRSV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ac88275fe53f74fd2bcce158eeb7fc271</anchor>
      <arglist>(char *uplo, char *trans, char *diag, BLAS_INT *n, double *A, BLAS_INT *lda, double *X, BLAS_INT *incx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZTRSV</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ac66edaac91988c130d69ccabf0d7c18c</anchor>
      <arglist>(char *uplo, char *trans, char *diag, BLAS_INT *n, double *A, BLAS_INT *lda, double *X, BLAS_INT *incx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DTRSM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a7fc7c7edda8ffa61bbc60e11145ffc37</anchor>
      <arglist>(char *side, char *uplo, char *transa, char *diag, BLAS_INT *m, BLAS_INT *n, double *alpha, double *A, BLAS_INT *lda, double *B, BLAS_INT *ldb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZTRSM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a0c8f93930cf4994c8786d564a9a5fdc8</anchor>
      <arglist>(char *side, char *uplo, char *transa, char *diag, BLAS_INT *m, BLAS_INT *n, double *alpha, double *A, BLAS_INT *lda, double *B, BLAS_INT *ldb)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DGEMM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aec624137781793d382ee9713bbf1e37b</anchor>
      <arglist>(char *transa, char *transb, BLAS_INT *m, BLAS_INT *n, BLAS_INT *k, double *alpha, double *A, BLAS_INT *lda, double *B, BLAS_INT *ldb, double *beta, double *C, BLAS_INT *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZGEMM</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a174b4bee8b277ce386fa1c9d022c1d86</anchor>
      <arglist>(char *transa, char *transb, BLAS_INT *m, BLAS_INT *n, BLAS_INT *k, double *alpha, double *A, BLAS_INT *lda, double *B, BLAS_INT *ldb, double *beta, double *C, BLAS_INT *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DSYRK</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aaeeb82dad8fe3a51865c746206da35cf</anchor>
      <arglist>(char *uplo, char *trans, BLAS_INT *n, BLAS_INT *k, double *alpha, double *A, BLAS_INT *lda, double *beta, double *C, BLAS_INT *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZHERK</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a6d644fdf2afea502cec157836d4391f1</anchor>
      <arglist>(char *uplo, char *trans, BLAS_INT *n, BLAS_INT *k, double *alpha, double *A, BLAS_INT *lda, double *beta, double *C, BLAS_INT *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LAPACK_DPOTRF</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a43d12485f0827072f2857e5b850e3dbc</anchor>
      <arglist>(char *uplo, BLAS_INT *n, double *A, BLAS_INT *lda, BLAS_INT *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LAPACK_ZPOTRF</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>afbca08e7e6b0d0c26f829fdb91fdea47</anchor>
      <arglist>(char *uplo, BLAS_INT *n, double *A, BLAS_INT *lda, BLAS_INT *info)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DSCAL</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ae4f71d4a3c32e2132db79ac2a5de1629</anchor>
      <arglist>(BLAS_INT *n, double *alpha, double *Y, BLAS_INT *incy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZSCAL</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>a88b6d3a962ba65101192236f0c582648</anchor>
      <arglist>(BLAS_INT *n, double *alpha, double *Y, BLAS_INT *incy)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_DGER</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>aaafab8a5e036875037648612bef6ac8a</anchor>
      <arglist>(BLAS_INT *m, BLAS_INT *n, double *alpha, double *X, BLAS_INT *incx, double *Y, BLAS_INT *incy, double *A, BLAS_INT *lda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>BLAS_ZGERU</name>
      <anchorfile>amesos__cholmod__blas_8h.html</anchorfile>
      <anchor>ade3e27d3ca7eb19a603ef71f3de19568</anchor>
      <arglist>(BLAS_INT *m, BLAS_INT *n, double *alpha, double *X, BLAS_INT *incx, double *Y, BLAS_INT *incy, double *A, BLAS_INT *lda)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_camd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__camd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__camd_8h" name="amesos_camd.h" local="yes" imported="no">amesos_camd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>camd</name>
      <anchorfile>amesos__cholmod__camd_8c.html</anchorfile>
      <anchor>a027180628ef91e25bc27db2015e183b7</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Cmember,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_ccolamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__ccolamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ccolamd_interface</name>
      <anchorfile>amesos__cholmod__ccolamd_8c.html</anchorfile>
      <anchor>a915642afa907daa82b09a4fbd40dde19</anchor>
      <arglist>(cholmod_sparse *A, size_t alen, Int *Perm, Int *Cmember, Int *fset, Int fsize, cholmod_sparse *C, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>ccolamd</name>
      <anchorfile>amesos__cholmod__ccolamd_8c.html</anchorfile>
      <anchor>a72181c31876a862f41cf9c6efb865b50</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Cmember,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_change_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__change__factor_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__change__factor_8c" name="amesos_t_cholmod_change_factor.c" local="yes" imported="no">amesos_t_cholmod_change_factor.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>natural_list</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a5531148a910b0514b33e8b83e5eedd36</anchor>
      <arglist>(cholmod_factor *L)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>L_is_packed</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a820aeaa2d1beceda179a5cfc58731735</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>allocate_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a051e03a3ac2d9ee1ef53c1d3fcdae921</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>simplicial_symbolic_to_super_symbolic</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a97e17d8e8e6dd20988d37e1ce7099812</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>any_to_simplicial_symbolic</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a2688dc3faecb266ca948644da4df6a3c</anchor>
      <arglist>(cholmod_factor *L, int to_ll, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ll_super_to_super_symbolic</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a20561e0661e3d1cff7f633f9fea60f4c</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>simplicial_symbolic_to_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a001263828501965cfedb57e1a6e736c2</anchor>
      <arglist>(cholmod_factor *L, int to_ll, int packed, int to_xtype, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>change_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a652f71541423300f7e954879ea8026d3</anchor>
      <arglist>(cholmod_factor *L, int to_ll, int to_packed, int to_monotonic, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ll_super_to_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a13dde6f4d555965ad36653fe829eaaab</anchor>
      <arglist>(cholmod_factor *L, int to_packed, int to_ll, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>super_symbolic_to_ll_super</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a53ad369dd78190d5996dcd3d00e27f64</anchor>
      <arglist>(int to_xtype, cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>change_factor</name>
      <anchorfile>amesos__cholmod__change__factor_8c.html</anchorfile>
      <anchor>ab1df4d6c2690d33df21c2d570781b936</anchor>
      <arglist>(int to_xtype, int to_ll, int to_super, int to_packed, int to_monotonic,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_check.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Check/</path>
    <filename>amesos__cholmod__check_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__check_8h" name="amesos_cholmod_check.h" local="yes" imported="no">amesos_cholmod_check.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>I8</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a72e4e96f3a6d0c5b130cae6a10627d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>I_8</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a724d99f34d132cb25bbd3ff1ea3375fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a3968e35ee7cf3d849529e0210b07f859</anchor>
      <arglist>(i, format, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P1</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a37016d5263083c1ac2fa90db1eb52035</anchor>
      <arglist>(format, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P2</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aa2c8fadedf96bfef9a9ebb731312216d</anchor>
      <arglist>(format, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P3</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a19e806dccba54ca22f9799a7bab1b2d4</anchor>
      <arglist>(format, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P4</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a3d9f0efa72c783f61a5d3d23dab580e6</anchor>
      <arglist>(format, arg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERR</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a351b8552521f29df22aa336bb28e2180</anchor>
      <arglist>(msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTVALUE</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>af3be38950def2a660c93eda2c6c2295c</anchor>
      <arglist>(value)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ETC_START</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a8d5744f2a1c470b49b2aa603ad0f1d7f</anchor>
      <arglist>(count, limit)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ETC_ENABLE</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ae53b1c98f8b03727670fcfccdb7154b4</anchor>
      <arglist>(condition, count, limit)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ETC_DISABLE</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a9bc931009ca42ab3a9c9dd4148efb379</anchor>
      <arglist>(count)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ETC</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aee251b5899ca2b786ef048bab4326ac1</anchor>
      <arglist>(condition, count, limit)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLSTR</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a2d9fbf331a4248750fae7bad29cf637e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_print_value</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a2cd8eda38560605709d9ce4e39099353</anchor>
      <arglist>(Int print, Int xtype, double *Xx, double *Xz, Int p, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_common</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a94448ac084d51a865d185832c1409f83</anchor>
      <arglist>(Int print, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_common</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>af4e0977b8330a9c7d7abf9e25f9a4587</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_common</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>abd37e764113c6c7ca3924a04881adc51</anchor>
      <arglist>(char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UF_long</type>
      <name>check_sparse</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ab89baec3e679602cfa214b2532fde617</anchor>
      <arglist>(Int *Wi, Int print, char *name, cholmod_sparse *A, UF_long *nnzdiag, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_sparse</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a6a4047301989ce8c2bcd8116bfc70b57</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_sparse</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>afc16053925c01cf0e932a2cdd8f1395a</anchor>
      <arglist>(cholmod_sparse *A, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_dense</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ae15961f28fb6ff5f99f9f48d3771c157</anchor>
      <arglist>(Int print, char *name, cholmod_dense *X, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_dense</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aec786afa31568248617b0b0e2ee37d2d</anchor>
      <arglist>(cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_dense</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a2f727f90081317a8b5d3971b8b326d8c</anchor>
      <arglist>(cholmod_dense *X, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_subset</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ab51aea26198a42b969cb22f5d6d651f3</anchor>
      <arglist>(Int *S, UF_long len, size_t n, Int print, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_subset</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ad8af8198207c95224dba6dce1389ae73</anchor>
      <arglist>(Int *Set, UF_long len, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_subset</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a47a250a3b2ae6b75e212b0068741100c</anchor>
      <arglist>(Int *Set, UF_long len, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_perm</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ad0d6b1aa2f0738ed02b9d9e07bd43540</anchor>
      <arglist>(Int *Wi, Int print, char *name, Int *Perm, size_t len, size_t n, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_perm</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ab8ae626658b8f3f5c0a35d0f101a026f</anchor>
      <arglist>(Int *Perm, size_t len, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_perm</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a778cff690ef1fe1168a66111dc7b69d4</anchor>
      <arglist>(Int *Perm, size_t len, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_parent</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aa07706539bc5e56608a8671c0061aff4</anchor>
      <arglist>(Int *Parent, size_t n, Int print, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_parent</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aedd463c8a243d438707acfddaabf146e</anchor>
      <arglist>(Int *Parent, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_parent</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>adc08e9da8021a861c852f08ed5497eba</anchor>
      <arglist>(Int *Parent, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_factor</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>afae1a0ff1527aa350af0c13ccbf85552</anchor>
      <arglist>(Int *Wi, Int print, char *name, cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_factor</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>accc1383c93fb7e2217c35f86e2bff720</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_factor</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a907c4a374171af44e490bddf7bd703f1</anchor>
      <arglist>(cholmod_factor *L, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>check_triplet</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a8ba9bb4f0d345c787349f18101e2255f</anchor>
      <arglist>(Int print, char *name, cholmod_triplet *T, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>check_triplet</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aa24ce1da8d3cf6dcbab14fc7ba53b5ca</anchor>
      <arglist>(cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>print_triplet</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a3f2ef9563fa6d1ca52f363303faeb032</anchor>
      <arglist>(cholmod_triplet *T, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>int</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a7a55251354b68eef32599cbcdfb30db5</anchor>
      <arglist>(dump)=0</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a8d09ea5956ec010917ed6de79f7fb34e</anchor>
      <arglist>(dump_malloc)</arglist>
    </member>
    <member kind="function">
      <type>void CHOLMOD()</type>
      <name>dump_init</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a99e1301bfcd7594aca77c744a6b73b54</anchor>
      <arglist>(char *s, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>afeab95285a783d97c16ac60c8c154b76</anchor>
      <arglist>(dump_sparse)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_factor</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a04cc4f4acb16c500ca692995110a7965</anchor>
      <arglist>(cholmod_factor *L, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_perm</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a284a1b74ade011598d011cf15c7bd995</anchor>
      <arglist>(Int *Perm, size_t len, size_t n, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_dense</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>aa938c4b5ca970fb01fcc498e1bfb9273</anchor>
      <arglist>(cholmod_dense *X, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_triplet</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ac657d0ea444df5196a62716f95a64e56</anchor>
      <arglist>(cholmod_triplet *T, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_subset</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ab4ee9ec4ca6d6b14a971752a44d1f4e4</anchor>
      <arglist>(Int *S, size_t len, size_t n, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_parent</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>af58e0c79ab1f54866e6542f8d0485f9a</anchor>
      <arglist>(Int *Parent, size_t n, char *name, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void CHOLMOD()</type>
      <name>dump_real</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>ae03f8c0342cef584354d8cfb98efeea6</anchor>
      <arglist>(char *name, Real *X, UF_long nrow, UF_long ncol, int lower, int xentry, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void CHOLMOD()</type>
      <name>dump_super</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a9e1e887fe93ff367694436913b172aa7</anchor>
      <arglist>(UF_long s, Int *Super, Int *Lpi, Int *Ls, Int *Lpx, double *Lx, int xentry, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_mem</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a304b8d6a92b82f98dcdcc88135065006</anchor>
      <arglist>(char *where, UF_long should, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_partition</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a665c6dfca6da98ceccd1443da186eadb</anchor>
      <arglist>(UF_long n, Int *Cp, Int *Ci, Int *Cnw, Int *Part, UF_long sepsize, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dump_work</name>
      <anchorfile>amesos__cholmod__check_8c.html</anchorfile>
      <anchor>a188dec20e60d4586b3a6d69af32c8442</anchor>
      <arglist>(int flag, int head, UF_long wsize, cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_check.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__check_8h</filename>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_common</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>af65011d11520f832939b39b18f44d22d</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_common</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a3392801ddc960f7bb27a2aa8b93ad320</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_common</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a52eeb86cfe596d07acf0788c6c39a247</anchor>
      <arglist>(char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_common</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a6096ce864037177dbf5c11c210c7c821</anchor>
      <arglist>(char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_sparse</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a1e9d844ca3a7210abe3290f5bfbd13aa</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_sparse</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>af9918e3d0e321a696b84ca67b0d50539</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_sparse</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a24449e746c0b26ad92d0ac432c883720</anchor>
      <arglist>(cholmod_sparse *A, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_sparse</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>aa53ef2f0d43335e31157e024e13000fc</anchor>
      <arglist>(cholmod_sparse *, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_dense</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>ada1f36a4d4cba7c6be162499b7d77914</anchor>
      <arglist>(cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_dense</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a4bb92b76dcb774428db5685469322e3a</anchor>
      <arglist>(cholmod_dense *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_dense</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a3467e6a91742ba75d7d8a0456a694d52</anchor>
      <arglist>(cholmod_dense *X, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_dense</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>adab9634ea52b20d77cc7f33395ed81a1</anchor>
      <arglist>(cholmod_dense *, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_factor</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>aaefa6f26d4ab03b1e7f3f79838d79455</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_factor</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a3f21d3d2581e01249067c1eb92a1c059</anchor>
      <arglist>(cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_factor</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a59b14dc86efbc21b308a510336df4170</anchor>
      <arglist>(cholmod_factor *L, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_factor</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a09f40f55f735cde385cc1726d796a896</anchor>
      <arglist>(cholmod_factor *, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_triplet</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>aa9eee2fc6184b37286a11d91e9bf8dc0</anchor>
      <arglist>(cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_triplet</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a8d35778de3b72af606f056b635c066f7</anchor>
      <arglist>(cholmod_triplet *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_triplet</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a01ccc528ff7df5969dd1a73708b6cf32</anchor>
      <arglist>(cholmod_triplet *T, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_triplet</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>ad9f660cbf50b69b08e10ca5e4bc50aaf</anchor>
      <arglist>(cholmod_triplet *, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_subset</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a98db54ac51148481de83c30229f12309</anchor>
      <arglist>(int *Set, UF_long len, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_subset</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>ad9fc4996c34520b12c54f82519d75ad4</anchor>
      <arglist>(UF_long *, UF_long, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_subset</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a8fbf597d73c435bebdbebffc4624057c</anchor>
      <arglist>(int *Set, UF_long len, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_subset</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a65eca7ab7920c1341c794f164569dbb9</anchor>
      <arglist>(UF_long *, UF_long, size_t, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_perm</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a98d2e0aa180ebe92bff125309eb6ef9c</anchor>
      <arglist>(int *Perm, size_t len, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_perm</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a3904914490f2f09f409fdb51b78c658e</anchor>
      <arglist>(UF_long *, size_t, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_perm</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>ad9e67883f325607ac7dd6b9353231e02</anchor>
      <arglist>(int *Perm, size_t len, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_perm</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a4d7fcdd536d8fc4f448777c4ffbaf9ff</anchor>
      <arglist>(UF_long *, size_t, size_t, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_check_parent</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a82554435c2fa5a1b7922466d062cff4b</anchor>
      <arglist>(int *Parent, size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_check_parent</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a72d345e652b6bfd980789c166dd039b9</anchor>
      <arglist>(UF_long *, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_print_parent</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>a802c85b5e9983633263f9a5e9dd4f666</anchor>
      <arglist>(int *Parent, size_t n, char *name,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cholmod_l_print_parent</name>
      <anchorfile>amesos__cholmod__check_8h.html</anchorfile>
      <anchor>afa6915f799e9d3e94e4e8b41df9df92f</anchor>
      <arglist>(UF_long *, size_t, char *, cholmod_common *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_cholesky.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__cholesky_8h</filename>
    <includes id="amesos__cholmod__config_8h" name="amesos_cholmod_config.h" local="yes" imported="no">amesos_cholmod_config.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_A</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a98063dc377fffebe6e9cb384533a8b55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_LDLt</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a606b457c093b606ae9a1179f7878e459</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_LD</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aaa9134c909271877a356f5fd0aa23efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_DLt</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a2fcb6bc0da368073dfb05259c7a09f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_L</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a4eb82ae0f5421ff5dfe7f9f4b9659fb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_Lt</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>acf28576fbc7322d5967ff9468c1a2023</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_D</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a591b93e31e6454aa3bd8ce0fe86c8319</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_P</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aba3114e02ccd233b6e4c8a61e1801f13</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_Pt</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ab8e78c574136a3fe3078e9324cb0326b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_analyze</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aea99c19ca73b835dec0036a4a3351614</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>cholmod_l_analyze</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a77e71bff5183a3253a50bd408bfc3765</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_analyze_p</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a0c96725362a404536c00c140bc636526</anchor>
      <arglist>(cholmod_sparse *A, int *UserPerm, int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_l_analyze_p</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a01647328f8763f9265876af6b56da9cb</anchor>
      <arglist>(cholmod_sparse *, UF_long *, UF_long *, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_factorize</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a32c70d4820b93a0437781d95a0085075</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_factorize</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ace052e9b8156ce6e4f27a49d75a802a6</anchor>
      <arglist>(cholmod_sparse *, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_factorize_p</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ae2b96be72a6d0419d7d532687f60a0da</anchor>
      <arglist>(cholmod_sparse *A, double beta[2], int *fset, size_t fsize,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_factorize_p</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aa7a8d5c605c801b670f2b5efaab77794</anchor>
      <arglist>(cholmod_sparse *, double *, UF_long *, size_t, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_solve</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a4fbba581627a7a638a1837298a7ec8a1</anchor>
      <arglist>(int sys, cholmod_factor *L, cholmod_dense *B,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_solve</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ac0ccf97ae2ef5ad2238f0ea1b95204d1</anchor>
      <arglist>(int, cholmod_factor *, cholmod_dense *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_spsolve</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>af0e6cd430518cd9e923fd29548c1da10</anchor>
      <arglist>(int sys, cholmod_factor *L, cholmod_sparse *B,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_spsolve</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ae20d90ee88f6967717ff7e869d58c8ec</anchor>
      <arglist>(int, cholmod_factor *, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_etree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a5c840ef4ccb6f3347f6a51395375a548</anchor>
      <arglist>(cholmod_sparse *A, int *Parent,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_etree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ac201120825d5a5782f373e2c4c75f73b</anchor>
      <arglist>(cholmod_sparse *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_rowcolcounts</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a58d0981e88bbb5b4a639cea28d2df391</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int *Parent, int *Post,   int *RowCount, int *ColCount, int *First, int *Level,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_rowcolcounts</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ab7f185995eb4e46e2a5f90091cae9e9f</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_analyze_ordering</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a33f93dd33ed8d2d3da902147e2221406</anchor>
      <arglist>(cholmod_sparse *A, int ordering, int *Perm, int *fset, size_t fsize,   int *Parent, int *Post, int *ColCount,   int *First, int *Level,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_analyze_ordering</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ae04593d870d3a2ce96d7a7c9cd735fab</anchor>
      <arglist>(cholmod_sparse *, int, UF_long *, UF_long *, size_t, UF_long *, UF_long *, UF_long *, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_amd</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a665a899864413cfbbe42d11d0806218d</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize,   int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_amd</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a7a7dce8f6a0a886a8745bf1c2717ccf4</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_colamd</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a1e6669a56fa5fea79393d2f0b14f3ae5</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int postorder,   int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_colamd</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aa18a652f000a488fae7dc00c16a6a35e</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_rowfac</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ace1cb04e063803bf14e31d8ee59da33e</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, double beta[2], size_t kstart, size_t kend,   cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_rowfac</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aadbaa59e4e95381adf4cf7fb5b893b86</anchor>
      <arglist>(cholmod_sparse *, cholmod_sparse *, double *, size_t, size_t, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_rowfac_mask</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ae089791cc4c6bb3a26d50ccb757fc166</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, double beta[2], size_t kstart, size_t kend, int *mask, int *RLinkUp,   cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_rowfac_mask</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a9688dd15a407a3bfb714632e727a318b</anchor>
      <arglist>(cholmod_sparse *, cholmod_sparse *, double *, size_t, size_t, UF_long *, UF_long *, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_row_subtree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>af5a8e22f302edce3ea9d1d3fb9dd480d</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, size_t k, int *Parent,   cholmod_sparse *R,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_row_subtree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ad4d013dae9a1eb94d7583118145e2bdc</anchor>
      <arglist>(cholmod_sparse *, cholmod_sparse *, size_t, UF_long *, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_row_lsubtree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>af3ece6ca809a4653d3f84d473f798e14</anchor>
      <arglist>(cholmod_sparse *A, int *Fi, size_t fnz, size_t k, cholmod_factor *L,   cholmod_sparse *R,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_row_lsubtree</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ae35bd025f8f6825488c5363578762c63</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, size_t, cholmod_factor *, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_resymbol</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aecc0c935caf12a95040cc4612005c970</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int pack,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_resymbol</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aa6630f3498d2e5b715e9301deff3a691</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_resymbol_noperm</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aba13a7f87187ff8bd77cfbcecd0196ef</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int pack,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_resymbol_noperm</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>aa5960e208817c4c5d6e88c36f3766188</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_rcond</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ad19b374fb68c90692791b2bb9cbeac8f</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_l_rcond</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>ac5ce26afc0f2a356c9b73e12cad694dc</anchor>
      <arglist>(cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_postorder</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>afa4f769a30b333f433c857332cedc7f4</anchor>
      <arglist>(int *Parent, size_t n, int *Weight_p,   int *Post,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_postorder</name>
      <anchorfile>amesos__cholmod__cholesky_8h.html</anchorfile>
      <anchor>a932d594ad8d025b155ec24d57d3e6ad9</anchor>
      <arglist>(UF_long *, size_t, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_colamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__colamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__colamd_8h" name="amesos_colamd.h" local="yes" imported="no">amesos_colamd.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>colamd</name>
      <anchorfile>amesos__cholmod__colamd_8c.html</anchorfile>
      <anchor>aae187ffba20e905b1e41e83d3ed93827</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int postorder,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_common.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__common_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>start</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>aeae4ae6468ad3b76aaa5a76e1b931f3a</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>defaults</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>a1e2fde088b3a6086e6443d0355b065b2</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>finish</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>ab227a069237c36d0ae8ac583adf76f8c</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>allocate_work</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>a27515bddd2ea9d9abeebeda80bfe7de9</anchor>
      <arglist>(size_t nrow, size_t iworksize, size_t xworksize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_work</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>a075213d6cf3e0d969aec8ee34f96e58c</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>clear_flag</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>af7ac4ae3837b41a943b9143b6ca75c38</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>a2b7bacba0ac1e026da4e884ce04b0373</anchor>
      <arglist>(maxrank)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__common_8c.html</anchorfile>
      <anchor>a495c9ab7531b1b4ae832b8c3bd30e03c</anchor>
      <arglist>(dbound)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_complex.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__complex_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>double CHOLMOD()</type>
      <name>hypot</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a77e8c7a167512c32ed8df15dd3d400d3</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>divcomplex</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a2169ad4efafe345d90724caacede733d</anchor>
      <arglist>(double ar, double ai, double br, double bi, double *cr, double *ci)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>change_complexity</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a5dce2c6a61e44c6f0b83f725c493a726</anchor>
      <arglist>(Int nz, int xtype_in, int xtype_out, int xtype1, int xtype2, void **XX, void **ZZ,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>sparse_xtype</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a834604b3b00c407fa7fbfb7c48b7845d</anchor>
      <arglist>(int to_xtype,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>triplet_xtype</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a20b153d72b18b0eafe7f362a4165168f</anchor>
      <arglist>(int to_xtype,   cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dense_xtype</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a7ecbb7cdbbc062430ffc699002959dab</anchor>
      <arglist>(int to_xtype,   cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>factor_xtype</name>
      <anchorfile>amesos__cholmod__complex_8c.html</anchorfile>
      <anchor>a916736fcaa5a015e49ce03290b2a13d8</anchor>
      <arglist>(int to_xtype,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_complexity.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__complexity_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>P_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a7e8da259190ff00a93124b277d9f7a25</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P_ASSIGN2</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a08233dde15e234ed5b45a4e1aec6b6ed</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P_PRINT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ab41d7e8a5d9ac7c1200ec456d950e7f3</anchor>
      <arglist>(k, x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a469cca7447d4220046237d5f00c43971</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ASSEMBLE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3d172cea46ad831d275440e915c83c43</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ASSIGN</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a8d740011b84994aac53f6c04e8dc8e63</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ASSIGN_CONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ae8561e6905ec925aec5b06366b890795</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ASSIGN_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a04077c6188f99564115459c4f9072efb</anchor>
      <arglist>(x, p, ax, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_XTYPE_OK</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>afb0f655a4132a09807d30c98333f2414</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a2ab8f04f92e2ed29bb19fdc7319c0306</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_IS_ZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a8dedff90fd246b0e20b956a43440e115</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_IS_ONE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3e80607a1b8c4cffbf2f9caf6326e140</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a2ef3005e7ab9452999ed237702167b8c</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULTADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aa0db735be9b81df3b28c2db3b106a3db</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULTSUB</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>acc36841ab120418543f1c5efd005a14b</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULTADDCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ad5b5b891edb2811afd5167b70a553d01</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULTSUBCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3061838d44e00bd9e1d88a0d1c10d2a7</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ab3402dd98fa64decf992517f4027b299</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_ADD_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a07465ef75fbe3cc279b72727d417018a</anchor>
      <arglist>(x, p, ax, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_CLEAR</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a5b66942340204e6d242d40c32219ed98</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_CLEAR_IMAG</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a0bf5718a7e2e9d6b2bfbe4f8027f5711</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_DIV</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a4eb4c5641b50289185f276302e579b6f</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_LLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a24b3aa052da4d4a665223a8fd7adff9f</anchor>
      <arglist>(x, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_PRINT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a475af67a6e163b8a9458e56afca4df8b</anchor>
      <arglist>(k, x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_DIV_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a6ae1b3dfc9dfe4e03fb17dce9d08faa4</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_MULT_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aa136f75d45db98ba8eac126d2e801a36</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>R_LDLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a2c80dd09ad30dd5d0c1086552ba1260b</anchor>
      <arglist>(x, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>af4b26b0027f5e5f223cc9b37a2f545e4</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CT_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3d93c058d0362c9614ecda72836901ca</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ASSEMBLE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a201745cc05a61c958f56b26846f39b34</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ASSIGN</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>af43d8587e5e9296e82e93479295312f7</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ASSIGN_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a5b162112e067ba92b3669d8b3fadfe97</anchor>
      <arglist>(x, p, ax, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ASSIGN_CONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a1df22bd994323b3058221f1f8dc65e0b</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_XTYPE_OK</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a28a9f328996edcb39478a671229a5a9f</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a35d273a9781f534ee77085b36351ce81</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_IS_ZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a1dc99e1aa76bbda2c160184030d894aa</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_IS_ONE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a36c52bb4c73dba87e16fd95880c3849e</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_IMAG_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ad9489126b99e7a33d53c1017477845e3</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>adcba2528dd778de8b3a125df0c06b8ed</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULTADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a6286b23ae051528ff8151c08a017ede4</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULTSUB</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a89df332504ed6e846ba31f4858f51c1a</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULTADDCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aa6c6f4a282d22ad35a2d222562d975ef</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULTSUBCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>adc7ab13684a62845394222c15681b388</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3bad15988f52e7acc53a10c82120f1eb</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_ADD_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>af215ee3c4ecdef1b1a4e8230a73b6131</anchor>
      <arglist>(x, p, ax, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_CLEAR</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a9427c9e9d23f7d99952e0661ec0e2254</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_CLEAR_IMAG</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>abd21c1a4a1a913009a623a91a33591e4</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_DIV</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a03a8c75b9f69626508e02a979dd1f9bd</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_LLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3e5f2770f3d2c4f6f9eb3f53193cad93</anchor>
      <arglist>(x, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_PRINT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3f24e31fa12ba5a892f25ce243eea8d8</anchor>
      <arglist>(k, x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_DIV_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a810b3062263453ad4a3289d845857eed</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_MULT_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aae884413eb5b9cb3f2c95c1de781c247</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>C_LDLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a25193cbf83b52b71f0367ad033cf5d96</anchor>
      <arglist>(x, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a14814d8a4962866361e1aa2ac4d9139b</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZT_TEMPLATE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a13af1ad3e6096a59739fff6dffb3ca76</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ASSEMBLE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>afcb3c5af0a0bc3a778e9bf056ee99791</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ASSIGN</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a0158e5a659577779dba8873f367cc6f0</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ASSIGN_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ab62ec55479a3e6108602cba44f173ef0</anchor>
      <arglist>(x, p, ax, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ASSIGN_CONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a0ce94ae8204d65f3dd572b5796ef97ce</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_XTYPE_OK</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aabe93301a003eaf4e267c78181efc413</anchor>
      <arglist>(type)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a8b6ea16679e14a9f16c6af9abdf65014</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_IS_ZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aff748c7435c4745af1998b6a840bdf97</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_IS_ONE</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aec256de68db61cf99f39ff1ee150b28d</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_IMAG_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a89c2cf30685854c8a84b337fa505cd92</anchor>
      <arglist>(ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a7548ad07de26ca1a449963a1fc1a71b4</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULTADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a46e9c04b2d8dc75eca7a5a075ced7dd2</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULTSUB</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a2cedbc6d2c9d0b789ebb0545fe13eab2</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULTADDCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a481fd94d675f596760800fc60597e8a1</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULTSUBCONJ</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a1de7c4a3122151d8306acea7e74cc287</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ADD</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a39920a7c595ac9e1d3a95c91f3e93658</anchor>
      <arglist>(x, z, p, ax, az, q, bx, bz, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_ADD_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ac6a9bf4687ceda97adc595ec43f94f14</anchor>
      <arglist>(x, p, ax, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_CLEAR</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aa72d3fc3b4c094d0197223f7925270e7</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_CLEAR_IMAG</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a37123affad6ad7b57fbcbd08916f5342</anchor>
      <arglist>(x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_DIV</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>af1795a6c45dab6f0eb5321f6b97c832a</anchor>
      <arglist>(x, z, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_LLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a8871409341e2ff4e904d518013585c81</anchor>
      <arglist>(x, p, ax, az, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_PRINT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>aa088a9a72e06775cf632ce4c3479146a</anchor>
      <arglist>(k, x, z, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_DIV_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>ab414f77ef6768af987f9b4ea99f59cf4</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_MULT_REAL</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a7cc8e2c16bc68d59f070325542ee72c4</anchor>
      <arglist>(x, z, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Z_LDLDOT</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a3d36110788f9e2a75b8766bdd93d8d8d</anchor>
      <arglist>(x, p, ax, az, q, bx, r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_IF_XTYPE_INVALID</name>
      <anchorfile>amesos__cholmod__complexity_8h.html</anchorfile>
      <anchor>a9660308c6f947787dd8c8ca9061b9061</anchor>
      <arglist>(A, xtype1, xtype2, result)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_config.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__config_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>NMATRIXOPS</name>
      <anchorfile>amesos__cholmod__config_8h.html</anchorfile>
      <anchor>a7d36a98b6137995338864b130ba09ba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NMODIFY</name>
      <anchorfile>amesos__cholmod__config_8h.html</anchorfile>
      <anchor>a121cf235fa3cd705b4842ada8caee587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NSUPERNODAL</name>
      <anchorfile>amesos__cholmod__config_8h.html</anchorfile>
      <anchor>a59855e88f3ae137f655622e1a080c288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_copy.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__copy_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *</type>
      <name>copy_sym_to_unsym</name>
      <anchorfile>amesos__cholmod__copy_8c.html</anchorfile>
      <anchor>a4ed647d3bf1d171ad753a39e49cd1427</anchor>
      <arglist>(cholmod_sparse *A, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>copy</name>
      <anchorfile>amesos__cholmod__copy_8c.html</anchorfile>
      <anchor>af3f70eab5d3f0bbc33ee6562d74e361d</anchor>
      <arglist>(cholmod_sparse *A, int stype, int mode,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_core.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__core_8h</filename>
    <class kind="struct">cholmod_common_struct</class>
    <class kind="struct">cholmod_common_struct::cholmod_method_struct</class>
    <class kind="struct">cholmod_sparse_struct</class>
    <class kind="struct">cholmod_factor_struct</class>
    <class kind="struct">cholmod_dense_struct</class>
    <class kind="struct">cholmod_triplet_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_DATE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a518df75059e09e52c872b530ec2e1c2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_VER_CODE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3d9a99453b8851cadf288d3625555345</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MAIN_VERSION</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a7f9a19203436835f6368aaf8574c03e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SUB_VERSION</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3a553c1ba5396871bf590e17456fbb7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SUBSUB_VERSION</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a8906fa39f0e126c55b16279ee773d325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_VERSION</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aaf40a35106f4a4aaab0048a39d9b0989</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_COMMON</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a4a24bb85ad75e3505ee68c461cd13616</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SPARSE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a14f4887ebd2934aa7c64d2392d43a7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_FACTOR</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a764c861521717e793cadcc329ad37173</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_DENSE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ab345d7180f85059bef3f67ee40f7b479</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_TRIPLET</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ab697df0f38787f24c068db9d821f2e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_INT</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a216ca1763661839021bf8d36a15e869b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_INTLONG</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2932b850e97e101ed0072ef3058df43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_LONG</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3e7e9de4b4dfcc0b4e07f1154204282d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_DOUBLE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a58da52d485c6d48c766bdd145ec65cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SINGLE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3300412cbf8dc6b10e5f899fe3c9748c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_PATTERN</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a300f53cb1dff8545a036d0807dfdf940</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_REAL</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a679aa25a3306ee956de4541986d77eef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_COMPLEX</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa9cd590c49529833ae764c3fba649f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_ZOMPLEX</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>afe991d962516b2b464fc762ddadd9554</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MAXMETHODS</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a47678b57efc8e37c1298769674587f23</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_OK</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a5e7edb47657ec410663d08f68f5e016f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_NOT_INSTALLED</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a7f513de6f98d390443f6eaceebfc7149</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_OUT_OF_MEMORY</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>afa1f602e0c00e7cc5e862ec6963a801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_TOO_LARGE</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a0ecbba9194a6a4dbe6ea7fc167bcda22</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_INVALID</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad91fdda5eec6c15bd6a8fa6ad651565a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_NOT_POSDEF</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae5d137330dbaf381db2286ff20a0d462</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_DSMALL</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>af89776b4470c969e307295b1b8970260</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_NATURAL</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac4a021f5fb160254fce892d00b11f8b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_GIVEN</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa4cf220c03bed7044dca30a275b8a054</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_AMD</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a04aee52cf71185b851235adb9c0e2fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_METIS</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad6a84dd2351020153ac19e1a107d54bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_NESDIS</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9d30234c4be714b7ea814650b90632c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_COLAMD</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3f0339e1ccf5bce1055c74ae58e61f40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_POSTORDERED</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ab07bef54e8965b974db236febdc1ddca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SIMPLICIAL</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae21aa143d36599583bfb4d73a184853d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_AUTO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a14af1c84b297494d60b7d621e128a7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_SUPERNODAL</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad3f499c43dda4cd372eeef3b8aeedfcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_CLEAR_FLAG</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aece5d2d27497217f926aa17a257c1e0f</anchor>
      <arglist>(Common)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_RECTANGULAR</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a15547d2805b73202b4071f56a9c2d797</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_UNSYMMETRIC</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a26cc8b0a2fe3fe41eade51792d17ed98</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_SYMMETRIC</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a470c7f67a47fb5cac55515f4abd6dd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_HERMITIAN</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>afc293e4cbf8966a6bd2ae496cd9359d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_SKEW_SYMMETRIC</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9460a485ac94aca3b813cc4e8334bd45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_SYMMETRIC_POSDIAG</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a03f7d26c6057b55a67343551f0eab920</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_MM_HERMITIAN_POSDIAG</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a809b403dc619af12c0a9632cbd42c8e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_NAN</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abc640b93651bcb90ce25796afff2b965</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_ZERO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>affd34b165df352f2d0fffababcbc2d61</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_NONZERO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abe4a63decf6def99f5e9e9ab40993032</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_LT_ZERO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1d97c9387f5b3e9da80502cbfe7bf957</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_GT_ZERO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a7c86f61dbe7dd3c72d50ad5d6a1a520e</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD_IS_LE_ZERO</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a8dbf01412a0591ad34ef1ca6d65fa43c</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="typedef">
      <type>struct cholmod_common_struct</type>
      <name>cholmod_common</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1bbb9a8af3054955916f8f60337a34ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cholmod_sparse_struct</type>
      <name>cholmod_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1e191dadad1a75cc50b5daa85226e88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cholmod_factor_struct</type>
      <name>cholmod_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a31b800ad4275c20c4d95558e4ccb6d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cholmod_dense_struct</type>
      <name>cholmod_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>afdc579b0b58d935754c9faa9373e45f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct cholmod_triplet_struct</type>
      <name>cholmod_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac9d2d8295a21a3165f014516e1f0c974</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_start</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>adde9437f5eff997262c7676e108eb3b3</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_start</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a73ee39f01711d151a18ed407afc6f7b7</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_finish</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>addd806aab6e50107a332043007653777</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_finish</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a4ff074415875727314546f62dde214b4</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_defaults</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a4beb9a33488cc32fc6b408bddcce1867</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_defaults</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad6ae046938b5271a80a72dc65cbc88f6</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_maxrank</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ab56c42626083d08f505632a1767c921c</anchor>
      <arglist>(size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_l_maxrank</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ace8e1373d672950e0b481ec27e2f427f</anchor>
      <arglist>(size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_allocate_work</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad1351a203df10cfeec20875e5fff38d5</anchor>
      <arglist>(size_t nrow, size_t iworksize, size_t xworksize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_allocate_work</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>acf540c013eaa75d10cc9e15b60c3a534</anchor>
      <arglist>(size_t, size_t, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_free_work</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad78d526a3b0a48509b4db2244472b657</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_free_work</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac26b2443dc64a78038ab861fa8f4e1e7</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_clear_flag</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a57c9ace2879b71bcf2620cfca3c9ae7a</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_clear_flag</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac166aab627befaeabd522ae65e008a9b</anchor>
      <arglist>(cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_error</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a44f75bc54773b91c11e163662ff40215</anchor>
      <arglist>(int status, char *file, int line, char *message,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_error</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a99caec8928e4e53d5ba100a211dcbd2e</anchor>
      <arglist>(int, char *, int, char *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_dbound</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abbf94d4caa6e959b2dd86f1e6e3ce8c5</anchor>
      <arglist>(double dj,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_l_dbound</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a07001910b3dbd33cb86700d9ac62fb80</anchor>
      <arglist>(double, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_hypot</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2a22abec39844b323a47ebcc60880f92</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>amesos_cholmod_l_hypot</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a73ec2fb963ffff8742505e963d096b0e</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_divcomplex</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a5f034b370744b54d235f961364c23fba</anchor>
      <arglist>(double ar, double ai, double br, double bi,   double *cr, double *ci)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_divcomplex</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aad72551f5ee20b33ef08e6e738ad90dc</anchor>
      <arglist>(double, double, double, double, double *, double *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_allocate_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2fec6dae464735d1b9fc6842ecd20f26</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int sorted, int packed, int stype, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_allocate_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a113a1bef2af76967b50dd318424bc6db</anchor>
      <arglist>(size_t, size_t, size_t, int, int, int, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_free_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a114e41c1c8a2d5014717104fadbec466</anchor>
      <arglist>(cholmod_sparse **A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_free_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>adec07fa34896d7b1f5d8640ffbbd7bda</anchor>
      <arglist>(cholmod_sparse **, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_reallocate_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a159f1870aab26a5fb5788c7a5d687eb7</anchor>
      <arglist>(size_t nznew,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_reallocate_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aae5d58bafff8e5ea7162b353f95c262d</anchor>
      <arglist>(size_t, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_nnz</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ab3a273881d3a18252372cb70d9b57dab</anchor>
      <arglist>(cholmod_sparse *A, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_nnz</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad02b10a49acdf30fda7e78a4d625ea48</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_speye</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>accae156f8da9f60721b536ae91a6f6fb</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_speye</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a35725d81531734ab72c04d56c0aa6afd</anchor>
      <arglist>(size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_spzeros</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa9245aa96a0f7b3e13280e884697a44a</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_spzeros</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a309c035f63b122e5144abd66a22ef7f6</anchor>
      <arglist>(size_t, size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_transpose</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6a46eb98cbc57948964d0ff1782daa02</anchor>
      <arglist>(cholmod_sparse *A, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_transpose</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1ef5c9896fe03ef9f30ace8feb78c2f8</anchor>
      <arglist>(cholmod_sparse *, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_transpose_unsym</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a986c15dbc67c585c867ea73bf3f81e8d</anchor>
      <arglist>(cholmod_sparse *A, int values, int *Perm, int *fset, size_t fsize,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_transpose_unsym</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a319e02187612b3fd4b8795359507e286</anchor>
      <arglist>(cholmod_sparse *, int, UF_long *, UF_long *, size_t, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_transpose_sym</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6980e96241e5f02227915ffee33ff2c1</anchor>
      <arglist>(cholmod_sparse *A, int values, int *Perm,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_transpose_sym</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aea70ed5391f86e7f8b6ce4f784e40467</anchor>
      <arglist>(cholmod_sparse *, int, UF_long *, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_ptranspose</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a8f608d41ba88d9a01b84d6820d01bbf2</anchor>
      <arglist>(cholmod_sparse *A, int values, int *Perm, int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_ptranspose</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3b953dce52d3ed076609854ac5523c8a</anchor>
      <arglist>(cholmod_sparse *, int, UF_long *, UF_long *, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_sort</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad0eb4b8d719fa05192b8ae63ba054ff6</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_sort</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a78e4995984e6b008165a5d46808515b7</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_band</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1d239b8ff517dcfaf86088746194b051</anchor>
      <arglist>(cholmod_sparse *A, UF_long k1, UF_long k2, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_band</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa1e9c2296cc00798a1cbc353ba6dda03</anchor>
      <arglist>(cholmod_sparse *, UF_long, UF_long, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_band_inplace</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2c5ee29bc5f54dfa53a856613da833f6</anchor>
      <arglist>(UF_long k1, UF_long k2, int mode,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_band_inplace</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a8802b07e334a4594eae29eae590c6160</anchor>
      <arglist>(UF_long, UF_long, int, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_aat</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa69db14e6ff3a4737cbb773a3e4d5365</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_aat</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa702380f245bf9ed7bac7d31628241ee</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_copy_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a035b3a1af2a265db525098a1e12d6764</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_copy_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a95130c4ce279bee07159a5037b837a4f</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_copy</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6999570a7b7779e842e7d4d60deab619</anchor>
      <arglist>(cholmod_sparse *A, int stype, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_copy</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae1734039ac21ac895cc4df6ce7aed89c</anchor>
      <arglist>(cholmod_sparse *, int, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_add</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6598e662bbb69fc8641120c48885d6fd</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *B, double alpha[2], double beta[2], int values, int sorted,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_add</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae0b99cd52580fc9faeed7f6f39ed665a</anchor>
      <arglist>(cholmod_sparse *, cholmod_sparse *, double *, double *, int, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_sparse_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a5001883e5c248f4de1a832250c8b5e16</anchor>
      <arglist>(int to_xtype,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_sparse_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>acaa479753b94cb905e937180976633f5</anchor>
      <arglist>(int, cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_allocate_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6214dbc035da656ad8d6f9054fdc246f</anchor>
      <arglist>(size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_l_allocate_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6ed50873ba9258cff3f69ffa99dee9c7</anchor>
      <arglist>(size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_free_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a38d75acb205bd1b83e32a6682f3d2182</anchor>
      <arglist>(cholmod_factor **L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_free_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a64dfae2adde3ff38e2018a8ec9931155</anchor>
      <arglist>(cholmod_factor **, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_reallocate_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a7d527721b0503dad440148d001da143f</anchor>
      <arglist>(size_t nznew,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_reallocate_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a268e189589c6442da5496ca518a6efac</anchor>
      <arglist>(size_t, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_change_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a06aab210d2f90003a078ee1282f77e7c</anchor>
      <arglist>(int to_xtype, int to_ll, int to_super, int to_packed, int to_monotonic,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_change_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a29b7bf089368c8420a412780ac48f0e7</anchor>
      <arglist>(int, int, int, int, int, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_pack_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>adbbad42eafbe1e61ceb98961e032b622</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_pack_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa99b8ae184013ea049c62e17570f13bb</anchor>
      <arglist>(cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_reallocate_column</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9627c119a35a8adbe7f3771624e117fc</anchor>
      <arglist>(size_t j, size_t need,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_reallocate_column</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>afe12ec56faf17fd8c8975a40ab36ef38</anchor>
      <arglist>(size_t, size_t, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_factor_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a0a6e1edb3157564d83157294dfff4a6c</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_factor_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1f8c1c783bf96b69a6ced901bd4ac596</anchor>
      <arglist>(cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_copy_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a4e905dc8a97e13f93f0559ce579c8362</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *</type>
      <name>amesos_cholmod_l_copy_factor</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a26ec32fd5ea709f7063db1f8848dee59</anchor>
      <arglist>(cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_factor_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa887545d1d44008a62725539363915d7</anchor>
      <arglist>(int to_xtype,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_factor_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9c597e29d0757a61065a178ede5043ca</anchor>
      <arglist>(int, cholmod_factor *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_allocate_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2a537bf8d7a9eab78224d5ade6c8a25f</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t d, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_allocate_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae022272aaeca5b211b6c090899545c6f</anchor>
      <arglist>(size_t, size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_zeros</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a0c23a117657e07f45faaaa06056f28dc</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_zeros</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad3822f887fb4f8906599e0ad9858bcb8</anchor>
      <arglist>(size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_ones</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abdd913389c30e90b1e75f75dcd72de09</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_ones</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a93d40cfa1f5edf3d27cb23cf0b21b56f</anchor>
      <arglist>(size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_eye</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a3d147365985f830f13195f674ee403b8</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_eye</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a54fa5f413791b1a42db44e9ee32e2aa4</anchor>
      <arglist>(size_t, size_t, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_free_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2878154ad0b6b8b19f4be0bea2b4b50d</anchor>
      <arglist>(cholmod_dense **X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_free_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac7a1ad6741955fd9df6bcc83ee961cb4</anchor>
      <arglist>(cholmod_dense **, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_sparse_to_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aeb14cd8bc140422e59661ed15affca70</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_sparse_to_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2741bbc697d97a5089de55accf205066</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_dense_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a03081b71901918ccec124866a5128f0e</anchor>
      <arglist>(cholmod_dense *X, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_dense_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a40f63e9fccccd46fddc09e9b065273c7</anchor>
      <arglist>(cholmod_dense *, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_copy_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>adb3c7e8bf44ed28dcf8efb8085201a49</anchor>
      <arglist>(cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *</type>
      <name>amesos_cholmod_l_copy_dense</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a761b578b1a1681348fa204951a089217</anchor>
      <arglist>(cholmod_dense *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_copy_dense2</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a43f07f17ad1b21e60397568431df3a96</anchor>
      <arglist>(cholmod_dense *X,   cholmod_dense *Y,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_copy_dense2</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>af85688f61fa7f2674af7b43e3fc916bf</anchor>
      <arglist>(cholmod_dense *, cholmod_dense *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_dense_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ac08e1c96572e3e4083347e15bf67c8fd</anchor>
      <arglist>(int to_xtype,   cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_dense_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9794a06243432142f6c9faadc33c748c</anchor>
      <arglist>(int, cholmod_dense *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_allocate_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1c39d6cc212eb0e209f5273778284779</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int stype, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_l_allocate_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abca5b871dc47060207e145793ce65b87</anchor>
      <arglist>(size_t, size_t, size_t, int, int, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_free_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ada1e3573b4ecc7cbb93809fdb283c80d</anchor>
      <arglist>(cholmod_triplet **T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_free_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a9ecdd42191f3a39bfc8ab159bad90399</anchor>
      <arglist>(cholmod_triplet **, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_reallocate_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ae14afcdbba85b909090b24b7abdfa499</anchor>
      <arglist>(size_t nznew,   cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_reallocate_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a1a4197d11b8a4c020720b3a9f812e079</anchor>
      <arglist>(size_t, cholmod_triplet *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_sparse_to_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aee50776c6665b59c68631db7aac1818c</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_l_sparse_to_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a2bd2bb60202c18ff0c08326f1f840dac</anchor>
      <arglist>(cholmod_sparse *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_triplet_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>aa1a376178265e5f50f3b74cb8c4e8f06</anchor>
      <arglist>(cholmod_triplet *T, size_t nzmax,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>amesos_cholmod_l_triplet_to_sparse</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a28df72f0b0f732c48c136e4643843431</anchor>
      <arglist>(cholmod_triplet *, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_copy_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a0e733d0163c2c587d1628234e524fe79</anchor>
      <arglist>(cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>amesos_cholmod_l_copy_triplet</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a89a1072f97eb968327a744b5a73a895a</anchor>
      <arglist>(cholmod_triplet *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_triplet_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a37d9051d1cd624476d7c9f7752feb716</anchor>
      <arglist>(int to_xtype,   cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_triplet_xtype</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a22ebf7ca8a9c20932659629fbb789f33</anchor>
      <arglist>(int, cholmod_triplet *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_malloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abd54b95759a0f1296af5876575c8da28</anchor>
      <arglist>(size_t n, size_t size,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_l_malloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a6b01518947aa483744a4e7d080017b13</anchor>
      <arglist>(size_t, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_calloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a50f8432da6add8b58f204cd9e986ede8</anchor>
      <arglist>(size_t n, size_t size,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_l_calloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a4e8c496e9d7c6cd6e485a049d7fb45a8</anchor>
      <arglist>(size_t, size_t, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_free</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a44a1c253b768ebb56b536421c782ce12</anchor>
      <arglist>(size_t n, size_t size,   void *p,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_l_free</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>ad91a7b725e422b9772413dd18d777a18</anchor>
      <arglist>(size_t, size_t, void *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_realloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a0756d24b2738819a3be2ec23bce9c33f</anchor>
      <arglist>(size_t nnew, size_t size,   void *p, size_t *n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_cholmod_l_realloc</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>abb34aba747862514f8ba6e1ab14a0417</anchor>
      <arglist>(size_t, size_t, void *, size_t *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_realloc_multiple</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a446745caf04ec0594b10c94d6a7a2c1c</anchor>
      <arglist>(size_t nnew, int nint, int xtype,   void **I, void **J, void **X, void **Z, size_t *n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_realloc_multiple</name>
      <anchorfile>amesos__cholmod__core_8h.html</anchorfile>
      <anchor>a40cfa473004172422327377cbc10139a</anchor>
      <arglist>(size_t, int, int, void **, void **, void **, void **, size_t *, cholmod_common *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_csymamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__csymamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>csymamd</name>
      <anchorfile>amesos__cholmod__csymamd_8c.html</anchorfile>
      <anchor>aea4952a4f6dc5815de5e68549847eb7d</anchor>
      <arglist>(cholmod_sparse *A,   Int *Cmember, Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_dense.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__dense_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__dense_8c" name="amesos_t_cholmod_dense.c" local="yes" imported="no">amesos_t_cholmod_dense.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>PATTERN</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a96607e8d3432f4b72ad9efd97b657c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>allocate_dense</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a3ca3bb24cb7d52330cdc2c1e2af84adf</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t d, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>zeros</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a92ef37548476a3459aa4b58a279ed04e</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>ones</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a321049ea5c0b8dbdf8f7b8e20f45d353</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>eye</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a5b7653a37c49d963e3fecdeda15509af</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_dense</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>aae594957a111abfbdc504b2e96021a46</anchor>
      <arglist>(cholmod_dense **XHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>sparse_to_dense</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>afed5c24b14aa6c60c486584e01348b10</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>dense_to_sparse</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a75b835055450d67a89d23590d432f3f5</anchor>
      <arglist>(cholmod_dense *X, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>copy_dense2</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a1a43a9a90d6dc648c7bd501d8eb608ca</anchor>
      <arglist>(cholmod_dense *X,   cholmod_dense *Y,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>copy_dense</name>
      <anchorfile>amesos__cholmod__dense_8c.html</anchorfile>
      <anchor>a6c68e4ed613057c2f8a6b05671c2a25d</anchor>
      <arglist>(cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_error.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__error_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>error</name>
      <anchorfile>amesos__cholmod__error_8c.html</anchorfile>
      <anchor>a76e6fa616eb79d3564387fecf9c331e7</anchor>
      <arglist>(int status, char *file, int line, char *message,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_etree.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__etree_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_update_etree</name>
      <anchorfile>amesos__cholmod__etree_8c.html</anchorfile>
      <anchor>a1d0d730334f89eff91cc38ddd6a08396</anchor>
      <arglist>(Int k, Int i, Int Parent[], Int Ancestor[])</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>etree</name>
      <anchorfile>amesos__cholmod__etree_8c.html</anchorfile>
      <anchor>a076e2cf3fa18cd892a44122c06704d26</anchor>
      <arglist>(cholmod_sparse *A, Int *Parent,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__factor_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>allocate_factor</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>a93aab3bc752d530b9640298948a75e67</anchor>
      <arglist>(size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_factor</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>a2af86f09a7bf05f876932719b0876e3f</anchor>
      <arglist>(cholmod_factor **LHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_factor</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>a537af2bff720e6f9424e718a50425671</anchor>
      <arglist>(size_t nznew,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_column</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>afa4180185114a4556328dec6c58188ae</anchor>
      <arglist>(size_t j, size_t need,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>pack_factor</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>a9ce257d3c3de30a31b42a60b03598043</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>factor_to_sparse</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>a4498cccabcebae2aa2de81c0873fce08</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>copy_factor</name>
      <anchorfile>amesos__cholmod__factor_8c.html</anchorfile>
      <anchor>aa1a75eee53b8822454fc8d382134ce4d</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_factorize.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__factorize_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>factorize</name>
      <anchorfile>amesos__cholmod__factorize_8c.html</anchorfile>
      <anchor>a719cd65b8cd2b93dd0686220999c8f59</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>factorize_p</name>
      <anchorfile>amesos__cholmod__factorize_8c.html</anchorfile>
      <anchor>a36b74a5535a75f0eb5909c3a93e5a5bb</anchor>
      <arglist>(cholmod_sparse *A, double beta[2], Int *fset, size_t fsize,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_internal.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__internal_8h</filename>
    <includes id="amesos__cholmod__io64_8h" name="amesos_cholmod_io64.h" local="yes" imported="no">amesos_cholmod_io64.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <includes id="amesos__cholmod__complexity_8h" name="amesos_cholmod_complexity.h" local="yes" imported="no">amesos_cholmod_complexity.h</includes>
    <includes id="amesos__cholmod__blas_8h" name="amesos_cholmod_blas.h" local="yes" imported="no">amesos_cholmod_blas.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BOOLEAN</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a755b9c5bba2b27ad8ebb18e91ccc8d01</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLIP</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a9b17a06cbb01e7b7a165c13e5640fd46</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNFLIP</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a58d80900906670c5df232e3c288dbec9</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX3</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a37c6d7fcb9c177c308ef38e1d51d35e3</anchor>
      <arglist>(a, b, c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX4</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>acf9c1f64129f8817d22f83b96f6ed466</anchor>
      <arglist>(a, b, c, d)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMPLIES</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>aa2faa268dbd9c43a8e7aac92bd70114f</anchor>
      <arglist>(p, q)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SIGN</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a8c5ff70b6b28cd0157c50a22406f92c4</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROUNDUP</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a5d6e0cd391f909226c54d5c78bf8c0fc</anchor>
      <arglist>(x, s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ERROR</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a1e9b7f8ab3149fd5144d9a1627cb9406</anchor>
      <arglist>(status, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_IF_NULL</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>ad8d60c25dd502ec2b004ecb027332a70</anchor>
      <arglist>(A, result)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RETURN_IF_NULL_COMMON</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a778b3d09869d02e2e1144e5f38759f9b</anchor>
      <arglist>(result)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NAN</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>ac2246d945b53c51c63e9d0e7beeb2425</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_ZERO</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a0a69594b2ea1ac8262ab37a48fe774ff</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NONZERO</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>ac6c082c03881d9d08b51f15955804a02</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_LT_ZERO</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>ae632d2ad47c42062f8c6cac8434143df</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_GT_ZERO</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a6579b02f481ff5499438133d811a7c06</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_LE_ZERO</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a734dde10d7e4a27f2fd5036d05ec4d1a</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>HUGE_DOUBLE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a9dc34a6a2a059c068409834b94b339c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Size_max</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>aeca81bc7a761c004163e8636dafcc596</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DINT</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a058e7dbf59195ee615d22066fbdd844b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>afeeffe52c8fd59db7c61cf8b02042dbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOUBLE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a8747af38b86aa2bbcda2f1b1aa0888c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Real</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a060b837c3b4486ee35317744156f3da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_max</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>af2bdae8b2a1a2c6cc68215ef219d2673</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a96c2976c8b8307b8dab27af3273f1533</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ITYPE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>afa9c89c62b53deb647c3722a1114ffb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTYPE</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a3834ad0136a8b95a6589500e4009fe9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRK</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a30ce8b48565e00b2c798ede6d83d8b9b</anchor>
      <arglist>(k, params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_INIT</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a0c7ca99489416812ae8c1d0e504d5cef</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_DEBUG_INIT</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a05133360592d045a73ebca4af13dacf8</anchor>
      <arglist>(s, Common)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT0</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a85b8cfa2b91855eecb238b9573229fab</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT1</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>aa1155097641edde64c4ac17e81545793</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT2</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>abcab167d38bab369e00fb5e75600cfbd</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT3</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a2cf49acd71864922e55159d436731026</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTM</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a118bcd25fbcb4bc81e093787d84f3933</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a9fd1d486da1707db019dee66cec502e8</anchor>
      <arglist>(statement)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_add_size_t</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a0507c419a934fdee83cababf4889e595</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_mult_size_t</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a9894ed67a3bec68969cac3c45b217d2f</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_l_add_size_t</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>a68032a9134e62df707ba7594165eab01</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_cholmod_l_mult_size_t</name>
      <anchorfile>amesos__cholmod__internal_8h.html</anchorfile>
      <anchor>ab33ad77836373513bad152864a1ed3ed</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_io64.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__io64_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>_LARGEFILE64_SOURCE</name>
      <anchorfile>amesos__cholmod__io64_8h.html</anchorfile>
      <anchor>a0e6d20c5075b52b0f0bc4858d51c8591</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>_FILE_OFFSET_BITS</name>
      <anchorfile>amesos__cholmod__io64_8h.html</anchorfile>
      <anchor>a44d01ba0a136b8e27ad362f5a823d14e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_aat.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__aat_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__aat_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>aat</name>
      <anchorfile>amesos__cholmod__l__aat_8c.html</anchorfile>
      <anchor>a9ac23e8e071ba820fd5028f023341637</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int mode,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_add.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__add_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__add_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>add</name>
      <anchorfile>amesos__cholmod__l__add_8c.html</anchorfile>
      <anchor>a57efa9a50e75e887a2ab05763fe49ac1</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *B, double alpha[2], double beta[2], int values, int sorted,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_amd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__amd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__amd_8h" name="amesos_amd.h" local="yes" imported="no">amesos_amd.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__amd_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>amd</name>
      <anchorfile>amesos__cholmod__l__amd_8c.html</anchorfile>
      <anchor>af72fadf17fd7bc9245518359e5176f1b</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_analyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__analyze_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FREE_WORKSPACE_AND_RETURN</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>a26581f164d720f76253d9499f345dd74</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>analyze</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>a0461185d37e9ce8927f4244724daad3b</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>amesos_permute_matrices</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>a131402e43173b339dcb701e4b71acaef</anchor>
      <arglist>(cholmod_sparse *A, Int ordering, Int *Perm, Int *fset, size_t fsize, Int do_rowcolcounts, cholmod_sparse **A1_handle, cholmod_sparse **A2_handle, cholmod_sparse **S_handle, cholmod_sparse **F_handle, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>analyze_ordering</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>a2527f0970dc9ac361b12f07a7a0481d3</anchor>
      <arglist>(cholmod_sparse *A, int ordering, Int *Perm, Int *fset, size_t fsize,   Int *Parent, Int *Post, Int *ColCount,   Int *First, Int *Level,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>analyze_p</name>
      <anchorfile>amesos__cholmod__l__analyze_8c.html</anchorfile>
      <anchor>a3e5811941d99cb10be3fd8fe2847a784</anchor>
      <arglist>(cholmod_sparse *A, Int *UserPerm, Int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_band.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__band_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__band_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *</type>
      <name>band</name>
      <anchorfile>amesos__cholmod__l__band_8c.html</anchorfile>
      <anchor>a07731fd4f54fa2fc91831a1a8c411b71</anchor>
      <arglist>(cholmod_sparse *A, UF_long k1, UF_long k2, int mode, int inplace,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>band</name>
      <anchorfile>amesos__cholmod__l__band_8c.html</anchorfile>
      <anchor>a1edc4915de40d168b8c3c5631173f190</anchor>
      <arglist>(cholmod_sparse *A, UF_long k1, UF_long k2, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>band_inplace</name>
      <anchorfile>amesos__cholmod__l__band_8c.html</anchorfile>
      <anchor>a33eaefb01b6d588a29a7a142c7027f3d</anchor>
      <arglist>(UF_long k1, UF_long k2, int mode,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_camd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__l__camd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__camd_8h" name="amesos_camd.h" local="yes" imported="no">amesos_camd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__camd_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>camd</name>
      <anchorfile>amesos__cholmod__l__camd_8c.html</anchorfile>
      <anchor>a027180628ef91e25bc27db2015e183b7</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Cmember,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_ccolamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__l__ccolamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__ccolamd_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>ccolamd_interface</name>
      <anchorfile>amesos__cholmod__l__ccolamd_8c.html</anchorfile>
      <anchor>a915642afa907daa82b09a4fbd40dde19</anchor>
      <arglist>(cholmod_sparse *A, size_t alen, Int *Perm, Int *Cmember, Int *fset, Int fsize, cholmod_sparse *C, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>ccolamd</name>
      <anchorfile>amesos__cholmod__l__ccolamd_8c.html</anchorfile>
      <anchor>a72181c31876a862f41cf9c6efb865b50</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Cmember,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_change_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__change__factor_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__change__factor_8c" name="amesos_t_cholmod_change_factor.c" local="yes" imported="no">amesos_t_cholmod_change_factor.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>natural_list</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a5531148a910b0514b33e8b83e5eedd36</anchor>
      <arglist>(cholmod_factor *L)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>L_is_packed</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a820aeaa2d1beceda179a5cfc58731735</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>allocate_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a051e03a3ac2d9ee1ef53c1d3fcdae921</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>simplicial_symbolic_to_super_symbolic</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a97e17d8e8e6dd20988d37e1ce7099812</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>any_to_simplicial_symbolic</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a2688dc3faecb266ca948644da4df6a3c</anchor>
      <arglist>(cholmod_factor *L, int to_ll, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ll_super_to_super_symbolic</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a20561e0661e3d1cff7f633f9fea60f4c</anchor>
      <arglist>(cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>simplicial_symbolic_to_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a001263828501965cfedb57e1a6e736c2</anchor>
      <arglist>(cholmod_factor *L, int to_ll, int packed, int to_xtype, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>change_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a652f71541423300f7e954879ea8026d3</anchor>
      <arglist>(cholmod_factor *L, int to_ll, int to_packed, int to_monotonic, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>ll_super_to_simplicial_numeric</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a13dde6f4d555965ad36653fe829eaaab</anchor>
      <arglist>(cholmod_factor *L, int to_packed, int to_ll, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>super_symbolic_to_ll_super</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>a53ad369dd78190d5996dcd3d00e27f64</anchor>
      <arglist>(int to_xtype, cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>change_factor</name>
      <anchorfile>amesos__cholmod__l__change__factor_8c.html</anchorfile>
      <anchor>ab1df4d6c2690d33df21c2d570781b936</anchor>
      <arglist>(int to_xtype, int to_ll, int to_super, int to_packed, int to_monotonic,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_colamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__colamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__colamd_8h" name="amesos_colamd.h" local="yes" imported="no">amesos_colamd.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__colamd_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>colamd</name>
      <anchorfile>amesos__cholmod__l__colamd_8c.html</anchorfile>
      <anchor>aae187ffba20e905b1e41e83d3ed93827</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int postorder,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_common.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__common_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>start</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>aeae4ae6468ad3b76aaa5a76e1b931f3a</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>defaults</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>a1e2fde088b3a6086e6443d0355b065b2</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>finish</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>ab227a069237c36d0ae8ac583adf76f8c</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>allocate_work</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>a27515bddd2ea9d9abeebeda80bfe7de9</anchor>
      <arglist>(size_t nrow, size_t iworksize, size_t xworksize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_work</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>a075213d6cf3e0d969aec8ee34f96e58c</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>clear_flag</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>af7ac4ae3837b41a943b9143b6ca75c38</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>a2b7bacba0ac1e026da4e884ce04b0373</anchor>
      <arglist>(maxrank)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__common_8c.html</anchorfile>
      <anchor>a495c9ab7531b1b4ae832b8c3bd30e03c</anchor>
      <arglist>(dbound)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_complex.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__complex_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double CHOLMOD()</type>
      <name>hypot</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a77e8c7a167512c32ed8df15dd3d400d3</anchor>
      <arglist>(double x, double y)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>divcomplex</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a2169ad4efafe345d90724caacede733d</anchor>
      <arglist>(double ar, double ai, double br, double bi, double *cr, double *ci)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>change_complexity</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a5dce2c6a61e44c6f0b83f725c493a726</anchor>
      <arglist>(Int nz, int xtype_in, int xtype_out, int xtype1, int xtype2, void **XX, void **ZZ,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>sparse_xtype</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a834604b3b00c407fa7fbfb7c48b7845d</anchor>
      <arglist>(int to_xtype,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>triplet_xtype</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a20b153d72b18b0eafe7f362a4165168f</anchor>
      <arglist>(int to_xtype,   cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>dense_xtype</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a7ecbb7cdbbc062430ffc699002959dab</anchor>
      <arglist>(int to_xtype,   cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>factor_xtype</name>
      <anchorfile>amesos__cholmod__l__complex_8c.html</anchorfile>
      <anchor>a916736fcaa5a015e49ce03290b2a13d8</anchor>
      <arglist>(int to_xtype,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_copy.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__copy_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__copy_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *</type>
      <name>copy_sym_to_unsym</name>
      <anchorfile>amesos__cholmod__l__copy_8c.html</anchorfile>
      <anchor>a4ed647d3bf1d171ad753a39e49cd1427</anchor>
      <arglist>(cholmod_sparse *A, int mode,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>copy</name>
      <anchorfile>amesos__cholmod__l__copy_8c.html</anchorfile>
      <anchor>af3f70eab5d3f0bbc33ee6562d74e361d</anchor>
      <arglist>(cholmod_sparse *A, int stype, int mode,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_csymamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__l__csymamd_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__ccolamd_8h" name="amesos_ccolamd.h" local="yes" imported="no">amesos_ccolamd.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__csymamd_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>csymamd</name>
      <anchorfile>amesos__cholmod__l__csymamd_8c.html</anchorfile>
      <anchor>aea4952a4f6dc5815de5e68549847eb7d</anchor>
      <arglist>(cholmod_sparse *A,   Int *Cmember, Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_dense.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__dense_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__dense_8c" name="amesos_t_cholmod_dense.c" local="yes" imported="no">amesos_t_cholmod_dense.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PATTERN</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a96607e8d3432f4b72ad9efd97b657c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>allocate_dense</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a3ca3bb24cb7d52330cdc2c1e2af84adf</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t d, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>zeros</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a92ef37548476a3459aa4b58a279ed04e</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>ones</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a321049ea5c0b8dbdf8f7b8e20f45d353</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>eye</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a5b7653a37c49d963e3fecdeda15509af</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_dense</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>aae594957a111abfbdc504b2e96021a46</anchor>
      <arglist>(cholmod_dense **XHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>sparse_to_dense</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>afed5c24b14aa6c60c486584e01348b10</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>dense_to_sparse</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a75b835055450d67a89d23590d432f3f5</anchor>
      <arglist>(cholmod_dense *X, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>copy_dense2</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a1a43a9a90d6dc648c7bd501d8eb608ca</anchor>
      <arglist>(cholmod_dense *X,   cholmod_dense *Y,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>copy_dense</name>
      <anchorfile>amesos__cholmod__l__dense_8c.html</anchorfile>
      <anchor>a6c68e4ed613057c2f8a6b05671c2a25d</anchor>
      <arglist>(cholmod_dense *X,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_error.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__error_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__error_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>error</name>
      <anchorfile>amesos__cholmod__l__error_8c.html</anchorfile>
      <anchor>a76e6fa616eb79d3564387fecf9c331e7</anchor>
      <arglist>(int status, char *file, int line, char *message,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_etree.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__etree_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__etree_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_update_etree</name>
      <anchorfile>amesos__cholmod__l__etree_8c.html</anchorfile>
      <anchor>a1d0d730334f89eff91cc38ddd6a08396</anchor>
      <arglist>(Int k, Int i, Int Parent[], Int Ancestor[])</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>etree</name>
      <anchorfile>amesos__cholmod__l__etree_8c.html</anchorfile>
      <anchor>a076e2cf3fa18cd892a44122c06704d26</anchor>
      <arglist>(cholmod_sparse *A, Int *Parent,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__factor_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>allocate_factor</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>a93aab3bc752d530b9640298948a75e67</anchor>
      <arglist>(size_t n,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_factor</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>a2af86f09a7bf05f876932719b0876e3f</anchor>
      <arglist>(cholmod_factor **LHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_factor</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>a537af2bff720e6f9424e718a50425671</anchor>
      <arglist>(size_t nznew,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_column</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>afa4180185114a4556328dec6c58188ae</anchor>
      <arglist>(size_t j, size_t need,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>pack_factor</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>a9ce257d3c3de30a31b42a60b03598043</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>factor_to_sparse</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>a4498cccabcebae2aa2de81c0873fce08</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_factor *CHOLMOD()</type>
      <name>copy_factor</name>
      <anchorfile>amesos__cholmod__l__factor_8c.html</anchorfile>
      <anchor>aa1a75eee53b8822454fc8d382134ce4d</anchor>
      <arglist>(cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_memory.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__memory_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t CHOLMOD()</type>
      <name>add_size_t</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>a04d2a63c4d9190ec4ad1feb4df4d9de3</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t CHOLMOD()</type>
      <name>mult_size_t</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>a39ab72f5220d89eade087b13af7548a7</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>a3be1abb484fdd91785015e4428a6e4e1</anchor>
      <arglist>(malloc)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>a0a389c079552047992192260f98526e8</anchor>
      <arglist>(free)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>ab49cca90ee151423753cd328264c1001</anchor>
      <arglist>(calloc)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>a2e1b2d33ed31fe0625d4187f7306191e</anchor>
      <arglist>(realloc)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>realloc_multiple</name>
      <anchorfile>amesos__cholmod__l__memory_8c.html</anchorfile>
      <anchor>aa319baf351c024cb7cb92204a652e6a8</anchor>
      <arglist>(size_t nnew, int nint, int xtype,   void **I, void **J, void **X, void **Z, size_t *nold_p,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_metis.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__l__metis_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GUESS</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>a3ed321070ea171b4c12e09b8002fd66e</anchor>
      <arglist>(nz, n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>metis_memory_ok</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>a31100f51f7fe7ed503a60df5837e8b13</anchor>
      <arglist>(Int n, Int nz, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>a060aee60d1f0bd8e9632839d4fb509ce</anchor>
      <arglist>(metis_bisector)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>metis</name>
      <anchorfile>amesos__cholmod__l__metis_8c.html</anchorfile>
      <anchor>aeb97193f5ff608d8729814cca3995849</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int postorder,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_nesdis.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__l__nesdis_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Cmap_MARK</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>ae87c3a0bf28e50198eb26660c1a57c43</anchor>
      <arglist>(i)  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Cmap_MARKED</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>a68f4df43cd3da44cb291c09d1c2d01c0</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UF_long</type>
      <name>partition</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>aa767b59d92a917284c779e9b9ddafb17</anchor>
      <arglist>(Int csize, int compress,   Int Hash[],   cholmod_sparse *C, Int Cnw[],   Int Cew[],   Int Cmap[],   Int Part[], cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UF_long</type>
      <name>clear_flag</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>a9472799c1c23f80cb9fe851d4eeb0011</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>find_components</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>a0eaf7be5c561004360678ab15adb4830</anchor>
      <arglist>(cholmod_sparse *B, Int Map[], Int cn, Int cnode, Int Part[],   Int Bnz[], Int CParent[], Int Cstack[], Int *top,   Int Queue[], cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>a197be607182045697d82b14523cadef5</anchor>
      <arglist>(bisect)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>abe07bf59dc1624529162864d0d951dd2</anchor>
      <arglist>(nested_dissection)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>collapse_septree</name>
      <anchorfile>amesos__cholmod__l__nesdis_8c.html</anchorfile>
      <anchor>a9f72c0793acc1b0cfbc21a94ece6cd79</anchor>
      <arglist>(size_t n, size_t ncomponents, double nd_oksep, size_t nd_small,   Int *CParent, Int *Cmember,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__postorder_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__postorder_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_dfs</name>
      <anchorfile>amesos__cholmod__l__postorder_8c.html</anchorfile>
      <anchor>a8b9296f94a07cb172d9effe73a38eb65</anchor>
      <arglist>(Int p, Int k, Int Post[], Int Head[], Int Next[], Int Pstack[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__l__postorder_8c.html</anchorfile>
      <anchor>a163d7ce307fe48f214f98a691fd3dbc7</anchor>
      <arglist>(postorder)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_rowcolcounts.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__l__rowcolcounts_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__rowcolcounts_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>amesos_initialize_node</name>
      <anchorfile>amesos__cholmod__l__rowcolcounts_8c.html</anchorfile>
      <anchor>a8266901464e436c5514e598d77f247b0</anchor>
      <arglist>(Int k, Int Post[], Int Parent[], Int ColCount[], Int PrevNbr[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_process_edge</name>
      <anchorfile>amesos__cholmod__l__rowcolcounts_8c.html</anchorfile>
      <anchor>ac540c4292ad70347497c1bc610b1a1ca</anchor>
      <arglist>(Int p, Int u, Int k, Int First[], Int PrevNbr[], Int ColCount[], Int PrevLeaf[], Int RowCount[], Int SetParent[], Int Level[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_finalize_node</name>
      <anchorfile>amesos__cholmod__l__rowcolcounts_8c.html</anchorfile>
      <anchor>a7b10e2fbd22ed1c45961eec7307e67c7</anchor>
      <arglist>(Int p, Int Parent[], Int SetParent[])</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>rowcolcounts</name>
      <anchorfile>amesos__cholmod__l__rowcolcounts_8c.html</anchorfile>
      <anchor>a4d72d19376816d7c7a259266690ba054</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Parent, Int *Post,   Int *RowCount, Int *ColCount, Int *First, Int *Level,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_sparse.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__sparse_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>allocate_sparse</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>a27e103cbaa552da3fdf9f6921c95199d</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int sorted, int packed, int stype, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_sparse</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>a2d81c9effb9e4069a2f01f5b0e78337c</anchor>
      <arglist>(cholmod_sparse **AHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_sparse</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>ab3cf9729214b271a793ca112beb60548</anchor>
      <arglist>(size_t nznew,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>speye</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>aeaa04f11de5aa098ba6847a7e2a38bf8</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>spzeros</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>acff16ab1c71e6d6754ecc44ac0bedb07</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>nnz</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>af38ef69cca7e4bb8e1c5e16d3cb630f6</anchor>
      <arglist>(cholmod_sparse *A, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>copy_sparse</name>
      <anchorfile>amesos__cholmod__l__sparse_8c.html</anchorfile>
      <anchor>af8024e16e645a48dc3a22563330a057f</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_l_transpose.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__l__transpose_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__transpose_8c" name="amesos_t_cholmod_transpose.c" local="yes" imported="no">amesos_t_cholmod_transpose.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PATTERN</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>a96607e8d3432f4b72ad9efd97b657c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCONJUGATE</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ac139451c1870bdc1ea2a575077c9bf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCONJUGATE</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ac139451c1870bdc1ea2a575077c9bf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>transpose_unsym</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>accf8ab90977012282e23488154de7263</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm, Int *fset, size_t fsize,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>transpose_sym</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ab365e55215b902b61c5cfa36cbdfbfc9</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>transpose</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>a898c0abc33137734282947196132c7c1</anchor>
      <arglist>(cholmod_sparse *A, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>ptranspose</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>aadd74c5aed525a4264481eb6d1f632d9</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm, Int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>sort</name>
      <anchorfile>amesos__cholmod__l__transpose_8c.html</anchorfile>
      <anchor>ac11c22b01a843e660193704c11232b68</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_memory.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__memory_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>size_t CHOLMOD()</type>
      <name>add_size_t</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>a04d2a63c4d9190ec4ad1feb4df4d9de3</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t CHOLMOD()</type>
      <name>mult_size_t</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>a39ab72f5220d89eade087b13af7548a7</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>a3be1abb484fdd91785015e4428a6e4e1</anchor>
      <arglist>(malloc)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>a0a389c079552047992192260f98526e8</anchor>
      <arglist>(free)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>ab49cca90ee151423753cd328264c1001</anchor>
      <arglist>(calloc)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>a2e1b2d33ed31fe0625d4187f7306191e</anchor>
      <arglist>(realloc)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>realloc_multiple</name>
      <anchorfile>amesos__cholmod__memory_8c.html</anchorfile>
      <anchor>aa319baf351c024cb7cb92204a652e6a8</anchor>
      <arglist>(size_t nnew, int nint, int xtype,   void **I, void **J, void **X, void **Z, size_t *nold_p,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_metis.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__metis_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__cholmod__metis_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GUESS</name>
      <anchorfile>amesos__cholmod__metis_8c.html</anchorfile>
      <anchor>a3ed321070ea171b4c12e09b8002fd66e</anchor>
      <arglist>(nz, n)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>metis_memory_ok</name>
      <anchorfile>amesos__cholmod__metis_8c.html</anchorfile>
      <anchor>a31100f51f7fe7ed503a60df5837e8b13</anchor>
      <arglist>(Int n, Int nz, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__metis_8c.html</anchorfile>
      <anchor>a060aee60d1f0bd8e9632839d4fb509ce</anchor>
      <arglist>(metis_bisector)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>metis</name>
      <anchorfile>amesos__cholmod__metis_8c.html</anchorfile>
      <anchor>aeb97193f5ff608d8729814cca3995849</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int postorder,   Int *Perm,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_nesdis.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Partition/</path>
    <filename>amesos__cholmod__nesdis_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__partition_8h" name="amesos_cholmod_partition.h" local="yes" imported="no">amesos_cholmod_partition.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>Cmap_MARK</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>ae87c3a0bf28e50198eb26660c1a57c43</anchor>
      <arglist>(i)  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Cmap_MARKED</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>a68f4df43cd3da44cb291c09d1c2d01c0</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UF_long</type>
      <name>partition</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>aa767b59d92a917284c779e9b9ddafb17</anchor>
      <arglist>(Int csize, int compress,   Int Hash[],   cholmod_sparse *C, Int Cnw[],   Int Cew[],   Int Cmap[],   Int Part[], cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static UF_long</type>
      <name>clear_flag</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>a9472799c1c23f80cb9fe851d4eeb0011</anchor>
      <arglist>(cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>find_components</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>a0eaf7be5c561004360678ab15adb4830</anchor>
      <arglist>(cholmod_sparse *B, Int Map[], Int cn, Int cnode, Int Part[],   Int Bnz[], Int CParent[], Int Cstack[], Int *top,   Int Queue[], cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>a197be607182045697d82b14523cadef5</anchor>
      <arglist>(bisect)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>abe07bf59dc1624529162864d0d951dd2</anchor>
      <arglist>(nested_dissection)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>collapse_septree</name>
      <anchorfile>amesos__cholmod__nesdis_8c.html</anchorfile>
      <anchor>a9f72c0793acc1b0cfbc21a94ece6cd79</anchor>
      <arglist>(size_t n, size_t ncomponents, double nd_oksep, size_t nd_small,   Int *CParent, Int *Cmember,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_partition.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__partition_8h</filename>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_nested_dissection</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a8cf0c57b459b20ada712487f78af6fb8</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize,   int *Perm, int *CParent, int *Cmember,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_nested_dissection</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a6e72ff11ab447b7c550de02bcf8fe171</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, UF_long *, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_metis</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a7f8f63a10f35c0af92bc50cdc167e901</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int postorder,   int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_metis</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>af6d14f9f1ab21c347e1ad57bfdb59da9</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_ccolamd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>affc8ece4e58e5e4eedc0a14914158237</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int *Cmember,   int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_ccolamd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a6778229a8d3e928d21632a6ac4031429</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_csymamd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a516a01fbcbf26abc2f5fc21cab0e35c0</anchor>
      <arglist>(cholmod_sparse *A,   int *Cmember, int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_csymamd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a35ac4dd7cd9b53acaf9d1214ff32aacc</anchor>
      <arglist>(cholmod_sparse *, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_camd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a5674ef784d47abbefb03dfa30f09a26b</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize,   int *Cmember, int *Perm,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_cholmod_l_camd</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a3da2968d9ca1aede10beb94e421225ed</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_bisect</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a1555b0020eae9ea4d69bfa8b85e2165e</anchor>
      <arglist>(cholmod_sparse *A, int *fset, size_t fsize, int compress,   int *Partition,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_bisect</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>aeb41d8bab350d843f8ac8154fb9eeccf</anchor>
      <arglist>(cholmod_sparse *, UF_long *, size_t, int, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_metis_bisector</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>a942e20c863f9595f348d2771aa0d493d</anchor>
      <arglist>(cholmod_sparse *A, int *Anw, int *Aew,   int *Partition,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_metis_bisector</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>ac938b4f7fb00d43a38511fdae358b86c</anchor>
      <arglist>(cholmod_sparse *, UF_long *, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_collapse_septree</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>ab9507d427d0d0929d899450c7caaf760</anchor>
      <arglist>(size_t n, size_t ncomponents, double nd_oksep, size_t nd_small,   int *CParent, int *Cmember,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_cholmod_l_collapse_septree</name>
      <anchorfile>amesos__cholmod__partition_8h.html</anchorfile>
      <anchor>af06b6c15cb6b6f23b0d226ce1f4058f8</anchor>
      <arglist>(size_t, size_t, double, size_t, UF_long *, UF_long *, cholmod_common *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_postorder.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__postorder_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>amesos_dfs</name>
      <anchorfile>amesos__cholmod__postorder_8c.html</anchorfile>
      <anchor>a8b9296f94a07cb172d9effe73a38eb65</anchor>
      <arglist>(Int p, Int k, Int Post[], Int Head[], Int Next[], Int Pstack[])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__postorder_8c.html</anchorfile>
      <anchor>a163d7ce307fe48f214f98a691fd3dbc7</anchor>
      <arglist>(postorder)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_rcond.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__rcond_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>FIRST_LMINMAX</name>
      <anchorfile>amesos__cholmod__rcond_8c.html</anchorfile>
      <anchor>a7fa140b5f77e611984d8d98ac105f27e</anchor>
      <arglist>(Ljj, lmin, lmax)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LMINMAX</name>
      <anchorfile>amesos__cholmod__rcond_8c.html</anchorfile>
      <anchor>a2e2323e6750f4a68fcbeb10c1b1ffc22</anchor>
      <arglist>(Ljj, lmin, lmax)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__rcond_8c.html</anchorfile>
      <anchor>ab61a4d24026308309d8ab2b723b4cad6</anchor>
      <arglist>(rcond)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_resymbol.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__resymbol_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>resymbol</name>
      <anchorfile>amesos__cholmod__resymbol_8c.html</anchorfile>
      <anchor>a239c46df8663ef821165843678936e3b</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int pack,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>resymbol_noperm</name>
      <anchorfile>amesos__cholmod__resymbol_8c.html</anchorfile>
      <anchor>a66085f974ce52ca8b8a1b66ce42c298c</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, int pack,   cholmod_factor *L,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_rowcolcounts.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__rowcolcounts_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>amesos_initialize_node</name>
      <anchorfile>amesos__cholmod__rowcolcounts_8c.html</anchorfile>
      <anchor>a8266901464e436c5514e598d77f247b0</anchor>
      <arglist>(Int k, Int Post[], Int Parent[], Int ColCount[], Int PrevNbr[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_process_edge</name>
      <anchorfile>amesos__cholmod__rowcolcounts_8c.html</anchorfile>
      <anchor>ac540c4292ad70347497c1bc610b1a1ca</anchor>
      <arglist>(Int p, Int u, Int k, Int First[], Int PrevNbr[], Int ColCount[], Int PrevLeaf[], Int RowCount[], Int SetParent[], Int Level[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_finalize_node</name>
      <anchorfile>amesos__cholmod__rowcolcounts_8c.html</anchorfile>
      <anchor>a7b10e2fbd22ed1c45961eec7307e67c7</anchor>
      <arglist>(Int p, Int Parent[], Int SetParent[])</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>rowcolcounts</name>
      <anchorfile>amesos__cholmod__rowcolcounts_8c.html</anchorfile>
      <anchor>a4d72d19376816d7c7a259266690ba054</anchor>
      <arglist>(cholmod_sparse *A, Int *fset, size_t fsize, Int *Parent, Int *Post,   Int *RowCount, Int *ColCount, Int *First, Int *Level,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_rowfac.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__rowfac_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <includes id="amesos__t__cholmod__rowfac_8c" name="amesos_t_cholmod_rowfac.c" local="yes" imported="no">amesos_t_cholmod_rowfac.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>SUBTREE</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>ac930ed53d37bb10672dd10d886ccadbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MASK</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>ae7520c5477c11965aabeedc033c9862b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCATTER</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a2811f6c090b957083ccbb709a01e60b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARENT</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a91004761621b8ef1c66f3601988fde7c</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCATTER</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a2811f6c090b957083ccbb709a01e60b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARENT</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a91004761621b8ef1c66f3601988fde7c</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>row_subtree</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a0bf5ec1471d66448d6d8c2a7860e2d61</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, size_t krow, Int *Parent,   cholmod_sparse *R,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>row_lsubtree</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a3e69d0e600d1968627aa9689f69fdd5b</anchor>
      <arglist>(cholmod_sparse *A, Int *Fi, size_t fnz, size_t krow, cholmod_factor *L,   cholmod_sparse *R,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>rowfac</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a50e89514e94e02b3490a20858613f2c7</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, double beta[2], size_t kstart, size_t kend,   cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>rowfac_mask</name>
      <anchorfile>amesos__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a65282ccb70a06ccd745bc00a93663810</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, double beta[2], size_t kstart, size_t kend, Int *mask, Int *RLinkUp,   cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_solve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__solve_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <includes id="amesos__t__cholmod__solve_8c" name="amesos_t_cholmod_solve.c" local="yes" imported="no">amesos_t_cholmod_solve.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>P</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>a50b79268adef973d89e7c9822979b8c6</anchor>
      <arglist>(k)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_perm</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>ad60936a3e3ffe90caca353e214166a91</anchor>
      <arglist>(cholmod_dense *B, Int *Perm, Int k1, Int ncols,   cholmod_dense *Y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_iperm</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>a087956bcd4b9562e78573b1a6c145587</anchor>
      <arglist>(cholmod_dense *Y, Int *Perm, Int k1, Int ncols,   cholmod_dense *X)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_ptrans</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>aff7c8a0d362d5b1105f86a3aaace6a66</anchor>
      <arglist>(cholmod_dense *B, Int *Perm, Int k1, Int ncols,   cholmod_dense *Y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>amesos_iptrans</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>a960fcd6d4eec3d65056192a27a31f53e</anchor>
      <arglist>(cholmod_dense *Y, Int *Perm, Int k1, Int ncols,   cholmod_dense *X)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_dense *CHOLMOD()</type>
      <name>solve</name>
      <anchorfile>amesos__cholmod__solve_8c.html</anchorfile>
      <anchor>aa343b67d260b045c03bd8a2013594b07</anchor>
      <arglist>(int sys, cholmod_factor *L, cholmod_dense *B,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_sparse.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__sparse_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>allocate_sparse</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>a27e103cbaa552da3fdf9f6921c95199d</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int sorted, int packed, int stype, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_sparse</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>a2d81c9effb9e4069a2f01f5b0e78337c</anchor>
      <arglist>(cholmod_sparse **AHandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_sparse</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>ab3cf9729214b271a793ca112beb60548</anchor>
      <arglist>(size_t nznew,   cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>speye</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>aeaa04f11de5aa098ba6847a7e2a38bf8</anchor>
      <arglist>(size_t nrow, size_t ncol, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>spzeros</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>acff16ab1c71e6d6754ecc44ac0bedb07</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long CHOLMOD()</type>
      <name>nnz</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>af38ef69cca7e4bb8e1c5e16d3cb630f6</anchor>
      <arglist>(cholmod_sparse *A, cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>copy_sparse</name>
      <anchorfile>amesos__cholmod__sparse_8c.html</anchorfile>
      <anchor>af8024e16e645a48dc3a22563330a057f</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_spsolve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__cholmod__spsolve_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__cholesky_8h" name="amesos_cholmod_cholesky.h" local="yes" imported="no">amesos_cholmod_cholesky.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>EXPAND_AS_NEEDED</name>
      <anchorfile>amesos__cholmod__spsolve_8c.html</anchorfile>
      <anchor>a1cd3c39134ca5d5f9aa6bb77deeb04a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *</type>
      <name>CHOLMOD</name>
      <anchorfile>amesos__cholmod__spsolve_8c.html</anchorfile>
      <anchor>a62ccb673f6e345865600097f83605eb0</anchor>
      <arglist>(spsolve)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_template.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Include/</path>
    <filename>amesos__cholmod__template_8h</filename>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_transpose.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__transpose_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__transpose_8c" name="amesos_t_cholmod_transpose.c" local="yes" imported="no">amesos_t_cholmod_transpose.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>PATTERN</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>a96607e8d3432f4b72ad9efd97b657c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCONJUGATE</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ac139451c1870bdc1ea2a575077c9bf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NCONJUGATE</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ac139451c1870bdc1ea2a575077c9bf7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>transpose_unsym</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>accf8ab90977012282e23488154de7263</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm, Int *fset, size_t fsize,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>transpose_sym</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ab365e55215b902b61c5cfa36cbdfbfc9</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>transpose</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>a898c0abc33137734282947196132c7c1</anchor>
      <arglist>(cholmod_sparse *A, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>ptranspose</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>aadd74c5aed525a4264481eb6d1f632d9</anchor>
      <arglist>(cholmod_sparse *A, int values, Int *Perm, Int *fset, size_t fsize,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>sort</name>
      <anchorfile>amesos__cholmod__transpose_8c.html</anchorfile>
      <anchor>ac11c22b01a843e660193704c11232b68</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_cholmod_triplet.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__cholmod__triplet_8c</filename>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__cholmod__core_8h" name="amesos_cholmod_core.h" local="yes" imported="no">amesos_cholmod_core.h</includes>
    <includes id="amesos__t__cholmod__triplet_8c" name="amesos_t_cholmod_triplet.c" local="yes" imported="no">amesos_t_cholmod_triplet.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>PATTERN</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a96607e8d3432f4b72ad9efd97b657c89</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a4b654506f18b8bfd61ad2a29a7e38c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COMPLEX</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a930a566fa45fefdd326401c2efb53164</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ZOMPLEX</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>ac1d2bc3785e916b159fc061c87a3c9a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *CHOLMOD()</type>
      <name>allocate_triplet</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a238c7c9d8235118a99fd5b3d4e2b9f2d</anchor>
      <arglist>(size_t nrow, size_t ncol, size_t nzmax, int stype, int xtype,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>free_triplet</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a8cefa360259dc12be7420b0846229c5b</anchor>
      <arglist>(cholmod_triplet **THandle,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int CHOLMOD()</type>
      <name>reallocate_triplet</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>ad96505401a922706c254e5114e08fe21</anchor>
      <arglist>(size_t nznew,   cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_sparse *CHOLMOD()</type>
      <name>triplet_to_sparse</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a013313e94fffb88df6be842238234de8</anchor>
      <arglist>(cholmod_triplet *T, size_t nzmax,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *CHOLMOD()</type>
      <name>sparse_to_triplet</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a50e6bef9af5389e58baadd6058e3236e</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>cholmod_triplet *CHOLMOD()</type>
      <name>copy_triplet</name>
      <anchorfile>amesos__cholmod__triplet_8c.html</anchorfile>
      <anchor>a17732625c8bef22c0d91465611046bb0</anchor>
      <arglist>(cholmod_triplet *T,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_colamd.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/COLAMD/Source/</path>
    <filename>amesos__colamd_8c</filename>
    <includes id="amesos__colamd_8h" name="amesos_colamd.h" local="yes" imported="no">amesos_colamd.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <class kind="struct">Colamd_Col_struct</class>
    <class kind="struct">Colamd_Row_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_recommended</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a8d02d81ec81ef8f3ca7c29a88c5de43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_set_defaults</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ac0608b2f0e423be47bab16f4a5728193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_MAIN</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>acbde304cf5a0fb2a28ffc8cb6de81fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMAMD_MAIN</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a21dc014376c7c25a2c50eb8c8c956cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_report</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a1ed2fe598b65b580efabefbefa9f148a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMAMD_report</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a10cb85dd732d0899972b30b83b419b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ad17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DENSE_DEGREE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a64a06cacfdac263aeecfc3cadff002b7</anchor>
      <arglist>(alpha, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONES_COMPLEMENT</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>af4201cc2809d450d2484680ee1b958ca</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIVE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ad8beef706da0344be19d59438fcdab6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a3c8793c7acb4598d2ebcd8288f29ee69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_PRINCIPAL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ac0adce1e7d70351cef4752f3373709af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_NON_PRINCIPAL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a0f66923672bcc495333995f7d238945f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_DEAD</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ae200d2ac8149305712af7230f9ee24d5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_MARKED_DEAD</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a0d68b03acc587c11fe6dffbfede78c2d</anchor>
      <arglist>(row_mark)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_ALIVE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>abc775359cfa45ffaf6250522c521110d</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aa08664bd5b8133f28dbeedc9a030fc86</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_ALIVE</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a50f9ca65904b13f345862cb46d08d84b</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD_PRINCIPAL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a003c0e2dae54bcb7c680333304dd4dcb</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_ROW</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>adde21248544152df48ab70b6da1b38b5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_PRINCIPAL_COL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a7882929a7898e09a3de9e7676ae1aa29</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_NON_PRINCIPAL_COL</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a0458a358e752473d86e6f21a56b44a26</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INDEX</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aa5fad23b2a5eed790e6661e896a506b7</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG0</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a144524f0a43ebe1a97d576a76f6557a0</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG1</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a5083dbf79682be78336cc6b458c32ab4</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG2</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a65bd10ffc88aa9edca29d4f6ae0da2df</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG3</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a86ce320fe5d3f3088d89fdf451943008</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG4</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a0ff047166d36dd8103bd12a4fbc7f7f9</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_C</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ad4914b5263fbb43322933df25876848f</anchor>
      <arglist>(n_col, ok)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_R</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a8af24e475d8e7158e9291e95d70f5e0a</anchor>
      <arglist>(n_row, ok)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Colamd_Col_struct</type>
      <name>Colamd_Col</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a059db10cdebbb878b50bfcd2e023315a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Colamd_Row_struct</type>
      <name>Colamd_Row</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a8a1ceeb79ebba705abb1d27469f4a358</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>init_rows_cols</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a6ce67cb890d78a96a816aedbf07c4464</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int p[], Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>init_scoring</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aff0ac0cb007d3ebc5abd7dd29a213388</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int head[], double knobs[COLAMD_KNOBS], Int *p_n_row2, Int *p_n_col2, Int *p_max_deg)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>find_ordering</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aa2c4a7c0c548f280d17849ef541af200</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int head[], Int n_col2, Int max_deg, Int pfree, Int aggressive)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>order_children</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a1597380f429739b4917d5f65f0438d69</anchor>
      <arglist>(Int n_col, Colamd_Col Col[], Int p[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>detect_super_cols</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a01af621c1624004dfcfb9ec6bbafd754</anchor>
      <arglist>(Colamd_Col Col[], Int A[], Int head[], Int row_start, Int row_length)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>garbage_collection</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ab3de87271f85eff787104f3fe6bda915</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int *pfree)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>clear_mark</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a73761d13f47935936a30e4534bd0b2d1</anchor>
      <arglist>(Int tag_mark, Int max_mark, Int n_row, Colamd_Row Row[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>print_report</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a08f646ff5666336db68cd803605f649d</anchor>
      <arglist>(char *method, Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_add</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>aad3dda97381807f40d5de2cd9c76cdec</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_mult</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a3c5479ead565e62b314dca6ecee35acf</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC size_t</type>
      <name>COLAMD_recommended</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>af15b207d39038ee50826486796987fc7</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>COLAMD_set_defaults</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>ae296448645eace2840032cfad4f96098</anchor>
      <arglist>(double knobs[COLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>SYMAMD_MAIN</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a30f5fb4d2d956de8952973bcb90ef28d</anchor>
      <arglist>(Int n, Int A[], Int p[], Int perm[], double knobs[COLAMD_KNOBS], Int stats[COLAMD_STATS], void *(*allocate)(size_t, size_t),   void(*release)(void *)   )</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>COLAMD_MAIN</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a1025434cd41be3cab467798091aa87b6</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[COLAMD_KNOBS], Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>COLAMD_report</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a32498b38cec2f3f3dda91aff3f0a3524</anchor>
      <arglist>(Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>SYMAMD_report</name>
      <anchorfile>amesos__colamd_8c.html</anchorfile>
      <anchor>a411c4f318bcc825d9c7dff709845210e</anchor>
      <arglist>(Int stats[COLAMD_STATS])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_colamd.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/COLAMD/Include/</path>
    <filename>amesos__colamd_8h</filename>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_DATE</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ac87804c5dd769a212a332ffeb4a14988</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_VERSION_CODE</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a47be13aba5957922dc3b883db5e086ee</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_MAIN_VERSION</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a31f22020fc26a6c191e204530902cd0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_SUB_VERSION</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ab132f7ff1883380799be8c7f116300bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_SUBSUB_VERSION</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a6a9a31be424f59760090435f62531efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_VERSION</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a6275225cab5b0da013d35230c0fc1a7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_KNOBS</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ae92bb10d09f7cd004f07d1baddf90548</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_STATS</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a411703fc0a994b83ec0e00df1abfc0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_DENSE_ROW</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a45a417439d08823fa620ca00d834dd61</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_DENSE_COL</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>af92de54efdec91d7ab64e7bec07eb12c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_AGGRESSIVE</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a45a97d07f6592058ac4a2bb22d299c64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_DEFRAG_COUNT</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ababfabfa19364ec563aa9c15bcc9714e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_STATUS</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a6a4201ce55dfa3a6375b90097e8c747e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_INFO1</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a569d56a773011e0b4e465b3f5830e80b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_INFO2</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a2161fd78bbd688f943250d1d7583284b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_INFO3</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a15d83814c573d742764ff83e9d1d67fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_OK</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>aa754fd30d924c5c8d2d402fa0a482d72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_OK_BUT_JUMBLED</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ac0d7f3882e6e9e39527aa2195dd23789</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_A_not_present</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a2347fb9e509c8bf9b97a50f96dea281c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_p_not_present</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a51d3f9714a4cb80c0f54dea5d0c5f95f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_nrow_negative</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a8e848cfde5cdf42fcb316695305f8002</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_ncol_negative</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a2feedddbe535286cbea9eca9fca91f45</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_nnz_negative</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a7147ea7a9d673f17ef856e9914f90c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_p0_nonzero</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a58b5d911cc825b4334ade136bad3afd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_A_too_small</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a323108d44db4186fad5a2066139f70b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_col_length_negative</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a3b6df4a489ed0c7de8ad12251cdac5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_row_index_out_of_bounds</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a0559e0ff07deab1841e7aaee8cde51e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_out_of_memory</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a703f11265b521c931cdd44709d141fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_ERROR_internal_error</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ae97b9ba07b455e4ce07c53a4d71c1169</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXTERN</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a77366c1bd428629dc898e188bfd182a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_colamd_recommended</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a5f66a013f10d3b413b11e984091a1280</anchor>
      <arglist>(int nnz, int n_row, int n_col)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>amesos_colamd_l_recommended</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ac24261b745ce97ae86925653e33d528e</anchor>
      <arglist>(UF_long nnz, UF_long n_row, UF_long n_col)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_colamd_set_defaults</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ad9cf64e40b4f1b2a1b1473195fc3cf23</anchor>
      <arglist>(double knobs[COLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_colamd_l_set_defaults</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a94caf67232ed42fedf7be9d5443259de</anchor>
      <arglist>(double knobs[COLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_colamd</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>afb71f8e64f91a1fd473acdc092b7e1d8</anchor>
      <arglist>(int n_row, int n_col, int Alen, int A[], int p[], double knobs[COLAMD_KNOBS], int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_colamd_l</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>af1cfda0f5522d4e2fb925ab645b1df4a</anchor>
      <arglist>(UF_long n_row, UF_long n_col, UF_long Alen, UF_long A[], UF_long p[], double knobs[COLAMD_KNOBS], UF_long stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_symamd</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ac9b3264071ebd1e4ef6248f0ea05ac4b</anchor>
      <arglist>(int n, int A[], int p[], int perm[], double knobs[COLAMD_KNOBS], int stats[COLAMD_STATS], void *(*allocate)(size_t, size_t),   void(*release)(void *)   )</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_symamd_l</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>abedf2cf60e026ca0a3f57eaf376c082e</anchor>
      <arglist>(UF_long n, UF_long A[], UF_long p[], UF_long perm[], double knobs[COLAMD_KNOBS], UF_long stats[COLAMD_STATS], void *(*allocate)(size_t, size_t),   void(*release)(void *)   )</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_colamd_report</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a8bda70ed3f9cf867a688abdf053f8ffe</anchor>
      <arglist>(int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_colamd_l_report</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a2dca0f3faa4dedab0f43f8b8afc7a44e</anchor>
      <arglist>(UF_long stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_symamd_report</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>ac06614e83780553a704582ef1bf35379</anchor>
      <arglist>(int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_symamd_l_report</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>a6dcf34bf058aa816efd77c2717e2849a</anchor>
      <arglist>(UF_long stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="variable">
      <type>EXTERN int(*</type>
      <name>amesos_colamd_printf</name>
      <anchorfile>amesos__colamd_8h.html</anchorfile>
      <anchor>af791253b4b41930e5ceccb915f64ef7d</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_colamd_global.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/COLAMD/Source/</path>
    <filename>amesos__colamd__global_8c</filename>
    <member kind="variable">
      <type>int(*</type>
      <name>amesos_colamd_printf</name>
      <anchorfile>amesos__colamd__global_8c.html</anchorfile>
      <anchor>ae478708db02e8132f53f3c8ed09d39ef</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_colamd_l.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/COLAMD/Source/</path>
    <filename>amesos__colamd__l_8c</filename>
    <includes id="amesos__colamd_8h" name="amesos_colamd.h" local="yes" imported="no">amesos_colamd.h</includes>
    <includes id="amesos__UFconfig_8h" name="amesos_UFconfig.h" local="yes" imported="no">amesos_UFconfig.h</includes>
    <class kind="struct">Colamd_Col_struct</class>
    <class kind="struct">Colamd_Row_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NULL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a070d2ce7b6bb7e5c05602aa8c308d0c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ID</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a77ceac8d6af195fe72f95f6afd87c45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_recommended</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a8d02d81ec81ef8f3ca7c29a88c5de43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_set_defaults</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ac0608b2f0e423be47bab16f4a5728193</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_MAIN</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>acbde304cf5a0fb2a28ffc8cb6de81fcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMAMD_MAIN</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a21dc014376c7c25a2c50eb8c8c956cb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_report</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a1ed2fe598b65b580efabefbefa9f148a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMAMD_report</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a10cb85dd732d0899972b30b83b419b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PUBLIC</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ad17d551e31d1828c68acf40684849b7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRIVATE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a5e151c615eda34903514212f05a5ccf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DENSE_DEGREE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a64a06cacfdac263aeecfc3cadff002b7</anchor>
      <arglist>(alpha, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ONES_COMPLEMENT</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>af4201cc2809d450d2484680ee1b958ca</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ALIVE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ad8beef706da0344be19d59438fcdab6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a3c8793c7acb4598d2ebcd8288f29ee69</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_PRINCIPAL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ac0adce1e7d70351cef4752f3373709af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEAD_NON_PRINCIPAL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a0f66923672bcc495333995f7d238945f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_DEAD</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ae200d2ac8149305712af7230f9ee24d5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_MARKED_DEAD</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a0d68b03acc587c11fe6dffbfede78c2d</anchor>
      <arglist>(row_mark)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROW_IS_ALIVE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>abc775359cfa45ffaf6250522c521110d</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aa08664bd5b8133f28dbeedc9a030fc86</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_ALIVE</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a50f9ca65904b13f345862cb46d08d84b</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COL_IS_DEAD_PRINCIPAL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a003c0e2dae54bcb7c680333304dd4dcb</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_ROW</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>adde21248544152df48ab70b6da1b38b5</anchor>
      <arglist>(r)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_PRINCIPAL_COL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a7882929a7898e09a3de9e7676ae1aa29</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KILL_NON_PRINCIPAL_COL</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a0458a358e752473d86e6f21a56b44a26</anchor>
      <arglist>(c)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INDEX</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aa5fad23b2a5eed790e6661e896a506b7</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ae89677f15a992e290c8b355ba0bd9d0c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG0</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a144524f0a43ebe1a97d576a76f6557a0</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG1</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a5083dbf79682be78336cc6b458c32ab4</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG2</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a65bd10ffc88aa9edca29d4f6ae0da2df</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG3</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a86ce320fe5d3f3088d89fdf451943008</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG4</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a0ff047166d36dd8103bd12a4fbc7f7f9</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_C</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ad4914b5263fbb43322933df25876848f</anchor>
      <arglist>(n_col, ok)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_R</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a8af24e475d8e7158e9291e95d70f5e0a</anchor>
      <arglist>(n_row, ok)</arglist>
    </member>
    <member kind="typedef">
      <type>struct Colamd_Col_struct</type>
      <name>Colamd_Col</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a059db10cdebbb878b50bfcd2e023315a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct Colamd_Row_struct</type>
      <name>Colamd_Row</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a8a1ceeb79ebba705abb1d27469f4a358</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>init_rows_cols</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a6ce67cb890d78a96a816aedbf07c4464</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int p[], Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>init_scoring</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aff0ac0cb007d3ebc5abd7dd29a213388</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int head[], double knobs[COLAMD_KNOBS], Int *p_n_row2, Int *p_n_col2, Int *p_max_deg)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>find_ordering</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aa2c4a7c0c548f280d17849ef541af200</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int head[], Int n_col2, Int max_deg, Int pfree, Int aggressive)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>order_children</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a1597380f429739b4917d5f65f0438d69</anchor>
      <arglist>(Int n_col, Colamd_Col Col[], Int p[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>detect_super_cols</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a01af621c1624004dfcfb9ec6bbafd754</anchor>
      <arglist>(Colamd_Col Col[], Int A[], Int head[], Int row_start, Int row_length)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>garbage_collection</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ab3de87271f85eff787104f3fe6bda915</anchor>
      <arglist>(Int n_row, Int n_col, Colamd_Row Row[], Colamd_Col Col[], Int A[], Int *pfree)</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE Int</type>
      <name>clear_mark</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a73761d13f47935936a30e4534bd0b2d1</anchor>
      <arglist>(Int tag_mark, Int max_mark, Int n_row, Colamd_Row Row[])</arglist>
    </member>
    <member kind="function">
      <type>PRIVATE void</type>
      <name>print_report</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a08f646ff5666336db68cd803605f649d</anchor>
      <arglist>(char *method, Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_add</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>aad3dda97381807f40d5de2cd9c76cdec</anchor>
      <arglist>(size_t a, size_t b, int *ok)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_t</type>
      <name>t_mult</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a3c5479ead565e62b314dca6ecee35acf</anchor>
      <arglist>(size_t a, size_t k, int *ok)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC size_t</type>
      <name>COLAMD_recommended</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>af15b207d39038ee50826486796987fc7</anchor>
      <arglist>(Int nnz, Int n_row, Int n_col)</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>COLAMD_set_defaults</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>ae296448645eace2840032cfad4f96098</anchor>
      <arglist>(double knobs[COLAMD_KNOBS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>SYMAMD_MAIN</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a30f5fb4d2d956de8952973bcb90ef28d</anchor>
      <arglist>(Int n, Int A[], Int p[], Int perm[], double knobs[COLAMD_KNOBS], Int stats[COLAMD_STATS], void *(*allocate)(size_t, size_t),   void(*release)(void *)   )</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC Int</type>
      <name>COLAMD_MAIN</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a1025434cd41be3cab467798091aa87b6</anchor>
      <arglist>(Int n_row, Int n_col, Int Alen, Int A[], Int p[], double knobs[COLAMD_KNOBS], Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>COLAMD_report</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a32498b38cec2f3f3dda91aff3f0a3524</anchor>
      <arglist>(Int stats[COLAMD_STATS])</arglist>
    </member>
    <member kind="function">
      <type>PUBLIC void</type>
      <name>SYMAMD_report</name>
      <anchorfile>amesos__colamd__l_8c.html</anchorfile>
      <anchor>a411c4f318bcc825d9c7dff709845210e</anchor>
      <arglist>(Int stats[COLAMD_STATS])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Component.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Component_8h</filename>
    <class kind="class">Amesos_Component</class>
  </compound>
  <compound kind="file">
    <name>Amesos_ComponentBaseSolver.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__ComponentBaseSolver_8h</filename>
    <class kind="class">Amesos_ComponentBaseSolver</class>
  </compound>
  <compound kind="file">
    <name>Amesos_ConfigDefs.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__ConfigDefs_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>AMESOS_PRINT</name>
      <anchorfile>Amesos__ConfigDefs_8h.html</anchorfile>
      <anchor>ab2e8aa21f57d0615d47336ae60a23c92</anchor>
      <arglist>(variable)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMESOS_CHK_ERR</name>
      <anchorfile>Amesos__ConfigDefs_8h.html</anchorfile>
      <anchor>a52755d518b517df2bfd94fa9b296afb7</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMESOS_CHK_ERRV</name>
      <anchorfile>Amesos__ConfigDefs_8h.html</anchorfile>
      <anchor>a46a2a56164defba41d1a97670645de59</anchor>
      <arglist>(amesos_err)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMESOS_RETURN</name>
      <anchorfile>Amesos__ConfigDefs_8h.html</anchorfile>
      <anchor>adf8eb8f3f56f2dcc4bae4b32383a9502</anchor>
      <arglist>(amesos_err)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Control.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Control_8cpp</filename>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Control.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Control_8h</filename>
    <class kind="class">Amesos_Control</class>
  </compound>
  <compound kind="file">
    <name>Amesos_CSparse.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__CSparse_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Amesos_CSparse.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__CSparse_8h</filename>
  </compound>
  <compound kind="file">
    <name>Amesos_Dscpack.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Dscpack_8cpp</filename>
    <includes id="Amesos__Dscpack_8h" name="Amesos_Dscpack.h" local="yes" imported="no">Amesos_Dscpack.h</includes>
    <class kind="class">Amesos_Dscpack_Pimpl</class>
    <member kind="define">
      <type>#define</type>
      <name>DBL_R_NUM</name>
      <anchorfile>Amesos__Dscpack_8cpp.html</anchorfile>
      <anchor>a7195f4746ee10a2964437019dafd2b55</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Dscpack.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Dscpack_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Dscpack</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Klu.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Klu_8cpp</filename>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
    <includes id="Amesos__Support_8h" name="Amesos_Support.h" local="yes" imported="no">Amesos_Support.h</includes>
    <includes id="amesos__klu__decl_8h" name="amesos_klu_decl.h" local="yes" imported="no">amesos_klu_decl.h</includes>
    <class kind="class">Amesos_Klu_Pimpl</class>
    <member kind="define">
      <type>#define</type>
      <name>CHRIS</name>
      <anchorfile>Amesos__Klu_8cpp.html</anchorfile>
      <anchor>a8bb970ff121d10ffca75cc6c462d961a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Klu.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Klu_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Klu</class>
  </compound>
  <compound kind="file">
    <name>amesos_klu_analyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__analyze_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>analyze_worker</name>
      <anchorfile>amesos__klu__analyze_8c.html</anchorfile>
      <anchor>a17aed506534ff13b9709dbe98bc90400</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Int nblocks, Int Pbtf[], Int Qbtf[], Int R[], Int ordering,   Int P[], Int Q[], double Lnz[],   Int Pblk[], Int Cp[], Int Ci[], Int Cilen, Int Pinv[],   KLU_symbolic *Symbolic, KLU_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KLU_symbolic *</type>
      <name>order_and_analyze</name>
      <anchorfile>amesos__klu__analyze_8c.html</anchorfile>
      <anchor>a71a1ce5ff7a0d984fd3e91598a6c6422</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[],   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_analyze</name>
      <anchorfile>amesos__klu__analyze_8c.html</anchorfile>
      <anchor>ae38fa9172cf7d2a20cfa32af6b55427c</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_analyze_given.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__analyze__given_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_alloc_symbolic</name>
      <anchorfile>amesos__klu__analyze__given_8c.html</anchorfile>
      <anchor>a8c25e3ad8a7fd8741d73b5050d1e0bad</anchor>
      <arglist>(Int n, Int *Ap, Int *Ai, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_analyze_given</name>
      <anchorfile>amesos__klu__analyze__given_8c.html</anchorfile>
      <anchor>a4af6537b59076078384db2dfa6a00991</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Int Puser[], Int Quser[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_decl.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Include/</path>
    <filename>amesos__klu__decl_8h</filename>
    <includes id="amesos__amd_8h" name="amesos_amd.h" local="yes" imported="no">amesos_amd.h</includes>
    <includes id="amesos__colamd_8h" name="amesos_colamd.h" local="yes" imported="no">amesos_colamd.h</includes>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <class kind="struct">klu_symbolic</class>
    <class kind="struct">klu_l_symbolic</class>
    <class kind="struct">klu_numeric</class>
    <class kind="struct">klu_l_numeric</class>
    <class kind="struct">klu_common_struct</class>
    <class kind="struct">klu_l_common_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>KLU_OK</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a527f5517d9c2e0dabce2cfa9f7ec3d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_SINGULAR</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ad80c3ec7a6c10b17b989736c2e4cd8d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_OUT_OF_MEMORY</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aedbd4058959ad85b22934b78a44aa766</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_INVALID</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a7e0c0bbb92a6a2391e1d806d0995870b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_TOO_LARGE</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a00ed44665444d086f28f10c8288b1d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_DATE</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a67b914a930a4016688a7394d5242ed7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_VERSION_CODE</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a3ec9bf69013dafcee93811daadf9f3d6</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_MAIN_VERSION</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ab525e6d6cb6c67b45f25c860c72c8bdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_SUB_VERSION</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a7e087c6229cad4e5f4fa4dafe71e4cc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_SUBSUB_VERSION</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4ca6eaf9ebda76ec8ab1b7ed733c5e57</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_VERSION</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a936cb14c3a5eb474d095f2808b256dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct klu_common_struct</type>
      <name>klu_common</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a2c78e751d6f5fb86e97648ee9192026b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct klu_l_common_struct</type>
      <name>klu_l_common</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ad529ff140935d3382bb461f9e4be07a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_defaults</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aeabd2cd4b1e246211342d89a729035d6</anchor>
      <arglist>(klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_defaults</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a9be7ae54856ec95fe70962f6332cb566</anchor>
      <arglist>(klu_l_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_symbolic *</type>
      <name>amesos_klu_analyze</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aa0e3dd75d0d42c5b8cb5639a9ad23e86</anchor>
      <arglist>(int n, int Ap[], int Ai[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_l_symbolic *</type>
      <name>amesos_klu_l_analyze</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a401b88f00e577c8656d2202355c3b15a</anchor>
      <arglist>(UF_long, UF_long *, UF_long *, klu_l_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_symbolic *</type>
      <name>amesos_klu_analyze_given</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a73bf062bbdc3d1ed32bb820c64fb63a6</anchor>
      <arglist>(int n, int Ap[], int Ai[], int P[], int Q[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_l_symbolic *</type>
      <name>amesos_klu_l_analyze_given</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a2a0efa1b25be65ba85f6fea12fadae90</anchor>
      <arglist>(UF_long, UF_long *, UF_long *, UF_long *, UF_long *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>klu_numeric *</type>
      <name>amesos_klu_factor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4a879e9d89372b36e34bb8a61b22b084</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_numeric *</type>
      <name>amesos_klu_z_factor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a01755e5dd7c45ebb4add55934a8137d0</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>klu_l_numeric *</type>
      <name>amesos_klu_l_factor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a809afb0dfaeec4fb74aef632f1a8eac6</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>klu_l_numeric *</type>
      <name>amesos_klu_zl_factor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a9470d3c356241e77529d542005b254bb</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_solve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ade6dcbb2c9d607c290db9fb1dbebf42d</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, int ldim, int nrhs,   double B[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_solve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a3d29e64d4b79a5e48e63b105579ff48b</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, int ldim, int nrhs,   double B[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_solve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a8708019ff2de2136ee7e89924108d642</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, UF_long, UF_long, double *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_solve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a451716c2cbccd4fad6d891fa524ce1a6</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, UF_long, UF_long, double *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_tsolve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ad16159ea5e036c81bee02d0e30dc1f50</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, int ldim, int nrhs,   double B[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_tsolve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>afa0e52d4ac1223a48b17cd3e20b62b31</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, int ldim, int nrhs,   double B[], int conj_solve, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_tsolve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a9295b73c7fb3c337fb55e8254197a527</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, UF_long, UF_long, double *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_tsolve</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ae7921843df3c74eac5f308ece3228486</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, UF_long, UF_long, double *, UF_long, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_refactor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4ffd1ebb58a4a8cb8ef1445bc77e72ea</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_refactor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aa014ac900d1c7770e1bb12b642c881da</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_refactor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a5c473c4810605ebf069802066d110d0a</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_refactor</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ab337035e11db5669c037315430c48b82</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_free_symbolic</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>afa5561617ba4cb217e44aedca551854b</anchor>
      <arglist>(klu_symbolic **Symbolic, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_free_symbolic</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a27c4fcbb4a235ad3bcc3565e0fae27de</anchor>
      <arglist>(klu_l_symbolic **, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_free_numeric</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ac4287c95f03633e7de3bf53883070ae0</anchor>
      <arglist>(klu_numeric **Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_free_numeric</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>acba0ed9177e3ab63b6b24e5a0640aa8f</anchor>
      <arglist>(klu_numeric **Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_free_numeric</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a0ce05a1f8e16dc37f67c7ab3ecde40a2</anchor>
      <arglist>(klu_l_numeric **, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_free_numeric</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a845d20feaac8e2781fa8532bbf01f1c3</anchor>
      <arglist>(klu_l_numeric **, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_sort</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4c779b300b1ba541ec40c0ad57553a67</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_sort</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a01192363c764bb958a7c5622534f6696</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_sort</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4e10b311e45371eaff1e7d5e00efa434</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_sort</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a6bb28da6c5f4faf2022ef8ea2e84e72b</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_flops</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a46191c679ec458bf21fdd1e235bd8ffb</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_flops</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a1259e96cd56803101a16d5da10f614bd</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_flops</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a1327186c58b84617f92928bba67dcd71</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_flops</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ac121a9dd0926a6dd912a8481c0d85254</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_rgrowth</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a4c1111852253df14a5552765519a7b3b</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_rgrowth</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ae5b5cff2fc3e07f1e9ad0bf110795fe4</anchor>
      <arglist>(int Ap[], int Ai[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_rgrowth</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a0f492d89642e52bb1f69edbc0d069afa</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_rgrowth</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a0c1bfb6be6abeeb65c959e1a03032e7f</anchor>
      <arglist>(UF_long *, UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_condest</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a578594a6d0b9b30a43da95689fcbd650</anchor>
      <arglist>(int Ap[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_condest</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a87c13a09209e2ef6d895c3f4d734ea87</anchor>
      <arglist>(int Ap[], double Ax[], klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_condest</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>abf1aa1bdc46a4426b9a644944833678c</anchor>
      <arglist>(UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_condest</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aebc5d2d6f6bb85babc3ea5069a2b998e</anchor>
      <arglist>(UF_long *, double *, klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_rcond</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a282ee71b7b98f7ef0bc736b19f68cc2e</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_rcond</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ad9c64012332f4d2f94f227b494632938</anchor>
      <arglist>(klu_symbolic *Symbolic, klu_numeric *Numeric, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_rcond</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>aaa2a7dd70988d798c6d02a1631add429</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_rcond</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a80f601e40771edb3758ee1ee15ea3739</anchor>
      <arglist>(klu_l_symbolic *, klu_l_numeric *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_scale</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a491f310408d5ca3e24eebd42d29393a4</anchor>
      <arglist>(int scale, int n, int Ap[], int Ai[], double Ax[], double Rs[], int W[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_scale</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ac2b26e918483c769bbfab9973c2524a6</anchor>
      <arglist>(int scale, int n, int Ap[], int Ai[], double Ax[], double Rs[], int W[], klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_scale</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>add08a2241056a2cf97ba6aa6de16142b</anchor>
      <arglist>(UF_long, UF_long, UF_long *, UF_long *, double *, double *, UF_long *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_scale</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a7a3b71ebc91d7e025564bd2fd685987e</anchor>
      <arglist>(UF_long, UF_long, UF_long *, UF_long *, double *, double *, UF_long *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_extract</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a7373eb4119480c616c9f5e4e1f35016f</anchor>
      <arglist>(klu_numeric *Numeric, klu_symbolic *Symbolic,   int *Lp, int *Li, double *Lx,   int *Up, int *Ui, double *Ux,   int *Fp, int *Fi, double *Fx,   int *P,   int *Q,   double *Rs,   int *R, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>amesos_klu_z_extract</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a9ffd637bd7501a74e400d89893047eb8</anchor>
      <arglist>(klu_numeric *Numeric, klu_symbolic *Symbolic,   int *Lp, int *Li, double *Lx, double *Lz,   int *Up, int *Ui, double *Ux, double *Uz,   int *Fp, int *Fi, double *Fx, double *Fz,   int *P,   int *Q,   double *Rs,   int *R, klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_l_extract</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ad30284902d69faeca5178f69917a1dc8</anchor>
      <arglist>(klu_l_numeric *, klu_l_symbolic *, UF_long *, UF_long *, double *, UF_long *, UF_long *, double *, UF_long *, UF_long *, double *, UF_long *, UF_long *, double *, UF_long *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>UF_long</type>
      <name>amesos_klu_zl_extract</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a520c95329796935538a48858ca6a580a</anchor>
      <arglist>(klu_l_numeric *, klu_l_symbolic *, UF_long *, UF_long *, double *, double *, UF_long *, UF_long *, double *, double *, UF_long *, UF_long *, double *, double *, UF_long *, UF_long *, double *, UF_long *, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_malloc</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a415c9267451e715aa2a96a026a2e2684</anchor>
      <arglist>(size_t n, size_t size,   klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_free</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a088baf577651032362ec848e191f40a2</anchor>
      <arglist>(void *p, size_t n, size_t size,   klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_realloc</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ac857dd7ebbe1d17d31086773163c0416</anchor>
      <arglist>(size_t nnew, size_t nold, size_t size,   void *p,   klu_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_l_malloc</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>ae1f0630cff99737ad19eb93d66999b23</anchor>
      <arglist>(size_t, size_t, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_l_free</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a1a2af4b8ff455241ec4e4543701ac0f0</anchor>
      <arglist>(void *, size_t, size_t, klu_l_common *)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>amesos_klu_l_realloc</name>
      <anchorfile>amesos__klu__decl_8h.html</anchorfile>
      <anchor>a6a011c18599955fc1e314a1896ca9b48</anchor>
      <arglist>(size_t, size_t, size_t, void *, klu_l_common *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_defaults.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__defaults_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_defaults</name>
      <anchorfile>amesos__klu__defaults_8c.html</anchorfile>
      <anchor>a962e9af4f58b321dd70e27df76559c3b</anchor>
      <arglist>(KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_diagnostics.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__diagnostics_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_rgrowth</name>
      <anchorfile>amesos__klu__diagnostics_8c.html</anchorfile>
      <anchor>a6c89bc7042c1b466a662c27f2793dbe6</anchor>
      <arglist>(Int *Ap, Int *Ai, double *Ax, KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_condest</name>
      <anchorfile>amesos__klu__diagnostics_8c.html</anchorfile>
      <anchor>ad90a8252510762db37787d2b79b97f4c</anchor>
      <arglist>(Int Ap[], double Ax[], KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_flops</name>
      <anchorfile>amesos__klu__diagnostics_8c.html</anchorfile>
      <anchor>aaf6f3e7150d238e8fbafc5f308b41069</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_rcond</name>
      <anchorfile>amesos__klu__diagnostics_8c.html</anchorfile>
      <anchor>a9917c39adad51784e82279ce55ef47b0</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_dump.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__dump_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_valid</name>
      <anchorfile>amesos__klu__dump_8c.html</anchorfile>
      <anchor>a084a1a2615d65a5cefce13fa65ba79c8</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_valid_LU</name>
      <anchorfile>amesos__klu__dump_8c.html</anchorfile>
      <anchor>a5cccab1272bc45f134b891d9fac14dfb</anchor>
      <arglist>(Int n, Int flag_test_start_ptr, Int Xip[], Int Xlen[], Unit LU[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_extract.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__extract_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_extract</name>
      <anchorfile>amesos__klu__extract_8c.html</anchorfile>
      <anchor>adf08691f76b32aeff82b02e59f7694d5</anchor>
      <arglist>(KLU_numeric *Numeric, KLU_symbolic *Symbolic,   Int *Lp, Int *Li, double *Lx,   Int *Up, Int *Ui, double *Ux,   Int *Fp, Int *Fi, double *Fx,   Int *P,   Int *Q,   double *Rs,   Int *R, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__factor_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>factor2</name>
      <anchorfile>amesos__klu__factor_8c.html</anchorfile>
      <anchor>a93726274e5f0a9fc93f0985a623cbff9</anchor>
      <arglist>(Int Ap[], Int Ai[], Entry Ax[], KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_numeric *</type>
      <name>KLU_factor</name>
      <anchorfile>amesos__klu__factor_8c.html</anchorfile>
      <anchor>a9dbeff45589e218e51fcfbbb00ccbe9e</anchor>
      <arglist>(Int Ap[], Int Ai[], double Ax[], KLU_symbolic *Symbolic, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_free_numeric.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__free__numeric_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_free_numeric</name>
      <anchorfile>amesos__klu__free__numeric_8c.html</anchorfile>
      <anchor>a2ac63c6d61dba02436d4aba590d66465</anchor>
      <arglist>(KLU_numeric **NumericHandle, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_free_symbolic.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__free__symbolic_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_free_symbolic</name>
      <anchorfile>amesos__klu__free__symbolic_8c.html</anchorfile>
      <anchor>a3c5cb6c820fb48102587f0f3761f1472</anchor>
      <arglist>(KLU_symbolic **SymbolicHandle, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_impl.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__impl_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel_factor</name>
      <anchorfile>amesos__klu__impl_8c.html</anchorfile>
      <anchor>a748a6f9d892b0f5a5a9431f978389e39</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], double Lsize,   Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int P[], Int *lnz, Int *unz,   Entry *X, Int *Work,   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_lsolve</name>
      <anchorfile>amesos__klu__impl_8c.html</anchorfile>
      <anchor>a97df439c277c3ed7111b8ab8f12cdbe2</anchor>
      <arglist>(Int n, Int Lip[], Int Llen[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_usolve</name>
      <anchorfile>amesos__klu__impl_8c.html</anchorfile>
      <anchor>ae6d9716ab6f6207d2f552e0448be031e</anchor>
      <arglist>(Int n, Int Uip[], Int Ulen[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_ltsolve</name>
      <anchorfile>amesos__klu__impl_8c.html</anchorfile>
      <anchor>ad2f153dcf55e81c14fc2dcfa6cc04c7f</anchor>
      <arglist>(Int n, Int Lip[], Int Llen[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_utsolve</name>
      <anchorfile>amesos__klu__impl_8c.html</anchorfile>
      <anchor>a7c1fb5c1523b2a3a3e0566db1f93c0ab</anchor>
      <arglist>(Int n, Int Uip[], Int Ulen[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_internal.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Include/</path>
    <filename>amesos__klu__internal_8h</filename>
    <includes id="amesos__klu__decl_8h" name="amesos_klu_decl.h" local="yes" imported="no">amesos_klu_decl.h</includes>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__klu__version_8h" name="amesos_klu_version.h" local="yes" imported="no">amesos_klu_version.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a5d5f62b566bd3a77d449fccb7b1a9656</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_NAN</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>adb7dbc8bafe96b1424a96e72de5935d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INT_OVERFLOW</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a05236034e369b70c2a62f11cfbbedeab</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINTF</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>ac37a18b85d5dd782f46858266be25995</anchor>
      <arglist>(s)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRUE</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>aa8cecfc5c5c054d2875c03e77b7be15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FALSE</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>aa93f0eb578d23995850d61f7d61c55c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MAX</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>afa99ec4acc4ecb2dc3c2d05da15d0e3f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIN</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a3acffbd305ee72dcd4593c0d8af64a4f</anchor>
      <arglist>(a, b)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EMPTY</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a2b7cf2a3641be7b89138615764d60ba3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FLIP</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a9b17a06cbb01e7b7a165c13e5640fd46</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNFLIP</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a58d80900906670c5df232e3c288dbec9</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>abfc3936ea0e5617b6772996fb9a5d11c</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], size_t lusize,   Int Pinv[], Int P[], Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int *lnz, Int *unz,   Entry X[],   Int Stack[], Int Flag[], Int adj_pos[],   Int Lpend[],   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel_factor</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a748a6f9d892b0f5a5a9431f978389e39</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], double Lsize,   Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int P[], Int *lnz, Int *unz,   Entry *X, Int *Work,   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_lsolve</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a8d25de28520d1be6a9d4966703c7da5a</anchor>
      <arglist>(Int n, Int Lp[], Int Li[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_ltsolve</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>aa378cbf884a10d954ea44e21d3b04b5d</anchor>
      <arglist>(Int n, Int Lp[], Int Li[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_usolve</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a86faf3cebf41cd54be0644ff24c58e7b</anchor>
      <arglist>(Int n, Int Up[], Int Ui[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_utsolve</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>aea9c892a585701e17997f415dd5e7039</anchor>
      <arglist>(Int n, Int Up[], Int Ui[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_valid</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a084a1a2615d65a5cefce13fa65ba79c8</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_valid_LU</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a5cccab1272bc45f134b891d9fac14dfb</anchor>
      <arglist>(Int n, Int flag_test_start_ptr, Int Xip[], Int Xlen[], Unit LU[])</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_add_size_t</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a17fc467c78eabae8eebbaee6c9bc75fe</anchor>
      <arglist>(size_t a, size_t b, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_mult_size_t</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>ab1f3dbfc2509e57ebc7fbcbdd6d5ad25</anchor>
      <arglist>(size_t a, size_t k, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_alloc_symbolic</name>
      <anchorfile>amesos__klu__internal_8h.html</anchorfile>
      <anchor>a8c25e3ad8a7fd8741d73b5050d1e0bad</anchor>
      <arglist>(Int n, Int *Ap, Int *Ai, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_kernel.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__kernel_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>dfs</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a389c875472ac69da8d671cf8ba626457</anchor>
      <arglist>(Int j, Int k, Int Pinv[], Int Llen[], Int Lip[],   Int Stack[],   Int Flag[], Int Lpend[], Int top, Unit LU[], Int *Lik, Int *plength, Int Ap_pos[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>lsolve_symbolic</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a061b809539f1e3d9781e00c165732369</anchor>
      <arglist>(Int n, Int k, Int Ap[], Int Ai[], Int Q[], Int Pinv[],   Int Stack[],   Int Flag[],   Int Lpend[], Int Ap_pos[], Unit LU[], Int lup, Int Llen[], Int Lip[],   Int k1, Int PSinv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>construct_column</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a72c0f04399710db9c43c7b1cf617233d</anchor>
      <arglist>(Int k, Int Ap[], Int Ai[], Entry Ax[], Int Q[],   Entry X[],   Int k1, Int PSinv[], double Rs[], Int scale,   Int Offp[], Int Offi[], Entry Offx[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lsolve_numeric</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a1bd42a7795c9c69d36d57e4ecc958382</anchor>
      <arglist>(Int Pinv[], Unit *LU, Int Stack[], Int Lip[], Int top, Int n, Int Llen[],   Entry X[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>lpivot</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a4a1230b644d5947dfc6bfd2622192fcc</anchor>
      <arglist>(Int diagrow, Int *p_pivrow, Entry *p_pivot, double *p_abs_pivot, double tol, Entry X[], Unit *LU, Int Lip[], Int Llen[], Int k, Int n, Int Pinv[], Int *p_firstrow, KLU_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>prune</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a7e036a011cb383498f37d39b6fadb631</anchor>
      <arglist>(Int Lpend[],   Int Pinv[], Int k, Int pivrow,   Unit *LU,   Int Uip[], Int Lip[], Int Ulen[], Int Llen[])</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel</name>
      <anchorfile>amesos__klu__kernel_8c.html</anchorfile>
      <anchor>a52f92ea312cd723150e6ec1772ca7fb9</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], size_t lusize,   Int Pinv[], Int P[], Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int *lnz, Int *unz,   Entry X[],   Int Stack[], Int Flag[], Int Ap_pos[],   Int Lpend[],   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel_factor</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>a748a6f9d892b0f5a5a9431f978389e39</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], double Lsize,   Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int P[], Int *lnz, Int *unz,   Entry *X, Int *Work,   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_lsolve</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>a97df439c277c3ed7111b8ab8f12cdbe2</anchor>
      <arglist>(Int n, Int Lip[], Int Llen[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_usolve</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>ae6d9716ab6f6207d2f552e0448be031e</anchor>
      <arglist>(Int n, Int Uip[], Int Ulen[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_ltsolve</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>ad2f153dcf55e81c14fc2dcfa6cc04c7f</anchor>
      <arglist>(Int n, Int Lip[], Int Llen[], Unit LU[], Int nrhs, Entry X[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>KLU_utsolve</name>
      <anchorfile>amesos__klu__l_8c.html</anchorfile>
      <anchor>a7c1fb5c1523b2a3a3e0566db1f93c0ab</anchor>
      <arglist>(Int n, Int Uip[], Int Ulen[], Unit LU[], Entry Udiag[], Int nrhs, Entry X[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_analyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__analyze_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__analyze_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>analyze_worker</name>
      <anchorfile>amesos__klu__l__analyze_8c.html</anchorfile>
      <anchor>a17aed506534ff13b9709dbe98bc90400</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Int nblocks, Int Pbtf[], Int Qbtf[], Int R[], Int ordering,   Int P[], Int Q[], double Lnz[],   Int Pblk[], Int Cp[], Int Ci[], Int Cilen, Int Pinv[],   KLU_symbolic *Symbolic, KLU_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KLU_symbolic *</type>
      <name>order_and_analyze</name>
      <anchorfile>amesos__klu__l__analyze_8c.html</anchorfile>
      <anchor>a71a1ce5ff7a0d984fd3e91598a6c6422</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[],   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_analyze</name>
      <anchorfile>amesos__klu__l__analyze_8c.html</anchorfile>
      <anchor>ae38fa9172cf7d2a20cfa32af6b55427c</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_analyze_given.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__analyze__given_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__analyze__given_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_alloc_symbolic</name>
      <anchorfile>amesos__klu__l__analyze__given_8c.html</anchorfile>
      <anchor>a8c25e3ad8a7fd8741d73b5050d1e0bad</anchor>
      <arglist>(Int n, Int *Ap, Int *Ai, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_symbolic *</type>
      <name>KLU_analyze_given</name>
      <anchorfile>amesos__klu__l__analyze__given_8c.html</anchorfile>
      <anchor>a4af6537b59076078384db2dfa6a00991</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Int Puser[], Int Quser[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_defaults.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__defaults_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__defaults_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_defaults</name>
      <anchorfile>amesos__klu__l__defaults_8c.html</anchorfile>
      <anchor>a962e9af4f58b321dd70e27df76559c3b</anchor>
      <arglist>(KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__factor_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__factor_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>factor2</name>
      <anchorfile>amesos__klu__l__factor_8c.html</anchorfile>
      <anchor>a93726274e5f0a9fc93f0985a623cbff9</anchor>
      <arglist>(Int Ap[], Int Ai[], Entry Ax[], KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>KLU_numeric *</type>
      <name>KLU_factor</name>
      <anchorfile>amesos__klu__l__factor_8c.html</anchorfile>
      <anchor>a9dbeff45589e218e51fcfbbb00ccbe9e</anchor>
      <arglist>(Int Ap[], Int Ai[], double Ax[], KLU_symbolic *Symbolic, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_free_numeric.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__free__numeric_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__free__numeric_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_free_numeric</name>
      <anchorfile>amesos__klu__l__free__numeric_8c.html</anchorfile>
      <anchor>a2ac63c6d61dba02436d4aba590d66465</anchor>
      <arglist>(KLU_numeric **NumericHandle, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_free_symbolic.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__free__symbolic_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__free__symbolic_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_free_symbolic</name>
      <anchorfile>amesos__klu__l__free__symbolic_8c.html</anchorfile>
      <anchor>a3c5cb6c820fb48102587f0f3761f1472</anchor>
      <arglist>(KLU_symbolic **SymbolicHandle, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_kernel.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__kernel_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>dfs</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a389c875472ac69da8d671cf8ba626457</anchor>
      <arglist>(Int j, Int k, Int Pinv[], Int Llen[], Int Lip[],   Int Stack[],   Int Flag[], Int Lpend[], Int top, Unit LU[], Int *Lik, Int *plength, Int Ap_pos[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>lsolve_symbolic</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a061b809539f1e3d9781e00c165732369</anchor>
      <arglist>(Int n, Int k, Int Ap[], Int Ai[], Int Q[], Int Pinv[],   Int Stack[],   Int Flag[],   Int Lpend[], Int Ap_pos[], Unit LU[], Int lup, Int Llen[], Int Lip[],   Int k1, Int PSinv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>construct_column</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a72c0f04399710db9c43c7b1cf617233d</anchor>
      <arglist>(Int k, Int Ap[], Int Ai[], Entry Ax[], Int Q[],   Entry X[],   Int k1, Int PSinv[], double Rs[], Int scale,   Int Offp[], Int Offi[], Entry Offx[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lsolve_numeric</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a1bd42a7795c9c69d36d57e4ecc958382</anchor>
      <arglist>(Int Pinv[], Unit *LU, Int Stack[], Int Lip[], Int top, Int n, Int Llen[],   Entry X[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>lpivot</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a4a1230b644d5947dfc6bfd2622192fcc</anchor>
      <arglist>(Int diagrow, Int *p_pivrow, Entry *p_pivot, double *p_abs_pivot, double tol, Entry X[], Unit *LU, Int Lip[], Int Llen[], Int k, Int n, Int Pinv[], Int *p_firstrow, KLU_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>prune</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a7e036a011cb383498f37d39b6fadb631</anchor>
      <arglist>(Int Lpend[],   Int Pinv[], Int k, Int pivrow,   Unit *LU,   Int Uip[], Int Lip[], Int Ulen[], Int Llen[])</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_kernel</name>
      <anchorfile>amesos__klu__l__kernel_8c.html</anchorfile>
      <anchor>a52f92ea312cd723150e6ec1772ca7fb9</anchor>
      <arglist>(Int n, Int Ap[], Int Ai[], Entry Ax[], Int Q[], size_t lusize,   Int Pinv[], Int P[], Unit **p_LU, Entry Udiag[], Int Llen[], Int Ulen[], Int Lip[], Int Uip[], Int *lnz, Int *unz,   Entry X[],   Int Stack[], Int Flag[], Int Ap_pos[],   Int Lpend[],   Int k1, Int PSinv[], double Rs[],   Int Offp[], Int Offi[], Entry Offx[], KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_memory.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__memory_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_add_size_t</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>a17fc467c78eabae8eebbaee6c9bc75fe</anchor>
      <arglist>(size_t a, size_t b, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_mult_size_t</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>ab1f3dbfc2509e57ebc7fbcbdd6d5ad25</anchor>
      <arglist>(size_t a, size_t k, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_malloc</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>a44a02794b49ee3ff0298b975ee0b22b3</anchor>
      <arglist>(size_t n, size_t size,   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_free</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>ad09554696f323059a7ca14146490442e</anchor>
      <arglist>(void *p,   size_t n, size_t size,   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_realloc</name>
      <anchorfile>amesos__klu__l__memory_8c.html</anchorfile>
      <anchor>ae398eba407abd91678d4a1dc8cc42779</anchor>
      <arglist>(size_t nnew, size_t nold, size_t size,   void *p,   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_scale.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__scale_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__scale_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_scale</name>
      <anchorfile>amesos__klu__l__scale_8c.html</anchorfile>
      <anchor>a384c854a72c15f980a41584ac76adae3</anchor>
      <arglist>(Int scale, Int n, Int Ap[], Int Ai[], double Ax[], double Rs[],   Int W[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_l_solve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__l__solve_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__klu__l__solve_8c.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_solve</name>
      <anchorfile>amesos__klu__l__solve_8c.html</anchorfile>
      <anchor>a6d7dfffb07e740d24c1c352586949bca</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, Int d, Int nrhs,   double B[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_memory.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__memory_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_add_size_t</name>
      <anchorfile>amesos__klu__memory_8c.html</anchorfile>
      <anchor>a17fc467c78eabae8eebbaee6c9bc75fe</anchor>
      <arglist>(size_t a, size_t b, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>KLU_mult_size_t</name>
      <anchorfile>amesos__klu__memory_8c.html</anchorfile>
      <anchor>ab1f3dbfc2509e57ebc7fbcbdd6d5ad25</anchor>
      <arglist>(size_t a, size_t k, Int *ok)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_malloc</name>
      <anchorfile>amesos__klu__memory_8c.html</anchorfile>
      <anchor>a44a02794b49ee3ff0298b975ee0b22b3</anchor>
      <arglist>(size_t n, size_t size,   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_free</name>
      <anchorfile>amesos__klu__memory_8c.html</anchorfile>
      <anchor>ad09554696f323059a7ca14146490442e</anchor>
      <arglist>(void *p,   size_t n, size_t size,   KLU_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>KLU_realloc</name>
      <anchorfile>amesos__klu__memory_8c.html</anchorfile>
      <anchor>ae398eba407abd91678d4a1dc8cc42779</anchor>
      <arglist>(size_t nnew, size_t nold, size_t size,   void *p,   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_refactor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__refactor_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_refactor</name>
      <anchorfile>amesos__klu__refactor_8c.html</anchorfile>
      <anchor>ab64aca2b8fabbfdd8588b94392e68d2f</anchor>
      <arglist>(Int Ap[], Int Ai[], double Ax[], KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_scale.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__scale_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_scale</name>
      <anchorfile>amesos__klu__scale_8c.html</anchorfile>
      <anchor>a384c854a72c15f980a41584ac76adae3</anchor>
      <arglist>(Int scale, Int n, Int Ap[], Int Ai[], double Ax[], double Rs[],   Int W[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_solve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__solve_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_solve</name>
      <anchorfile>amesos__klu__solve_8c.html</anchorfile>
      <anchor>a6d7dfffb07e740d24c1c352586949bca</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, Int d, Int nrhs,   double B[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_sort.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__sort_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>sort</name>
      <anchorfile>amesos__klu__sort_8c.html</anchorfile>
      <anchor>a285ecf817322bd16a333ebfdd330149d</anchor>
      <arglist>(Int n, Int *Xip, Int *Xlen, Unit *LU, Int *Tp, Int *Tj, Entry *Tx, Int *W)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>KLU_sort</name>
      <anchorfile>amesos__klu__sort_8c.html</anchorfile>
      <anchor>a39188f26829b744452792431e75d99e4</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_tsolve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Source/</path>
    <filename>amesos__klu__tsolve_8c</filename>
    <includes id="amesos__klu__internal_8h" name="amesos_klu_internal.h" local="yes" imported="no">amesos_klu_internal.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>KLU_tsolve</name>
      <anchorfile>amesos__klu__tsolve_8c.html</anchorfile>
      <anchor>a4608e0357ac6d48d21b00e5e36ce7dae</anchor>
      <arglist>(KLU_symbolic *Symbolic, KLU_numeric *Numeric, Int d, Int nrhs,   double B[],   KLU_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_klu_version.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/KLU/Include/</path>
    <filename>amesos__klu__version_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>Int</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a91adff1610bdf681555a8f2e330dc963</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_id</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a0b0a54b619c7ea4c090b655efdcf0325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Int_MAX</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a487e0193fe74cf79f80a11b180afbd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NPRINT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>afae91e38b7bd1aef5a5fff6912a35244</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BYTES</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a2644cd36aedff2a6306f135c7736fb82</anchor>
      <arglist>(type, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CEILING</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a746ac38d850f4fa0e2556a9d22480871</anchor>
      <arglist>(b, u)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNITS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a6460f72cb9176e49aff2edbdf4f407f5</anchor>
      <arglist>(type, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DUNITS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab88af16e2ed6c900cbc9331a75b60504</anchor>
      <arglist>(type, n)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET_I_POINTER</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a32dad47a3cccfa79784bf2da3b02d3c0</anchor>
      <arglist>(LU, Xip, Xi, k)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET_X_POINTER</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aade1825e10fc4f6c89350073aec88af6</anchor>
      <arglist>(LU, Xip, Xlen, Xx, k)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET_POINTER</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>addd1aab587d190a33ce6e279e43781fc</anchor>
      <arglist>(LU, Xip, Xlen, Xi, Xx, k, xlen)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_scale</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a57b1b427223e321b997fec3578e8e6ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_solve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>afce2142ce025930977e8fffdae67a3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_tsolve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>af0f956540e9e528a31b73045b30af1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_free_numeric</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a8680ddca83b556c198e426ec5ca4fe19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_factor</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a514a34809f653c77ab02cf9dd8db1473</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_refactor</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a19d130e147e4d7b37b87feb8d21f7e92</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_kernel_factor</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a65108d1cdb785c0ecb87c92b404ecab7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_lsolve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>af14ed852c216f5295b44e1ae99f08a64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_ltsolve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a9f9e9d3fba7f7e6f7f1b2b3252a83276</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_usolve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a18797487d506eea7895689858e511ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_utsolve</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aede0285c6c07011e94ff1515ee0ec255</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_kernel</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1c43df487760a27313459f5c9e9efca9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_valid</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aab692c6de49e59cac67fc6aef2a142c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_valid_LU</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a82c3fb12a5a44fbaf9930c524e03e67a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_sort</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab65557392887a049759443fc671f4c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_rgrowth</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a3bd093f5750a208759a56043c98ff26a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_rcond</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a7434969f2ecddab9470281623490db3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_extract</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a28e21d9fdb8ae160bd684a414a141098</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_condest</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a508baf288967d43cc200393f85e56103</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_flops</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1fdc19d5ed18e75669647139c83f333f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_analyze</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a71717127fc6f7d9a4ef7eb4349682884</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_analyze_given</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a951ec1bf40f7264f609a7c28f78f3385</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_alloc_symbolic</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a71706bd16c44ab31c4869ab35356391c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_free_symbolic</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ae6e9fb7c6765842822227a60a40a6e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_defaults</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1f29ecc2db39e1af36d17c748c77f8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_free</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a69cf3c2980efc608aa519f9ca11a67d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_malloc</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab782f1905e5be1b9c45483c62cad54aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_realloc</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a5a1e540b02759c0feb9f3b3d5c759513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_add_size_t</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a4bae7b72d49a432a8249ebee0d8ecc78</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_mult_size_t</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ac069f688f3bd4638cda9de5aed579dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_symbolic</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a00a58fd519eb464a100b298272c7d9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_numeric</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a801e85eb24fea0d196425457449f3970</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_common</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ae53b0e5af68290a38f3b1f23240d142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_order</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a6417e44c5a364637aa7f53fa1eb95504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_strongcomp</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab67d38ec24e5e6c382f6a157958bca51</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AMD_order</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ad0a7a2b7611f040ab0fe5b2d21315038</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a34d531f9bbc9fc6e65ebc74717eac3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COLAMD_recommended</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a8d02d81ec81ef8f3ca7c29a88c5de43f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_NAN</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>adb7dbc8bafe96b1424a96e72de5935d3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_ZERO</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>acc165e9a67cf57060b222bc6c3070f96</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_NONZERO</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a00fe288ceec056bb8bf9ac67821dc2fd</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_IS_LTZERO</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab5c37deb3a4256db9d1a9a7ebc52fbf3</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALAR_ABS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aed50d41bbbe28aea37a55ac1fa765307</anchor>
      <arglist>(x)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT_SCALAR</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aad981358bb74030ded167b293ce4edb1</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Entry</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab2d475769c9022dddb2dfe0f6ff2b5e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPLIT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ad7f5a92e56dea1998d61407c0caa1aa8</anchor>
      <arglist>(s)     	    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>REAL</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ab4cf1794c894b42673dfd0c81eedc5cd</anchor>
      <arglist>(c)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IMAG</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a612b590bf162e120972ea80a28799a21</anchor>
      <arglist>(c)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSIGN</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1429550465e5fb277bff85faca02018b</anchor>
      <arglist>(c, s1, s2, p, split)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLEAR</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a469a76dd36e794f3c3e733f7bf9ead3a</anchor>
      <arglist>(c)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLEAR_AND_INCREMENT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a5439595cf3b6626a711fc93ceef0de2e</anchor>
      <arglist>(p)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NAN</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a0a9146173568016dc82ee03f2bfe1370</anchor>
      <arglist>(a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_ZERO</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a950d4578ded9bf4715aa9db41b485a13</anchor>
      <arglist>(a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IS_NONZERO</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1166f2f6dc71f0516e92ee82145d4d6b</anchor>
      <arglist>(a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALE_DIV</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a2eb0eb234b02040401baaf68d7bf64d9</anchor>
      <arglist>(c, s)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALE_DIV_ASSIGN</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a3592c99fdb678e390c21116335860233</anchor>
      <arglist>(a, c, s)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALE</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a6da787528b5c634d1b4341bb64b9a47f</anchor>
      <arglist>(c, s)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSEMBLE</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aac3b55ea2892ea4f2a72a3d3c73749ff</anchor>
      <arglist>(c, a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSEMBLE_AND_INCREMENT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>abdbc3ff5e38ea3118f9be5ea5f76dd0d</anchor>
      <arglist>(c, p)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECREMENT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ac601c60e0a75a68e4a52cb53f6818a4d</anchor>
      <arglist>(c, a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a6e31ce85e7eed374faaa4da9e4e64d60</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT_CONJ</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a9d8c1f2c6d3769b4d8c033d6a68a8fd3</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT_SUB</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aee597f4e5fba379cd0d971541e477b71</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT_SUB_CONJ</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>adda9bfba8ad5b96ab5b33a97f5ef00b1</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ad0440363af8e5a06504fb0ee278c7d13</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RECIPROCAL</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aad8aebe588346b860c21e09c7d058281</anchor>
      <arglist>(c)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV_CONJ</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a37d97a06c5000677910384894dcd8f63</anchor>
      <arglist>(c, a, b)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>APPROX_ABS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ae4d80510757088f22eda629fa405c4a8</anchor>
      <arglist>(s, a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a4c5ae284d48b21c474dd2b1e8635f424</anchor>
      <arglist>(s, a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PRINT_ENTRY</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a594f91d5e69f15ba639fd4c781a360e0</anchor>
      <arglist>(a)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONJ</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>af3d51595cc6a3bf632f3d98120e2c2ed</anchor>
      <arglist>(a, x)    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULTSUB_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a7092f5c168dece818eacf57a5f7a79d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DIV_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>ae256cd172c651e2424abf44cea93eff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ABS_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a950331eded592e6579107502836fcd62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSEMBLE_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a75af904690fff8aec5b77709e34ee253</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DECREMENT_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>aa2a820901f36325d4bda71946973d6c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MULT_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a6fe042af6733bcdda0157bc082e41824</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALE_FLOPS</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a1654395c3708119ff44a85dc965f33f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Unit</name>
      <anchorfile>amesos__klu__version_8h.html</anchorfile>
      <anchor>a82910b351795af5d1a055e260190cf11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Lapack.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Lapack_8cpp</filename>
    <includes id="Amesos__Lapack_8h" name="Amesos_Lapack.h" local="yes" imported="no">Amesos_Lapack.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Lapack.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Lapack_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Lapack</class>
  </compound>
  <compound kind="file">
    <name>Amesos_MC64.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__MC64_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__MC64_8h" name="Amesos_MC64.h" local="yes" imported="no">Amesos_MC64.h</includes>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>Amesos__MC64_8cpp.html</anchorfile>
      <anchor>a62e63c17433261c68a3579011bf7eaee</anchor>
      <arglist>(mc64id, MC64ID)(int *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>F77_FUNC</name>
      <anchorfile>Amesos__MC64_8cpp.html</anchorfile>
      <anchor>a8270f8fdb1ecf8ba61f07d70aa5fa8c6</anchor>
      <arglist>(mc64ad, MC64AD)(int *</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_MC64.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__MC64_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Merikos.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Merikos_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <class kind="class">Amesos_Merikos</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Mumps.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Mumps_8cpp</filename>
    <includes id="Amesos__Mumps_8h" name="Amesos_Mumps.h" local="yes" imported="no">Amesos_Mumps.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>ICNTL</name>
      <anchorfile>Amesos__Mumps_8cpp.html</anchorfile>
      <anchor>a5d7097d1f3146fd372cf14b5a2776b96</anchor>
      <arglist>(I)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CNTL</name>
      <anchorfile>Amesos__Mumps_8cpp.html</anchorfile>
      <anchor>a614355a1e2ac0c60bc27193b8a443215</anchor>
      <arglist>(I)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFOG</name>
      <anchorfile>Amesos__Mumps_8cpp.html</anchorfile>
      <anchor>ac418a962f30c9b898af90f4f5934a2bb</anchor>
      <arglist>(I)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INFO</name>
      <anchorfile>Amesos__Mumps_8cpp.html</anchorfile>
      <anchor>a2337326f2906fe94ff3db53045cc6ff1</anchor>
      <arglist>(I)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RINFOG</name>
      <anchorfile>Amesos__Mumps_8cpp.html</anchorfile>
      <anchor>ac53bbce8258998c9a08dfaa21876f42f</anchor>
      <arglist>(I)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Mumps.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Mumps_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Mumps</class>
  </compound>
  <compound kind="file">
    <name>Amesos_NoCopiable.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__NoCopiable_8h</filename>
    <class kind="class">Amesos_NoCopiable</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Paraklete.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Paraklete_8cpp</filename>
    <includes id="Amesos__Paraklete_8h" name="Amesos_Paraklete.h" local="yes" imported="no">Amesos_Paraklete.h</includes>
    <includes id="Amesos__Support_8h" name="Amesos_Support.h" local="yes" imported="no">Amesos_Support.h</includes>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <class kind="class">Amesos_Paraklete_Pimpl</class>
    <member kind="function">
      <type>void</type>
      <name>my_handler</name>
      <anchorfile>Amesos__Paraklete_8cpp.html</anchorfile>
      <anchor>a7a36217f03964e0c8590f9510ac82a1e</anchor>
      <arglist>(int status, char *file, int line, char *msg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Paraklete.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Paraklete_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Paraklete</class>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_analyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__analyze_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>paraklete_bcast_symbolic</name>
      <anchorfile>amesos__paraklete__analyze_8c.html</anchorfile>
      <anchor>acd7aac02bcd988bc0100232fefdf2f4e</anchor>
      <arglist>(paraklete_symbolic **LUsymbolicHandle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_analyze</name>
      <anchorfile>amesos__paraklete__analyze_8c.html</anchorfile>
      <anchor>afdcef9db75c1981e015ad635a66e2f6f</anchor>
      <arglist>(cholmod_sparse *A, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_alloc_symbolic</name>
      <anchorfile>amesos__paraklete__analyze_8c.html</anchorfile>
      <anchor>a0efdee5bc11364fee695acae45425d0b</anchor>
      <arglist>(Int n, Int ncomponents, Int do_Rperm, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_free_symbolic</name>
      <anchorfile>amesos__paraklete__analyze_8c.html</anchorfile>
      <anchor>a928bbb17dd5c99f0e298080e89716603</anchor>
      <arglist>(paraklete_symbolic **LUsymbolicHandle, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_btf.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__btf_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>paraklete_btf_bcast_symbolic</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>a18c3e442f6ffa3b60e68df1897478b4e</anchor>
      <arglist>(paraklete_btf_symbolic **LU_btf_symbolic_handle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_symbolic *</type>
      <name>amesos_paraklete_btf_alloc_symbolic</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>a082bf4a5f2bb3bdeeaf935975184a334</anchor>
      <arglist>(Int n, Int nblocks, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_symbolic *</type>
      <name>amesos_paraklete_btf_analyze</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>a1c306e861fe1a9f398afab134bcc510b</anchor>
      <arglist>(cholmod_sparse *A, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_numeric *</type>
      <name>amesos_paraklete_btf_factorize</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>af54c1e585b8b686758d34f82587a3218</anchor>
      <arglist>(cholmod_sparse *A, paraklete_btf_symbolic *LU_btf_symbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_btf_solve</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>a7b15af4d82d6d19d5547c65813aa535e</anchor>
      <arglist>(paraklete_btf_numeric *LU_btf_numeric, paraklete_btf_symbolic *LU_btf_symbolic, double *B, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_btf_free_symbolic</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>a58b45a5b2638726db288efb2526e87bc</anchor>
      <arglist>(paraklete_btf_symbolic **LU_btf_symbolic_handle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_btf_free_numeric</name>
      <anchorfile>amesos__paraklete__btf_8c.html</anchorfile>
      <anchor>abf60bfe95e4a29ca91700a8c7f44ef38</anchor>
      <arglist>(paraklete_btf_numeric **LU_btf_numeric_handle, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_decl.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Include/</path>
    <filename>amesos__paraklete__decl_8h</filename>
    <includes id="amesos__cholmod_8h" name="amesos_cholmod.h" local="yes" imported="no">amesos_cholmod.h</includes>
    <includes id="amesos__cholmod__internal_8h" name="amesos_cholmod_internal.h" local="yes" imported="no">amesos_cholmod_internal.h</includes>
    <includes id="amesos__btf__decl_8h" name="amesos_btf_decl.h" local="yes" imported="no">amesos_btf_decl.h</includes>
    <includes id="amesos__klu__decl_8h" name="amesos_klu_decl.h" local="yes" imported="no">amesos_klu_decl.h</includes>
    <class kind="struct">paraklete_common_struct</class>
    <class kind="struct">paraklete_symbolic_struct</class>
    <class kind="struct">paraklete_node_struct</class>
    <class kind="struct">paraklete_numeric_struct</class>
    <class kind="struct">paraklete_btf_symbolic_struct</class>
    <class kind="struct">paraklete_btf_numeric_struct</class>
    <member kind="define">
      <type>#define</type>
      <name>DLONG</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad882e6419e74a907c39668f0175dff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPI</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af986a585253c40180bc93451c49228f5</anchor>
      <arglist>(statement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MPI_Int</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a124b77237e4049bb197b03e260cc9ca2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_analyze</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a71717127fc6f7d9a4ef7eb4349682884</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_factor</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a514a34809f653c77ab02cf9dd8db1473</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_solve</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>afce2142ce025930977e8fffdae67a3d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a00a58fd519eb464a100b298272c7d9f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a801e85eb24fea0d196425457449f3970</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_common</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ae53b0e5af68290a38f3b1f23240d142d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_free_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ae6e9fb7c6765842822227a60a40a6e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_free_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a8680ddca83b556c198e426ec5ca4fe19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>KLU_defaults</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a1f29ecc2db39e1af36d17c748c77f8f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BTF_order</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a6417e44c5a364637aa7f53fa1eb95504</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TAG0</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a3c728a8d1a556a3c5f5bfe130bc6cf73</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NDEBUG</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a8de3ed741dadc9c979a4ff17c0a9116e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_OK</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af5a0cbc67771379f9152d6930ee5128c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_OUT_OF_MEMORY</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>aae674d2ba19356dcb7fafe800c6e1132</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_TOO_LARGE</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a126e69b4be1f068e0b129fa841b07ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_SINGULAR</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad379cafb0ea420f0393a373e9ef2cfb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_UNKNOWN</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a54d9b4dc7952ec7cab1738e2ad2e448f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GET_COLUMN</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af2dc21f3f2db77de6ab3d08ddb00836a</anchor>
      <arglist>(Ap, Anz, Aix, j, Ai, Ax, len)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_HEADER</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ab7de129184e123e48d6e5c130071ee3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_STATUS</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a40d7dbbc6c55b5731ac36b553f80d5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_SN</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad4e871ff519b47fade4745efef93110c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_SNZ</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ab6785d411fad1ec8e80d7ca9e7daf896</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_NFOUND</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a57d8fb271746fb8d9b0464614f4e89de</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_NLOST</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ab28e1453a2c99bf30582121e17775108</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_NN</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a2861b42ec27f12050ecc1ce9cc888da3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_NPIV</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a3fddabc72c406864cf4255ae479d9440</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PK_SSIZE</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>adb83a0cb8beb2c0877cb7a1325404ad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_MAGIC</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>aa42f06e0a72e6622400d72f373f3bd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_ERROR</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad97eda850db908a5e36080bba8ee50b9</anchor>
      <arglist>(status, message)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_DATE</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a12c9aa1707014a1a5d21058336f3c990</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_VERSION_CODE</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a179f8ecbe1cd6629f94b4a46d985f410</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_MAIN_VERSION</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a2b72a0ff3425c10943739a0fa1d3de40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_SUB_VERSION</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af38dcc2fd54004848b701a8c6ec804d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARAKLETE_VERSION</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ac1824109e1ed9f3082626e178b645612</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR0</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a3d94ea9ef343492fd80bde686ebde4a9</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR1</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a97e420f822793301de78328a6fa3d9be</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR2</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a40470848050b43e4a5d933e4acbe6c5c</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PR3</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a7b725eb239fae81cc4ac72c510d96431</anchor>
      <arglist>(params)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a9fd1d486da1707db019dee66cec502e8</anchor>
      <arglist>(statement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASSERT</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a87e006a00875d2e518652108f6cb5790</anchor>
      <arglist>(expression)</arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_common_struct</type>
      <name>paraklete_common</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a4bf85537a3a0d65e0666c79bfb501915</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_symbolic_struct</type>
      <name>paraklete_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad22cbe378269e553cf92878a71f07096</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_node_struct</type>
      <name>paraklete_node</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a7fb67ca7ff7d02a5a3d6ba7d1cacb686</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_numeric_struct</type>
      <name>paraklete_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a04a0782e3253e1241d60d46fb60ade03</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_btf_symbolic_struct</type>
      <name>paraklete_btf_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>aa417fdeb2a410cb4b6a642369a7cc580</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>struct paraklete_btf_numeric_struct</type>
      <name>paraklete_btf_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ac6c45ddd58653b9163dad25a60a99a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_symbolic *</type>
      <name>amesos_paraklete_btf_analyze</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a1c306e861fe1a9f398afab134bcc510b</anchor>
      <arglist>(cholmod_sparse *A, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_numeric *</type>
      <name>amesos_paraklete_btf_factorize</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af54c1e585b8b686758d34f82587a3218</anchor>
      <arglist>(cholmod_sparse *A, paraklete_btf_symbolic *LU_btf_symbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_btf_solve</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a7b15af4d82d6d19d5547c65813aa535e</anchor>
      <arglist>(paraklete_btf_numeric *LU_btf_numeric, paraklete_btf_symbolic *LU_btf_symbolic, double *B, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_btf_free_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a58b45a5b2638726db288efb2526e87bc</anchor>
      <arglist>(paraklete_btf_symbolic **LU_btf_symbolic_handle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_btf_free_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>abf60bfe95e4a29ca91700a8c7f44ef38</anchor>
      <arglist>(paraklete_btf_numeric **LU_btf_numeric_handle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_btf_symbolic *</type>
      <name>amesos_paraklete_btf_alloc_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a082bf4a5f2bb3bdeeaf935975184a334</anchor>
      <arglist>(Int n, Int nblocks, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_analyze</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>afdcef9db75c1981e015ad635a66e2f6f</anchor>
      <arglist>(cholmod_sparse *A, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_numeric *</type>
      <name>amesos_paraklete_factorize</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>afdde9e6a3b435b57a4f27f8f5eaeb609</anchor>
      <arglist>(cholmod_sparse *A, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_kernel</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a16cf4f7d5e42471faaf1d046e3aadad6</anchor>
      <arglist>(cholmod_sparse *A, paraklete_node *LUnode, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_factorize_node</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>aacbf1325fb3ef3a53062a674e28140e4</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_solve</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a49874f54bca6c5d4117c913da710fd81</anchor>
      <arglist>(paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, double *B, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_lsolve_node</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>af81e6850b33480eee5920161233cc6ca</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_usolve_node</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a07843757497118149349793b2e4fbba9</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_alloc_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a0efdee5bc11364fee695acae45425d0b</anchor>
      <arglist>(Int n, Int ncomponents, Int do_Rperm, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_free_symbolic</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a928bbb17dd5c99f0e298080e89716603</anchor>
      <arglist>(paraklete_symbolic **LUsymbolicHandle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_free_numeric</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a127da0ddb899974f4470732f1dfd550f</anchor>
      <arglist>(paraklete_numeric **LUHandle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_reanalyze</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a6288114ec7153f3d07954a84fe368ef0</anchor>
      <arglist>(cholmod_sparse *A, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_start</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad570154a1ce57bcfa025e4bb7d0516e5</anchor>
      <arglist>(Int nproc, Int myid, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_finish</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a9dcd886433836aef1024093e44926bdb</anchor>
      <arglist>(paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_error</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>a880c1875cf59fbdf3d2debe411708161</anchor>
      <arglist>(Int status, char *filename, Int line, char *message, paraklete_common *Common)</arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>my_tries</name>
      <anchorfile>amesos__paraklete__decl_8h.html</anchorfile>
      <anchor>ad79cc804654703a6190e60219370e2a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_error.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__error_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_error</name>
      <anchorfile>amesos__paraklete__error_8c.html</anchorfile>
      <anchor>a880c1875cf59fbdf3d2debe411708161</anchor>
      <arglist>(Int status, char *filename, Int line, char *message, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_factorize.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__factorize_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function" static="yes">
      <type>static paraklete_numeric *</type>
      <name>amesos_paraklete_allocate_numeric</name>
      <anchorfile>amesos__paraklete__factorize_8c.html</anchorfile>
      <anchor>a5cd702e76bc1f4466a2924c95e620079</anchor>
      <arglist>(paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_free_numeric</name>
      <anchorfile>amesos__paraklete__factorize_8c.html</anchorfile>
      <anchor>a127da0ddb899974f4470732f1dfd550f</anchor>
      <arglist>(paraklete_numeric **LUHandle, paraklete_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *</type>
      <name>paraklete_permute</name>
      <anchorfile>amesos__paraklete__factorize_8c.html</anchorfile>
      <anchor>af66d266eb3702509bbec5668fbe31ef3</anchor>
      <arglist>(cholmod_sparse *A, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>paraklete_numeric *</type>
      <name>amesos_paraklete_factorize</name>
      <anchorfile>amesos__paraklete__factorize_8c.html</anchorfile>
      <anchor>afdde9e6a3b435b57a4f27f8f5eaeb609</anchor>
      <arglist>(cholmod_sparse *A, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_finish.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__finish_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_finish</name>
      <anchorfile>amesos__paraklete__finish_8c.html</anchorfile>
      <anchor>a9dcd886433836aef1024093e44926bdb</anchor>
      <arglist>(paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_kernel.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__kernel_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>dfs</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a37ff3f00fefd57af51fab083bc560695</anchor>
      <arglist>(Int npiv, Int j, Int mark, Int Pinv[], Int Llen[], Int Lip[], Int phase1,   Int Stack[],   Int Flag[], Int Lprune[], Int top, double LU[], Int Li[], Int *plength, Int Pstack[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lsolve_symbolic</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>aa5db2da01ce85af698a7d3b68099f101</anchor>
      <arglist>(Int n, Int k, Int mark, Int kcol, Int Ap[], Int Ai[], Int Pinv[], Int phase1, Int nfound, Int npiv, Int Stack[],   Int Flag[],   Int Lprune[], Int Pstack[],   double LU[], Int *plu, Int Llen[], Int Ulen[], Int Lip[], Int Uip[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>construct_column</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a54a10744c231db630de67fdb7b292d4a</anchor>
      <arglist>(Int kcol, Int Ap[], Int Ai[], double Ax[], Int phase1, Int nfound, Int npiv, Int Pinv[],   double X[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lsolve_numeric</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a7e2c55eb7df04782f8e7d936f592a055</anchor>
      <arglist>(Int npiv, Int Pinv[],   double *LU, Int Uip[], Int Lip[], Int Ulen[], Int Llen[], Int k, Int phase1, Int Lphase_len[],   double X[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>lsolve</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a2874bed0f96ccba30ebbefc3d95acb4d</anchor>
      <arglist>(Int phase1, Int nfound, Int npiv, Int n, Int k, Int kcol, Int Ap[], Int Ai[], double Ax[], double *LU, Int *lup, Int Lip[], Int Uip[], Int Llen[], Int Ulen[], Int Lphase_len[], Int Pinv[], Int Stack[], Int Lprune[], Int Pstack[], Int Flag[], Int mark, double X[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Int</type>
      <name>lpivot</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a1f7ccb57a3235143332951bc84cf3aaf</anchor>
      <arglist>(Int diagrow, Int *p_pivrow, double *p_pivot, double *p_abs_pivot, double tol_diag, double tol_offdiag, double X[], double *LU, Int Lip[], Int Llen[], Int k, Int npiv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>prune</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a188a53547131b8085ec9ac640633c5f5</anchor>
      <arglist>(Int npiv, Int Lprune[], Int Pinv[], Int k, Int pivrow, double *LU, Int Uip[], Int Lip[], Int Ulen[], Int Llen[])</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_kernel</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a16cf4f7d5e42471faaf1d046e3aadad6</anchor>
      <arglist>(cholmod_sparse *A, paraklete_node *LUnode, paraklete_common *Common)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Int</type>
      <name>debug_k</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>abfb48f68a858622b820307ca1a37e377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Int</type>
      <name>debug_nfound</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a4c897033c1b57e6059b3a66ffa9bea01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Int</type>
      <name>debug_n</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>aafd60e820a828f398980317e933d2249</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static Int</type>
      <name>debug_npiv</name>
      <anchorfile>amesos__paraklete__kernel_8c.html</anchorfile>
      <anchor>a07798eb59062e14ecad6586fd9eefa20</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_lsolve_node.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__lsolve__node_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_lsolve_node</name>
      <anchorfile>amesos__paraklete__lsolve__node_8c.html</anchorfile>
      <anchor>af81e6850b33480eee5920161233cc6ca</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_node.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__node_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>paraklete_free_children</name>
      <anchorfile>amesos__paraklete__node_8c.html</anchorfile>
      <anchor>affbdcffcd2e5201f610740536c4d06e6</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>paraklete_send_to_parent</name>
      <anchorfile>amesos__paraklete__node_8c.html</anchorfile>
      <anchor>a1437a2868795664ffc6d2783d96cad38</anchor>
      <arglist>(Int c, Int status, Int parent_id, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_factorize_node</name>
      <anchorfile>amesos__paraklete__node_8c.html</anchorfile>
      <anchor>aacbf1325fb3ef3a53062a674e28140e4</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_reanalyze.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__reanalyze_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>paraklete_symbolic *</type>
      <name>amesos_paraklete_reanalyze</name>
      <anchorfile>amesos__paraklete__reanalyze_8c.html</anchorfile>
      <anchor>a6288114ec7153f3d07954a84fe368ef0</anchor>
      <arglist>(cholmod_sparse *A, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_solve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__solve_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_solve</name>
      <anchorfile>amesos__paraklete__solve_8c.html</anchorfile>
      <anchor>a49874f54bca6c5d4117c913da710fd81</anchor>
      <arglist>(paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, double *B, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_start.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__start_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>void</type>
      <name>amesos_paraklete_start</name>
      <anchorfile>amesos__paraklete__start_8c.html</anchorfile>
      <anchor>ad570154a1ce57bcfa025e4bb7d0516e5</anchor>
      <arglist>(Int nproc, Int myid, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_paraklete_usolve_node.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/PARAKLETE/Source/</path>
    <filename>amesos__paraklete__usolve__node_8c</filename>
    <includes id="amesos__paraklete__decl_8h" name="amesos_paraklete_decl.h" local="yes" imported="no">amesos_paraklete_decl.h</includes>
    <member kind="function">
      <type>Int</type>
      <name>amesos_paraklete_usolve_node</name>
      <anchorfile>amesos__paraklete__usolve__node_8c.html</anchorfile>
      <anchor>a07843757497118149349793b2e4fbba9</anchor>
      <arglist>(Int c, paraklete_numeric *LU, paraklete_symbolic *LUsymbolic, paraklete_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Pardiso.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Pardiso_8cpp</filename>
    <includes id="Amesos__Pardiso_8h" name="Amesos_Pardiso.h" local="yes" imported="no">Amesos_Pardiso.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>F77_PARDISOINIT</name>
      <anchorfile>Amesos__Pardiso_8cpp.html</anchorfile>
      <anchor>a3c7b6a9d09e76051bc39c062f38f5d47</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>F77_PARDISO</name>
      <anchorfile>Amesos__Pardiso_8cpp.html</anchorfile>
      <anchor>a376a41c649157036402abedff0d0c617</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IPARM</name>
      <anchorfile>Amesos__Pardiso_8cpp.html</anchorfile>
      <anchor>a9ccb8623eec6cc9a716ec1b25405dfdb</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>F77_PARDISOINIT</name>
      <anchorfile>Amesos__Pardiso_8cpp.html</anchorfile>
      <anchor>a547203d005c198acdc928779e7093c72</anchor>
      <arglist>(void *, int *, int *, int *, double *, int *)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>F77_PARDISO</name>
      <anchorfile>Amesos__Pardiso_8cpp.html</anchorfile>
      <anchor>a6435c4b3549aa9aa7de21faac2e32930</anchor>
      <arglist>(void *, int *, int *, int *, int *, int *, double *, int *, int *, int *, int *, int *, int *, double *, double *, int *, double *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Pardiso.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Pardiso_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Pardiso</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Performance.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Performance/</path>
    <filename>Amesos__Performance_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <member kind="enumeration">
      <type></type>
      <name>ESpeed</name>
      <anchorfile>Amesos__Performance_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_SLOW</name>
      <anchorfile>Amesos__Performance_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82ac1d4c56fe55e217a20948e5dfdf15469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_MEDIUM</name>
      <anchorfile>Amesos__Performance_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82a51f8ead8afe0763894e52050a22c8fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_FAST</name>
      <anchorfile>Amesos__Performance_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82a10e524d624d32a53f007da8032f61f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Amesos__Performance_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Reordering.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Reordering_8h</filename>
    <class kind="class">Amesos_Reordering</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Scalapack.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Scalapack_8cpp</filename>
    <includes id="Amesos__Scalapack_8h" name="Amesos_Scalapack.h" local="yes" imported="no">Amesos_Scalapack.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <includes id="Amesos__SCALAPACK__wrappers_8h" name="Amesos_SCALAPACK_wrappers.h" local="yes" imported="no">Amesos_SCALAPACK_wrappers.h</includes>
    <member kind="function">
      <type>int</type>
      <name>pcolnum</name>
      <anchorfile>Amesos__Scalapack_8cpp.html</anchorfile>
      <anchor>a562be9bb66737d7ea35d58deee33184d</anchor>
      <arglist>(int j, int nb, int npcol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Scalapack.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Scalapack_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Scalapack</class>
  </compound>
  <compound kind="file">
    <name>Amesos_SCALAPACK_wrappers.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__SCALAPACK__wrappers_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>SL_INIT_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a7e0d9380bc784ee8e03655d340e30bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BLACS_GRIDINFO_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a6397f0b96b9da12590091cf3cf39f8fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDGETRF_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a58f3df9e2e1a36735148d7fe62522c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PDGETRS_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>af59e551b716c3c672d2cc79a2b9bdcb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DESCINIT_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a2611d9d319b5b9dbd118d470d4a745aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SL_INIT_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a239bf4e51392826d75b98491f2c43fcf</anchor>
      <arglist>(int *blacs_context, const int *nprow, const int *npcol)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DESCINIT_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a5088f4428d1f3011c085555f79fef858</anchor>
      <arglist>(int *DescA, const int *m, const int *n, const int *mblock, const int *nblock, const int *rsrc, const int *csrc, const int *blacs_context, const int *Lda, int *ierr)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>BLACS_GRIDINFO_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a4b1858c31c91d9fa736a0cd87a90a3fe</anchor>
      <arglist>(int *blacs_context, const int *nprow, const int *npcol, const int *myrow, const int *mycol)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>PDGETRF_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a320c8841642edb44bfb86fa35460848f</anchor>
      <arglist>(const int *m, const int *n, double *A, const int *Ai, const int *Aj, const int *DescA, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>PDGETRS_F77</name>
      <anchorfile>Amesos__SCALAPACK__wrappers_8h.html</anchorfile>
      <anchor>a222b063bbf79d126baa5d419e8f99d6a</anchor>
      <arglist>(Epetra_fcd, const int *n, const int *nrhs, const double *A, const int *Ai, const int *Aj, const int *DescA, const int *ipiv, double *X, const int *Xi, const int *Xj, const int *DescX, int *info)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Scaling.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Scaling_8h</filename>
    <class kind="class">Amesos_Scaling</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Status.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Status_8cpp</filename>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Status.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Status_8h</filename>
    <class kind="class">Amesos_Status</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Superlu.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Superlu_8cpp</filename>
    <includes id="Amesos__Superlu_8h" name="Amesos_Superlu.h" local="yes" imported="no">Amesos_Superlu.h</includes>
    <class kind="struct">SLUData</class>
    <namespace>SLU</namespace>
  </compound>
  <compound kind="file">
    <name>Amesos_Superlu.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Superlu_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Superlu</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Superludist.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Superludist_8cpp</filename>
    <includes id="Amesos__Superludist_8h" name="Amesos_Superludist.h" local="yes" imported="no">Amesos_Superludist.h</includes>
    <class kind="class">Amesos_Superlu_Pimpl</class>
    <member kind="function">
      <type>int</type>
      <name>Superludist_NumProcRows</name>
      <anchorfile>Amesos__Superludist_8cpp.html</anchorfile>
      <anchor>a38aa9a1e9b8c2476ec695e195bb5dfbc</anchor>
      <arglist>(int NumProcs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetNPRowAndCol</name>
      <anchorfile>Amesos__Superludist_8cpp.html</anchorfile>
      <anchor>a0605ff07277bfdfae759d06a1e1c6da7</anchor>
      <arglist>(const int MaxProcesses, int &amp;nprow, int &amp;npcol)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Superludist.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Superludist_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Superludist</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Support.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Support_8cpp</filename>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
    <includes id="Amesos__Support_8h" name="Amesos_Support.h" local="yes" imported="no">Amesos_Support.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Support.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Support_8h</filename>
    <class kind="class">Amesos_StandardIndex</class>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_change_factor.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__t__cholmod__change__factor_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <member kind="function" static="yes">
      <type>static void TEMPLATE()</type>
      <name>change_simplicial_numeric</name>
      <anchorfile>amesos__t__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a37261f460eda2ba6cffa280e5f9a2fbe</anchor>
      <arglist>(cholmod_factor *L, Int to_ll, Int to_packed, Int *newLi, double *newLx, double *newLz, Int lnz, Int grow, double grow1, Int grow2, Int make_ll, Int make_monotonic, Int make_ldl, cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void TEMPLATE()</type>
      <name>ll_super_to_simplicial_numeric</name>
      <anchorfile>amesos__t__cholmod__change__factor_8c.html</anchorfile>
      <anchor>a06daba74c5413999edbaae8075a51bb7</anchor>
      <arglist>(cholmod_factor *L, Int to_packed, Int to_ll, cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_dense.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__t__cholmod__dense_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <member kind="function" static="yes">
      <type>static cholmod_dense *TEMPLATE()</type>
      <name>cholmod_sparse_to_dense</name>
      <anchorfile>amesos__t__cholmod__dense_8c.html</anchorfile>
      <anchor>ab42812cf0f60578221eaa02726d0facf</anchor>
      <arglist>(cholmod_sparse *A,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static cholmod_sparse *TEMPLATE()</type>
      <name>cholmod_dense_to_sparse</name>
      <anchorfile>amesos__t__cholmod__dense_8c.html</anchorfile>
      <anchor>aceb9ad995e9a9341c5528a4e25f893bf</anchor>
      <arglist>(cholmod_dense *X, int values,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int TEMPLATE()</type>
      <name>cholmod_copy_dense2</name>
      <anchorfile>amesos__t__cholmod__dense_8c.html</anchorfile>
      <anchor>a3ad03487a17dfd40056e368cb594705b</anchor>
      <arglist>(cholmod_dense *X,   cholmod_dense *Y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_lsolve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__t__cholmod__lsolve_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>FORM_NAME</name>
      <anchorfile>amesos__t__cholmod__lsolve_8c.html</anchorfile>
      <anchor>ad9ec89589e90bd50a26200c02a2dd1f0</anchor>
      <arglist>(prefix, rank)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LSOLVE</name>
      <anchorfile>amesos__t__cholmod__lsolve_8c.html</anchorfile>
      <anchor>aa84d2b99cdf315464bf6557710e8bb9d</anchor>
      <arglist>(prefix, rank)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LSOLVE</name>
      <anchorfile>amesos__t__cholmod__lsolve_8c.html</anchorfile>
      <anchor>a7bb89d9c5100d66a61e3fca459e1800d</anchor>
      <arglist>(PREFIX, k)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_ltsolve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__t__cholmod__ltsolve_8c</filename>
    <member kind="define">
      <type>#define</type>
      <name>FORM_NAME</name>
      <anchorfile>amesos__t__cholmod__ltsolve_8c.html</anchorfile>
      <anchor>ad9ec89589e90bd50a26200c02a2dd1f0</anchor>
      <arglist>(prefix, rank)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LSOLVE</name>
      <anchorfile>amesos__t__cholmod__ltsolve_8c.html</anchorfile>
      <anchor>aa84d2b99cdf315464bf6557710e8bb9d</anchor>
      <arglist>(prefix, rank)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>LSOLVE</name>
      <anchorfile>amesos__t__cholmod__ltsolve_8c.html</anchorfile>
      <anchor>a7bb89d9c5100d66a61e3fca459e1800d</anchor>
      <arglist>(PREFIX, k)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_rowfac.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__t__cholmod__rowfac_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>NEXT</name>
      <anchorfile>amesos__t__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a420992216e5f750d86561953d251132d</anchor>
      <arglist>(k)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PARENT</name>
      <anchorfile>amesos__t__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a91004761621b8ef1c66f3601988fde7c</anchor>
      <arglist>(i)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCATTER</name>
      <anchorfile>amesos__t__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a2811f6c090b957083ccbb709a01e60b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCATTER</name>
      <anchorfile>amesos__t__cholmod__rowfac_8c.html</anchorfile>
      <anchor>a2811f6c090b957083ccbb709a01e60b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int TEMPLATE()</type>
      <name>cholmod_rowfac</name>
      <anchorfile>amesos__t__cholmod__rowfac_8c.html</anchorfile>
      <anchor>ad4ac01683f2c5d848420c7190a261a96</anchor>
      <arglist>(cholmod_sparse *A, cholmod_sparse *F, double beta[2], size_t kstart, size_t kend,   cholmod_factor *L, cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_solve.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Cholesky/</path>
    <filename>amesos__t__cholmod__solve_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <includes id="amesos__t__cholmod__lsolve_8c" name="amesos_t_cholmod_lsolve.c" local="yes" imported="no">amesos_t_cholmod_lsolve.c</includes>
    <includes id="amesos__t__cholmod__ltsolve_8c" name="amesos_t_cholmod_ltsolve.c" local="yes" imported="no">amesos_t_cholmod_ltsolve.c</includes>
    <member kind="define">
      <type>#define</type>
      <name>LL</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a95785abe4b0b45944ceda91a5f419030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LD</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a9b06fda83ca7a20a56bd6565d6841893</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LL</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a95785abe4b0b45944ceda91a5f419030</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>LD</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a9b06fda83ca7a20a56bd6565d6841893</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void TEMPLATE()</type>
      <name>ldl_dsolve</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a28ba6ce65bc5173dabf37edd5ce4179d</anchor>
      <arglist>(cholmod_factor *L, cholmod_dense *Y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void TEMPLATE()</type>
      <name>simplicial_solver</name>
      <anchorfile>amesos__t__cholmod__solve_8c.html</anchorfile>
      <anchor>a4aee3c1963ac4d668dd2114f684e5dab</anchor>
      <arglist>(int sys, cholmod_factor *L, cholmod_dense *Y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_transpose.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__t__cholmod__transpose_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <member kind="function" static="yes">
      <type>static int TEMPLATE()</type>
      <name>cholmod_transpose_unsym</name>
      <anchorfile>amesos__t__cholmod__transpose_8c.html</anchorfile>
      <anchor>a75e7e4c33050e33d47404af4521b8420</anchor>
      <arglist>(cholmod_sparse *A, Int *Perm, Int *fset, Int nf,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int TEMPLATE()</type>
      <name>cholmod_transpose_sym</name>
      <anchorfile>amesos__t__cholmod__transpose_8c.html</anchorfile>
      <anchor>a6e8ea7828495e6d8227194a7c9ee3e4b</anchor>
      <arglist>(cholmod_sparse *A, Int *Perm,   cholmod_sparse *F,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>amesos_t_cholmod_triplet.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/CHOLMOD/Core/</path>
    <filename>amesos__t__cholmod__triplet_8c</filename>
    <includes id="amesos__cholmod__template_8h" name="amesos_cholmod_template.h" local="yes" imported="no">amesos_cholmod_template.h</includes>
    <member kind="function" static="yes">
      <type>static size_t TEMPLATE()</type>
      <name>cholmod_triplet_to_sparse</name>
      <anchorfile>amesos__t__cholmod__triplet_8c.html</anchorfile>
      <anchor>a7225e28213b77ae86e2203f7a187403d</anchor>
      <arglist>(cholmod_triplet *T,   cholmod_sparse *R,   cholmod_common *Common)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Taucs.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Taucs_8cpp</filename>
    <includes id="Amesos__Taucs_8h" name="Amesos_Taucs.h" local="yes" imported="no">Amesos_Taucs.h</includes>
    <class kind="class">Amesos_Taucs_Pimpl</class>
    <member kind="define">
      <type>#define</type>
      <name>USE_REF_COUNT_PTR_FOR_A_AND_L</name>
      <anchorfile>Amesos__Taucs_8cpp.html</anchorfile>
      <anchor>a1828a88cff264ff97405e0d117c32866</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>taucs_dccs_free_ptr</name>
      <anchorfile>Amesos__Taucs_8cpp.html</anchorfile>
      <anchor>af66c8b6b77f718542226d8ff95d953f3</anchor>
      <arglist>(taucs_ccs_matrix **taucs_ccs_matrix_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>taucs_supernodal_factor_free_ptr</name>
      <anchorfile>Amesos__Taucs_8cpp.html</anchorfile>
      <anchor>a5c3cd0a48bdd6d354e4ccc686e13f750</anchor>
      <arglist>(taucs_ccs_matrix **taucs_ccs_matrix_in)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Taucs.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Taucs_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Taucs</class>
  </compound>
  <compound kind="file">
    <name>Amesos_TestDriver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Amesos__TestDriver_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="SparseDirectTimingVars_8h" name="SparseDirectTimingVars.h" local="yes" imported="no">SparseDirectTimingVars.h</includes>
    <includes id="Amesos__TestSolver_8h" name="Amesos_TestSolver.h" local="yes" imported="no">Amesos_TestSolver.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>setw</name>
      <anchorfile>Amesos__TestDriver_8cpp.html</anchorfile>
      <anchor>a1f20eb279932ea80829c73afbcc48a84</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>setprecision</name>
      <anchorfile>Amesos__TestDriver_8cpp.html</anchorfile>
      <anchor>acd07f133fd4d774757c0ca262a0926a0</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Amesos__TestDriver_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>SuperLU_permc</name>
      <anchorfile>Amesos__TestDriver_8cpp.html</anchorfile>
      <anchor>a738e8ab9d5f2b80eb97bc0a65af8e563</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_TestMrhsSolver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Amesos__TestMrhsSolver_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="SparseSolverResult_8h" name="SparseSolverResult.h" local="yes" imported="no">SparseSolverResult.h</includes>
    <includes id="Amesos__TestSolver_8h" name="Amesos_TestSolver.h" local="yes" imported="no">Amesos_TestSolver.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <includes id="SparseDirectTimingVars_8h" name="SparseDirectTimingVars.h" local="yes" imported="no">SparseDirectTimingVars.h</includes>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestMrhsSolver</name>
      <anchorfile>Amesos__TestMrhsSolver_8cpp.html</anchorfile>
      <anchor>aa54c06cb743edaad0e05a8b913261a0e</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, int numsolves, SparseSolverType SparseSolver, bool transpose, int special, AMESOS_MatrixType matrix_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_TestMultiSolver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Amesos__TestMultiSolver_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__TestSolver_8h" name="Amesos_TestSolver.h" local="yes" imported="no">Amesos_TestSolver.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <includes id="SparseDirectTimingVars_8h" name="SparseDirectTimingVars.h" local="yes" imported="no">SparseDirectTimingVars.h</includes>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestMultiSolver</name>
      <anchorfile>Amesos__TestMultiSolver_8cpp.html</anchorfile>
      <anchor>a66d9a288cdb54998a87ea1384d95139d</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, int numsolves, SparseSolverType SparseSolver, bool transpose, int special, AMESOS_MatrixType matrix_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_TestRowMatrix.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__TestRowMatrix_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <class kind="class">Amesos_TestRowMatrix</class>
  </compound>
  <compound kind="file">
    <name>Amesos_TestSolver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Amesos__TestSolver_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__TestSolver_8h" name="Amesos_TestSolver.h" local="yes" imported="no">Amesos_TestSolver.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <includes id="SparseDirectTimingVars_8h" name="SparseDirectTimingVars.h" local="yes" imported="no">SparseDirectTimingVars.h</includes>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestSolver</name>
      <anchorfile>Amesos__TestSolver_8cpp.html</anchorfile>
      <anchor>aa9b16f13bbebf6a61435b90d3b87070a</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, SparseSolverType SparseSolver, bool transpose, int special, AMESOS_MatrixType matrix_type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_TestSolver.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Amesos__TestSolver_8h</filename>
    <member kind="enumeration">
      <type></type>
      <name>SparseSolverType</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DSCPACK</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfdadbec2d8a7a05ae218c61bea173a6f1a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UMFPACK</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda8ea5d76ebb0ed454a06211636c22776f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCALAPACK</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda83312f8577303f561cffe5f88b3f5821</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MUMPS</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda9f703baf994e98419687f19e6c1ebb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TAUCS</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda0dd4ec3b19f44b3cb979fece294bdaaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARDISO</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfdafff8ce488af8c0184f7a016e6644b4c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARAKLETE</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda8205e93b9efe6483aa7aa1dfc4b03983</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>KLU</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfdaa4df9f7c381653f83870289aac67b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LAPACK</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda8763fc7464b941c23e2328a265a749e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUPERLUDIST</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfda9f1395e85e24feda32c1c4d96918142a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SUPERLU</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>ae0390b382b1be9c13edcbe30d7bfdcfdaec595aea9ace49b64ef7fa33c250ed94</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>AMESOS_MatrixType</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>a2da42913f53724129aad0f8013c4f167</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AMESOS_Serial</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>a2da42913f53724129aad0f8013c4f167ad1cc381b2b0e6a6cebde00afe86a9091</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>AMESOS_Distributed</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>a2da42913f53724129aad0f8013c4f167a067c2357bf81b38ba55aac4e43923803</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestSolver</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>a38833c4f17c863e180ab2a17c8e0006f</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, SparseSolverType SparseSolver, bool tranpose, int special, AMESOS_MatrixType MatrixType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestMultiSolver</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>af7d22941078b647f063ff307c94f7fe3</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, int numsolves, SparseSolverType SparseSolver, bool tranpose, int special, AMESOS_MatrixType MatrixType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Amesos_TestMrhsSolver</name>
      <anchorfile>Amesos__TestSolver_8h.html</anchorfile>
      <anchor>abb14ca45f0834d0eea63b7a5425e3ae8</anchor>
      <arglist>(Epetra_Comm &amp;Comm, char *matrix_file, int numsolves, SparseSolverType SparseSolver, bool tranpose, int special, AMESOS_MatrixType MatrixType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Time.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Time_8h</filename>
    <class kind="struct">Amesos_Time_Data</class>
    <class kind="class">Amesos_Time</class>
  </compound>
  <compound kind="file">
    <name>amesos_UFconfig.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/SuiteSparse/UFconfig/</path>
    <filename>amesos__UFconfig_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>UF_long</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>aff95039266e99f9cd3b6309bf52c5d99</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UF_long_max</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>a321d836e7ce3e3af7dd33737c86207e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UF_long_id</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>ace4b8f7cc6776cda8730cb6bd4bbd083</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_DATE</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>a8f56ccd98faab4388e4638f408a10e04</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_VER_CODE</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>a5d9ae4bf03cff48c827d2351fc69a944</anchor>
      <arglist>(main, sub)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_MAIN_VERSION</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>ab652289d2edb4b02406cf2fef48d6cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_SUB_VERSION</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>ab92c25d9664bdabe73ac3dd4e680ecb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_SUBSUB_VERSION</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>ab46d62a655375a89f9b5a925c49455cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SUITESPARSE_VERSION</name>
      <anchorfile>amesos__UFconfig_8h.html</anchorfile>
      <anchor>a4e93bbf50ff4646a3b6536ebde64bc5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Amesos_Umfpack.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Umfpack_8cpp</filename>
    <includes id="Amesos__Umfpack_8h" name="Amesos_Umfpack.h" local="yes" imported="no">Amesos_Umfpack.h</includes>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
  </compound>
  <compound kind="file">
    <name>Amesos_Umfpack.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Umfpack_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__NoCopiable_8h" name="Amesos_NoCopiable.h" local="yes" imported="no">Amesos_NoCopiable.h</includes>
    <includes id="Amesos__Utils_8h" name="Amesos_Utils.h" local="yes" imported="no">Amesos_Utils.h</includes>
    <includes id="Amesos__Time_8h" name="Amesos_Time.h" local="yes" imported="no">Amesos_Time.h</includes>
    <includes id="Amesos__Status_8h" name="Amesos_Status.h" local="yes" imported="no">Amesos_Status.h</includes>
    <includes id="Amesos__Control_8h" name="Amesos_Control.h" local="yes" imported="no">Amesos_Control.h</includes>
    <class kind="class">Amesos_Umfpack</class>
  </compound>
  <compound kind="file">
    <name>Amesos_Utils.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>Amesos__Utils_8h</filename>
    <class kind="class">Amesos_Utils</class>
  </compound>
  <compound kind="file">
    <name>compare_solvers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>compare__solvers_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <member kind="function">
      <type>int</type>
      <name>MyCreateCrsMatrix</name>
      <anchorfile>compare__solvers_8cpp.html</anchorfile>
      <anchor>afa6f9c784c9e8277e4b180f23277885a</anchor>
      <arglist>(const char *in_filename, const Epetra_Comm &amp;Comm, Epetra_Map *&amp;readMap, const bool transpose, const bool distribute, bool &amp;symmetric, Epetra_CrsMatrix *&amp;Matrix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>compare__solvers_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CreateTridi.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>CreateTridi_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>CreateTridi</name>
      <anchorfile>CreateTridi_8cpp.html</anchorfile>
      <anchor>a6516af88efc57210292343395bfb6809</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CreateTridiPlus</name>
      <anchorfile>CreateTridi_8cpp.html</anchorfile>
      <anchor>a0e98adf91853c834a0d0e76d4b63daf5</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CreateTridi.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>CreateTridi_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>CreateTridi</name>
      <anchorfile>CreateTridi_8h.html</anchorfile>
      <anchor>a6516af88efc57210292343395bfb6809</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CreateTridiPlus</name>
      <anchorfile>CreateTridi_8h.html</anchorfile>
      <anchor>a0e98adf91853c834a0d0e76d4b63daf5</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CrsMatrixTranspose.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>CrsMatrixTranspose_8cpp</filename>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <member kind="function">
      <type>int</type>
      <name>CrsMatrixTranspose</name>
      <anchorfile>CrsMatrixTranspose_8cpp.html</anchorfile>
      <anchor>a71cf74cac8d52d0f60726ae3425709df</anchor>
      <arglist>(Epetra_CrsMatrix *In, Epetra_CrsMatrix *Out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>CrsMatrixTranspose.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/</path>
    <filename>CrsMatrixTranspose_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>CrsMatrixTranspose</name>
      <anchorfile>CrsMatrixTranspose_8h.html</anchorfile>
      <anchor>a71cf74cac8d52d0f60726ae3425709df</anchor>
      <arglist>(Epetra_CrsMatrix *In, Epetra_CrsMatrix *Out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_Detailed/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Detailed/</path>
    <filename>Test__Detailed_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>TestTiming</name>
      <anchorfile>Test__Detailed_2cxx__main_8cpp.html</anchorfile>
      <anchor>a2ccc646184fb266e883a580d4dfa5138</anchor>
      <arglist>(const Amesos_BaseSolver *Solver, const Epetra_Comm &amp;Comm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__Detailed_2cxx__main_8cpp.html</anchorfile>
      <anchor>a9f7765e6dec8df8876d8cb9979210fad</anchor>
      <arglist>(const std::string SolverType, const std::string Descriptor, const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Test</name>
      <anchorfile>Test__Detailed_2cxx__main_8cpp.html</anchorfile>
      <anchor>ac012755a1163ba6fdbf3480c67d6aa84</anchor>
      <arglist>(char *SolverType, Epetra_RowMatrix &amp;A, Epetra_MultiVector &amp;x_A, Epetra_MultiVector &amp;b_A, Epetra_MultiVector &amp;x_exactA, Epetra_RowMatrix &amp;B, Epetra_MultiVector &amp;x_B, Epetra_MultiVector &amp;b_B, Epetra_MultiVector &amp;x_exactB, Epetra_RowMatrix &amp;C, Epetra_MultiVector &amp;x_C, Epetra_MultiVector &amp;b_C, Epetra_MultiVector &amp;x_exactC)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SubMain</name>
      <anchorfile>Test__Detailed_2cxx__main_8cpp.html</anchorfile>
      <anchor>a25f787c7f4621bc9f2af2cf5285e2b7c</anchor>
      <arglist>(Epetra_Comm &amp;Comm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__Detailed_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_DSCPACK/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_DSCPACK/</path>
    <filename>Test__DSCPACK_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Dscpack_8h" name="Amesos_Dscpack.h" local="yes" imported="no">Amesos_Dscpack.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__DSCPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0003b8b44abab9215d4232dbc357fbbc</anchor>
      <arglist>(const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__DSCPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_Epetra_CrsMatrix/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Epetra_CrsMatrix/</path>
    <filename>Test__Epetra__CrsMatrix_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>TestAmesos</name>
      <anchorfile>Test__Epetra__CrsMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a803e6dbfb7391a94e27ab685f91a75a8</anchor>
      <arglist>(char ProblemType[], Teuchos::ParameterList &amp;AmesosList, bool UseTranspose, Epetra_RowMatrix *A, Epetra_MultiVector *lhs, Epetra_MultiVector *rhs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__Epetra__CrsMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_Epetra_RowMatrix/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Epetra_RowMatrix/</path>
    <filename>Test__Epetra__RowMatrix_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>TestAmesos</name>
      <anchorfile>Test__Epetra__RowMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a803e6dbfb7391a94e27ab685f91a75a8</anchor>
      <arglist>(char ProblemType[], Teuchos::ParameterList &amp;AmesosList, bool UseTranspose, Epetra_RowMatrix *A, Epetra_MultiVector *lhs, Epetra_MultiVector *rhs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>driver</name>
      <anchorfile>Test__Epetra__RowMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a2e5b9ae7c45ca2cb129729d3c96402b0</anchor>
      <arglist>(Epetra_Comm &amp;Comm, const bool IsSymmetric, const bool UseTranspose, std::vector&lt; std::string &gt; &amp;SolverType)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__Epetra__RowMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>quiet</name>
      <anchorfile>Test__Epetra__RowMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>ae4426f467d61ae456b95844d4d9c2dcd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_KLU/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_KLU/</path>
    <filename>Test__KLU_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__KLU_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_LAPACK/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_LAPACK/</path>
    <filename>Test__LAPACK_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__LAPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_MultipleSolves/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_MultipleSolves/</path>
    <filename>Test__MultipleSolves_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>TestAmesos</name>
      <anchorfile>Test__MultipleSolves_2cxx__main_8cpp.html</anchorfile>
      <anchor>abffa57926aad250ac89456556f5d244a</anchor>
      <arglist>(char ProblemType[], Epetra_RowMatrix &amp;A, int NumVectors)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__MultipleSolves_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_MUMPS/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_MUMPS/</path>
    <filename>Test__MUMPS_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Mumps_8h" name="Amesos_Mumps.h" local="yes" imported="no">Amesos_Mumps.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__MUMPS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0003b8b44abab9215d4232dbc357fbbc</anchor>
      <arglist>(const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__MUMPS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_Singular/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Singular/</path>
    <filename>Test__Singular_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__Singular_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_SuperLU/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_SuperLU/</path>
    <filename>Test__SuperLU_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Superlu_8h" name="Amesos_Superlu.h" local="yes" imported="no">Amesos_Superlu.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__SuperLU_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0003b8b44abab9215d4232dbc357fbbc</anchor>
      <arglist>(const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__SuperLU_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_SuperLU_DIST/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_SuperLU_DIST/</path>
    <filename>Test__SuperLU__DIST_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Superludist_8h" name="Amesos_Superludist.h" local="yes" imported="no">Amesos_Superludist.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__SuperLU__DIST_2cxx__main_8cpp.html</anchorfile>
      <anchor>ae846d2e093b2555ad95a4f5437924826</anchor>
      <arglist>(bool verbose, const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__SuperLU__DIST_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_UMFPACK/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_UMFPACK/</path>
    <filename>Test__UMFPACK_2cxx__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Umfpack_8h" name="Amesos_Umfpack.h" local="yes" imported="no">Amesos_Umfpack.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>bool</type>
      <name>CheckError</name>
      <anchorfile>Test__UMFPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0003b8b44abab9215d4232dbc357fbbc</anchor>
      <arglist>(const Epetra_RowMatrix &amp;A, const Epetra_MultiVector &amp;x, const Epetra_MultiVector &amp;b, const Epetra_MultiVector &amp;x_exact)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__UMFPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_memleak_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_KLU/</path>
    <filename>cxx__memleak__main_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__Klu_8h" name="Amesos_Klu.h" local="yes" imported="no">Amesos_Klu.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildMap</name>
      <anchorfile>cxx__memleak__main_8cpp.html</anchorfile>
      <anchor>a848975310fc5cb2f4427c3c960bee39f</anchor>
      <arglist>(Epetra_Comm &amp;Comm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>buildMatrix</name>
      <anchorfile>cxx__memleak__main_8cpp.html</anchorfile>
      <anchor>a463cf7fb3c2a93cb644662369643fede</anchor>
      <arglist>(Epetra_Map &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__memleak__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Test_Basic/DoNothing.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>Test__Basic_2DoNothing_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Test__Basic_2DoNothing_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestOptions/DoNothing.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestOptions_2DoNothing_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestOptions_2DoNothing_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Epetra_SLU.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>Epetra__SLU_8cpp</filename>
    <includes id="Epetra__SLU_8h" name="Epetra_SLU.h" local="yes" imported="no">Epetra_SLU.h</includes>
    <class kind="struct">SLUData</class>
    <namespace>SLU</namespace>
    <member kind="typedef">
      <type>int</type>
      <name>int_t</name>
      <anchorfile>namespaceSLU.html</anchorfile>
      <anchor>a63ea4864076bf60a5fe72f332e75b5ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Epetra_SLU.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>Epetra__SLU_8h</filename>
    <class kind="class">Epetra_SLU</class>
  </compound>
  <compound kind="file">
    <name>example_AmesosFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>example__AmesosFactory_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>example__AmesosFactory_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example_AmesosFactory_HB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>example__AmesosFactory__HB_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>example__AmesosFactory__HB_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example_AmesosFactory_Tridiag.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>example__AmesosFactory__Tridiag_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>example__AmesosFactory__Tridiag_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example_MC64.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>example__MC64_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos__MC64_8h" name="Amesos_MC64.h" local="yes" imported="no">Amesos_MC64.h</includes>
    <class kind="class">Ifpack_ReorderOperator</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>example__MC64_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index.doc</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/browser/doc/</path>
    <filename>index_8doc</filename>
  </compound>
  <compound kind="file">
    <name>NewMatNewMap.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>NewMatNewMap_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SmallRowPermute</name>
      <anchorfile>NewMatNewMap_8cpp.html</anchorfile>
      <anchor>ae3690139196aa1c250007b810f46e783</anchor>
      <arglist>(int in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>BigRowPermute</name>
      <anchorfile>NewMatNewMap_8cpp.html</anchorfile>
      <anchor>a6abd1136e3b602556337c9e394df5ca9</anchor>
      <arglist>(int in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NoPermute</name>
      <anchorfile>NewMatNewMap_8cpp.html</anchorfile>
      <anchor>a991aad27330958bbc49ee4fefabd8389</anchor>
      <arglist>(int in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SmallColPermute</name>
      <anchorfile>NewMatNewMap_8cpp.html</anchorfile>
      <anchor>ae883b4c532b4ac760c99e4041fa9b2f1</anchor>
      <arglist>(int in)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>NewMatNewMap</name>
      <anchorfile>NewMatNewMap_8cpp.html</anchorfile>
      <anchor>a98519cd1f530bd7958c2e3a4cb37a141</anchor>
      <arglist>(Epetra_CrsMatrix &amp;In, int Diagonal, int ReindexRowMap, int ReindexColMap, int RangeMapType, int DomainMapType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>NewMatNewMap.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>NewMatNewMap_8h</filename>
    <member kind="function">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>NewMatNewMap</name>
      <anchorfile>NewMatNewMap_8h.html</anchorfile>
      <anchor>a98519cd1f530bd7958c2e3a4cb37a141</anchor>
      <arglist>(Epetra_CrsMatrix &amp;In, int Diagonal, int ReindexRowMap, int ReindexColMap, int RangeMapType, int DomainMapType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartialFactorization.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>PartialFactorization_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OUR_CHK_ERR</name>
      <anchorfile>PartialFactorization_8cpp.html</anchorfile>
      <anchor>adc2f11358af130b09f99f102d95f2cee</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PartialFactorizationOneStep</name>
      <anchorfile>PartialFactorization_8cpp.html</anchorfile>
      <anchor>a4f8bb5fb28bb7e5f6489639faf03c5f8</anchor>
      <arglist>(const char *AmesosClass, const Epetra_Comm &amp;Comm, bool transpose, bool verbose, Teuchos::ParameterList ParamList, Epetra_CrsMatrix *&amp;Amat, double Rcond, int Steps)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PartialFactorization</name>
      <anchorfile>PartialFactorization_8cpp.html</anchorfile>
      <anchor>a9ad16be36426bb8e1fb759d037248b6b</anchor>
      <arglist>(const char *AmesosClass, const Epetra_Comm &amp;Comm, bool transpose, bool verbose, Teuchos::ParameterList ParamList, Epetra_CrsMatrix *&amp;Amat, double Rcond)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>MaxNumSteps</name>
      <anchorfile>PartialFactorization_8cpp.html</anchorfile>
      <anchor>a3f12667612df1528ef0117199f0596ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PartialFactorization.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>PartialFactorization_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>PartialFactorization</name>
      <anchorfile>PartialFactorization_8h.html</anchorfile>
      <anchor>a9ad16be36426bb8e1fb759d037248b6b</anchor>
      <arglist>(const char *AmesosClass, const Epetra_Comm &amp;Comm, bool transpose, bool verbose, Teuchos::ParameterList ParamList, Epetra_CrsMatrix *&amp;Amat, double Rcond)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PerformOneSolveAndTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>PerformOneSolveAndTest_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <includes id="PartialFactorization_8h" name="PartialFactorization.h" local="yes" imported="no">PartialFactorization.h</includes>
    <includes id="NewMatNewMap_8h" name="NewMatNewMap.h" local="yes" imported="no">NewMatNewMap.h</includes>
    <includes id="Amesos__TestRowMatrix_8h" name="Amesos_TestRowMatrix.h" local="yes" imported="no">Amesos_TestRowMatrix.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>OUR_CHK_ERR</name>
      <anchorfile>PerformOneSolveAndTest_8cpp.html</anchorfile>
      <anchor>adc2f11358af130b09f99f102d95f2cee</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PerformOneSolveAndTest</name>
      <anchorfile>PerformOneSolveAndTest_8cpp.html</anchorfile>
      <anchor>a3186802a298ccfa170ffad96c5d2b327</anchor>
      <arglist>(const char *AmesosClass, int EpetraMatrixType, const Epetra_Comm &amp;Comm, bool transpose, bool verbose, Teuchos::ParameterList ParamList, Epetra_CrsMatrix *&amp;InMat, int Levels, const double Rcond, double &amp;relerror, double &amp;relresidual, int ExpectedError)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PerformOneSolveAndTest.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>PerformOneSolveAndTest_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>PerformOneSolveAndTest</name>
      <anchorfile>PerformOneSolveAndTest_8h.html</anchorfile>
      <anchor>a517e3f4434ffe37ecb78fa789d521df3</anchor>
      <arglist>(const char *AmesosClass, int EpetraMatrixType, const Epetra_Comm &amp;Comm, bool transpose, bool verbose, Teuchos::ParameterList ParamList, Epetra_CrsMatrix *&amp;Amat, int Levels, const double Rcond, double &amp;relerror, double &amp;relresidual, int ExpectedError=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>pk.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>pk_8h</filename>
    <member kind="function">
      <type>cholmod_triplet *</type>
      <name>read_triplet</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a2c89c4a13e2f3f7c64dd587d09888318</anchor>
      <arglist>(FILE *, cholmod_common *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>my_handler</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a652833e9127204e287ffe9b7f9a6dbac</anchor>
      <arglist>(int status, char *msg)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>my_malloc2</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a5caaa59986ee6cb1d64419977a39aa1c</anchor>
      <arglist>(size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>my_calloc2</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a74835a99c6be04ab8746d2d2e29b9b01</anchor>
      <arglist>(size_t n, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void *</type>
      <name>my_realloc2</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>ab2b5a79ee8b8be93c374defaba5f4da7</anchor>
      <arglist>(void *p, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>my_free2</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>acc10b908260f2fb478fef61106d5a15d</anchor>
      <arglist>(void *p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>normal_memory_handler</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a621e4c382de1c82340f6cea912fe76e8</anchor>
      <arglist>(cholmod_common *cm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>test_memory_handler</name>
      <anchorfile>pk_8h.html</anchorfile>
      <anchor>a4191c2b46fc1de36c27f9619060b340b</anchor>
      <arglist>(cholmod_common *cm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>run_pk.c</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>run__pk_8c</filename>
    <member kind="function">
      <type>int</type>
      <name>PK_main</name>
      <anchorfile>run__pk_8c.html</anchorfile>
      <anchor>aff267ead788a24ed1630568d0e551e69</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>run__pk_8c.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RunParaklete.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>RunParaklete_8cpp</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <member kind="function">
      <type>int</type>
      <name>MyCreateCrsMatrix</name>
      <anchorfile>RunParaklete_8cpp.html</anchorfile>
      <anchor>afa6f9c784c9e8277e4b180f23277885a</anchor>
      <arglist>(const char *in_filename, const Epetra_Comm &amp;Comm, Epetra_Map *&amp;readMap, const bool transpose, const bool distribute, bool &amp;symmetric, Epetra_CrsMatrix *&amp;Matrix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>RunParaklete_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simpleStratimikosSolve.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>simpleStratimikosSolve_8cpp</filename>
    <includes id="simpleStratimikosSolve_8hpp" name="simpleStratimikosSolve.hpp" local="yes" imported="no">simpleStratimikosSolve.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>simpleStratimikosSolve</name>
      <anchorfile>simpleStratimikosSolve_8cpp.html</anchorfile>
      <anchor>a1631b5a680a556bf520f830eac60eb66</anchor>
      <arglist>(Epetra_CrsMatrix const &amp;epetra_A, Epetra_MultiVector const &amp;epetra_B, Epetra_MultiVector *epetra_X, Teuchos::ParameterList *paramList)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>simpleStratimikosSolve.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>simpleStratimikosSolve_8hpp</filename>
    <member kind="function">
      <type>int</type>
      <name>simpleStratimikosSolve</name>
      <anchorfile>simpleStratimikosSolve_8hpp.html</anchorfile>
      <anchor>a1631b5a680a556bf520f830eac60eb66</anchor>
      <arglist>(Epetra_CrsMatrix const &amp;epetra_A, Epetra_MultiVector const &amp;epetra_B, Epetra_MultiVector *epetra_X, Teuchos::ParameterList *paramList)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SparseDirectTimingVars.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>SparseDirectTimingVars_8cpp</filename>
    <includes id="SparseDirectTimingVars_8h" name="SparseDirectTimingVars.h" local="yes" imported="no">SparseDirectTimingVars.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseDirectTimingVars.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>SparseDirectTimingVars_8h</filename>
    <includes id="SparseSolverResult_8h" name="SparseSolverResult.h" local="yes" imported="no">SparseSolverResult.h</includes>
    <class kind="class">SparseDirectTimingVars</class>
    <member kind="define">
      <type>#define</type>
      <name>SPARSE_DIRECT_TIMINGS</name>
      <anchorfile>SparseDirectTimingVars_8h.html</anchorfile>
      <anchor>abcdb0347b1f6398d84e87640c75801d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SparseSolverResult.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>SparseSolverResult_8cpp</filename>
    <includes id="SparseSolverResult_8h" name="SparseSolverResult.h" local="yes" imported="no">SparseSolverResult.h</includes>
  </compound>
  <compound kind="file">
    <name>SparseSolverResult.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/Test_Basic/</path>
    <filename>SparseSolverResult_8h</filename>
    <class kind="class">SparseSolverResult</class>
    <member kind="variable">
      <type>const double</type>
      <name>UnUsedDbl</name>
      <anchorfile>SparseSolverResult_8h.html</anchorfile>
      <anchor>a6f755a00378a6daa6a07d661a9d19e50</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SpoolesOO.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>SpoolesOO_8cpp</filename>
    <includes id="SpoolesOO_8h" name="SpoolesOO.h" local="yes" imported="no">SpoolesOO.h</includes>
  </compound>
  <compound kind="file">
    <name>SpoolesOO.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>SpoolesOO_8h</filename>
    <class kind="class">SpoolesOO</class>
  </compound>
  <compound kind="file">
    <name>stratimikos_example.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>stratimikos__example_8cpp</filename>
    <includes id="simpleStratimikosSolve_8hpp" name="simpleStratimikosSolve.hpp" local="yes" imported="no">simpleStratimikosSolve.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>bool</type>
      <name>TestSingleStratimikosSolver</name>
      <anchorfile>stratimikos__example_8cpp.html</anchorfile>
      <anchor>a1461591ec304315594361f5255ef884d</anchor>
      <arglist>(Teuchos::ParameterList *paramList_inout, const bool dumpAll, Teuchos::FancyOStream *out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>stratimikos__example_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Superludist2_OO.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>Superludist2__OO_8cpp</filename>
    <includes id="Superludist2__OO_8h" name="Superludist2_OO.h" local="yes" imported="no">Superludist2_OO.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>KLOPTER</name>
      <anchorfile>Superludist2__OO_8cpp.html</anchorfile>
      <anchor>ad7db1c948d705e2a2493dc6605e2fa0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EPETRA_CHK_ERR</name>
      <anchorfile>Superludist2__OO_8cpp.html</anchorfile>
      <anchor>aa0e6213c79c7a88c47f7013df503dc6a</anchor>
      <arglist>(xxx)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SLU_NumProcRows</name>
      <anchorfile>Superludist2__OO_8cpp.html</anchorfile>
      <anchor>a242b8b9eb7b28f076edb7f92d5650af7</anchor>
      <arglist>(int NumProcs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Superludist2_OO.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>Superludist2__OO_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <class kind="class">Superludist2_OO</class>
  </compound>
  <compound kind="file">
    <name>SuperludistOO.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>SuperludistOO_8cpp</filename>
    <includes id="SuperludistOO_8h" name="SuperludistOO.h" local="yes" imported="no">SuperludistOO.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <member kind="function">
      <type>int</type>
      <name>SLU_NumRows</name>
      <anchorfile>SuperludistOO_8cpp.html</anchorfile>
      <anchor>a0f8794b570dfc8b149a6ec4ef8e897bb</anchor>
      <arglist>(int NumProcs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SuperludistOO.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/src/src-repository/</path>
    <filename>SuperludistOO_8h</filename>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <class kind="class">SuperludistOO</class>
  </compound>
  <compound kind="file">
    <name>TestAllClasses.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestAllClasses_8cpp</filename>
    <includes id="TestAllClasses_8h" name="TestAllClasses.h" local="yes" imported="no">TestAllClasses.h</includes>
    <includes id="TestOtherClasses_8h" name="TestOtherClasses.h" local="yes" imported="no">TestOtherClasses.h</includes>
    <includes id="TestSuperludist_8h" name="TestSuperludist.h" local="yes" imported="no">TestSuperludist.h</includes>
    <includes id="TestScalapack_8h" name="TestScalapack.h" local="yes" imported="no">TestScalapack.h</includes>
    <includes id="TestKlu_8h" name="TestKlu.h" local="yes" imported="no">TestKlu.h</includes>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <member kind="function">
      <type>int</type>
      <name>TestAllClasses</name>
      <anchorfile>TestAllClasses_8cpp.html</anchorfile>
      <anchor>ae8659fbf4b4847b2efe2aff34a95b1ad</anchor>
      <arglist>(const std::vector&lt; std::string &gt; AmesosClasses, int EpetraMatrixType, const std::vector&lt; bool &gt; AmesosClassesInstalled, Epetra_CrsMatrix *&amp;Amat, const bool transpose, const bool verbose, const bool symmetric, const int Levels, const double Rcond, int Diagonal, int ReindexRowMap, int ReindexColMap, int RangeMapType, int DomainMapType, bool distribute, const char *filename, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestAllClasses.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestAllClasses_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>TestAllClasses</name>
      <anchorfile>TestAllClasses_8h.html</anchorfile>
      <anchor>ae8659fbf4b4847b2efe2aff34a95b1ad</anchor>
      <arglist>(const std::vector&lt; std::string &gt; AmesosClasses, int EpetraMatrixType, const std::vector&lt; bool &gt; AmesosClassesInstalled, Epetra_CrsMatrix *&amp;Amat, const bool transpose, const bool verbose, const bool symmetric, const int Levels, const double Rcond, int Diagonal, int ReindexRowMap, int ReindexColMap, int RangeMapType, int DomainMapType, bool distribute, const char *filename, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestKlu.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestKlu_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <includes id="TestKlu_8h" name="TestKlu.h" local="yes" imported="no">TestKlu.h</includes>
    <member kind="function">
      <type>int</type>
      <name>TestKlu</name>
      <anchorfile>TestKlu_8cpp.html</anchorfile>
      <anchor>a6cbafb03a7d5e57449dcbb144aa1682f</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, const bool transpose, const bool verbose, const int Levels, const double Rcond, Teuchos::ParameterList ParamList, bool RowMapEqualsColMap, bool TestAddZeroToDiag, int ExpectedError, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestKlu.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestKlu_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>TestKlu</name>
      <anchorfile>TestKlu_8h.html</anchorfile>
      <anchor>a6cbafb03a7d5e57449dcbb144aa1682f</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, const bool transpose, const bool verbose, const int Levels, const double Rcond, Teuchos::ParameterList ParamList, bool RowMapEqualsColMap, bool TestAddZeroToDiag, int ExpectedError, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestOptions.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestOptions_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="Amesos__BaseSolver_8h" name="Amesos_BaseSolver.h" local="yes" imported="no">Amesos_BaseSolver.h</includes>
    <includes id="Amesos__ConfigDefs_8h" name="Amesos_ConfigDefs.h" local="yes" imported="no">Amesos_ConfigDefs.h</includes>
    <includes id="CrsMatrixTranspose_8h" name="CrsMatrixTranspose.h" local="yes" imported="no">CrsMatrixTranspose.h</includes>
    <includes id="TestAllClasses_8h" name="TestAllClasses.h" local="yes" imported="no">TestAllClasses.h</includes>
    <includes id="NewMatNewMap_8h" name="NewMatNewMap.h" local="yes" imported="no">NewMatNewMap.h</includes>
    <member kind="function">
      <type>int</type>
      <name>CreateCrsMatrix</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>a82c189dc1b46f17ceb36754085c3fa9d</anchor>
      <arglist>(const char *in_filename, const Epetra_Comm &amp;Comm, Epetra_Map *&amp;readMap, const bool transpose, const bool distribute, bool &amp;symmetric, Epetra_CrsMatrix *&amp;Matrix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>TestErrors</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>a310b601af0b56744e16aa74d61714d49</anchor>
      <arglist>(const std::vector&lt; bool &gt; AmesosClassesInstalled, const char *filename, Epetra_MpiComm &amp;Comm, const bool verbose, int &amp;NumTests)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>TestOneMatrix</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>aff2491b586a9711f3174432d59037f04</anchor>
      <arglist>(const std::vector&lt; bool &gt; AmesosClassesInstalled, const char *filename, Epetra_MpiComm &amp;Comm, const bool verbose, const bool PerformDiagonalTest, double Rcond, int &amp;NumTests)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NextMain</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>ae58a375b25bc5bb752a2ee5e54c6ce99</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; string &gt;</type>
      <name>AmesosClasses</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>ae8a7fd06d10983fa5dc6fc9a307e3722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NumAmesosClasses</name>
      <anchorfile>TestOptions_8cpp.html</anchorfile>
      <anchor>ab3517e5f9711a1d4afeb9180dc27c808</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestOtherClasses.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestOtherClasses_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="TestOtherClasses_8h" name="TestOtherClasses.h" local="yes" imported="no">TestOtherClasses.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <member kind="function">
      <type>int</type>
      <name>TestOtherClasses</name>
      <anchorfile>TestOtherClasses_8cpp.html</anchorfile>
      <anchor>a44c24b616ebd85da82cb6e41940dc21d</anchor>
      <arglist>(const char *AmesosClass, int EpetraMatrixType, Epetra_CrsMatrix *&amp;Amat, const bool transpose, const bool verbose, const int Levels, const double Rcond, bool RowMapEqualsColMap, bool TestAddZeroToDiag, int ExpectedError, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestOtherClasses.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestOtherClasses_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>TestOtherClasses</name>
      <anchorfile>TestOtherClasses_8h.html</anchorfile>
      <anchor>a44c24b616ebd85da82cb6e41940dc21d</anchor>
      <arglist>(const char *AmesosClass, int EpetraMatrixType, Epetra_CrsMatrix *&amp;Amat, const bool transpose, const bool verbose, const int Levels, const double Rcond, bool RowMapEqualsColMap, bool TestAddZeroToDiag, int ExpectedError, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestScalapack.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestScalapack_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <includes id="TestScalapack_8h" name="TestScalapack.h" local="yes" imported="no">TestScalapack.h</includes>
    <member kind="function">
      <type>int</type>
      <name>TestScalapack</name>
      <anchorfile>TestScalapack_8cpp.html</anchorfile>
      <anchor>ab5ae16cb3fc407f0eb335451df84fe04</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, bool transpose, bool verbose, int Levels, const double Rcond, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestScalapack.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestScalapack_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>TestScalapack</name>
      <anchorfile>TestScalapack_8h.html</anchorfile>
      <anchor>ab5ae16cb3fc407f0eb335451df84fe04</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, bool transpose, bool verbose, int Levels, const double Rcond, double &amp;maxrelerror, double &amp;maxrelresidual, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestSuperludist.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestSuperludist_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <includes id="PerformOneSolveAndTest_8h" name="PerformOneSolveAndTest.h" local="yes" imported="no">PerformOneSolveAndTest.h</includes>
    <member kind="function">
      <type>int</type>
      <name>TestSuperludist</name>
      <anchorfile>TestSuperludist_8cpp.html</anchorfile>
      <anchor>a32fa34ad44e73acab504cc58f74ee62c</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, bool transpose, bool verbose, int Levels, const double Rcond, double &amp;maxrelerror, double &amp;maxrelresidual, const char *filename, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestSuperludist.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/test/TestOptions/</path>
    <filename>TestSuperludist_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>TestSuperludist</name>
      <anchorfile>TestSuperludist_8h.html</anchorfile>
      <anchor>a32fa34ad44e73acab504cc58f74ee62c</anchor>
      <arglist>(Epetra_CrsMatrix *&amp;Amat, int EpetraMatrixType, bool transpose, bool verbose, int Levels, const double Rcond, double &amp;maxrelerror, double &amp;maxrelresidual, const char *filename, int &amp;NumTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Thyra_AmesosLinearOpWithSolveFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/amesos/example/</path>
    <filename>Thyra__AmesosLinearOpWithSolveFactory_8cpp</filename>
    <includes id="Amesos_8h" name="Amesos.h" local="yes" imported="no">Amesos.h</includes>
    <namespace>Thyra</namespace>
  </compound>
  <compound kind="class">
    <name>Amesos</name>
    <filename>classAmesos.html</filename>
    <member kind="function">
      <type>Amesos_BaseSolver *</type>
      <name>Create</name>
      <anchorfile>classAmesos.html</anchorfile>
      <anchor>a57272d41cf59138dd51b530eb9fd90c9</anchor>
      <arglist>(const char *ClassType, const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type>Amesos_BaseSolver *</type>
      <name>Create</name>
      <anchorfile>classAmesos.html</anchorfile>
      <anchor>a09c86096a4bc0b03ae0661b287956468</anchor>
      <arglist>(const std::string CT, const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Query</name>
      <anchorfile>classAmesos.html</anchorfile>
      <anchor>a9929aa33f9b760a4a3a04dba8f9a75b1</anchor>
      <arglist>(const char *ClassType)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>Query</name>
      <anchorfile>classAmesos.html</anchorfile>
      <anchor>a3f735ee973b11c6623f86d421c24388b</anchor>
      <arglist>(const std::string CT)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::ParameterList</type>
      <name>GetValidParameters</name>
      <anchorfile>classAmesos.html</anchorfile>
      <anchor>a5c5193d68c0440f85de2ec7c7b582d55</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_BaseSolver</name>
    <filename>classAmesos__BaseSolver.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_BaseSolver</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a28fb5c8d3f24e0bc1c146a79e0fd1c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a8c7d37f010f456e73fecff141362cd6f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a889d3a41a25a09d5ab22bcdcaf188bd4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a26d1a31bac2d1a734d00ba239c259c39</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a8d15300a27598a698d2d489a785babf3</anchor>
      <arglist>(bool UseTranspose)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a0d91ad73d813c38374063d07ef2416d3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>ace346398dfa98755ccefc1e42ed8c5e3</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a13dec34cc1c47ad03d7b39630e9e31cb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>aaac5fe525b166a0bee29ba285fd3d355</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a57a45640dc90232d4667558a3ae54033</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a1c73813b26b15b5d053ce52161cc3d98</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a23712bae409ebf0306f52ae8ab8b1382</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>ac788753a8661a704ac0e2c6314f90b6c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a6e4d04e6cd36b84912402e3e0f0e8684</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a247d675b16a7dd069edb21ad4faad952</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameterList</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a76452eda6f69d3d4e60dba30bf539d16</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>ab80b5d19fa26904497e2d6c7e53c8d37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>a824fa1c114b4f945af0345c0ab37f5fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__BaseSolver.html</anchorfile>
      <anchor>ae849c3d447e9f022df3bfd141322488e</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Btf</name>
    <filename>classAmesos__Btf.html</filename>
    <base>Amesos_BaseSolver</base>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a723aabdae1f4082f5e6961bf69f82d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a8ebd3cd138ff6fb7673045c81bb98b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>PrintTiming_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a388ae5766f795bc90a6f482ae074780c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>PrintStatus_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>ab1d65b5184593dcf56557ec4c2a56d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>ComputeVectorNorms_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a0d02a356a4fc2c90c54eb1dbed488566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>ComputeTrueResidual_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a9a52a15c1a087c4df3de03a6dc9de0dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>verbose_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>afa9bf81b584d066829dd7d12851c1ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>debug_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>ac1208e6fe20f820ac7deddbddc523855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>ConTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a45b07857c184029a91fa9c61142daf06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>SymTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>af0d0bf7bfc3890e946924a4773f81c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>NumTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>af1bb83c0751c2b2910e54f413ecc6ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>SolTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a8a84eca046260fd662d5789d822547eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>VecTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>aeab4ea02f61e0ad4204cbab46c0591ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>MatTime_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a68fdfd657f08a8115abc7ba07a6ab2b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumSymbolicFact_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a04a7b899ad7c7a68875d4ca1c3493c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumNumericFact_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a0a59dbe81a7eff8e23dc91429f205460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumSolve_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a84255749d169eee40acaf3adb326abc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_Time *</type>
      <name>Time_</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a6882dde78c71729212a8581432131bd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Btf</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a0d813d090ef24d60601960b53516d42f</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Btf</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a6b2b74b922f44aefce1912bbe0459d74</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a2e369288b4df8a85173a37c25ebc73fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a4904b3332b0f20249bf5f07af9490720</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>ac19a1d24398481a27dfe3975b6ccb1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>ac410770c03a54d7268ae718251cddfae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>af5743c88a7c562827e0518603394b244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>af9396e015a3ee9acb5fc83dff9ebd941</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a5622c4d9f209b797fb82fdb7875f7326</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>aa9c41b3472168a1b075dbfd121a8210e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>ac7f2488a209e2548985c04efc06f550d</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a24e09bc3b92ab87c89711ded6e3cf9b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a898efbae89818fa45870e5a419c0070d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a8c4cc5ff801debb11dfadcbf5db3137f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>a247b3a06c547b80bc90bcefb485d1fd7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Btf.html</anchorfile>
      <anchor>af3c15813d422167152a3a912ba9b1eff</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Component</name>
    <filename>classAmesos__Component.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_Component</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>afcc59a1fb5ed61cb5fef8d5caec8e8ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>PartialFactorization</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>af2db4f09f4f5e5cdc186cacea212ca14</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>Lsolve</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>aef51b3b00376491465aeedc0f4d636e4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>Usolve</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>af7b20690648b56b6b9e146529a98a07b</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetRowPermutation</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>a4e68f8f8df4c6fe3b2c57f8c570b0ac8</anchor>
      <arglist>(int *RowPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetColumnPermutation</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>a37866661c1666d2feac2014245af4f98</anchor>
      <arglist>(int *ColumnPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetSubMatrixSize</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>a20eec28bf6c6be8fddd9d91f279a5231</anchor>
      <arglist>(int SubMatrixSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetRowPermutation</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>a295351bc5d2e81a87a476c97fe7b3b9f</anchor>
      <arglist>(int **RowPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetColumnPermutation</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>afe731225a7a58740969f21b017e74369</anchor>
      <arglist>(int **ColumnPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetSubMatrixSize</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>abfc5bf0034e8aed969dd47768395f63e</anchor>
      <arglist>(int *SubMatrixSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetSchurComplement</name>
      <anchorfile>classAmesos__Component.html</anchorfile>
      <anchor>ad1979d6a5379e985dfd9e08806f3e02a</anchor>
      <arglist>(Epetra_CrsMatrix *SchurComplement)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_ComponentBaseSolver</name>
    <filename>classAmesos__ComponentBaseSolver.html</filename>
    <base virtualness="virtual">Amesos_BaseSolver</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_ComponentBaseSolver</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>afe2b2fe6572dafcbe4ca4f6b9dc79cfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>PartialFactorization</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a2a31b7ac7c52f5e0007c3b2a71a06df4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>Lsolve</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a3d49de77d6a8a90da6489d1865e052a4</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>*virtual int</type>
      <name>LsolveStart</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a2ac4d57062440165f973b263a17e9e34</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>LsolvePart</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>aaebe0289c9c8225ff713b80c3440da57</anchor>
      <arglist>(int begin, int end)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>Usolve</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>ae9b52ba27594bbbf84b62e6d8d065d1c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>*virtual int</type>
      <name>UsolveStart</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a69cd6f2c3207d7b8c866a996524554a9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>UsolvePart</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>af85a29ad5f881baee42182bd244924d9</anchor>
      <arglist>(int begin, int end)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetRowPermutation</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>af394d18564218754c4b7664fcb6c3602</anchor>
      <arglist>(int *RowPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetColumnPermutation</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>aff1fbbe3f49f7a7067619fd04104b89a</anchor>
      <arglist>(int *ColumnPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>SetSubMatrixSize</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a3df3ac2fd14501e4181ad4ae8e618cd0</anchor>
      <arglist>(int SubMatrixSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetRowPermutation</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a7a3adf0f80f0b3f551de9ef443dcb3bd</anchor>
      <arglist>(int **RowPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetColumnPermutation</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a2eebb5bd630b53db94a1b5583302ef9a</anchor>
      <arglist>(int **ColumnPermutation)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetSubMatrixSize</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>ade687c4845c4046c20d4043058b4b555</anchor>
      <arglist>(int *SubMatrixSize)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>GetSchurComplement</name>
      <anchorfile>classAmesos__ComponentBaseSolver.html</anchorfile>
      <anchor>a2dcb1c73ed004873e03e3e03f0553e0f</anchor>
      <arglist>(Epetra_CrsMatrix *SchurComplement)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Control</name>
    <filename>classAmesos__Control.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_Control</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a6b8fa70ce5cdeb6200c916c0b2fcb33e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Control</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a23508029154696284096c066dff8ad94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetControlParameters</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a2ca38eea0284b75cacbbfc2112434b55</anchor>
      <arglist>(const Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>AddToDiag_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>ae19396011118fc145acf7b3110205773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>refactorize_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>ab7b803be0c171e50e9628db6998c0622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rcond_threshold_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a89fc12d53f04e61a3f469c794d4a196f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ScaleMethod_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a229d6194a7eb7a29b8cf8a3a23f0097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>AddZeroToDiag_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>aa075826db8db6ed51c3d85947f0c52ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MatrixProperty_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>af6404ec63d44e3f2b09e6fb2f524d322</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MaxProcesses_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a44a76ccd169f7221600aaa993ee16d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>Reindex_</name>
      <anchorfile>classAmesos__Control.html</anchorfile>
      <anchor>a9c7aa0ec15f72bcd8c54842f47fe23d4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Dscpack</name>
    <filename>classAmesos__Dscpack.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="function" protection="private">
      <type>const Epetra_Import &amp;</type>
      <name>Importer</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aec5edba44d6c968b4b4366dfbc3a1e7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>DscRowMap</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a2a030fd5be38143ff203f065d62d5174</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>DscColMap</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a46abf52be1cd8cbf09d5909f928ea2ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a0b8e3aa09eebc65b044557bdafe0ce04</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a45a9035d02a3fe7b7cbbd67be55ad063</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aee63f2378df17ef1cab4f30d6d296d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_Dscpack_Pimpl &gt;</type>
      <name>PrivateDscpackData_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a66bece089afbd058246bc5cb7df01e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>FirstCallToSolve_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a5350c7ae0f9cc51054d22eb94effb5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>A_and_LU_built</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a5326c3a9a710bd2e29b784f691ec9bfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>GlobalStructNewColNum</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>afe0555649215690108a40358246b3986</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>GlobalStructNewNum</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a0ce36248d8ba4effd9bbdba5809b6b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>GlobalStructOwner</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>adbcb6013ea9a68966e8169aeba95720e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>LocalStructOldNum</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>af1e8e08896eb8098c4e9c8956789f960</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MyDscRank</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a784f46d19e206a92024cc360781bc48a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>DscNumProcs</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a3fb1207e235b36fabcef050ac3cd66b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumLocalCols</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a8bc56bd75e612625e9d9b998dfd35022</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>ab3630b9634fcfbcd8ea17ad8fe586c19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumLocalStructs</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a22acc024d8aa5c636d2ad1707bd7c338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumLocalNonz</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a6265ecacac9837eba2ff8a8cbc4a7e7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_Import &gt;</type>
      <name>Importer_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a55132b541821bbfbe53a305589a2caec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_Map &gt;</type>
      <name>DscColMap_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aa4762fb40ff596bfeead178653db5f3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_Map &gt;</type>
      <name>DscRowMap_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a4d22688e7ceb22e239435feea17b9bba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MaxProcs_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a642958cbb275b9d80c46482d46a358ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a937f9812bba4b9268eadfff69858d847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a905025afac550b06d69e50271a56d2ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a57aac9cb714140557ff5b7a967102e3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a9880546daa9c8793920f3d94aee9b00d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aa05518eb58ab3f729788dbe853004572</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a544aaeec4c0a693f0c9dfc24537dced8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a951aba762f77e5db7d6a55af19c9f8eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotalMemory_</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a6dade939f01b6009a0500fae744ed267</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Dscpack</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aab5e89521cf47c479c2546655c1d9a0a</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Dscpack</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aeb4dd45f293e02b530fe90e0d851f4de</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>aeb63b1e829dec6a7087e06fddc2a752a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a0839eb92e791ef69f7b1fe35e0174c2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a9807b05f9e1157172cfa31b8743d01d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>ae13c44d1f2a36d2b48d2fd5d3e3c753b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>ab776cd050f03a1bce06a85873bc2d59d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>af3ae209124e98c47f8a7e31af00dda47</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>ad16217b971217833fe9cc169db33212a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a394738dff13196143e3a00115d0e97be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a9fb3915d4acbbc06453dd46068970a48</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>afc3296339d8f8b6a642667645d8d03bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a498351bce33ff10f814b6e8086f9f5c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>afa89dbaa360378aacd2802e6de2c6f33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>ac877f18537618f3ed65471914c7257e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a982a8e6da5e4844d69af6dee5816209e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Dscpack.html</anchorfile>
      <anchor>a394a59c9d5cafd4b4b72fcadfd2defc5</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Dscpack_Pimpl</name>
    <filename>classAmesos__Dscpack__Pimpl.html</filename>
    <member kind="variable">
      <type>DSC_Solver</type>
      <name>MyDSCObject_</name>
      <anchorfile>classAmesos__Dscpack__Pimpl.html</anchorfile>
      <anchor>abe5345e43acaa88ec2b5e0dc7a57f334</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Klu</name>
    <filename>classAmesos__Klu.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SerialXlda_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a30be12f53f7fec7748cb8c42dccf63ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_Klu_Pimpl &gt;</type>
      <name>PrivateKluData_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a701a2d70e1edecf93917c87d70a36045</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndex_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a97a881480d6ccc178ab0b00f430e3b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndexRange_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ac90ec0b11f785a5bb33e42f75cbcbbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndexDomain_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a73e114fa19f033e6cd0c64d3e9eb19fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ap</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ad85e32368a7000c475128ec09488f97c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>VecAi</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>aae5e6853a2b726181b269f193c68ffe1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>VecAval</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a388537b13203e4434375753656b8a6cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>Aval</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a20060b082831a19da8465a07fd6de0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>Ai</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a0690d1b80dfe6a5b8077280463c4161d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>UseDataInPlace_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a849a35c8b890e7ad1c8e14fcc68fec5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long long</type>
      <name>numentries_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ad3b4f36e30b6360141affb6cfa80814c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long long</type>
      <name>NumGlobalElements_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>afc929a687946f135f0a2484fab21f8e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>RowMatrixA_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a8dddbfeb479db33fbe0a1a26dc20c9c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_CrsMatrix *</type>
      <name>CrsMatrixA_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a55f4286cdfe5036f12c6445995ea82cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a5e987ca37a1f2a98fc410e84211b8203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrixA_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a951f1a5a516be339039dad0cd5cb6327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>StdIndexMatrix_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ad86dba42828a2fd47313749264d1ead3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ae15f1383e8f12077deffe6d56b737293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>TrustMe_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a3c915dac5e537fd0aad7cf0d2787cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumVectors_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ada655d1d98a82b1381964599c2789d44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>SerialXBvalues_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>af71e82f2bb387a7000b059d6eced32a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>SerialBvalues_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a7cabc187432b4098f509537f01abc047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialB_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a2170cc0e07bb45b06a99c64b81b185e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialX_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a7504220e12ede3d0534e926fd288f9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialXextract_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a0f96d6ad099020f4539cc3c5f08c4707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialBextract_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a9e70cc4728e2e2a48e7f360a30f376c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a4ebdb682883ec665ae3f61f5b552bd73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a9e5ac927cf730dee8ec2a41cd823a0ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>ColIndicesV_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a60897a3447aacafdd5c515f0bb89f1cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>RowValuesV_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a87822d567226c2de72a476080c95535c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportToSerial_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a5e6e2f57e6fe53a5e6c5035d261f95af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportRangeToSerial_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a94db87d7c84e39d1ca47a9930b599579</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportDomainToSerial_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a5d9eb0159a46869eaa3d9cef06a5d724</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a71195c2812e7e062657c4af97859dcd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a263ae0afad8208eaee3de98f3fe1792d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>abaee19525dbeb19f512f41b2751baa13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a82a5afc28c96be2d048d676a609059c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>aadd5ff96f5a79500a9a649cffbf87290</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a19eaf0ab365cfe667537727d9e2eaf51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>adfe1c15c665d29bf93a6824e9eb02f73</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Klu</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a94316e86d8e1a85ab6befa5e7fd4f636</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Klu</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a5aa1c144c1ad55669438af6973be85ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a0244a35a6746c73a4be7298c2306119c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>aaffbe6406ff28dda2725107ee868a95e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>acc011a3e6760b3faef8031a2eb469552</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>aeddac5fafc76ba8565e813bde1a25f47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ad62e4dcc1dd838df6e223b01b84f337f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a4bdac02fb58a06b48ae3975b95e64632</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a216762fce26247aed8785aea81a32832</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>ac806261d9268f8eaa257e63f15bef688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a30b38ba9b6046df6e97480457314f8de</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a66da8ac92754a36f87c56644cb7aae32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a4da6d85a26a3f64377c52c77fa6b9431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a5905ae5576027b1b057f9bbf45d320ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a67cf883bff992817980d49734f785b58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a0899dfb36f9a9cbf45b334b27655dba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a8b7bfc56d2124ae11e507a320348778b</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>CreateLocalMatrixAndExporters</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a3bb4da4b95b90c2164afdc2ac8343ed3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ExportToSerial</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a71845280740fc4c916213f8d94774e55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToKluCRS</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>acc7188e1020720714ad75ac8f04f3ecd</anchor>
      <arglist>(bool firsttime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>acf2687212356562811ab6693b1ece63f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Klu.html</anchorfile>
      <anchor>a29f0ac0573b646a1b051168871fa7a04</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Klu_Pimpl</name>
    <filename>classAmesos__Klu__Pimpl.html</filename>
    <member kind="variable">
      <type>Teuchos::RCP&lt; klu_symbolic &gt;</type>
      <name>Symbolic_</name>
      <anchorfile>classAmesos__Klu__Pimpl.html</anchorfile>
      <anchor>a71333215e36aa1c19c51b4ffe7b656a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; klu_numeric &gt;</type>
      <name>Numeric_</name>
      <anchorfile>classAmesos__Klu__Pimpl.html</anchorfile>
      <anchor>af049d956d4a4cc3c75fddf0a480c47cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; klu_common &gt;</type>
      <name>common_</name>
      <anchorfile>classAmesos__Klu__Pimpl.html</anchorfile>
      <anchor>aac570a80c558120161930374f61a9f4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Lapack</name>
    <filename>classAmesos__Lapack.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="function" protection="protected">
      <type>const Epetra_RowMatrix *</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a69025a848b146b8500615633edab8497</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a9058c80b420ace28fd649e20de3fcd5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>long long</type>
      <name>NumGlobalRows64</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ae40a1a05ffcaa1e3b941b8688c74b097</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>NumMyRows</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a727448c001dca55c4834344f75331ef5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>abfa98be114ed2eadf2edb35e94b75eb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_RowMatrix &amp;</type>
      <name>SerialMatrix</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a8931527f7fd8249a4529e0a6470e3db5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_CrsMatrix &amp;</type>
      <name>SerialCrsMatrix</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab1e28e2c512776ef920ba15938c3528f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Epetra_Import &amp;</type>
      <name>MatrixImporter</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ae55803a3491c5e11541d7a518acfc58e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Epetra_Export &amp;</type>
      <name>RhsExporter</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab3603a66e23201bdbe056b9218259ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Epetra_Import &amp;</type>
      <name>SolutionImporter</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a25740e5da4ee6ef5db4b35425c16590d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>SolveSerial</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a669d2b76b99da23151eee9904dff1d60</anchor>
      <arglist>(Epetra_MultiVector &amp;X, const Epetra_MultiVector &amp;B)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>SolveDistributed</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>aff5d3a6d9027e13c36f4cbc348f37209</anchor>
      <arglist>(Epetra_MultiVector &amp;X, const Epetra_MultiVector &amp;B)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>DistributedToSerial</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a777f22488db6b592a2f9184e8bcfc396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>SerialToDense</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ae12af80431314ba970c98c1087940f8e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>DenseToFactored</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a2925100ec2949c4e1bc1f682ecb1ca0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>pl_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a28168ec8cd365cb61465f77c1199ae45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_RowMatrix &gt;</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab8e237b23b1d7150b9d5b496cb27c46f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrix_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>aae47bbb9b8de0ca46d8e2dd50c369e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a376846ed3063466b355baba43ecc9e67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>MatrixImporter_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ae1735b43a394a4b0b124b29bf84e24d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>RhsExporter_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a8ffb65e9b6ef91e6b077b0ee88ea9db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>SolutionImporter_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a5ca2c47ed27131bfe7fcaf5d276fe182</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_SerialDenseMatrix</type>
      <name>DenseMatrix_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a5d8771ec85e297235e37f7c516695110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_SerialDenseMatrix</type>
      <name>DenseLHS_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a7bd54bb0936f70655a37d15bdafc03f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_SerialDenseMatrix</type>
      <name>DenseRHS_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>aa8a17948ac5497cdc0a5d0f0f1f64284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_SerialDenseSolver</type>
      <name>DenseSolver_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>aa6c41b37aaff05daaf21d75a448815fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>aada86a486ba3094ab48b2798434849a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ad6a3c5cfacb93a9a662b854bf945b194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ad7cf0bbbd8f773afafca76427c08f703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a54aa7330f4bf5ed6944e696d491536e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a004deae5a482de5670a0de34193ec4f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>afed286c3ea038fdb35a2e97db6dd74c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a8bae20a336e061892a5c419e3a7c3784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>acd0383093a43b5507253c56054fb1360</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long long</type>
      <name>NumGlobalRows_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a48b25737b0210f9f41cf130f804ddd66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>long long</type>
      <name>NumGlobalNonzeros_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a38a6bae9c8810c91f6eea0492ac74e18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>ParameterList_</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a8cd132d6acad0831078af7fd760d7cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Lapack</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ae48f6d9ffdb12c40738b4c90a6783bd6</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Lapack</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a18149fbb4eb1b7771f77760182e0c0d2</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>af7ad7c6af5e8fde18998c36472a57d6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ac56c7d1fdefa8ca177904264fae70d38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a39dcdfed9f7c03e23f6cb73df9fdafac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a9d68deb4f8d4004c9977321ef4e1c6a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a007ae3765047453a3d33b08304434e47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a010e2075567e0137ae4c4d553b40a542</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a274c142a40dd054ea814bc3235bb90fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a8bac780f6f8cc8a391a9c159c37c3cf2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>adc3c943d897bea31d772371c600a7b64</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ac1bcfedde272793a75229cc68862e48a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ad9b94ce5bb8959fc4bf968b18f3e7698</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GEEV</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab43c0bab4c86a073ed3ae0b205e8dea7</anchor>
      <arglist>(Epetra_Vector &amp;Er, Epetra_Vector &amp;Ei)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a292feffe0d3383d0f16e4026a761f63e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>acd2a3cec4f6a8214228227a4a69e06ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab0d27845217663edb3be23ce09f02273</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a7e4c4a77a9332e2db723e770d424c53d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>ab8e16115c0141851a357cdd5f269d054</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Lapack.html</anchorfile>
      <anchor>a6384ce2d99538d82bcb97c855df09817</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_MC64</name>
    <filename>classAmesos__MC64.html</filename>
  </compound>
  <compound kind="class">
    <name>Amesos_Merikos</name>
    <filename>classAmesos__Merikos.html</filename>
    <base>Amesos_BaseSolver</base>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a565a1e6baf803700f6398fd0e4cfdc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a728e303a17cf98e26e006283bcaa5365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>L</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ab92463c7bd9faf947f5e730de82334b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>U</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a2eeb9cc55d246d518e54323699224b33</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>PrintTiming_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a108ea6dda9ab62b1be4451ece83b5473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>PrintStatus_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a82d53c3ddf9c1b9e79c9948bbf9bde9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>ComputeVectorNorms_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a5529171a7b49faa18ae63f09f2e5b07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>ComputeTrueResidual_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ace9df4dded035661a8af30355783fba5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>verbose_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ac3c27f15bdd04f270975e676932f472b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>debug_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a6c48b3715c3cefa57bd4bfd1b4b0c586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ConTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a1b6e1442558f9d790dce1dc6939757f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>SymTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>aa1d14321974af819c3e9a75cdcf32eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>NumTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ad259430c3674a1e56ad063e0ed6d7149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>SolTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a64b77d597fc1af7d2a53078a4f2d5667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>VecTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a585197dff40f78bf86ad6cd1605ea51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>MatTime_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a3c1d81d5ce3c834280121bb3f1891cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumSymbolicFact_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a4de6215c6cc1c5dd9347f71251d65501</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumNumericFact_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a3297f6d59d25bf19e47b260711b9e8cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumSolve_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ac621765af4855221a93c99b38de25c1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Time *</type>
      <name>Time_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ae44876e9bfcfee101d01634e7082acc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>ScaLAPACK1DMap_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a06d36421964a03cfe752d0c49da55272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>ScaLAPACK1DMatrix_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ad274fe3164a46d511bde24b1df14ac64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>VectorMap_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a18c19f8c47112508322c2a123589faa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>DenseA_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a18c30caeec09981779d77513fb84a848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>Ipiv_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ae9afce6b35aefb2bfb4719048bf5fdcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumOurRows_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>aee22d90639c3c63429dfb15532b7af0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumOurColumns_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a67d1f3a9bd9e83e9b5ce164370698405</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>TwoD_distribution_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>af374d83b54acd618ab9d07a87d94e8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>grid_nb_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>aafa040d18da32450005c63f9d672af76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mypcol_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a987acff98f93f3ab8e50272661593d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myprow_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>abe646edb5e26c48e8ed3178dd9fef2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>FatOut_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a68077d532bb0b627f8a5caa6e5a8e9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nb_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a3d34fb3bd8d72f01b42fa357d5a8e1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lda_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a206b9ab8d2f5673e65d91f6077c7053d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iam_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a909c50e36fae1f8a94e3c6137e956f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nprow_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>aba4538f13c5c30beb9debe505f7a855e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>npcol_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a489b5a6c03446423c4e54b2473aadf7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumGlobalElements_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a55747fcc93f6fbd1bd363096bd39799b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_per_p_</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ae315f5d8381b71914e0b887c4f9959cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Merikos</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a03333b8b35c7bacd7d5e71fe521c3725</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Merikos</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ac4d626f1d0e0ce8ab78e3975a0ec4071</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>RedistributeA</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ab83b784ff0430370eb92b7bf9a97ebb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ConvertToScalapack</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a825ad24eb2396a1c5f0c48493a61314d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a98bfa5d7cf1a58fdf5d507588fa34ce2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a868fd1594799cda1f31213c5017925b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a4e5ded5f9a3d175494c5146ebcaf1683</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>LSolve</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ac8a0bb33300c812813e5c460b8e74049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>USolve</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>accad9fdcad5d97a9c3441fba9c14cb03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a3c69c02ad2bc269f48cabfef6c9a1242</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a16dfd8aa43385b0b96f452ad6fd1405a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a7a7a184562e1589f8521d7b899e98bba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a2d8f5e91e0902e2111d4af375189fc52</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a43d203e0f11c65d9708014789ec34909</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a54afa3eb7d6f0356d2db6a345e5f9b53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a001965c36f9cf2adf9440608a6afe696</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>a3a100bc313c3a43b130690d9835ff9e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ad75d375d7bd6656b1ee3e9d60e1544c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>aabf9d09cdedefadf894e43ffaef73bbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>ad175cbecb5481c177f4f1a30ec11cb05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Merikos.html</anchorfile>
      <anchor>adbb9ca0f7445833ee54bf63c4ca54c34</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Mumps</name>
    <filename>classAmesos__Mumps.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a545e5c606323718284f50410ef657f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a2e0a790b89570716ebb48d280b521911</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a57537f5e18e2896e53bff42db0bcf2e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a1057ad6ee060f825c9ed49c870c1a098</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>acf5c178dc2b9db0bd7d59d6181cee383</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_Map &amp;</type>
      <name>RedistrMap</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a2f71a1f847b05db9158d9f9604bb1dcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_Import &amp;</type>
      <name>RedistrImporter</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a433e0b3c7aed91e9d0570620372da63f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_RowMatrix &amp;</type>
      <name>RedistrMatrix</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a4824656cc3dd88cdf13f29b80fa30d36</anchor>
      <arglist>(const bool ImportMatrix=false)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>aed06e63804f7d6b2cb8a45af6c991cb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_Import &amp;</type>
      <name>SerialImporter</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>acb29288ebf24c79499e73e5a9dc553cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>ConvertToTriplet</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ad41963cd6aa62c149118d613d41f183e</anchor>
      <arglist>(const bool OnlyValues)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>CheckError</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>acb37883b7ad9287cebd96e66d4a65dd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>CheckParameters</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>adfef4d96a4ba47cbf27162f917705444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>SetICNTLandCNTL</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a45ecdf255adfad76029e420714cfaade</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>IsConvertToTripletOK_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a5bae32c352bbd6b6dc2d405f6ccb69f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>IsComputeSchurComplementOK_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a644e3411b43b15f154cc8ceb9ad6bc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>NoDestroy_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a1426c319deba7cf629217f6687212c72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>Row</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a993e80dca2136795d06db1beca027ffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>Col</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a91da9ccad9532a981a9c886b7a09994f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>Val</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a6a7925a976d2a3541198660e5f27efb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>MaxProcs_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a6e91c5bc441b4dd3d5caeca6361ffb03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a104bba95569e8405877c09909e5d9c25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a34abd7d056b2392f2df8810f3d6b1af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a72964ed2aa300213ca149b0bf0a5fadc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a1381a844026df49977c0d72adc0c3c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ad7c21e60890b4bcf06827bdbc0d416b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a1fd64a11634d569f712eb714c60cfe72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>acc0e09e2e260b10f11e6d51539ab0b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>RowSca_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a34161923dbaab774f289e5e35f6f3ef3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>ColSca_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a82a146158e3c65aca71d1df428993fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>PermIn_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ac9bd0bbd3058fcdc2d9cfe8dce35f058</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumSchurComplementRows_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a694e2550a8b6c299678c35f7ae8f6452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>SchurComplementRows_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a5bde546f874867d4efedc7200e84bbdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>CrsSchurComplement_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a67682da3f91508bb5ace72d99d5aadae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_SerialDenseMatrix &gt;</type>
      <name>DenseSchurComplement_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ae4b71e6a889fa37a6b8af1c8511c3a22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>adfab1dfe9f5361462c83c3809801fd98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_Map &gt;</type>
      <name>RedistrMap_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a7cfa26cc5889ad2a51ce9849c6cafcc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_Import &gt;</type>
      <name>RedistrImporter_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a8d37e9815b0ad09a9da46295bcfbe49d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>RedistrMatrix_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a7de1e6ca4f030c60fd93d9ee4485fff5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a0f6dbb942e0b2a9d386a03509e4ae821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; Epetra_Import &gt;</type>
      <name>SerialImporter_</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ae278d552ce15e83e3f63b02ebe371e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>DMUMPS_STRUC_C</type>
      <name>MDS</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a286d72d1662d68a201834ac5cd96b0b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>ICNTL</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a4659865a6579ce639e198e5f8482a5fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, double &gt;</type>
      <name>CNTL</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a39e54a11b9309a9ed62ff6569a060347</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Mumps</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a6dc80d820de40053bd3082bcec959947</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Mumps</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>af7b2677ad9aad001ac7b67374140c56b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a033a56745c87232c14a4883a410172b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a4701d3348e92cf4ae6dca2428de04f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a055fb1772ed4b679808d7bde2f35312b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Destroy</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>affeb2ae1e96c1bd6fdc3a6ec6a0d8d61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a037a5381515501ea4c10544fc0e16bd9</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ac3367385069b5725dc1a8f0424ea3373</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ac01bb45787653f31328964da6cd45b3d</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>af74c57becd9e720dcde09dac04c832cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a81617844869ac749c714df8ae9998837</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>acf492a9273625c98dc5fbb43de1833dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a28f5f6b44f13cba764e05e1a104f9552</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ab366743bfe2dd31d5811034cdfe511ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>adc6c00ebe7a051f9ec3d167e50f380aa</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetPrecscaling</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ac62c6bdbeb9d41c6b66a4101057fb2da</anchor>
      <arglist>(double *ColSca, double *RowSca)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetRowScaling</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>ae6180949d737d1aba35298f46e086bbe</anchor>
      <arglist>(double *RowSca)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetColScaling</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a67fef2af588ae7c316c304030bfd5f46</anchor>
      <arglist>(double *ColSca)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetOrdering</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a6c69f7673fd5db15bb32ae50f3cf32ce</anchor>
      <arglist>(int *PermIn)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>GetRINFO</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a0ff9afd6b06eded319ecf5c3a8607edf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>GetINFO</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a54bd7bcd359b7ca9ffa37278fe18841c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>GetRINFOG</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a778d79ae004d567d390f8b351d20023d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>GetINFOG</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a91f26e0442f4bae049a100f90913a6cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetICNTL</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a2c979498c4cd03ce7f55f88d21379ced</anchor>
      <arglist>(int pos, int value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetCNTL</name>
      <anchorfile>classAmesos__Mumps.html</anchorfile>
      <anchor>a1a00e951220f1c2546199827b38afe0c</anchor>
      <arglist>(int pos, double value)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_NoCopiable</name>
    <filename>classAmesos__NoCopiable.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_NoCopiable</name>
      <anchorfile>classAmesos__NoCopiable.html</anchorfile>
      <anchor>a0acdc5b0d260d0ce338578fe12daeb6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_NoCopiable</name>
      <anchorfile>classAmesos__NoCopiable.html</anchorfile>
      <anchor>a0d5249ec17a2424d31869db9e0ba62d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Amesos_NoCopiable</name>
      <anchorfile>classAmesos__NoCopiable.html</anchorfile>
      <anchor>a04f006722bcb4e9001acf227071da10c</anchor>
      <arglist>(const Amesos_NoCopiable &amp;rhs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Amesos_NoCopiable &amp;</type>
      <name>operator=</name>
      <anchorfile>classAmesos__NoCopiable.html</anchorfile>
      <anchor>ac4b67a4a76250b1c47e40ab367eecd2c</anchor>
      <arglist>(const Amesos_NoCopiable &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Paraklete</name>
    <filename>classAmesos__Paraklete.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>IamInGroup_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a6e30f7db388746aea093059ff4844af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SerialXlda_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abcaca2fa3ecda9136a90ed95db43d247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_Paraklete_Pimpl &gt;</type>
      <name>PrivateParakleteData_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a9572100b4d12cfb30ef965efc046f628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndex_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a90b9808bdf25d1e4b768dec480a860a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndexRange_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a95f9cf008ed5ea08769a7b745c2732a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_StandardIndex &gt;</type>
      <name>StdIndexDomain_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7bf3c9ae5c093e85436dc61102bfe89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MPI_Comm</type>
      <name>ParakleteComm_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7807d3b1690a40b1e28699fccdab65c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; long &gt;</type>
      <name>Ap</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a5ad7934a8ecd28e1c801aa878e54d616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; long &gt;</type>
      <name>Ai</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a338e5a2fb84d8952d7bbc4c7e984f184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>VecAval</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ad75dbb43ff559505997cb0927bec04c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>Aval</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>af14c159a289d9bc27a5bb5995ccc9032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>UseDataInPlace_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a3fa553f843d415233b603a95366e8104</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numentries_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a59504175232673e7d99b858a71800ee8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumGlobalElements_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>adf65abe87ec5b311352f3f61c90d808c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>RowMatrixA_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>aeceac8a9defd46cf3b20918073c79c3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_CrsMatrix *</type>
      <name>CrsMatrixA_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a93a6117eeaeb74977ce9ff46bc387043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ac4c0fc3b09a91a26dac3dbe37c49a5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrixA_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a5bcce27220485cf11b1bbf6829269ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>StdIndexMatrix_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abed44231a0bc6b7b7f7a3a51bd3a2dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>StdIndexDomainVector_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a3a55677c3a2831413a08432bf6112d46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>StdIndexRangeVector_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>adb6c3e545a5b7300f27c4889432189c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a602322a8d59715ec3328d8652682a747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>TrustMe_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a2cb35b48534a4461514cca707c07bbdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumVectors_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7cbe1e1b098c77c77a36267742211372</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>SerialXBvalues_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a90b434aea8dae2cfaa721d6d169f2230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>SerialBvalues_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abbf7e265183121a2055da90dcc851667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>SerialB_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a5b843b20f0c943b6ded5f8bfa2dd0b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>SerialX_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a31de45022066ba20027d1c1b1c98b3aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialXextract_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a53f620af6d14c4be3fd0c9f9b6473295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>SerialBextract_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a9b6064adcfa217713de9d400a5603482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abc6d979f62c9a9e1ca07cb48b7132729</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ab52fcd7002ec6cf01a08570c4998fbb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>ColIndicesV_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a338ab20e21b3db829657cfb43eb98682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>RowValuesV_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7b1d075bba82c9a6ddd1405b2af24f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportToSerial_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>af94ca1648bf382b700462f38135387ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportRangeToSerial_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ae82ccf0691758b375d5eb4bdc4025169</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportDomainToSerial_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>adc3f282541934a7ae4596bec6d9d59b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a3616654ef8b7ce112eaee463735b95c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a6ef80657c5a1cfb04ecae5e154fabf04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a9d6da64398db55d533a3acdf82b0d586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>af8f1df077cca0e89ef4f137fc4758565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a92b0a23657092a7984e2ad04bd6038f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a41fde146b928052261254784519d8e63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a79dafa743d88ef74c9581b4eb263de7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Paraklete</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ad5d24b4ecccad919b13bda1c7ceff66c</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Paraklete</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abfcbb2630fc281973a39a90f5c35fb2d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>acaec23d60f4af50d6cd8940f32d695ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7ae5ca4c8f78d5f5c30cf63240420af2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>aadae099e7833d517a978d912454cacf9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a814d430ea2e7051344f04675b274fdc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>ae152d1ff30143f9dc020b340caa05e56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>aa74ea83de7ca2ab46b539b50f1377677</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a91755f382eebd4dd633698a02137e5ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a7a3ded25627bfbd6c1b45895ea54fa64</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>af16bfbe15e55be02a4f018173f6ccdea</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a4686db09719a8eb666b92c0dbb88d0a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>abce2d07dfcc549f96381dc6dc8a66a61</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a3a35f3dd21885cf3b67423888d8a4049</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a1c89aa5e7e09e042563f29b46219e283</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a579d851a4f48430ac09d355bdc4e6124</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a1e52c03952d6a25f94d88cf77a4695af</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>CreateLocalMatrixAndExporters</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>aaead145630a523f703e841b2c3f94bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ExportToSerial</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a1f991b6d07d76e760753518e180d352d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToParakleteCRS</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a9a5d7c5ed5dfb46f26070ebda5f5a44b</anchor>
      <arglist>(bool firsttime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a8127f14f28aa198d97c31069172d8477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Paraklete.html</anchorfile>
      <anchor>a81695144fd45c2d964a0238bda63ad42</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Paraklete_Pimpl</name>
    <filename>classAmesos__Paraklete__Pimpl.html</filename>
    <member kind="variable">
      <type>cholmod_sparse</type>
      <name>pk_A_</name>
      <anchorfile>classAmesos__Paraklete__Pimpl.html</anchorfile>
      <anchor>acc1e18349022a94f1ad797a9ebc5bbd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; paraklete_symbolic &gt;</type>
      <name>LUsymbolic_</name>
      <anchorfile>classAmesos__Paraklete__Pimpl.html</anchorfile>
      <anchor>a1cd485e4fa3566d504ad4d6040d01eab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; paraklete_numeric &gt;</type>
      <name>LUnumeric_</name>
      <anchorfile>classAmesos__Paraklete__Pimpl.html</anchorfile>
      <anchor>a6b4b689f965037232e13f164594a76b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; paraklete_common &gt;</type>
      <name>common_</name>
      <anchorfile>classAmesos__Paraklete__Pimpl.html</anchorfile>
      <anchor>a3a8381e973d5007e768e732e413f7976</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Pardiso</name>
    <filename>classAmesos__Pardiso.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="function" protection="private">
      <type>int</type>
      <name>CheckError</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>aa3bd319be41fd13c7d8b71e87b61892a</anchor>
      <arglist>(const int error) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>Map</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a74fb7b9744d59083639c18b8ecb708f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a4c342fbf03166db07562062c76e9951b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a7b43e6139079f2a825eecf8e36dd71f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_RowMatrix &amp;</type>
      <name>SerialMatrix</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a911697637c0cf2ef3cd26fd9e9de854b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_CrsMatrix &amp;</type>
      <name>SerialCrsMatrix</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a7d9213bfd5dc564ce8c3f4c05af83d97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_Import &amp;</type>
      <name>Importer</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>addf5bd056ca9fdcf79463c364f3f11b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToSerial</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a9136833f4f262a9fcc56ba3e077cdaf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToPardiso</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ab69a39bf9003c1ed326b4a1b894fb98b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>af7ad1ff36eac856694d2aef0c1ee6b62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>aedd38cfa868204ac438bc99581667884</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a3b18bd29f5103b892379f25ccd9c67ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrix_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a36bab05535e0c1f6f75645dc12592d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_RowMatrix &gt;</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a031f7b8fec88a3aa351ea792efbd642c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>Importer_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ac7aeb7fff3f2616816be7f71fb12ad63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_Map *</type>
      <name>Map_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a3144a76e81396433f907b07811661dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_RowMatrix *</type>
      <name>Matrix_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a3e4e6dbf5424f845a9251d390bf1be36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a7f80956dc7f3cf1ef6b57798301af566</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ab5b54ff4d3e4a3921f9924097b7cb31c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a6d46c4661f726fedcdaa683d2addf606</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ad392990cc4c4665bd6f518aae797b93c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a76e5f7c9d14760d6a304ad7913f6be01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ae73a4a350e90ecbee79253e576b41596</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a2b7427e33cf4d26a33419f7a6b24e0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a9ce590a41e218e362f1f502280bb5897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>aa_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ad23480d00ec9802201ea2f5a7b736916</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>ia_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a09bd8dda9bd66cc869390826db5488d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>ja_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a7845e627c09a27626422735c171e14c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>pardiso_initialized_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a121c964df0eb0b938715d829e325062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mtype_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a733875fe67a087448bbd825928ec320a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>pt_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>aebeb1163c3143aefb161ff6e74929c0a</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iparm_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ab8798d70e1f330c521bb92cc863898b5</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>dparm_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>abe7614d4a920cd78240e6b9f6034b544</anchor>
      <arglist>[64]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxfct_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a349f2cee1838777f1abe950d7259d6a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>mnum_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a5250e70a4b82721ebcddc6f0921d0e5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>msglvl_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ab20b636a4c46eccf02f6701813ec717e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nrhs_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a49461d94d3a5eb46a9676b263468c871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>param_</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>aef7eb1069c8bb196a21d2fcadd3a3e45</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Pardiso</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a2149a124f7a861ad4aff6dde2d4ca85b</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Pardiso</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a0d193d835e286af7b49f2e939f8b7d3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>acc531a3cfb0832195dcaa3ebf155d687</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a6b282f9463b5ea4a9ec227b6d194c5b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>abec40527e71e475b178508f0dcbbe51c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ac15347ebf9f343ca5024b8f34373e103</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>ac9ab6bd6d7071bd7e15ac07068384aca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>af35e4024bf35ec0c436cd9004de0f70e</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a2f15e43abaa2dfc25c937fb09e90ea52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>af56588116b7cccce7ecb187f65b93688</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a2ebba406f29fa2b53a71f2887b36eb25</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>afefbf197f4eb8d1ce99f4eba5652edd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a830be3418aef03853724b2127fcc472e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a6ddab6419117bbe3bdd62f3f8186f11f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a52b607908a5b69f595bfd6fc83f937b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>af94653ec0f9aad2b62aca4dadce48f90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Pardiso.html</anchorfile>
      <anchor>a89da6b0a11045f0d03be3c5a03a861f3</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Reordering</name>
    <filename>classAmesos__Reordering.html</filename>
    <member kind="function">
      <type></type>
      <name>~Amesos_Reordering</name>
      <anchorfile>classAmesos__Reordering.html</anchorfile>
      <anchor>aef4d32b82f2031f8491a2625b58111b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int *</type>
      <name>GetRowPerm</name>
      <anchorfile>classAmesos__Reordering.html</anchorfile>
      <anchor>ae14365cfcdcff422fbc26a902428a8a7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int *</type>
      <name>GetColPerm</name>
      <anchorfile>classAmesos__Reordering.html</anchorfile>
      <anchor>a1efb36fbbdd591bd795702fa33642c16</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Scalapack</name>
    <filename>classAmesos__Scalapack.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>iam_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a2fc9afe92d15092124070b37e4176888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumGlobalElements_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ac38f45c4388b3555ec85b59b3992166f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumGlobalNonzeros_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a3e6b0edd56c2afa731ce27e5482c2f96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nprow_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a6ee110c0791809b942f24ec10d3a6e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>npcol_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a5b340f19895537ac67a374340c1d5498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ictxt_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aa1ad4766bb487462992b137fb2550cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_per_p_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ac77430bbbc7bd327d57ea276f28df4d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>DescA_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ab3595794fb399f45248a9d31c935d3b4</anchor>
      <arglist>[10]</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>ScaLAPACK1DMap_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a638d2621c86ede20cddd45dcd56e2195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>ScaLAPACK1DMatrix_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aeb06e87546d0d8ae918dd35829ee2e0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Map *</type>
      <name>VectorMap_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aa70256f38ae9d9490809f5b7cb8b02fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; double &gt;</type>
      <name>DenseA_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a8f48acbc8fbc049d08e17f6d891770bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>Ipiv_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ab1c1a44b468e4ca4cedadeb5ac2b2e61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumOurRows_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a531710397cac2e64bcd84390db4ac989</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumOurColumns_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aed88b1fc84a46cc9914234f382c09b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a49821d59a62d243ff77b76178815bf5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aa474831a91e5c680dbfe77a028f6998a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>ConTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a93a48e23e84a1c4a54820c821450a4a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>SymTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a224477dfca144e4aa53f460a9a278b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>NumTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a1544a2b92b64ec0e33f8cc39a5a363bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>SolTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a490e900e8f4f57272f70daaa244eb604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>VecTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a17e6978fabc7f5337d4c63ad9ea4232a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>MatTime_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a760b667b6e198a7491336852dedda69b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>TwoD_distribution_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a58eb0057fc7e3b48bcd3afdc7b79608f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>grid_nb_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a8dc52eca1ddfbb1bafdb0956ae4ddb29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>mypcol_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a9fc89abfb41faafbb4a259baa5b20e26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>myprow_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ae2a144fe1915ab58b292ada69b960207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_CrsMatrix *</type>
      <name>FatOut_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a8caeccf43f77f1ecb507506e4d1250e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nb_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>afdb5f63380b7cb373d6b2a607247429e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>lda_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a88b45e1e7bbac6e6e381f1752cef5c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Time *</type>
      <name>Time_</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a114083c6a195ca249a3f3cb68e1a1e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>RedistributeA</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a74bf14b9826eaebea87d85073dd55364</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToScalapack</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a959b25b456f48949ebee07af1f0dbe5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a5cc6492726c0f6797235cc988582fb96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Scalapack</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aad7abca49f51b5ecf67d3b3dd8b08f5d</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Scalapack</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a173728ff4feff0ea142762227d8ad622</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>acf7acc3f350ed5f6b64d1738df932a2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a99d836f24af7f263f18bfac5e051aa92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a52dd144a19ffa88c8610196255aa42b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a867e560d49706d4948d90a712aca38ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a06bb67d0acf1095f8a7e6832e3353dfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a4cb9429bda1b9faba93c643e57fb812b</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>aa3fc710fff74c92c0524c8341c547f72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a99c07e1b15f5ceebe31ee80879a70ca6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>acb153276bca1257e1d9a9fb3b051e7ef</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a3ac132c38e14a26de12307cc57dc04d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a2bc69d3e27ca85a40933f6410fb730cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>abdc5b37eae9f75762b8527b448ddb743</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a12f6f64e1470305a2960876f3882ab62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>a527bab554d42be0a40717938e44cfd5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Scalapack.html</anchorfile>
      <anchor>ad4b92f0b003ff183e3dbfa9e0d7a09a7</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Scaling</name>
    <filename>classAmesos__Scaling.html</filename>
    <member kind="function">
      <type></type>
      <name>~Amesos_Scaling</name>
      <anchorfile>classAmesos__Scaling.html</anchorfile>
      <anchor>a03d35681654e6b217b741d01b3bcd457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double *</type>
      <name>GetRowScaling</name>
      <anchorfile>classAmesos__Scaling.html</anchorfile>
      <anchor>aad1a085a0729244d6216598cac843709</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double *</type>
      <name>GetColScaling</name>
      <anchorfile>classAmesos__Scaling.html</anchorfile>
      <anchor>a20bc67457d3c3ab6af926b25cfc8530d</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_StandardIndex</name>
    <filename>classAmesos__StandardIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_StandardIndex</name>
      <anchorfile>classAmesos__StandardIndex.html</anchorfile>
      <anchor>a470a7a03b66ab06eba2910279ddb93da</anchor>
      <arglist>(const Epetra_Map &amp;OriginalMap)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_StandardIndex</name>
      <anchorfile>classAmesos__StandardIndex.html</anchorfile>
      <anchor>a6e60fc72ccb62986ba8c42112e4fdd83</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Status</name>
    <filename>classAmesos__Status.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_Status</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>afccc5e49a7c06f60fdd606953c82ad5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Status</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>aa1ae581d181155a33eca638f0f8cf9e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetStatusParameters</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>ad38b3e3013b11bcc39560effa8c33348</anchor>
      <arglist>(const Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsSymbolicFactorizationOK_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>ad67230c759fd63f996201ccefa1a728a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>IsNumericFactorizationOK_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a5c8119948180a5476d8d0592c0b89291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PrintTiming_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a35bbdb53f2e19575d54e3aadab96749c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>PrintStatus_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>abcee1de12cb5f078c198ca8866ef1bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ComputeVectorNorms_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a3c2881ee30a0a324b78291790c34fbcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>ComputeTrueResidual_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a9b101c7557162026251eb614b1dc34d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>verbose_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a4195856d9c3f6ec86cfc8f4decccde3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>debug_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a28768a27e3533e5a424a6980d1801318</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NumSymbolicFact_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a4316fb4b1e2e4c636a4e6ebc4399b876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NumNumericFact_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>afc9ebe197300b6a965366aa6749c61c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NumSolve_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a7f0e20befdec1b3efbc7838b06003b00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>Threshold_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>aa711c4ab7efb1310d86c27eaa2b09a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>MyPID_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>aa74f9fe93a59ed41ee268948f92e0697</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>NumProcs_</name>
      <anchorfile>classAmesos__Status.html</anchorfile>
      <anchor>a4ee05f6e1505249954d9ac4ced1ceb62</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Superlu</name>
    <filename>classAmesos__Superlu.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="private">
      <type>SLUData *</type>
      <name>data_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a41c3f35b4c2a6e874c31651e7519fb45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>berr_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>aa282cb95e0c44265b5dc807f4a49dbe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>ferr_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>aacc881cb5a6b6387b44456db0c60565f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>perm_r_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a39135b40d6f776864ec7ad1fca3cda61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>perm_c_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a61b5979c5634bf2f24f76d0ea0485f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>etree_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad04c27939d467265b6de8a6e8444bd76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>R_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad5e590b319ccac3342ea26238ca91221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>C_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>acefaf89b86f9afb4a4ff769b986e2e7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>equed_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a4ae2f03577f3d2d7a00cb40c5d591fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>DummyArray</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>aee7d9c467d1c311b775c1e56471cbec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ap_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a61b46d06ddeea0658e3493f9f5818348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ai_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a0d6a054feaf317275c588e9344e58d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>Aval_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a01fc8aec746e1c3607b01c4b1d1cf3fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long long</type>
      <name>NumGlobalRows_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad853c8cab7c943533bd1231123587126</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long long</type>
      <name>NumGlobalNonzeros_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a1eb8eafb84903981a88dbc6c12a4a37a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a8b272204fe994f3826ab1d583fefe3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>FactorizationOK_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a00d823c2c6695b631e2e59be063193af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>FactorizationDone_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>af699958e4fb7dc16a004b7aea0a5b530</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>ReuseSymbolic_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a2ddc7b6bea18e2e60a7cad8dc717ed27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>iam_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a91354072e27d3d4056c11e05cfc850ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a52e2687739f68f5d1f6f193e6ce3c7a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a74441a311852b3329d6ac60d3931d22e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a65b795c3691a72ba8f89ebfe56c8e091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a6351df0b3b91837ba087b1383e7c6acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a2ebbe88ce458cc7f42840474ff6b3a13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a6a8aaf082261c622faefd694c95f8512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a6b0795e14f399a47d731ea237d702abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrixA_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a141ee949077d15e929e20c224cfdf3e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportToSerial_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a09516be42df01e679482bfe9ba9a71bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad7a34c1f6eb36ad25c8419ed2a4fa5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>adb6bc5245a384942fcbdd6cdb6a25334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>RowMatrixA_</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad764fcf6a21c32ed1f529acef99b8c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Superlu</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a799d5c7652dfecbfca413a4cd82a1e32</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Superlu</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a550ab859f07118a5a40f96f433e1d00b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>addf3b744aec396d34d6084564c6d5ed4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ae44fcae13a58830ef0f130cbf39962c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>af4bdb2517aa9716c171e41bea17e6c1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a2c50cbccf5d8fad054b0166d31ab4d17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a6079963d10bfaf4b48cc26b402a79f56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>aee27563073165ae953d53968b9d9b7db</anchor>
      <arglist>(bool useTheTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a1dd146cc41c361a7f2dfef6119aee40e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a07e121b9cff635d3ef42a508f45c0b3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a4c4969fbae9edfb8d7a3cdac6047e8a3</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ab777e0172a679dfca3dafb19886d58ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a33a18398b6e9bda7447766f865f46f28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ae936c6e4adb5e9a3593edc33763ce1fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ad29c6d35eb7789b85fea308cdf565692</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a1eef3eb7ef69493a94abf079748c1c42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a94a3db8098e8ae41e1ac81975403fb0d</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a1cdc5e640a6368e71a1d4234dfc64bdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Import &amp;</type>
      <name>ImportToSerial</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a55a72adbb7c00b30e753d9cfb4aeafb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>Factor</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ac2a58425a75c9e1cdbcd55c2c5249947</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ReFactor</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>af6e8d04f41f17d9946e3ddd7b0e7d6ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToSerial</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>a7c0ff3b579e66fb737d571008660d0f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Superlu.html</anchorfile>
      <anchor>ae9f663445a279ebb2b5b6100300256a4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Superlu_Pimpl</name>
    <filename>classAmesos__Superlu__Pimpl.html</filename>
    <member kind="variable">
      <type>fact_t</type>
      <name>FactOption_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>a9ef4cad0c77af9393c59784d73880c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SuperMatrix</type>
      <name>SuperluA_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>abde5fe1db8c3d525ae32107e3362fdcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalePermstruct_t</type>
      <name>ScalePermstruct_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>af8f5173b7451680d8b585061ba21bd2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LUstruct_t</type>
      <name>LUstruct_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>addcddc3b4c1ce03eac7f7fefbf268c86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SOLVEstruct_t</type>
      <name>SOLVEstruct_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>aa2689ca62f30ea507c5f10434840f2f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>gridinfo_t</type>
      <name>grid_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>a703ecd995210726f06e9b824e6b719c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>superlu_options_t</type>
      <name>options_</name>
      <anchorfile>classAmesos__Superlu__Pimpl.html</anchorfile>
      <anchor>a4dfadb10e60a7348cd2a9db82235e910</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Superludist</name>
    <filename>classAmesos__Superludist.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a020b30e93fb7f7e741d34aeacabe71bb</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a4472253493b50d138791b17e6a1d9032</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5def550a9704e0899e96d3ab699f737e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a52940bc886821f0ea079c184e80267c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a393aaa2b6f3cb04269742a638193610d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a17ad45419ccdd36ee763adf4a3d1fadc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a909d8b4297b88e464bfe5533ac043393</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ae5c0743f111232d73ffa94b289d12951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Import &amp;</type>
      <name>Importer</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a9d4887f58ef8d955fabe6edf8b641750</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>UniformMap</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a07661749a095c838db1e306a862cc98d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_RowMatrix &amp;</type>
      <name>UniformMatrix</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>aaba75984be7ba8760cac18b8c70f19ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_CrsMatrix &amp;</type>
      <name>CrsUniformMatrix</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a4d4f4b89c29a067bdcc291ee99467782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>RedistributeA</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a50cc640c61c2d6f862f56eaf1b70ab02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ReFactor</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a8fdfbea8cb648f06ef9627cc7a0d5f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>Factor</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a318f8459823c94c6f96414e98a3d9cd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_Superlu_Pimpl &gt;</type>
      <name>PrivateSuperluData_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a05f33ec5bc07e5d1718422cc4cc13bcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ac837822f549965d388f8d8d3cd055d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>RowMatrixA_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a1210319abcaeedd352727946cf476cab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_Map &gt;</type>
      <name>UniformMap_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5cea7b714828e9bec011f4ac343f6b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>CrsUniformMatrix_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5864f3f06e9cd7788b13d27aa19c606f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; Epetra_RowMatrix &gt;</type>
      <name>UniformMatrix_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>af992ae5ce5761dff4ba44e23c9c5766b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>Importer_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a71c0faa63b5efabcd9d134ebfa7c3c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>ReuseSymbolic_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>acbba6fc5923539e800d5e967b5e9ded2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>Redistribute_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>aa3304e8b75fb91c978b267cdd9c7098b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>GridCreated_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>aa7dde31e84a1ab6e8f32a3b4d5851756</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>FactorizationDone_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a17074a5521cffd26a786756e820fca2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>FactorizationOK_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>abbbe3067cf1f77aedf2f662bf1cf8128</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumGlobalRows_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a361ca2dd86d7a0a0c4f8501e10a14747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ap_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a280e1138587f2faf953867f37a038524</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ai_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a79de0a47eea9195c6809279dbca63c26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>Aval_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a90f1b93e11351e49a6a00c3209b4190e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>Global_Columns_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a3c6035a50b2287ba835c88b37d89d81a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>nprow_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5faff2050634ea1b4a0137f3600c59c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>npcol_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>adbdb88e1f299f88bf593eb117a656c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>PrintNonzeros_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a04bad0cc12b13c110f8702e6325d16ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>ColPerm_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a0dcb49f21828d79707f325c16eee0f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>RowPerm_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a6a530822de2129989a15c6c035973407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>perm_c_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a7ecd1f7d7cc7c0d9bc83cc834ff74bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>perm_r_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ab63d091c9ca63fc6909aa2ea88329bb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>IterRefine_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ac1406dac6be2607c823a9e217f569141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>ReplaceTinyPivot_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>aba52d0394b7e56e1eb5ce5e011589285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>Equil_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5e3a018afc2580f90122ea5a0201448e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a5554f45f5674459ec3c5ad6218361bbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a0b5d3ea273b36ea3a422d1da064fce90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a9e3155bd566b45ec9da203510a781941</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ab8d41790449a0b2e8f641b1ad3dba374</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a1d0e936d92d2ac32e1fc0436d14727b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ae4de4e5d61b23ce705f2a0db15805303</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Superludist</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a67186dcbb8b28d9cbcb801c4dd08a9dc</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Superludist</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>aa28511b38f5906d0dfcb7adfc35fcff0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a22b613968086b04fa6a1d5b09008b652</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ac2299bec535ac0dd5b9711a39d92013d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a32c2b2f6690aa0b6911a3d413fe64104</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>adfb2349669f0da169036d3752045df34</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>a4432c265654db0a7b3732cca005cf48e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>acafd503767d8104acddba1d86c732664</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Superludist.html</anchorfile>
      <anchor>ab76406b9b9533a662f338c28abe38fff</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Support</name>
    <filename>classAmesos__Support.html</filename>
  </compound>
  <compound kind="class">
    <name>Amesos_Taucs</name>
    <filename>classAmesos__Taucs.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ab94503a360b1023c9ef498388f825e87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ab99fe5693c3113505aac249e23401886</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrix_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>aac13244ce255714c2037259a685dafde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_RowMatrix &gt;</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a742df0b81e1c8b266ad74ac43aaaea96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>Importer_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a5b44c2e834813627d5147226a476eaa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_Map *</type>
      <name>Map_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>af5c07978759f9f4ffa177ffc255412e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_RowMatrix *</type>
      <name>Matrix_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ab220784c3b2480e1063d1244a65122ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>acb83546c292c6ad9e132ea09a9d923e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a77923159fce141abc9580bbfd5cde155</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a52da1df53a244646380fbdcafe4ad681</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a2e789aae4e07d7c2173d77f99de1db78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ad54960bc4e52161b34c2bbfb1e36568f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ad316b071733f2685bf359c206d25de2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>aef5f29b29b945fcad5839b643ccd3496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Amesos_Taucs_Pimpl &gt;</type>
      <name>PrivateTaucsData_</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a4c3cc7ae63c795dd887c7a46f4ab3412</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Taucs</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a4df2291c586794b1f8297a01a0d878e1</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Taucs</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ade3a9b9d0e870b9e06e983b58ffdba1b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a2313af775dd08f061327a9e42fd51160</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a3658b9a5ea28aba867169b560f085bba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>af17c37ece3c1e743ac95f4dbd1c7ec54</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a0e38dc7cbe2d59c17fb13d7b5a682be6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a7b23a7a4de1ce6292c8f7d68851f8e8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a3e4e1418042d6e0a9139c457470bde04</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a07a5050c8343cb188dc04b5ca246ec59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a4686dc7cb807c9f23e5b21494d4a5361</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>aa744c391602e0d6cbe8cf90799225bab</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>ac564eddc7ffdb77ee29cf8179db086a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a73cbaa223bac8611d64050875a0ae880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a3b0d526bc503c7aa168a71d161762fbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>aa081b6939fa7938a6201ab1f7d56bc16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>af60b9880e6fea75a0d0dc38f5de2f670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a8de1260521fc95e6203014a0fd3105f7</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>Map</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a306ee7b4c5d5847f83ae7b21c89882e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a4798879ee2acc8e0690cadd97771d667</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a263ceb0a8899925584db27212eada848</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_RowMatrix &amp;</type>
      <name>SerialMatrix</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a8e7e211946638f1b74480c495dbd1329</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_CrsMatrix &amp;</type>
      <name>SerialCrsMatrix</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a26e1b0523802c36f61ce34916c61530f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_Import &amp;</type>
      <name>Importer</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a6d7c6bc3bfa1fa7f4f534de7efab40fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToSerial</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a450360e12e3ddc9b5fce4bcfe7c650b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToTaucs</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a278cafb31e9f22209de0f98acb1b35c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a7ba75d2532c8970ffa631e610923816c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Taucs.html</anchorfile>
      <anchor>a934fb5700f2605107575a44f00ae5fd9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Taucs_Pimpl</name>
    <filename>classAmesos__Taucs__Pimpl.html</filename>
    <member kind="variable">
      <type>Teuchos::RCP&lt; taucs_ccs_matrix &gt;</type>
      <name>A_</name>
      <anchorfile>classAmesos__Taucs__Pimpl.html</anchorfile>
      <anchor>a163bee56b4c682eebd88d815426427c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; taucs_ccs_matrix &gt;</type>
      <name>L_</name>
      <anchorfile>classAmesos__Taucs__Pimpl.html</anchorfile>
      <anchor>a7f6b6d9423c6733df8bf6ad757eec0a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_TestRowMatrix</name>
    <filename>classAmesos__TestRowMatrix.html</filename>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aa0dd8ad2a0e0d20f697edfd059316ba9</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aff576f00719816fafdff6c61e4d9a307</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>HasNormInf</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a6a3267a1a006b6b4987c4d076c4bd082</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aa0fdd6bf0a0df6b7b956210bbd6ba90f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>af04068608d26b90b9e3e50c5569dd54c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aaaace8b0ac5c189fcbd5e551262eeb99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_BlockMap &amp;</type>
      <name>Map</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aa8a70599707a8b1a0299b88a9da39458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>Label</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a4df8014be342c3f7fbc6d63ae44d8896</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a5eef1e2a7bdc5e17ef0f854a5fd0cde8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_RowMatrix &amp;</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ad13624909fc87bcf32c3bc86b7fad8ad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>Matrix_</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a24dfc7e38105d50c80685c95ce7db31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_TestRowMatrix</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a5cce6ccf96732d98334b29daa4d7fd64</anchor>
      <arglist>(Epetra_RowMatrix *Matrix_in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_TestRowMatrix</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ac5fd3efd983c9a5a87dad7e4b324f3c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRowEntries</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a4e84073943532d912136623a7e117469</anchor>
      <arglist>(int MyRow, int &amp;NumEntries) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>MaxNumEntries</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ab40397b5a74adeec78e2437a98bdf396</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractMyRowCopy</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ac12b2d24c3262be5cc3eb2547ab654e3</anchor>
      <arglist>(int MyRow, int Length, int &amp;NumEntries, double *Values, int *Indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ExtractDiagonalCopy</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a225bd4851631dd0c0e57045a6d8cfd79</anchor>
      <arglist>(Epetra_Vector &amp;Diagonal) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Multiply</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aca446694095076399923d7a059473468</anchor>
      <arglist>(bool TransA, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ad1dc06a97897e50c54755e5244ea88d4</anchor>
      <arglist>(bool Upper, bool Trans, bool UnitDiagonal, const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a881ec630277f8eb4b398a972cc18cfbc</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a0eb6d097f21e32e2a48f67546f1ebb70</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvRowSums</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a41bb560844dee65e4a5f6342c29ae01f</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>LeftScale</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>afcec18e75f2955f2601b1b70056bf236</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>InvColSums</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>affca080faea344e27f47f17bc1da86c7</anchor>
      <arglist>(Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>RightScale</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a89f67314852b788590375374aaa62cf1</anchor>
      <arglist>(const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>Filled</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a018d7c5fd5a04dffc1370365b7ff09bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a71eb64d65b7721350cbe2be18c5acc43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormOne</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a3f430ce8717bf3d22a9e0b90401fe0c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalNonzeros</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a0797f80484438348ed5c52c7c5e024e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalRows</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>abb5797df8ea371c574f10435d6f39dff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalCols</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a211985381e10c45a23ed1ad1164b2ea4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumGlobalDiagonals</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a944a834ddec498245a3648955530181a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long long</type>
      <name>NumGlobalNonzeros64</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a31b47847cbe8cbd05ef43dc947ed38d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long long</type>
      <name>NumGlobalRows64</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a0df26068d8f551567e048cc01ca06d7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long long</type>
      <name>NumGlobalCols64</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>abcee4fdf19c60e603de8d76f36930793</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual long long</type>
      <name>NumGlobalDiagonals64</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a4278922ebb59c6b8ed503419620db32f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyNonzeros</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a665fa6a0f9d58387c707fd24de13d71d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyRows</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>ad0b82991e35bad8a6db0b73fdebd3a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyCols</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a862d9979d20891495769ca3b099427a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>NumMyDiagonals</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a2722bd883e839878b2bbee3d2e72db79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>LowerTriangular</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a7d09ae4538f0d0482135142f16431cfd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UpperTriangular</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a91bba87da112b1e4082e2d31c35a4ee8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixRowMap</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a331ae3193a2e1c501ecf176c61cca417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>RowMatrixColMap</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>aedfa5045e53cbcf34b5ff2c5916696ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Import *</type>
      <name>RowMatrixImporter</name>
      <anchorfile>classAmesos__TestRowMatrix.html</anchorfile>
      <anchor>a85af6fcc231678c3f6bb836eb4dc271f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Time</name>
    <filename>classAmesos__Time.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_Time</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a774ab6ffc874eec2851d3ab355c843d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_Time</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a83b59632ec354270fc86870328d816c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CreateTimer</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a60540db2c28263c6ca79de910b197c1f</anchor>
      <arglist>(const Epetra_Comm &amp;Comm, int size=1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ResetTimer</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a0ed8b88774c22c39f51ff45e329bcf99</anchor>
      <arglist>(const int timerID=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>AddTime</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a29ebce74f1f3db51895491fd0c7847bc</anchor>
      <arglist>(const std::string what, int dataID, const int timerID=0)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetTime</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a8088d5ae3f97b9a3ef9b8d5dc94aec90</anchor>
      <arglist>(const std::string what) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetTime</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a50e00a473705672114b7f30123be3e79</anchor>
      <arglist>(const int dataID) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>accfd3ad389596f13fb11a1d2f01145ec</anchor>
      <arglist>(Teuchos::ParameterList &amp;list) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>size_</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a2fd14cdba8708907a9b10100a56ebb76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; Epetra_Time &gt; &gt;</type>
      <name>time_</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a65281772d05b981fdd348db3527cbef2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; Amesos_Time_Data &gt;</type>
      <name>data_</name>
      <anchorfile>classAmesos__Time.html</anchorfile>
      <anchor>a871cbc5cdcc595af4e5b5cd29787ff82</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Amesos_Time_Data</name>
    <filename>structAmesos__Time__Data.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_Time_Data</name>
      <anchorfile>structAmesos__Time__Data.html</anchorfile>
      <anchor>a2c7098c925930efb75979bec1ea92805</anchor>
      <arglist>(std::string timeName, double timeVal)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Amesos_Time_Data</name>
      <anchorfile>structAmesos__Time__Data.html</anchorfile>
      <anchor>ad4be98a32da56fd9a25674799acc155c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>timeName_</name>
      <anchorfile>structAmesos__Time__Data.html</anchorfile>
      <anchor>afb0bc0eab7d7840f829eb862366a2039</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>timeVal_</name>
      <anchorfile>structAmesos__Time__Data.html</anchorfile>
      <anchor>a884146c3225b0a7cc2b02414a7c2f656</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Umfpack</name>
    <filename>classAmesos__Umfpack.html</filename>
    <base>Amesos_BaseSolver</base>
    <base protection="private">Amesos_Time</base>
    <base protection="private">Amesos_NoCopiable</base>
    <base protection="private">Amesos_Utils</base>
    <base protection="private">Amesos_Control</base>
    <base protection="private">Amesos_Status</base>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>Symbolic</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>aa59ae808279ea98aad2035529544217b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>void *</type>
      <name>Numeric</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a35b22f0ba6cfec1637dad45cafb11d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ap</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ab21234a45deceff7c39013a3335355c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>Ai</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ab0d0489dbbe03f54956c6588d07fc95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>Aval</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a43a393955ad2d14a5e7b5350a38bce1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>IsLocal_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a0c3a3d8d4aa82a1a1530f34814b09ce2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numentries_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a9e4ae1bacb2ffc591a0b354105022698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumGlobalElements_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ac3123ed32216ce3253dece996a2042b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>SerialMap_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ad005bb3a7fb74f55c3cb6aea518fc111</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>SerialMatrix_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>af556c09f9708c48181b82cfe1e462636</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>SerialCrsMatrixA_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a3dc1aeeab8cf547b9160c09e71b1c990</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>UseTranspose_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a0a0d6e9aaee585e5b69aa3b28b233ae2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a34c69d18ecc69082b1c8293a49bc27bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Rcond_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ad5f0d9ef3281d3e130f3b9e10c42bcf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>RcondValidOnAllProcs_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a457213329f6d6d1ff9c9598bb8b6c991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>ImportToSerial_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a12fa1e74e46466de344895f07313d8c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxConvTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>aef48c1e5a922711e12f1f768e7419abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>MtxRedistTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ad22ca9dfc1b215459ed8584ed3f56beb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>VecRedistTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a670d675df6130baa85ec837442eaeb79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SymFactTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ae56b251b475207893cc1cf21a479e57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>NumFactTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ac5e75afdab4bea8fe102097d8d6261de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>SolveTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a35b000df31cf905126dfc16da618e2bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>OverheadTime_</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a94c5bfa80323cc496e672c32604ae030</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Amesos_Umfpack</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a39555edb03bd32f952b7afba4af2cf6c</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Umfpack</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a8d83b2b254bba054066fa74913f6214a</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SymbolicFactorization</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>aa4f1e153d6fc7ae94f1e4938c5a86aff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumericFactorization</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a256ad7bb6173b484931cbe1aeab6fba6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ab8b0db971be2572e8367dc9e0883b185</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_LinearProblem *</type>
      <name>GetProblem</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>aa2cc5ce0046170ddbac9e0cb6f9a0d74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>MatrixShapeOK</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ac59c7b560b965b60e440ba5a74838ff0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a688f612aa1d6ef2b309aa4b2b09a287f</anchor>
      <arglist>(bool UseTranspose_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>UseTranspose</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a27a91f318b0a90950dcfc88c9ebebb54</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>aef10952e772b5549493c3fbcd704c2bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRcond</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ab3350f7f4fdc0f2128b977deec5e430c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetParameters</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ae5e69beaa8355bf17bc1d9eb7c05a971</anchor>
      <arglist>(Teuchos::ParameterList &amp;ParameterList)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSymbolicFact</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a9e574843090413e798d22c93348d947e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumNumericFact</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a2199cd5ca05f1c9ffc87ed2f815a7530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>NumSolve</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a66722d7670cadfa67c9d0066905cdebe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintTiming</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a75691e89ab16a6902c6dd3eb6e817128</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintStatus</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>adbfffe5f2f075a1710d4bd0d89fc06eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GetTiming</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ae0dc105487e12953737f42c0933ebfdc</anchor>
      <arglist>(Teuchos::ParameterList &amp;TimingParameterList) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_RowMatrix *</type>
      <name>Matrix</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a36f45f4bd8d9a22ea19729708eb8fc3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToSerial</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>ad0b5b6a5a15c23638eca710cd8946cf1</anchor>
      <arglist>(const bool FirstTime)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>ConvertToUmfpackCRS</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a46eab5ea6a546cd67a27809a9ef7e0be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformSymbolicFactorization</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a3cfec3bfa1b2f5ceb3b6f241bb5bd2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>PerformNumericFactorization</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a1b36c762a1e9825c13d903994415042d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Import &amp;</type>
      <name>Importer</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a5213887e0dfd580b7747971eb9ac63d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_Map &amp;</type>
      <name>SerialMap</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a6ea9be18a65be0202c9ccd51c3b0823b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>const Epetra_CrsMatrix &amp;</type>
      <name>SerialCrsMatrix</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a69c25b8b1a2a2fcad93f96c63d943098</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Epetra_CrsMatrix &amp;</type>
      <name>SerialCrsMatrix</name>
      <anchorfile>classAmesos__Umfpack.html</anchorfile>
      <anchor>a601b5a24fa9058b51df95c291f5254aa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Amesos_Utils</name>
    <filename>classAmesos__Utils.html</filename>
    <member kind="function">
      <type></type>
      <name>Amesos_Utils</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>af7dd078fe17d3531f1a1f77353c473f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Amesos_Utils</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>a285bf0d01534d1e1ddfc530da644b6a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeTrueResidual</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>a6c378ca8290deff2b59c159b8ca8acf6</anchor>
      <arglist>(const Epetra_RowMatrix &amp;Matrix, const Epetra_MultiVector &amp;X, const Epetra_MultiVector &amp;B, const bool UseTranspose, const std::string prefix) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ComputeVectorNorms</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>ade3b802b5480a587e4bdc512b7c3bba8</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, const Epetra_MultiVector &amp;B, const std::string prefix) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintLine</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>a6196b77387c6376a78469afac5eb57ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetMaxProcesses</name>
      <anchorfile>classAmesos__Utils.html</anchorfile>
      <anchor>a12882625feb30a01ac735748145a918e</anchor>
      <arglist>(int &amp;MaxProcesses, const Epetra_RowMatrix &amp;A)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CColamd_Col_struct</name>
    <filename>structCColamd__Col__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>start</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a5cb4cd47aa519caf3779e1764c1da40d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>length</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a5afdb0921416819582b13fcf72f9040d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>thickness</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a39d3bf6d5e42b09eaa52ba4703aa34e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>parent</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>aa8c4ab7048e000ab4490278e68a8d9a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@0</type>
      <name>shared1</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a2aa53ba52e875b4a49116f9fae7bbbc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>score</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>ab0f8256b133015f1d652717098375e08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>order</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>ae01499878763f472763bff16de3773d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@1</type>
      <name>shared2</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a51ffc49b401fc8d60ac6bd2953067268</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>headhash</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a6a3e9d63221d058ca01cfd882e784099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>hash</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>ac11415e80355b4471c3e4a931a0a9329</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>prev</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a15e6c4b0bfd40eb175828465fb0172cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@2</type>
      <name>shared3</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>aa6bc35aa02858e74c682d5fa0c7adb71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>degree_next</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a0ba9fda2ce0b4a28291af85ec080bae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>hash_next</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a3ed4527f72f974ee4cfc6c565ca80875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@3</type>
      <name>shared4</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a743e1ba4f7103fcb76d4b951144d7eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nextcol</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>abec5037365de927743912c90853865e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>lastcol</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>abde96ae60cdb98167b66ef5a2256ff89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@6</type>
      <name>shared1</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a57074dde3db8895f2838087e6df76066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@7</type>
      <name>shared2</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a1614da679e7a15308181b41ac4d083af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@8</type>
      <name>shared3</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a6dc8ab90eb9dadb839330e1fd35ed7df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Col_struct::@9</type>
      <name>shared4</name>
      <anchorfile>structCColamd__Col__struct.html</anchorfile>
      <anchor>a81abcae13c8a2c012ec2cffb92e044de</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>CColamd_Row_struct</name>
    <filename>structCColamd__Row__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>start</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a6aa37d4d3611f31a11c2e7e721ff5e2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>length</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a47131a039f6cf6defea34eb0214b15ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>degree</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a5cb97bb2ee3ca2e22113e1035bd3d828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>p</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a7620d60cd696eee54255685ca8dfd439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Row_struct::@4</type>
      <name>shared1</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>ad92ec529771db4214c453245fd172f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>mark</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a3e10151e4a88ef33264f0a8297362083</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>first_column</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a927fcfab4722f15c9fe69b53e559a312</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Row_struct::@5</type>
      <name>shared2</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>aca657eac33c41b9d09fbc29a09f035ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>thickness</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a48ce09bfa406329d9c00cc6a1da1abb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>front</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a53df6abe540b7df481dae021a4f598ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Row_struct::@10</type>
      <name>shared1</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a0e598dee3c2064716ea7f642a25f016e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union CColamd_Row_struct::@11</type>
      <name>shared2</name>
      <anchorfile>structCColamd__Row__struct.html</anchorfile>
      <anchor>a3087ea3ce72efa4402c7ab070633b70c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_common_struct</name>
    <filename>structcholmod__common__struct.html</filename>
    <class kind="struct">cholmod_common_struct::cholmod_method_struct</class>
    <member kind="variable">
      <type>double</type>
      <name>dbound</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ae3bca4fbfd58319e48b5f580b5912ebf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>grow0</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a8d1b9e459927f510b822fdb9b3bb66eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>grow1</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ac2fbdae39a53900f295b267965fbed9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>grow2</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a9954efe7371260c80e95b50a1246cb32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxrank</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a01d32e1c14e5c2f1b44150bf050cd5ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>supernodal_switch</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a3eea5f4baf5aeff36995478c04049cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>supernodal</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a4cb46e03a8f5143e11000b71f463f85c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_asis</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ad8b4271eb1dd66b5715e10b0fea5088e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_super</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a195d176e130de9d85ef133dd1cc485e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_ll</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a8b82eead6b8fdf7b68bd36a5cbb03554</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_pack</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ac537a95262657f3502a231cbbfae6d22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_monotonic</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a698e03182daaad9924afc52bae938c1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>final_resymbol</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>abff27b57b21055e72afb2fb52e4b4a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>zrelax</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a6edbba24d0b5ac0040dc14fb1dc092e6</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nrelax</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a9d9c97c726ad73cbcafb32fc08f7317b</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prefer_zomplex</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aad7a89db2d214702e67e712d82bacccc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prefer_upper</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aff3ad3195c8062e9d5ff062795b4a562</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quick_return_if_not_posdef</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a01af96f22547f290e9b0f3df87179298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>print</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a948d6b2c3774edcc426441541b23cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>precise</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a2b39f3347d573f902ef50dd1b8f87722</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>print_function</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ae8a964c79fd576034afdb474e8bb9aaa</anchor>
      <arglist>)(const char *,...)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>try_catch</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a6331e108ea66a156014a9e4737c51b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>error_handler</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a357262f99cdc4275beb4773eccac09f8</anchor>
      <arglist>)(int status, char *file, int line, char *message)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nmethods</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>abbe9c716fe06db537269b25cf593ba12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>current</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a438d7645c71463eeeea7a0617c30704c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>selected</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a8be6575fd169f992be224ef37a6f528b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>struct cholmod_common_struct::cholmod_method_struct</type>
      <name>method</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a907b5d2136f079306411b81f8976d8f0</anchor>
      <arglist>[CHOLMOD_MAXMETHODS+1]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>postorder</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a625b2af367605f319fedd10732589306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>malloc_memory</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a76d5fab755168fd21e3345f5f26032a7</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>realloc_memory</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a13daab97a200fe574c48a6db22e74771</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free_memory</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aaa290adbba1e3d2b1e156be37fd5cdb7</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>calloc_memory</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a22fe814fe29516bce1192288030101e1</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>complex_divide</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aefd3448cb6913ad99bbd3db7c4815ca1</anchor>
      <arglist>)(double ax, double az, double bx, double bz, double *cx, double *cz)</arglist>
    </member>
    <member kind="variable">
      <type>double(*</type>
      <name>hypotenuse</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aa0f31e028b9c91258ae46911cf573257</anchor>
      <arglist>)(double x, double y)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>metis_memory</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a36534776f66853a67d0b16b9e3a14353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>metis_dswitch</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aaec275132283a7deb59120c4690385a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>metis_nswitch</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a1a7fb4118c6aa94de558f881a30a3c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nrow</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ae6afafa0921ee9728d6d05a830b33112</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>mark</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ab2d0cf2649b6b509e5939943f58e8e8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>iworksize</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ac8a4c0a70a02ca7fd8cb577b91673a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>xworksize</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ad77eb2cb67e319005c49abbf7e26587c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Flag</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ac966799bdb334730057370f95b89e1c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Head</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a03fd6edda3588bd9ed34fd9e157d58be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Xwork</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ac4c4a8005450743c3285ba3f8a27eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Iwork</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a06ed65e3b8b380132332d5879270dcdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itype</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a984a2357cb536d2b81a7c7b3acaa4036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dtype</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a92b0f2ac6abf51a33375edcd86452567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>no_workspace_reallocate</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>aafff7c864f0637d25ae3dd403da138fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ab5bfc610dafc47de72d3793a5a191c55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fl</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a5b81f19e745c1087a98f694b0f4df88d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lnz</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a35db105afedaecb9e1ec17f2bde82a05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>anz</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ae599a2265aa726874e4cb7a680e6fa4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>modfl</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ae5d3cc53e71c7d804ac43d111b7db59a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>malloc_count</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a3e330b5fa9e149d096ad5b3c18f3c073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>memory_usage</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>af381d495fa0d905911c91e7302421d0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>memory_inuse</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a84ba1e68943f71008ec424433f265821</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nrealloc_col</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a74f3db3adf35e458974f2bfacc0d7b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nrealloc_factor</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>adbfc99ba71dd73a8cd42840f9ec1c143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>ndbounds_hit</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ab0e7283504d6efce28e36638acfa10aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rowfacfl</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a5660bb6cc1e9c49e898b2150c9f04afb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>aatfl</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a3c2d3ad87e8b292b3783c460bdaac677</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>other1</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>ad6bc7c083e250f2060503e59733986e0</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>other2</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a15e17b4cf4594d8ab0820acc66453734</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>other3</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a3d8e42261c4851f7225a1680fec22629</anchor>
      <arglist>[13]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>prefer_binary</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a5a83dfdeb2a158cf60190f2f015c9b98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>default_nesdis</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a84a47cc5177b7b9719b3fd9bcf5d8523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>called_nd</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>acd3f602bd3be8808affd507404dbd4f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>other4</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a0b85a6fe483f0a1b0127ffe5e8fe4d8d</anchor>
      <arglist>[16]</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>other5</name>
      <anchorfile>structcholmod__common__struct.html</anchorfile>
      <anchor>a6e6eab079cf147eda580e1634019c9f5</anchor>
      <arglist>[16]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_dense_struct</name>
    <filename>structcholmod__dense__struct.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>nrow</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a953f87de4504c8dde17010d46ec86a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ncol</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a13e6447176b93f052fd770b544d1133e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nzmax</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a75e6d1e89dee3d4ed4ae3526c92b6eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>d</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a1ed5b5293874f96a1697f8d52a6d2353</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>x</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>aafb8f54a65293122e1546f59bf159b2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>z</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a66f1ce64274a4e2612deb9fcfa9020e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xtype</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a0540d8e3d93f7318c893b05fd055d188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dtype</name>
      <anchorfile>structcholmod__dense__struct.html</anchorfile>
      <anchor>a966d283056549695d36a63989eec70f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_factor_struct</name>
    <filename>structcholmod__factor__struct.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>n</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a800104eff56a6457db4b2f00029e4604</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>minor</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a93d9769d196265a02bdef02112d532f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Perm</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a575a93229fe80d08604361fbd745dd94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>ColCount</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a819a8d931e1740a2c9065dea53711108</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nzmax</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a3ffbf7b9a6c963856f524788c62d495a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>p</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a4943dd995c9aeb8dbd444f787922af97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>i</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a7bde60d5ffa10d70c99d4e23dad6361b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>x</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>ab37fc1e0d497ef9384578ffb72cc296b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>z</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a6c08f5ae41129defb4cb3a4e12f5be46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>nz</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>af29672cde84d43555be9ab90bf987c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>next</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a35658d0471f7e7f5eb2266b1e4e6a2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>prev</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a63c13c2509bcd818d037271c6fd775e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nsuper</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>ac45f6fd768522422d09096d9f4adb8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ssize</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a8ca2fd8fa84f7ebfe0d4bcfb85c93d8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>xsize</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>ac4d7a8e9e8d9c3317ce0ed72994c4ff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxcsize</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>aa0f3fac441bde8b17e53428b9feebb27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>maxesize</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>ad950c7330e0a20e88b1d162dcfc5fd6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>super</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a2bb08fd62ea257cedd7a86fc188bea1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>pi</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a8e620808e7e3589a345f9b2d10249da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>px</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a6f96871eb75cf25f06e54a8459676ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>s</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a2d30b6a15849bb8455dfb918229bf2ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ordering</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a6a344bccbc5ba926f56260592117546a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_ll</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>adeba02f132c6ff8dc1a02c223e594125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_super</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a300f4847c0a18fb398c0d0ba54d5b195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_monotonic</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>adf06300bf00335abba4dc2e1c336bdc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itype</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a8d2e5bda34720874c4dfa1a42bc86f6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xtype</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a5893c5b5063699a51828c443e5cf76f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dtype</name>
      <anchorfile>structcholmod__factor__struct.html</anchorfile>
      <anchor>a7ffbcf2f8f8539602c1bb268d9d3c6dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_common_struct::cholmod_method_struct</name>
    <filename>structcholmod__common__struct_1_1cholmod__method__struct.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>lnz</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a938901598e6a1605311dfadec1051f5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>fl</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>ae28b9f62641a046c959578ecef638cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>prune_dense</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>ab075ceb01c25089feeb581e336f7d7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>prune_dense2</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a8cbec3321877bf899d0687af26b6d142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>nd_oksep</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a3ae75e2673cdec41593437cbda5caeb0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>other1</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a1eea846b40e7cda0582f88ea0ec299d6</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nd_small</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a754259f947e420fcb7509e78a58a959b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>other2</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>adb9fe11c12b42b8b5c5f107d3e4d0a52</anchor>
      <arglist>[4]</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>aggressive</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a87ed6daab4f653005c9548cbd373a4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>order_for_lu</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a60a58395d527ffc4ab4eda532dff9a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nd_compress</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>af27cb271236bdcc1fcaa9212b36b76d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nd_camd</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>ae78e902ba2bc1cca678af694d0e358e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nd_components</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a09120bb421f9b6c0fd9937fb210bd16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ordering</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>aca01b166002d22645c4b9a067bf79794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>other3</name>
      <anchorfile>structcholmod__common__struct_1_1cholmod__method__struct.html</anchorfile>
      <anchor>a59708485cf11c47bfd130d8c8c8e8a16</anchor>
      <arglist>[4]</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_sparse_struct</name>
    <filename>structcholmod__sparse__struct.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>nrow</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a719929ecb969cf2c3d3331629ede0e6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ncol</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>acf4beb6a91fd74aad71730bae5a2e6a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nzmax</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>ad1c75a625908f611c79ca4d54a3f4702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>p</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>aeda8f45d5784a09a80674884ea839201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>i</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a1449d6927617d38c5d166f8f88a22e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>nz</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a4acaed0900a630832e051260da5c33a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>x</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a0f67ff8003c3b43f13737c6ed971f634</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>z</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a7fdc5f6c6d72d13b0d677e9772c7a549</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stype</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>aac236e5b68b276dd6e4bc4b045fa42f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itype</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>ae871ae83990e41e2cc370954df60cc1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xtype</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a1c770070ceaaa645f720c071683ec4fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dtype</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>a13d6016a5cbacef32cc26ce45877e7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>sorted</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>abd1cc543d30f9eebec7fde5f1feba7cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>packed</name>
      <anchorfile>structcholmod__sparse__struct.html</anchorfile>
      <anchor>ada3dac57baf72e27cf7bed83e285cbd4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cholmod_triplet_struct</name>
    <filename>structcholmod__triplet__struct.html</filename>
    <member kind="variable">
      <type>size_t</type>
      <name>nrow</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a9f493045f6a1a9f06469daae7a7717fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>ncol</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a0b047fd2690f60f672d303a4fd76267c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nzmax</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a257a3340ae7f904b53a02bfc935ce50b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>nnz</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a76c537ae8636fa079fe7d097f42fff13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>i</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>adcc98a7381520744861b080d32ecbf4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>j</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>aaaaa69b8dad9cf51f6be699c47f39a7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>x</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a547fa0df3175be139385f49a46c6369a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>z</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a4068a1c6ef4c980d0339264694a3bfe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>stype</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a932d53a51a2437303fa04c8438184075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>itype</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a493efe685182ae81e4822286bdde65e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>xtype</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a7bb174866d83ff4111af0ab802a8ec93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dtype</name>
      <anchorfile>structcholmod__triplet__struct.html</anchorfile>
      <anchor>a2f6e68666e876eebc5ac21b0be1cb161</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Colamd_Col_struct</name>
    <filename>structColamd__Col__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>start</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a70cd271d1c992d62a072e692730ab6ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>length</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a3836c35294cc13d99645a9087aaf5cd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>thickness</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a1f82680015aa9e5ac20d3bbee03695d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>parent</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a7d96600d6f82f149d5bc9e714f831828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@12</type>
      <name>shared1</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a604c02c75e7a16062c706aaffcaa24cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>score</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a3d416a0f1278d572b5d9ca2005159c7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>order</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a45980b299b4b5390eb3e3c4a30b21460</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@13</type>
      <name>shared2</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a96deb03915e7bf58c31916c3e33cffc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>headhash</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a833dab7cbaff21ff87fd47429491b038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>hash</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>ac185a1d8901d9140d899887dd8054193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>prev</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a43bb268169bbdad31353abdd886bd466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@14</type>
      <name>shared3</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a651548523defce4068d3fcad60196101</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>degree_next</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a3f6daaeedbd0cfe94606c56817a838b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>hash_next</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>af845359789ebf068159360d87b8d86d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@15</type>
      <name>shared4</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a5d4d10b9c007ba9a8fe4fb20dde4d994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@18</type>
      <name>shared1</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>aebbea5ad760e5cb3ae274ed1b3b450bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@19</type>
      <name>shared2</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a3b6395e8d335285c12ace610d3e4654a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@20</type>
      <name>shared3</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a5ac6d5d13f8186c85a3ab78c374e9075</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Col_struct::@21</type>
      <name>shared4</name>
      <anchorfile>structColamd__Col__struct.html</anchorfile>
      <anchor>a4c36feac2ab2c1f14f32f8f1d2b759bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Colamd_Row_struct</name>
    <filename>structColamd__Row__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>start</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>aa96c957329939232bcfa0cb4025fbca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>length</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>aeca4ddb0fb8476cfa96107c30ad91ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>degree</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>a641427424179c1b672a16b18e268f21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>p</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>a2e357aa1836cce92ecff8abd1572c2bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Row_struct::@16</type>
      <name>shared1</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>ae85324915c0998151a50e34162e7f79a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>mark</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>ad0b89222f36721bd5e919280d6bbc392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>first_column</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>aaa7ab8a54aacba9632b8485d6e795b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Row_struct::@17</type>
      <name>shared2</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>a516cb8bc55948c6e28848a8ed193c6e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Row_struct::@22</type>
      <name>shared1</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>af8186ff43ff938da1e30c64643848216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>union Colamd_Row_struct::@23</type>
      <name>shared2</name>
      <anchorfile>structColamd__Row__struct.html</anchorfile>
      <anchor>a196da1a2b897e73911c2c5212a44b579</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Epetra_SLU</name>
    <filename>classEpetra__SLU.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>Copy</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a56f717edce2375bf05156b4876b6e641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_CrsMatrix *</type>
      <name>A_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a76ea6d212f11e994ae332b48db822430</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>X_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a88d70b367b456185a6e13d4069815186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MultiVector *</type>
      <name>B_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a31414e37a604baf00d13bc17da065662</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>R_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a5b93b3d8503c8b47ea20c2502272df7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>C_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a7ab70cabcbb8544fc15f0d345f71a9e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_CrsGraph *</type>
      <name>AG_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a3c193f862bf303737b5f78f15242ff13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SLUData *</type>
      <name>data_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>aa774062258cd0ec2f94f7c829c1e4449</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>Indices_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a6f44333823c33753f7b9540b5de4b448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>Values_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a3939c8c245556a90e8d8db8806e68fe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>TransNumNZ_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a1330fd98f5f4f31caac4d9cab0d792c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>TotNumNZ_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a4c96c6b0fec31a99f6b314019800e4f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int **</type>
      <name>TransIndices_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>af431ff429844bbd59d42a57f99090130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double **</type>
      <name>TransValues_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>aeb02076bc6d9ec23e48663836a40328d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>RowIndices_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a64cfd6f47b15832039e4f6351ac0b6f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>RowValues_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a1df38692a9a8372ed9354fc5736f8717</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>ColPointers_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a0fa7d48f0bff9716bea8f4e43c85b9f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>perm_r_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a4ca6c782ab0ca5e28507d31e2aa6885c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>perm_c_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>af9b3fddd6543eed90c1195b86d76e682</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>count_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a9e3fc2df2aaa2653cced681a5d947c6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>etree_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a543ce2eef4e35a84ae6ed4c91293a80a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>ferr_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a8787b4c337bb581f31e4e755c4cb7f4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>berr_</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a3bde49e0540b9c351064a9ea3dac501d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Epetra_SLU</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>aa214e182d8809d4cab80f4152e58bcd8</anchor>
      <arglist>(Epetra_LinearProblem *Problem, int fill_fac=-1, int panel_size=-1, int relax=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Epetra_SLU</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>ab16b505bc5d7108cae8e40780088cbbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classEpetra__SLU.html</anchorfile>
      <anchor>a9e9ab903fd0623cb47b09fdfcc7438b0</anchor>
      <arglist>(bool Verbose=false, bool Equil=true, bool Factor=true, int perm_type=2, double pivot_thresh=-1, bool Refact=true, bool Trans=false)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Ifpack_ReorderOperator</name>
    <filename>classIfpack__ReorderOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>Ifpack_ReorderOperator</name>
      <anchorfile>classIfpack__ReorderOperator.html</anchorfile>
      <anchor>a14ddd5b254cef7c572431f34b43bd4de</anchor>
      <arglist>(const int size, int *perm, double *scale)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Apply</name>
      <anchorfile>classIfpack__ReorderOperator.html</anchorfile>
      <anchor>a2183d676852d045a4972b9aa5028cec2</anchor>
      <arglist>(double *x, double *y)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const int</type>
      <name>size_</name>
      <anchorfile>classIfpack__ReorderOperator.html</anchorfile>
      <anchor>a1b37688269a0948143aa267afd418602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>perm_</name>
      <anchorfile>classIfpack__ReorderOperator.html</anchorfile>
      <anchor>a71ce1f4879251d3d8181f034b466a865</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double *</type>
      <name>scale_</name>
      <anchorfile>classIfpack__ReorderOperator.html</anchorfile>
      <anchor>aaf3c29c17d4eb0dfb19b580779122156</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_common_struct</name>
    <filename>structklu__common__struct.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>tol</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a37fce3a2c210b57c08ba83f3f9ade714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>memgrow</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>ae27a6b98b4024ec2756cddcf125494f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>initmem_amd</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>afb648336a62b607ecad920a1799d26eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>initmem</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a6d1ba6f12fe04855acc2fc9ae2fc0af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxwork</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>ad37834c04f5547a14e3135d4d6f8fad2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>btf</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a4aa9cd5cba3eae67c84b494223067569</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ordering</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a48247b9154793b08150f62306c57a5f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>scale</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a14dd0d21506631ce88cc158d881a967c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>malloc_memory</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>aeeba8daa9a7431f127362928668c225a</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>realloc_memory</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a756f78d03ffff58a62711c0b6935a5ce</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free_memory</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a4b6fd44305afdc61d3451f87bee77d92</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>calloc_memory</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a93af833f2ee5145ed4875700f1f83f08</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>int(*</type>
      <name>user_order</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a60c59c019f67b3789a55d1638cec4bac</anchor>
      <arglist>)(int, int *, int *, int *, struct klu_common_struct *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>user_data</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a9a9e64c4ae1a0d648f21fe193dfd8d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>halt_if_singular</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>ab875a04ac2af7d41346d22b905079090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>status</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a0646799a16c8d4203af475cade474ea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nrealloc</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>abfeb0f28d70fa736aed40dae4538e605</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>structural_rank</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a888c82824b8fa1a1064f0584e33f2a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>numerical_rank</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>adc832a6d5040b7fb50c1cb209fef5878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>singular_col</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a323c8f7e1487604c58c09866c1e2882c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>noffdiag</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>aa958c27a8bcb59d48c70d70828a39a8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>flops</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a63ba488812c98fb38d3b43fa205dd4f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rcond</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a49e31dacb4720908a38e381f35f3355c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>condest</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a9e2617636b861c91eea7d7b1715e7643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rgrowth</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>ab5c1be96d1ac8c54af3c7759cc0bbc8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>work</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a66e73b5b7bef87f66322e39eba2b5db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>memusage</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>aca7c23c5d7194c0e8a83a0495d089661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempeak</name>
      <anchorfile>structklu__common__struct.html</anchorfile>
      <anchor>a0c788a860c90e958d0f294e5072a28f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_l_common_struct</name>
    <filename>structklu__l__common__struct.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>tol</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a79b99101a2000a7a7c7e00e13f8ce66f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>memgrow</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a2f3871c8f554247583a88f990791ad60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>initmem_amd</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a3352e1e6e1b06f431008995c60ff2bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>initmem</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a83549856a80da71350f35c5a9664081d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>maxwork</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>ae237d0ccf7a5dd2ae44773744710f4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>btf</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a6dae5be1384caed7d4c8c7387941e122</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>ordering</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>ad9a7403fe75d2099b0bbf62bc1db2070</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>scale</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>aa34c83fe1568b797e394ccd9bc7f0785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>malloc_memory</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a5e4451ab62d69ca476176ac7b1f52e91</anchor>
      <arglist>)(size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>realloc_memory</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a4c35e934df4599beeddc8ce7800df72c</anchor>
      <arglist>)(void *, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>void(*</type>
      <name>free_memory</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a5d70f6fecd41e4bf58f6f77312666a51</anchor>
      <arglist>)(void *)</arglist>
    </member>
    <member kind="variable">
      <type>void *(*</type>
      <name>calloc_memory</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a53c25b4929d23c8926d9dd2d85b73443</anchor>
      <arglist>)(size_t, size_t)</arglist>
    </member>
    <member kind="variable">
      <type>UF_long(*</type>
      <name>user_order</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>af8269343a5b5af4e9334450e96a40370</anchor>
      <arglist>)(UF_long, UF_long *, UF_long *, UF_long *, struct klu_l_common_struct *)</arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>user_data</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a5a28a74b4ab6e600d88ab12f87f97855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>halt_if_singular</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a3d32d1667e0467af40cd84076b98b252</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>status</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a24c0a88ec1ccc40b4bc2eec37f8b4888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nrealloc</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a6e32ce45047d0f4ef4b3fd63cf137d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>structural_rank</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>ab1e0afacccf9d1ad75efdd78d4cabf3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>numerical_rank</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a0865a3bd8b1008c46949517440296e0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>singular_col</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a9afa05f9dac37f7d2e200edc3e6dcd02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>noffdiag</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>aeee54159e86280d554f8e5ba0d67198e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>flops</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a5a30a96354b866278b655d139bb7fa65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rcond</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a0df8bd02a3a4bab45355492284f7baf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>condest</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a524034a28cd9aef6c2cfebc072508285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>rgrowth</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a20d6db39a691699617f163b1e2e51340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>work</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>ac3e69c200dcbb03ade55f868ae3f897d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>memusage</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a2f12abf0b37fab1678a01e96db26dc29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>mempeak</name>
      <anchorfile>structklu__l__common__struct.html</anchorfile>
      <anchor>a662b7b90c356dc8cc0ca5554d92cef13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_l_numeric</name>
    <filename>structklu__l__numeric.html</filename>
    <member kind="variable">
      <type>UF_long</type>
      <name>n</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a49d550f0ea237f844d183e0e9e1b1300</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nblocks</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a18da5425fc5b6df22c3956ac4f04a9a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>lnz</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>af3fe2fba86087af615e184c4a5318f93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>unz</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a99d17819cf742c4cb98d870385ce28f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>max_lnz_block</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>afcd8166718a67e9e2765675dc6b56365</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>max_unz_block</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a2788787a6a03c840afe65b22524dfea0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Pnum</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a1aca9bca704af2207bc6405eb8dcf6c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Pinv</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a0984dc9aff8a12ce68ae66c38390f4b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Lip</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>aa8f34f878607326aa4abec3d1146ec02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Uip</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a2bd385e3d0b76ab89847f02ce2db2ee5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Llen</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a63d6913533826bdd80d8eb94857a6a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Ulen</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>adfb700881b3400b2005a5b5f9f1db334</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>LUbx</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a4059274130fb91be35953f41d0440ea3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t *</type>
      <name>LUsize</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a595cbac6d8d89f28034fd4af669051de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Udiag</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>acc234c6626664156efe58c5559689c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>Rs</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a3a14713ad371046c3db02bc76fb7cdc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>worksize</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a9a1b2bbdb864704eef6ed85bbfa49c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Work</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>abe5c023aaa84ed1047e75a8bd1c19b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Xwork</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>abe547de31efd5643ac9f645457944357</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Iwork</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a7aa26fd61d3e81210d113743e8898498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Offp</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a56e8440fe3096889a89c48cf3e3abd56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Offi</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a5bb68c9bf9797b97c369e26f332601ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Offx</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a7df0e6ef68d457b8ac719e40b534835f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nzoff</name>
      <anchorfile>structklu__l__numeric.html</anchorfile>
      <anchor>a1cf6bf4a468a38003837e7af24a20bb0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_l_symbolic</name>
    <filename>structklu__l__symbolic.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>symmetry</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>ae6c23afa5bad2aa066a1f9ebacace94e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>est_flops</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a5d30067aadda912776a48d3e6d66ccfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lnz</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a5557782ba2a3f2d72910847ad510c295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>unz</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a27425e2ec29e3c85d8c70c78056ee694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>Lnz</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>abc083bd00167bb1ceaed8221828d8a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>n</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>ad642b54f1371b3acf21bbb73ba191a46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nz</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a80fcbde499c895e49430cbf6a4d0affd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>P</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>abee799a091610cc1e4d3a6db007c86e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>Q</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a70c7bacb35051212e929fd21363dca0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long *</type>
      <name>R</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a5e3f1e2c700351d20039952f748b5130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nzoff</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>abc1d431033939bb5ea3b0be6ece6802e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>nblocks</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a34c4a63661c82cccd1394cab6d632510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>maxblock</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a5e52587af79b48faca4fdb4fcba5888d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>ordering</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>a0b7ec8ef13666b0e7b8bcc925d186f00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>do_btf</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>ac212f17da6c07aa917f93aed4dd3f168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>UF_long</type>
      <name>structural_rank</name>
      <anchorfile>structklu__l__symbolic.html</anchorfile>
      <anchor>ae37ceb69e9415adf079afd3f05a293c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_numeric</name>
    <filename>structklu__numeric.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a3fcd56ed8534c7e313f7d5d14da19d3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nblocks</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a75ceea17285c7bb5999ac5cd1eab4f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>lnz</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>aa59420d350d1a1eb48262fefd0071556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>unz</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a3b98a1ff7ab93eda6fb17ca5a595fcd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_lnz_block</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a81fc7dfaf85f72309959e422b5779d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>max_unz_block</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a3a7c6e94351d48fec0b88e6b1b6ddf37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Pnum</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>ae4f9b9de195fb1a4e34354c91882ece2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Pinv</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>acff15ca1d2d21c0572a48fd3b10dbb88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Lip</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a4c936bc382b8817988a25008f67ba210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Uip</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>ad0fc8713c8a4658353bf6fcb5da82dc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Llen</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>ad89ead40f840f1d0db27fb614585b667</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Ulen</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>af415a56c19c1c8d718b565aa2bb9ad55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>LUbx</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>ae57f3ca86846db941223b422bd3ef5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t *</type>
      <name>LUsize</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a8ab693163e38121f1c8baa3b98eb03d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Udiag</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a720dfa51ab9b4b7aa8fb721e58285c4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>Rs</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a6080907adb2aa9f85091df3c82f21b3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>worksize</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a907b72abb68dd81e4f7f35a0ffcc9942</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Work</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>acf4f863a9eec97e70e830a7b1b237477</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Xwork</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a2375727cbb0352ac0d0f10c05a3a3813</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Iwork</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a2f03c0e29801b146a59b613710d8108a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Offp</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>ada296f797f05adcfd8173e928110b057</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Offi</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a78176cfd27e4e4906ab5f19f097ae732</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>Offx</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a400bc0467a9a5313bf7b54f9c8e9426f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nzoff</name>
      <anchorfile>structklu__numeric.html</anchorfile>
      <anchor>a01ff44df4f1b68a5583bae45e8681575</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>klu_symbolic</name>
    <filename>structklu__symbolic.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>symmetry</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>ae342ab0f8cee713ad13c1660d5775e41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>est_flops</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>ac65b5b33b35aa4ffad905d435ce962e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lnz</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>ab5a587030dc5b9665b94c08f83750eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>unz</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>aae025d0b195c803417ffb52e97b064f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>Lnz</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>aaceff802760fb04e663467cff347b6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>ae65615dbfa650aa17cc4d576daec5f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nz</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a54b00f67f53cb2995714db36c5cc8186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>P</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a0be543e08cd8dca75cbab1b7d777ead5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>Q</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a1520045d3bc130e3444c3efd71e58d01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>R</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>aa4989c643b7c3d612243d71c82462a6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nzoff</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a9ca92e8de779905237dacdb65d527607</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>nblocks</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a8756588ff2b8f893dc307b29b49b6e2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>maxblock</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a3a56b60da684297a3b99c3455d276bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ordering</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a7b7e30df16868072173da3671c4ba56e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>do_btf</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>addc980e335809b15cd12ce8ead537b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>structural_rank</name>
      <anchorfile>structklu__symbolic.html</anchorfile>
      <anchor>a8db8dbd4b477ac421934e89c8ce49860</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_btf_numeric_struct</name>
    <filename>structparaklete__btf__numeric__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>nblocks</name>
      <anchorfile>structparaklete__btf__numeric__struct.html</anchorfile>
      <anchor>ab92ee6a53933627cd72f71bf7c5d77f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>Singleton</name>
      <anchorfile>structparaklete__btf__numeric__struct.html</anchorfile>
      <anchor>a20c1c880b31a0e79721e70bf6a85194b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cholmod_sparse *</type>
      <name>F</name>
      <anchorfile>structparaklete__btf__numeric__struct.html</anchorfile>
      <anchor>aea5c961c714324ede3af05510c118afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>LUnumeric</name>
      <anchorfile>structparaklete__btf__numeric__struct.html</anchorfile>
      <anchor>aac70f25e26c0038734463d1cbd56b7c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_btf_symbolic_struct</name>
    <filename>structparaklete__btf__symbolic__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>n</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a32e6d844cf51fb7910ba7ffe6bbe1dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nblocks</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>ab505a570cb55892d0c6fa7260e55146b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>cnz</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a86fb24458d48f6ff3bbd5758dcec92f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>fnz</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a710179cf2ab38f6ba7cd6ee2c045ee6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Mem_n</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a2b87cef4b0d216e53dd1f92f18788b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Qbtf</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a6206d783922fc72564e9a075d76c29c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Pbinv</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a821daa6b11d4ccc832c2c906d565ba11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Rbtf</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a9969e2664bb82e396466169ad70c7bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void **</type>
      <name>LUsymbolic</name>
      <anchorfile>structparaklete__btf__symbolic__struct.html</anchorfile>
      <anchor>a79875aa7a256cc6961c469747e1fe66b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_common_struct</name>
    <filename>structparaklete__common__struct.html</filename>
    <member kind="variable">
      <type>double</type>
      <name>tol_diag</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>ab2599a0e0675697aaa03bbb045b40284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tol_offdiag</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a3ea747826e1ea92baa436c288373fec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>growth</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a2c0c27f00f0747ce9eab2ef936f930ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>status</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a3a31c888f0c07769f52a49467281ef79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nproc</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a061fa25686535c1eb5dbd227983365b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>myid</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a584148b16ef6b4ef1c53dacfd13bdf71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nleaves</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a58c8338626b12ebb531ae4c6d2baf679</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>dump</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>ad37e58bd1c1e15dad3136fd1e48e94d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FILE *</type>
      <name>file</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>aa182c0e80b441d471d5b4d9ad396c029</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cholmod_common</type>
      <name>cm</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>ae794c422b86d482151bd56b44692555e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>KLU_common</type>
      <name>km</name>
      <anchorfile>structparaklete__common__struct.html</anchorfile>
      <anchor>a229d570987fa9f75cf4be559d1c200cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_node_struct</name>
    <filename>structparaklete__node__struct.html</filename>
    <member kind="function">
      <type></type>
      <name>MPI</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a3e23224b29aede47aa99ecf82e08fcbc</anchor>
      <arglist>(MPI_Request *Req;)   Int *W2</arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>header</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>ad1fff09655dc10e45e7a97fce8c771a4</anchor>
      <arglist>[PK_HEADER]</arglist>
    </member>
    <member kind="variable">
      <type>cholmod_sparse *</type>
      <name>A</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a5e4394b251e5106f258f888880387d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cholmod_sparse *</type>
      <name>C</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a80fce455c389d0f67a48addc50b73853</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>lnz</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aab6096eb48863ce98f4f0891f4ebd187</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>unz</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a3a46ee36cd8b9f7603ffc56b07cf13ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nlost_in</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a59f5044d3e39675e4babf2ec21704e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>llen</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>ab0b4414fc2ef115dbc06a905e65c2483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>ulen</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>afcd99f2094e1e80d44affbdd40a8eb20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>lp</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a98530f5a72121c364f27f951a0ba1441</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>up</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a9028ad86ad659bf3742307ae9fd54202</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Plocal</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a6490d9bb8521606066258ab7a8b5a30f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Qlocal</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>afa561b31de15246054663a7d69be4b4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Pglobal</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aaa993dc1a1a111a1eb84bc576f11ce4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Qglobal</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a1df6dcf02bd59d5f365bf676b9852ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Pinv</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a27759bea9ff6a0105c546ee7a1814fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Qinv</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a940179f41a1d57d73ed0547ec3dcde04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>lusize</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>acbec7631f16f3907dcfdab4bb96e7e06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>ix</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>ab3cce4b3ef12b45233d8695394b92f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Lost</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a14a37c601cac28aa02b0d90786ddfbb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Lostp</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aaa4d8bffdc3d7b44e41570ebca57745a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nchild</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aac5eb24e712db33b66b9bfd6fb07fb80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nrealloc</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>ab77f79b8d53dd7ac258a56019d5a74f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>noffdiag</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a16630b74fdfb829366bce0c5aadc1a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>umin</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a5b5163e465810df35eef59e802b3c5ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>umax</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>afa12cad9946c7d8ce43646903411c748</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>sx</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a30bd059b4ceb34106f4df0d53a332c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>sp</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a4c68b0d693b8c383efa75adb3b5f0451</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>slen</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>ad17fec07c386389077f2136abb12d876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>nk</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aeb7b516ad107d062e458bbbf377a2119</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>B</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>aa89598c7114f8c931012d447251744cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>X</name>
      <anchorfile>structparaklete__node__struct.html</anchorfile>
      <anchor>a07e446c967ad0f850aea89ef1ccd3f5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_numeric_struct</name>
    <filename>structparaklete__numeric__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>magic</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>aee53ab6fa39b07ae3e64fcbe6e3c0c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>n</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>ab74cf3fbe6f9adf1f92fc637e70c2a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>ncomponents</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>adeb2c503393a78b0d9d1334cc737eafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>P</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>adc1788a88f5ad3e0756eec8810a5fa81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Q</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>aef4f1067abafdc18de90e19afb0c49cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Pinv</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>a749f9e69aced7bf57e7d8de8162a6462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Qinv</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>ad570ead54983aa59aa071b71b12a5acd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>paraklete_node **</type>
      <name>LUnode</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>a312f10472eb958428ea60ce6ebe7a4d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>W</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>a3f0ab38d63db1a2c38682eb0d4ff34f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Ep2</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>a5f44fb9b6adb5479895c841cbd580e3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>cholmod_sparse *</type>
      <name>E</name>
      <anchorfile>structparaklete__numeric__struct.html</anchorfile>
      <anchor>af5f283b20beaaf29b71060b4b7b9ddef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>paraklete_symbolic_struct</name>
    <filename>structparaklete__symbolic__struct.html</filename>
    <member kind="variable">
      <type>Int</type>
      <name>n</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a883d571eea85801d4f9f1ef32093e0a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>ncomponents</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>ac4e87d6e7e15288acde29e655c42684d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>ncomp0</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a1c45b31c6a79154c66b0d82ee3d85473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int</type>
      <name>ncomp1</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a702c6560f1a498c142051ca965ab8e2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Mem_n</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>ac0b2496c047487f29bc589ebf76c8762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Cperm</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a76a2ba61a3a03f49e70ce7c8d15c2d26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>RpermInv</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>aef57d381ed5ab039244acbd55c526820</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Cparent</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a70d57a87167739918f06f272d6647a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Mem_c</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a5bd7bee0dfd39508037125aebee0b7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Cstart</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>afa3b56b08ea28a9c5bbc0dd3389e3084</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Child</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>ad3454c28e6cc79169ad3736837ee23f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Childp</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a54ab1225cbb6b1bdaec373d309e520a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Cn</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a19d39b50e0750648d9bf2da74a6b7f85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Clnz</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>ae26378fb8d0150c86ee36a3b6fa73b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Cnz</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a3af32e90aa1ac47d091dbaa17e3bce60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Sched</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>aa2a6c18c89a895d15615fcdad78e7018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Int *</type>
      <name>Rperm</name>
      <anchorfile>structparaklete__symbolic__struct.html</anchorfile>
      <anchor>a36b7089f669462ebe7d95f449aff30b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>SLUData</name>
    <filename>classSLUData.html</filename>
    <member kind="function">
      <type></type>
      <name>SLUData</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>ad6bf0230b774deb6320b14ee894eb69f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>SLU::SuperMatrix</type>
      <name>A</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a34a354b3d3a0cb7deea1b54868b1ac68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::SuperMatrix</type>
      <name>B</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a675d9df0ddb94de4fe6dd1605eb37c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::SuperMatrix</type>
      <name>X</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>ad3ae85873973cb407690d551b4dbd9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::SuperMatrix</type>
      <name>L</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a81c40a77e6bad978ac373ac6bcd64c8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::SuperMatrix</type>
      <name>U</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>ab0dacbb8324a0f9479703768c8b8f796</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::superlu_options_t</type>
      <name>SLU_options</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a2bfcc357adfe8266e3190f796a48e397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::mem_usage_t</type>
      <name>mem_usage</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a46841584f67cf68c05e2f689917d5e25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::fact_t</type>
      <name>refactor_option</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>af60b8da7b886ef9404fafe5ad2f6f827</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>SLU::factor_param_t</type>
      <name>iparam</name>
      <anchorfile>classSLUData.html</anchorfile>
      <anchor>a8b5a461ac6e5f5d2c28f2fec8425e63d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseDirectTimingVars</name>
    <filename>classSparseDirectTimingVars.html</filename>
    <member kind="variable" static="yes">
      <type>static SparseSolverResult</type>
      <name>SS_Result</name>
      <anchorfile>classSparseDirectTimingVars.html</anchorfile>
      <anchor>ac6fb3a22676d05710d3bdccef03a68e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static std::ofstream</type>
      <name>log_file</name>
      <anchorfile>classSparseDirectTimingVars.html</anchorfile>
      <anchor>a7746d172dd78e2f9bae3f9b9a4ebe556</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseSolverResult</name>
    <filename>classSparseSolverResult.html</filename>
    <member kind="function">
      <type></type>
      <name>SparseSolverResult</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a3b7b9eb30e3408397a457623c2fa2b94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SparseSolverResult</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a73db889392f19e4f4398d32820c403e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_First_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>aabafcde91ad2ed4b5540200e5fc6f01c</anchor>
      <arglist>(double First_Time_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_First_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>af8773a7118fab7efce5dfe394b42e234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Middle_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>ae9873db27a30ce05a6f76133353ee8d1</anchor>
      <arglist>(double Middle_Time_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Middle_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a19b3a5c5a7ffdb35f18aa4829e79b67b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Last_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a26581a89fcfc8105cc381bf3f1397c19</anchor>
      <arglist>(double Last_Time_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Last_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a662b7c2c8552fdd297e7cfeeddf56f95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Total_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a9ceee2836091bf0719363d1799d37d88</anchor>
      <arglist>(double Total_Time_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Total_Time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>ab93a7959dfb3e7ca6443dfc2190a25b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Bnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a6de88ee8ad5ad15f50f870db46c07a50</anchor>
      <arglist>(double bnorm_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Bnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a0252848d34766ce4f1f4fab1e45c4df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Xnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a25253d247335cc6e25d8d9c18a0930da</anchor>
      <arglist>(double xnorm_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Xnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a73ba7f28d52d3cec3c89671267a8edd8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Residual</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>aabcc4568ee63fef2b20466b425c95aee</anchor>
      <arglist>(double residual_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Residual</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>aeb40d73a5c50eee3939377a16c214fbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Error</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a2d0e3734bffad3ccfebe5aab0e303e2b</anchor>
      <arglist>(double error_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Error</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a0d618d535c1a3ab3b1f8a8106131a35f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Set_Anorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a39e4bc03e7449902a4ffc2b8fb32da25</anchor>
      <arglist>(double anorm_in)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Get_Anorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a31973a54b201bf87731075835460bd6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>Print</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>ac87f5671d85e04dcbb9a2e2783a0102d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>PrintSummary</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a95a0b5d4aee06201fa196be9d259b0ab</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>first_time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a840454b55c03611ee1fbcce8c6d8476b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>middle_time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a61f7797415a68ca1ecdbf183f72aae75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>last_time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a12b0846701a4b203a0d29ab1c6ba91be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>total_time</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>aafca35fb3b8b186adf3149c4aa54e27a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>error</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a749612f1594f601e341fc199a90ce504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>residual</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>adfde57396bae38151dbb0a3ad78b9197</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Anorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>afc5fffe6aeb528e3ce2e8e7e9b8415d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Xnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a3f09aad06220226ab8a025ee5d3b1aa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>Bnorm</name>
      <anchorfile>classSparseSolverResult.html</anchorfile>
      <anchor>a3b2dfcd5980a700a428fdfb526db97f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SpoolesOO</name>
    <filename>classSpoolesOO.html</filename>
    <member kind="function">
      <type></type>
      <name>SpoolesOO</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a97383e95041db6ccfc5ffbc3ee2dac21</anchor>
      <arglist>(Epetra_RowMatrix *A, Epetra_MultiVector *X, Epetra_MultiVector *B)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SpoolesOO</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>ae6b2a884cb713b55529a6ce66c92934f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SpoolesOO</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a20ececf5024f3b1979b4af24b6028f7f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetUserMatrix</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>aab2383d823870499fe3b2c59abbf1fe8</anchor>
      <arglist>(Epetra_RowMatrix *UserMatrix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetLHS</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a760defd91e2d7aa310b85faecc377969</anchor>
      <arglist>(Epetra_MultiVector *X)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetRHS</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a1699a5153730c38e659a0fe9bc8794d8</anchor>
      <arglist>(Epetra_MultiVector *B)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_RowMatrix *</type>
      <name>GetUserMatrix</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>ab56b0d830aace898844abef9d29f852c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector *</type>
      <name>GetLHS</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a0e9eb8d87e9f1fe1c3da5c4b187d24fe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector *</type>
      <name>GetRHS</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a9629a6337c9317b506ce10bef956041e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTrans</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>aaa73b53e7b25d61d7e30677d20166cb9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTrans</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>afc2b4a3d8a85af78b8b41601e41fdfcf</anchor>
      <arglist>(bool trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>SetSpoolesDefaults</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a81eb05849f74ad4800a288f733851267</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a48f093fbc4ac5eecd05b3bf3f90c2dfe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Operator *</type>
      <name>UserOperator_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a49997ca27ecbd1bb04e4318974a02e1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_RowMatrix *</type>
      <name>UserMatrix_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a8eede9ea25dcc39d1a748821a7f06094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_Operator *</type>
      <name>PrecOperator_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>ab3ffbbf2338d78e228e7958cd3ed522a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_RowMatrix *</type>
      <name>PrecMatrix_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a25ab25534ed966fe6b1b3b47474febfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>X_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>aca3a82ecf69f7dc363bc359b497f191b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_MultiVector *</type>
      <name>B_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a1819f0e0786b9bcc87f4316103f7e33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Transpose_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a90374d534207973f59f878214668b475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>x_LDA_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>ac195d65b737d4b72054c6dbf98b92d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>x_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a742c11e96a562df6fd1596064b954fb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>b_LDA_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a7b0e2723d6792efa03ce24ff662497e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>b_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>ac05c0f4a477e8d88e0e732c2a1e21448</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>inConstructor_</name>
      <anchorfile>classSpoolesOO.html</anchorfile>
      <anchor>a9493641fefe11783a76ab35bc69460d2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Superludist2_OO</name>
    <filename>classSuperludist2__OO.html</filename>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a4568a0db1648a08163490a3a0e3efcf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LinearProblemRedistor *</type>
      <name>redistor</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a727c977f36512f3c746fe06a2c78262d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LinearProblem *</type>
      <name>redistProblem</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a741c09c051dce7fc748f3892b2650c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>M</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a34a93907a8c2d1ca27459f0cc56ef670</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>N</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>aab6a62fd2349849614e0350ccc850c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nz</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a1e90ad7cf99fd01b42406a8e9c054284</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>ptr</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a8f4597278b531de83fff03f204213392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>ind</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>abd46499f1fdd3a87b0b992755f068716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>val</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a796874de19b656b00f2e1cfa60f93ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>rhs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a80b7960b6cbd4fb26f46151eb3f672d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>lhs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a49ecfecaf73f7c7aab565e540087e425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Nrhs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a5ab5fa12fb0cea2ffadcca01df9b3a80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ldrhs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a668622becb04064d778589f6ac338af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ldlhs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a007660425c365e1ffd4cc385e64c106b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Transpose_</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>acdbc16277861a3f78da8dbb149691e71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Factored_</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a0b46ff8c8a071cf8984f03fa20631157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>FirstCallToSolve_</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a293ca6bdcfe1e6deeec9b92a9fa4de3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SOLVEstruct_t</type>
      <name>SOLVEstruct</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a9f329362979440e8c93737b0d868b3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numprocs</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a53656ce033ccd3f5da10444d30c22ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nprow</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>aff325a40c467fdde8e0d0e68dceed363</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>npcol</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>ae7c4f9cafa71c1e03c5fe6a55de5fdd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gridinfo_t</type>
      <name>grid</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a9e1db21fa279df0f540fcf12a7cbae97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>superlu_options_t</type>
      <name>options</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>ad4c4ecb936ff356254918a2ebf36038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SuperMatrix</type>
      <name>A</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a33ee86c80d8f851366984c1b5b7f34b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalePermstruct_t</type>
      <name>ScalePermstruct</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>ae90669e9775ec43cc582f9ae96f3b8f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SuperLUStat_t</type>
      <name>stat</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a34da96b592df6991e133dba6490d102f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LUstruct_t</type>
      <name>LUstruct</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>ad1b4c03fb013ac0cfd7e1968b1dea95c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; int &gt;</type>
      <name>Ap</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>acd363d51bb16d515b958d3eddf75b43e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; int &gt;</type>
      <name>Ai</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a25c39122c86ded9793699f5cc1199d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; double &gt;</type>
      <name>Aval</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a3668abd50a1db2d3bc962a78b0dbe130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>A_and_LU_built</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a94ded8f645865244b9e585eea535c773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numrows</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a2654af4c8f2b5155cca3989715c459b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Superludist2_OO</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a86cac61912f1af8d08ca99da8fa3e496</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Superludist2_OO</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>ad0ecc3fef1f97c48e472c085aad017a4</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTrans</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>af03d9d3b7dff4407b8f429b7cc0265f4</anchor>
      <arglist>(bool trans)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTrans</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a32c5681ab7a834a4d85493163d2b2b79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CheckInput</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a1db33d164a070fd9967146b6c778eec2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Condest</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a6eed1c60679ac8c2484ea20eee00e098</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classSuperludist2__OO.html</anchorfile>
      <anchor>a932195ca8793ce6ec332ca5ee04b4450</anchor>
      <arglist>(bool Factor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SuperludistOO</name>
    <filename>classSuperludistOO.html</filename>
    <member kind="variable" protection="protected">
      <type>const Epetra_LinearProblem *</type>
      <name>Problem_</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>aa84bc2399c5f3c101918854617d9d5f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LinearProblemRedistor *</type>
      <name>redistor</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>aa9a52bd8669316ff9efca590b10dcbae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Epetra_LinearProblem *</type>
      <name>redistProblem</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a92f8b93c2bc7bc58fd9937b2023a1cc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>M</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>adad32fa99c4b7a2d0373e88a61ff5df3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>N</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ad93b84b39495377eaf1614bbab2779eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nz</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>aed33a66570d37d10492e8047974d678c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>ptr</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a78ff3b17f2511b0743cc303b4751f220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>ind</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a0b8f897dd113f5e536f9ecf51551bdbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>val</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a90455babb2697189fc696adca56792ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>rhs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>aeb15f487267057ab8464227d971f9c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>lhs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ac82cc2832c0d40723f63ed6f3c4e3eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Nrhs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a67e619deabc39f1ad8f6acfb2045962b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ldrhs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a154da165a38be4c429f5c9b6c71a82ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>ldlhs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a1131c5659264e792438117cd1421d277</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Transpose_</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a9b834c3545781548a0e72c3be724034a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>Factored_</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a8f710862318db67cc34720252fed9c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>FirstCallToSolve_</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a6bfcbf2035eb92e67b174ae23932f217</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numprocs</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a53b83a020e91471a700bab3904555614</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nprow</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ada00be27565bc8c2fe948237951eb150</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>npcol</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>add909e6ca8a47c80b7a1672d7140b9e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>gridinfo_t</type>
      <name>grid</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a7e2c38b2c77be60954a4b5b0834b2c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>superlu_options_t</type>
      <name>options</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>afe5ac0c2826f0aae3189f885532facf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SuperMatrix</type>
      <name>A</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a529cb6464575660d2e346c85baee792e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalePermstruct_t</type>
      <name>ScalePermstruct</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a7dd9aa8242c26b8264849ed511a3e8a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SuperLUStat_t</type>
      <name>stat</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ab2b5a992f07d92073b660f00c9b0bc2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LUstruct_t</type>
      <name>LUstruct</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a72351aeab6aa8b28e1fe3aa450522823</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>berr</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a34744fe52bfe55ac4798e855facceb18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; int &gt;</type>
      <name>Ap</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a3e0aa075ec861dbaaab41b8dfbd5b843</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; int &gt;</type>
      <name>Ai</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a3ffa2126440e1f764886f3919e12b504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector&lt; double &gt;</type>
      <name>Aval</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>af424b586a525952aff352130d44596e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>A_and_LU_built</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ac5c4a7a07f206f5b22747c2936774a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numrows</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>ab4e7d3223c6232537f2e4803d87be9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SuperludistOO</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a28a3ca42130f24df774883b48ff65775</anchor>
      <arglist>(const Epetra_LinearProblem &amp;LinearProblem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SuperludistOO</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a3e287c64830c7ab93a7dd4e93f446443</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SetTrans</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a3de65cdc730f778fc1c3677ea58b97cb</anchor>
      <arglist>(bool trans)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>GetTrans</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a28055e9d8ddfe18a13331276e16d90f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CheckInput</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a54a66b1ed740fb19b9a386f0c26b5ae3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Condest</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a5a7b16fb7ac17d1356e93a34c2768750</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>classSuperludistOO.html</anchorfile>
      <anchor>a4184368d8d85875e1f1071617ed7273e</anchor>
      <arglist>(bool Factor)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>SLU</name>
    <filename>namespaceSLU.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>int_t</name>
      <anchorfile>namespaceSLU.html</anchorfile>
      <anchor>a63ea4864076bf60a5fe72f332e75b5ee</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos</name>
    <filename>namespaceTeuchos.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Thyra</name>
    <filename>namespaceThyra.html</filename>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Amesos Package Browser (Single Doxygen Collection)</title>
    <filename>index</filename>
  </compound>
</tagfile>
