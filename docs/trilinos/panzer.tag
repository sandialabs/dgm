<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>disc-fe/src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>disc-fe_2src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>SET</name>
      <anchorfile>disc-fe_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>aa5f0f0dd2fff649837e4bc2239543379</anchor>
      <arglist>(HEADERS ${HEADERS}${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_config.hpp) TRIBITS_ADD_LIBRARY(panzer-disc-fe HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>adapters-stk/src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>adapters-stk_2src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>SET</name>
      <anchorfile>adapters-stk_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>adbbc3a4488c5ef3543ddcc81d30ad605</anchor>
      <arglist>(HEADERS ${HEADERS}${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_config.hpp) list(REMOVE_ITEM HEADERS $</arglist>
    </member>
    <member kind="function">
      <type>stk_interface Panzer_STK_SculptMeshFactory hpp</type>
      <name>list</name>
      <anchorfile>adapters-stk_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>aac7e5d894a7ab63d7e4b8a9a1b564628</anchor>
      <arglist>(REMOVE_ITEM SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/stk_interface/Panzer_STK_SculptMeshFactory.cpp) TRIBITS_ADD_LIBRARY(panzer-stk HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>core_2src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>SET</name>
      <anchorfile>core_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>a4ba4b9288191f4ffdfc142641e5ede42</anchor>
      <arglist>(HEADERS ${HEADERS}${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_config.hpp) TRIBITS_ADD_LIBRARY(panzer-core HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>dof-mgr/src/CMakeLists.txt</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>dof-mgr_2src_2CMakeLists_8txt</filename>
    <member kind="function">
      <type></type>
      <name>SET</name>
      <anchorfile>dof-mgr_2src_2CMakeLists_8txt.html</anchorfile>
      <anchor>aa41416c5d33e026d248aa4dd03d6d497</anchor>
      <arglist>(HEADERS ${HEADERS}${CMAKE_CURRENT_BINARY_DIR}/${PACKAGE_NAME}_config.hpp) TRIBITS_ADD_LIBRARY(panzer-dof-mgr HEADERS $</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ArrayTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ArrayTraits_8hpp</filename>
    <class kind="struct">panzer::ArrayTraits</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__AssemblyEngine_8hpp" name="Panzer_AssemblyEngine.hpp" local="yes" imported="no">Panzer_AssemblyEngine.hpp</includes>
    <includes id="Panzer__AssemblyEngine__impl_8hpp" name="Panzer_AssemblyEngine_impl.hpp" local="yes" imported="no">Panzer_AssemblyEngine_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine_8hpp</filename>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__LinearObjContainer_8hpp" name="Panzer_LinearObjContainer.hpp" local="yes" imported="no">Panzer_LinearObjContainer.hpp</includes>
    <class kind="class">panzer::AssemblyEngine</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine__impl_8hpp</filename>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__AssemblyEngine__InArgs_8hpp" name="Panzer_AssemblyEngine_InArgs.hpp" local="yes" imported="no">Panzer_AssemblyEngine_InArgs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine_InArgs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine__InArgs_8hpp</filename>
    <class kind="class">panzer::AssemblyEngineInArgs</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae690119ae0a65e27dcbde6e290f1b205</anchor>
      <arglist>(std::ostream &amp;os, const AssemblyEngineInArgs &amp;in)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine_TemplateBuilder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine__TemplateBuilder_8hpp</filename>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__AssemblyEngine_8hpp" name="Panzer_AssemblyEngine.hpp" local="yes" imported="no">Panzer_AssemblyEngine.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <class kind="class">panzer::AssemblyEngine_TemplateBuilder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_AssemblyEngine_TemplateManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__AssemblyEngine__TemplateManager_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__AssemblyEngine_8hpp" name="Panzer_AssemblyEngine.hpp" local="yes" imported="no">Panzer_AssemblyEngine.hpp</includes>
    <class kind="class">panzer::AssemblyEngine_TemplateManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Base.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Base_8hpp</filename>
    <class kind="class">panzer::Base</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisInformation.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisInformation_8cpp</filename>
    <includes id="Panzer__BasisInformation_8hpp" name="Panzer_BasisInformation.hpp" local="yes" imported="no">Panzer_BasisInformation.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisInformation.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisInformation_8hpp</filename>
    <class kind="class">panzer::BasisInformation</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisIRLayout.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisIRLayout_8cpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__IntrepidBasisFactory_8hpp" name="Panzer_IntrepidBasisFactory.hpp" local="yes" imported="no">Panzer_IntrepidBasisFactory.hpp</includes>
    <includes id="Panzer__CellTopologyInfo_8hpp" name="Panzer_CellTopologyInfo.hpp" local="yes" imported="no">Panzer_CellTopologyInfo.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisIRLayout.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisIRLayout_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__CellTopologyInfo_8hpp" name="Panzer_CellTopologyInfo.hpp" local="yes" imported="no">Panzer_CellTopologyInfo.hpp</includes>
    <class kind="class">panzer::BasisIRLayout</class>
    <class kind="struct">panzer::StrBasisComp</class>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>std::pair&lt; std::string, Teuchos::RCP&lt; panzer::BasisIRLayout &gt; &gt;</type>
      <name>StrBasisPair</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3e4a4900a1b606375831198d96df718</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>basisIRLayout</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4f2ad42bd8453f6cb3157487a8eba961</anchor>
      <arglist>(std::string basis_type, const int basis_order, const PointRule &amp;pt_rule)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>basisIRLayout</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5f28e1dbb28fd985f7c6c3ea89b38420</anchor>
      <arglist>(const Teuchos::RCP&lt; const PureBasis &gt; &amp;b, const PointRule &amp;pt_rule)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisValues2.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisValues2_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__BasisValues2_8hpp" name="Panzer_BasisValues2.hpp" local="yes" imported="no">Panzer_BasisValues2.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BASIS_VALUES_INSTANTIATION</name>
      <anchorfile>Panzer__BasisValues2_8cpp.html</anchorfile>
      <anchor>ab1d9f305e7309eac1fa8b1fce77a2153</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisValues2.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BasisValues2_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__ArrayTraits_8hpp" name="Panzer_ArrayTraits.hpp" local="yes" imported="no">Panzer_ArrayTraits.hpp</includes>
    <class kind="class">panzer::BasisValues2</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisValues_Evaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__BasisValues__Evaluator_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisValues_Evaluator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__BasisValues__Evaluator__decl_8hpp</filename>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <includes id="Panzer__BasisValues2_8hpp" name="Panzer_BasisValues2.hpp" local="yes" imported="no">Panzer_BasisValues2.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1b68636d31df4ce02fee941b981410d2</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, bool derivativesRequired)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a766e96be63f69485e0ea14ec5f2d663c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af14447dd292122d8c63cf8e8fb8102cf</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, bool derivativesRequired)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a504b0810ba92be4aa464cdeb63714fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; BasisValues2&lt; ScalarT &gt; &gt;</type>
      <name>basisValues</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae038ab41a7ce84171c3a99bdc3d91518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PointValues2&lt; ScalarT, PHX::MDField &gt;</type>
      <name>pointValues</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a74c8ad82522e0468f605beb2c3f612ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, panzer::Cell, panzer::BASIS &gt;</type>
      <name>orientation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9c791c1ccfb59a4e55760dfb24290412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>derivativesRequired_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab4757a5ae9957d8b98abf6f1f7269133</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BasisValues_Evaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__BasisValues__Evaluator__impl_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a23d9bd570ede709f770e01d8dc6ecdda</anchor>
      <arglist>(BasisValues_Evaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae1cc4795b806154707b9db73cf42cf15</anchor>
      <arglist>(BasisValues_Evaluator, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1b0c088e32a11547704769b420a1f713</anchor>
      <arglist>(BasisValues_Evaluator, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BC.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BC_8cpp</filename>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BC.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BC_8hpp</filename>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <class kind="class">panzer::BC</class>
    <class kind="struct">panzer::BC::BCHash</class>
    <class kind="struct">panzer::BC::BCEquality</class>
    <class kind="struct">panzer::LessBC</class>
    <namespace>Teuchos</namespace>
    <namespace>panzer</namespace>
    <member kind="enumeration">
      <type></type>
      <name>BCType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Dirichlet</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92a1ce69cf18c7131f0f5c835263e468666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Neumann</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92ad69368e278318d57855f5fc011a054e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Interface</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92afa99f7d8e09568db62d21630c2d63a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afeb586087a868a2170e96ad3f5c7f6ab</anchor>
      <arglist>(std::ostream &amp;os, const panzer::BC &amp;bc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Base.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Base_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <includes id="Panzer__EvaluatorsRegistrar_8hpp" name="Panzer_EvaluatorsRegistrar.hpp" local="yes" imported="no">Panzer_EvaluatorsRegistrar.hpp</includes>
    <class kind="class">PHX::FieldManager</class>
    <class kind="class">panzer::BCStrategyBase</class>
    <namespace>PHX</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__decl_8hpp</filename>
    <includes id="Panzer__BCStrategy__Base_8hpp" name="Panzer_BCStrategy_Base.hpp" local="yes" imported="no">Panzer_BCStrategy_Base.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <class kind="class">panzer::BCStrategy</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Dirichlet_DefaultImpl.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Dirichlet__DefaultImpl_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__BCStrategy__Dirichlet__DefaultImpl_8hpp" name="Panzer_BCStrategy_Dirichlet_DefaultImpl.hpp" local="yes" imported="no">Panzer_BCStrategy_Dirichlet_DefaultImpl.hpp</includes>
    <includes id="Panzer__BCStrategy__Dirichlet__DefaultImpl__impl_8hpp" name="Panzer_BCStrategy_Dirichlet_DefaultImpl_impl.hpp" local="yes" imported="no">Panzer_BCStrategy_Dirichlet_DefaultImpl_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Dirichlet_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Dirichlet__DefaultImpl_8hpp</filename>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <class kind="class">panzer::BCStrategy_Dirichlet_DefaultImpl</class>
    <class kind="struct">panzer::BCStrategy_Dirichlet_DefaultImpl::DOFDescriptor</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Dirichlet_DefaultImpl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Dirichlet__DefaultImpl__impl_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__EdgeBasis_8hpp" name="Panzer_Dirichlet_Residual_EdgeBasis.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_EdgeBasis.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__FaceBasis_8hpp" name="Panzer_Dirichlet_Residual_FaceBasis.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_FaceBasis.hpp</includes>
    <includes id="Panzer__DOF__PointValues_8hpp" name="Panzer_DOF_PointValues.hpp" local="yes" imported="no">Panzer_DOF_PointValues.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Dirichlet_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Dirichlet__Utilities_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterSubsetOfClosureModelEvaluatorsForType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a227d0c67177b7409efd8cddb393ca8de</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string comma_sep_closure_model_list, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Factory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Factory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <class kind="class">panzer::BCStrategy_TemplateManager</class>
    <class kind="struct">panzer::BCStrategyFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Factory_Composite.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Factory__Composite_8cpp</filename>
    <includes id="Panzer__BCStrategy__Factory__Composite_8hpp" name="Panzer_BCStrategy_Factory_Composite.hpp" local="yes" imported="no">Panzer_BCStrategy_Factory_Composite.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Factory_Composite.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Factory__Composite_8hpp</filename>
    <includes id="Panzer__BCStrategy__Factory_8hpp" name="Panzer_BCStrategy_Factory.hpp" local="yes" imported="no">Panzer_BCStrategy_Factory.hpp</includes>
    <class kind="struct">panzer::BCFactoryComposite</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Factory_Defines.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Factory__Defines_8hpp</filename>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__BCStrategy__TemplateManager_8hpp" name="Panzer_BCStrategy_TemplateManager.hpp" local="yes" imported="no">Panzer_BCStrategy_TemplateManager.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_DECLARE_BCSTRATEGY_TEMPLATE_BUILDER</name>
      <anchorfile>Panzer__BCStrategy__Factory__Defines_8hpp.html</anchorfile>
      <anchor>a094ad6e08626823ec2933613f4777af0</anchor>
      <arglist>(key, fClass, fType)            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_DECLARE_BCSTRATEGY_TEMPLATE_BUILDER_EXTRA</name>
      <anchorfile>Panzer__BCStrategy__Factory__Defines_8hpp.html</anchorfile>
      <anchor>ab511230e28dcec3b96692b88166c6a34</anchor>
      <arglist>(key, fClass, fType, extraSteps)            </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_BUILD_BCSTRATEGY_OBJECTS</name>
      <anchorfile>Panzer__BCStrategy__Factory__Defines_8hpp.html</anchorfile>
      <anchor>ae771326bd98c66ab3451b77ee96cb372</anchor>
      <arglist>(key, fClass, fType)            </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Interface_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Interface__DefaultImpl_8hpp</filename>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__BCStrategy__Interface__DefaultImpl__impl_8hpp" name="Panzer_BCStrategy_Interface_DefaultImpl_impl.hpp" local="yes" imported="no">Panzer_BCStrategy_Interface_DefaultImpl_impl.hpp</includes>
    <class kind="class">panzer::BCStrategy_Interface_DefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Interface_DefaultImpl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Interface__DefaultImpl__impl_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Neumann_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Neumann__DefaultImpl_8hpp</filename>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__BCStrategy__Neumann__DefaultImpl__impl_8hpp" name="Panzer_BCStrategy_Neumann_DefaultImpl_impl.hpp" local="yes" imported="no">Panzer_BCStrategy_Neumann_DefaultImpl_impl.hpp</includes>
    <class kind="class">panzer::BCStrategy_Neumann_DefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_Neumann_DefaultImpl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__Neumann__DefaultImpl__impl_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_TemplateManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__TemplateManager_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__BCStrategy__Base_8hpp" name="Panzer_BCStrategy_Base.hpp" local="yes" imported="no">Panzer_BCStrategy_Base.hpp</includes>
    <class kind="class">panzer::BCStrategy_TemplateManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_WeakDirichlet_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__WeakDirichlet__DefaultImpl_8hpp</filename>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__BCStrategy__WeakDirichlet__DefaultImpl__impl_8hpp" name="Panzer_BCStrategy_WeakDirichlet_DefaultImpl_impl.hpp" local="yes" imported="no">Panzer_BCStrategy_WeakDirichlet_DefaultImpl_impl.hpp</includes>
    <class kind="class">panzer::BCStrategy_WeakDirichlet_DefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BCStrategy_WeakDirichlet_DefaultImpl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BCStrategy__WeakDirichlet__DefaultImpl__impl_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManager.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__BlockedDOFManager_8cpp</filename>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__BlockedDOFManager__impl_8hpp" name="Panzer_BlockedDOFManager_impl.hpp" local="yes" imported="no">Panzer_BlockedDOFManager_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__BlockedDOFManager_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <includes id="Panzer__FieldAggPattern_8hpp" name="Panzer_FieldAggPattern.hpp" local="yes" imported="no">Panzer_FieldAggPattern.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__DOFManager_8hpp" name="Panzer_DOFManager.hpp" local="yes" imported="no">Panzer_DOFManager.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="struct">panzer::BlockedDOFManager::LessThan</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManager_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__BlockedDOFManager__impl_8hpp</filename>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <includes id="Panzer__NodalFieldPattern_8hpp" name="Panzer_NodalFieldPattern.hpp" local="yes" imported="no">Panzer_NodalFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManagerFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BlockedDOFManagerFactory_8cpp</filename>
    <includes id="Panzer__BlockedDOFManagerFactory__decl_8hpp" name="Panzer_BlockedDOFManagerFactory_decl.hpp" local="yes" imported="no">Panzer_BlockedDOFManagerFactory_decl.hpp</includes>
    <includes id="Panzer__BlockedDOFManagerFactory__impl_8hpp" name="Panzer_BlockedDOFManagerFactory_impl.hpp" local="yes" imported="no">Panzer_BlockedDOFManagerFactory_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManagerFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BlockedDOFManagerFactory__decl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexerFactory_8hpp" name="Panzer_UniqueGlobalIndexerFactory.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexerFactory.hpp</includes>
    <class kind="class">panzer::BlockedDOFManagerFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedDOFManagerFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BlockedDOFManagerFactory__impl_8hpp</filename>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedEpetraLinearObjContainer.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedEpetraLinearObjContainer_8cpp</filename>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedEpetraLinearObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedEpetraLinearObjContainer_8hpp</filename>
    <includes id="Panzer__LinearObjContainer_8hpp" name="Panzer_LinearObjContainer.hpp" local="yes" imported="no">Panzer_LinearObjContainer.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <class kind="class">panzer::BlockedEpetraLinearObjContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedEpetraLinearObjFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedEpetraLinearObjFactory_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjFactory_8hpp" name="Panzer_BlockedEpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjFactory.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjFactory__impl_8hpp" name="Panzer_BlockedEpetraLinearObjFactory_impl.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjFactory_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedEpetraLinearObjFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedEpetraLinearObjFactory_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <class kind="class">panzer::BlockedEpetraLinearObjFactory</class>
    <class kind="class">panzer::BlockedEpetraLinearObjFactory::DOFManagerContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedEpetraLinearObjFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedEpetraLinearObjFactory__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__Filtered__UniqueGlobalIndexer_8hpp" name="Panzer_Filtered_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_Filtered_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedTpetraLinearObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedTpetraLinearObjContainer_8hpp</filename>
    <includes id="Panzer__LinearObjContainer_8hpp" name="Panzer_LinearObjContainer.hpp" local="yes" imported="no">Panzer_LinearObjContainer.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer__impl_8hpp" name="Panzer_BlockedTpetraLinearObjContainer_impl.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer_impl.hpp</includes>
    <class kind="class">panzer::BlockedTpetraLinearObjContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedTpetraLinearObjContainer_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedTpetraLinearObjContainer__impl_8hpp</filename>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedTpetraLinearObjFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedTpetraLinearObjFactory_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjFactory_8hpp" name="Panzer_BlockedTpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjFactory.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjFactory__impl_8hpp" name="Panzer_BlockedTpetraLinearObjFactory_impl.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjFactory_impl.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedTpetraLinearObjFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedTpetraLinearObjFactory_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <includes id="Panzer__GatherSolution__BlockedTpetra_8hpp" name="Panzer_GatherSolution_BlockedTpetra.hpp" local="yes" imported="no">Panzer_GatherSolution_BlockedTpetra.hpp</includes>
    <includes id="Panzer__GatherTangent__BlockedTpetra_8hpp" name="Panzer_GatherTangent_BlockedTpetra.hpp" local="yes" imported="no">Panzer_GatherTangent_BlockedTpetra.hpp</includes>
    <includes id="Panzer__ScatterResidual__BlockedTpetra_8hpp" name="Panzer_ScatterResidual_BlockedTpetra.hpp" local="yes" imported="no">Panzer_ScatterResidual_BlockedTpetra.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__BlockedTpetra_8hpp" name="Panzer_ScatterDirichletResidual_BlockedTpetra.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_BlockedTpetra.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <class kind="class">panzer::BlockedTpetraLinearObjFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedTpetraLinearObjFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__BlockedTpetraLinearObjFactory__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8cpp</filename>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__ReadOnlyVector__GlobalEvaluationData_8hpp" name="Panzer_ReadOnlyVector_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ReadOnlyVector_GlobalEvaluationData.hpp</includes>
    <class kind="class">Thyra::DefaultProductVectorSpace</class>
    <class kind="class">panzer::BlockedVector_ReadOnly_GlobalEvaluationData</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CellAverage.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellAverage_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_CellAverage.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellAverage_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>PANZER_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>cellAverageEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0905667c1699677eb227e52c598b3378</anchor>
      <arglist>(const std::string &amp;averageName, const std::string &amp;fieldName, const Teuchos::RCP&lt; const panzer::IntegrationRule &gt; &amp;ir)</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>average</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2ca625d13bd3cd44a66855d1ac8998f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP &gt;</type>
      <name>scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a40ee7721732f96bc063d79dc8e7e9d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, IP &gt; &gt;</type>
      <name>field_multipliers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7b1e7ff7a21a64ae4e97db2d085ebaf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>multiplier</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0e2a35b959497085a5615b09de0f39ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_qp</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0cf437734090657593df771286fee42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>quad_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad7a8eaa002034b9cb58a9e010aa88c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quad_order</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a30b9d16b52b0d538122479da99cb38b3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CellAverage_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellAverage__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5c54cdeb906d43c7a06378a81506ef94</anchor>
      <arglist>(CellAverage, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a899e07a093d8da619e5f3c4247a87c3a</anchor>
      <arglist>(CellAverage, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac6ffc8eef441127c124ef0c3faf0a857</anchor>
      <arglist>(CellAverage, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CellData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CellData_8hpp</filename>
    <class kind="class">panzer::CellData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CellExtreme.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellExtreme_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_CellExtreme.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellExtreme_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>extreme</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>adc4b3fa788fe6ce92ba7b05e80249018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_max</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aae1c64e33525ab18d03a866584c8d5cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CellExtreme_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CellExtreme__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8595235ed5c5187ce9675ce60fb3eff8</anchor>
      <arglist>(CellExtreme, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3cd374f38994c412234a0d2d81bf7dc5</anchor>
      <arglist>(CellExtreme, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aff71f640dc1b125e12be8af6029830a7</anchor>
      <arglist>(CellExtreme, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CellTopologyInfo.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CellTopologyInfo_8cpp</filename>
    <includes id="Panzer__CellTopologyInfo_8hpp" name="Panzer_CellTopologyInfo.hpp" local="yes" imported="no">Panzer_CellTopologyInfo.hpp</includes>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__IntrepidBasisFactory_8hpp" name="Panzer_IntrepidBasisFactory.hpp" local="yes" imported="no">Panzer_IntrepidBasisFactory.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_CellTopologyInfo.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CellTopologyInfo_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__IntrepidBasisFactory_8hpp" name="Panzer_IntrepidBasisFactory.hpp" local="yes" imported="no">Panzer_IntrepidBasisFactory.hpp</includes>
    <class kind="class">panzer::CellTopologyInfo</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CloneableEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CloneableEvaluator_8hpp</filename>
    <class kind="class">panzer::CloneableEvaluator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__Base_8hpp" name="Panzer_ClosureModel_Factory_Base.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_Base.hpp</includes>
    <class kind="class">panzer::ClosureModelFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_Base.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__Base_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__EvaluatorsRegistrar_8hpp" name="Panzer_EvaluatorsRegistrar.hpp" local="yes" imported="no">Panzer_EvaluatorsRegistrar.hpp</includes>
    <class kind="class">panzer::ClosureModelFactoryBase</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_Composite.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__Composite_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_Composite_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__Composite__decl_8hpp</filename>
    <includes id="Panzer__ClosureModel__Factory_8hpp" name="Panzer_ClosureModel_Factory.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <class kind="class">panzer::ClosureModelFactoryComposite</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_Composite_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__Composite__impl_8hpp</filename>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_Composite_TemplateBuilder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__Composite__TemplateBuilder_8hpp</filename>
    <class kind="class">panzer::ClosureModelFactoryComposite_TemplateBuilder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ClosureModel_Factory_TemplateManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ClosureModel__Factory__TemplateManager_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__Base_8hpp" name="Panzer_ClosureModel_Factory_Base.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_Base.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory_8hpp" name="Panzer_ClosureModel_Factory.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory.hpp</includes>
    <class kind="class">panzer::ClosureModelFactory_TemplateManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CommaSeparatedEntryValidator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CommaSeparatedEntryValidator_8cpp</filename>
    <includes id="Panzer__CommaSeparatedEntryValidator_8hpp" name="Panzer_CommaSeparatedEntryValidator.hpp" local="yes" imported="no">Panzer_CommaSeparatedEntryValidator.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CommaSeparatedEntryValidator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CommaSeparatedEntryValidator_8hpp</filename>
    <class kind="class">panzer::CommaSeparatedEntryValidator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CommonArrayFactories.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CommonArrayFactories_8hpp</filename>
    <includes id="Panzer__CommonArrayFactories__impl_8hpp" name="Panzer_CommonArrayFactories_impl.hpp" local="yes" imported="no">Panzer_CommonArrayFactories_impl.hpp</includes>
    <class kind="class">panzer::Intrepid2FieldContainerFactory</class>
    <class kind="class">panzer::MDFieldArrayFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_CommonArrayFactories_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__CommonArrayFactories__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ConnManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__ConnManager_8hpp</filename>
    <class kind="class">panzer::ConnManagerBase</class>
    <class kind="class">panzer::ConnManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Constant.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Constant_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Constant_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Constant__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>ScalarT</type>
      <name>value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aac9af2b46db8173586984e79ec28f5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>constant</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abe74de75cfda37e3971041643e3f5dea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Constant_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Constant__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e265e2e515be32bb8ba3c2b455d74fb</anchor>
      <arglist>(Constant, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a35d896cfeb07ee45047677eab1f5b635</anchor>
      <arglist>(Constant, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a85cfd35a60c871c6a01d0cc053cef4c3</anchor>
      <arglist>(Constant, d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantFlux.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantFlux_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantFlux_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantFlux__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>values</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeebd6fac774354809eb79401d93c7401</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>flux</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5e989a0cd0e7d9e219370fd61116d61f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantFlux_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantFlux__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67bba48ca1dd503f96420e28dcc59e08</anchor>
      <arglist>(ConstantFlux, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa4ef2e0fab6d311ab487715f4aff2915</anchor>
      <arglist>(ConstantFlux, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3665ad7af5a2f7413f2e68d31048d0f</anchor>
      <arglist>(ConstantFlux, d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantVector_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ConstantVector_8hpp" name="Panzer_ConstantVector.hpp" local="yes" imported="no">Panzer_ConstantVector.hpp</includes>
    <includes id="Panzer__ConstantVector__impl_8hpp" name="Panzer_ConstantVector_impl.hpp" local="yes" imported="no">Panzer_ConstantVector_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantVector_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>ScalarT</type>
      <name>vals</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1ac04d70e5cf785c282eab6f5607a4f7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2bb818139231ce56eb7b7b0adfd6d826</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ConstantVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ConstantVector__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1510ceeaeaf7b5ec678a2ea5ae0f9ade</anchor>
      <arglist>(ConstantVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3559c473f73a3ccb5bbc4388c3535203</anchor>
      <arglist>(ConstantVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a276ca264d93112fd1b0246915e9f8686</anchor>
      <arglist>(ConstantVector, d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CoordinatesEvaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CoordinatesEvaluator_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_CoordinatesEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CoordinatesEvaluator_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5e66a27a13a0fd13ce3d1c905ba63d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>coordinate</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8e88b70c140196d8a1ee7f2a01eca2ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CoordinatesEvaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CoordinatesEvaluator__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6bf3e1e78483cda6ea49acdf33966754</anchor>
      <arglist>(CoordinatesEvaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70a8de4e6fc385ed81044a6104e3bb03</anchor>
      <arglist>(CoordinatesEvaluator, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6520d78170b79c406dc7382aaafe41d0</anchor>
      <arglist>(CoordinatesEvaluator, d)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Copy.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Copy_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Copy_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Copy__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT &gt;</type>
      <name>input</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a11414c9c84fd095a962bbd8d580a2556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>output</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab0ab2a4cb2f8d59525d9ad9bb22acc5c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Copy_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Copy__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>add51dfde5beddd5b169eb8aba51ba6f3</anchor>
      <arglist>(Copy, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a449ad25abff70d4b30d2ad43ec718b54</anchor>
      <arglist>(Copy, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a06b799fc86325d59f527e24b2e8f2b65</anchor>
      <arglist>(Copy, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CrossProduct.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CrossProduct_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__CrossProduct_8hpp" name="Panzer_CrossProduct.hpp" local="yes" imported="no">Panzer_CrossProduct.hpp</includes>
    <includes id="Panzer__CrossProduct__impl_8hpp" name="Panzer_CrossProduct_impl.hpp" local="yes" imported="no">Panzer_CrossProduct_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_CrossProduct.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CrossProduct_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a_cross_vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a492481909fb6bbcfe0adfdf46a909cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aabeca1c8405197a2606928394360f8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a40de870454d1c70d060f202dad6c1698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useScalarField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a05f34e15fab0e93ed47b7f6092a68d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_pts</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ade7dc5655dc6fbd2c62ffb158aec3498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_dim</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4ab73f7cf68853c2ed62956d840cf1e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_CrossProduct_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__CrossProduct__impl_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a614ce533ab2c2b06af4315a4d0385655</anchor>
      <arglist>(CrossProduct, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a110fb895e2aa437b658275e9bb391a21</anchor>
      <arglist>(CrossProduct, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9c3073700315bd921ca6ae4cafd3b7cb</anchor>
      <arglist>(CrossProduct, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dimension.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Dimension_8cpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Dimension.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Dimension_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>residual</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a80304a141e6fa4cf4dabc4b07d36a89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT &gt;</type>
      <name>dof</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4f3f10db7e6f709d07ce5d4c9746fb62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>cell_data_size</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aff596a82e7983053f440c275e08d85df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_EdgeBasis.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__EdgeBasis_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__EdgeBasis_8hpp" name="Panzer_Dirichlet_Residual_EdgeBasis.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_EdgeBasis.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__EdgeBasis__impl_8hpp" name="Panzer_Dirichlet_Residual_EdgeBasis_impl.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_EdgeBasis_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_EdgeBasis.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__EdgeBasis_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, BASIS &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a52f8689ee10c7447928398a9043a3ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PointRule &gt;</type>
      <name>pointRule</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a12380e80a26873b39cf4d8df2761a201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>edgeTan</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a73fa1a192db514e47c43ebc0159284bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refEdgeTan</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa6aee1bc87f6e88c8b5af68cded1ee8d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_EdgeBasis_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__EdgeBasis__impl_8hpp</filename>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a99eb1dd6ea62ebf931e74b0276e43640</anchor>
      <arglist>(DirichletResidual_EdgeBasis, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6842914c049af3f20ad7eb9c2d696027</anchor>
      <arglist>(DirichletResidual_EdgeBasis, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad2199a50ec1b7b1307ed724aaece7b43</anchor>
      <arglist>(DirichletResidual_EdgeBasis, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_FaceBasis.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__FaceBasis_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__FaceBasis_8hpp" name="Panzer_Dirichlet_Residual_FaceBasis.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_FaceBasis.hpp</includes>
    <includes id="Panzer__Dirichlet__Residual__FaceBasis__impl_8hpp" name="Panzer_Dirichlet_Residual_FaceBasis_impl.hpp" local="yes" imported="no">Panzer_Dirichlet_Residual_FaceBasis_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_FaceBasis.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__FaceBasis_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>faceNormal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad82b94c72877ff68959a930352638a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refFaceNormal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70e296dee674db5a3ffdd265c115ba6e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_FaceBasis_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__FaceBasis__impl_8hpp</filename>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a418d440dd0b21521ba78dead318c1804</anchor>
      <arglist>(DirichletResidual_FaceBasis, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa83acdc8c4d709b2b81bb9e243e3c20f</anchor>
      <arglist>(DirichletResidual_FaceBasis, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a046b11192f17c5d943cace0f6aa9644f</anchor>
      <arglist>(DirichletResidual_FaceBasis, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Dirichlet_Residual_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Dirichlet__Residual__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a19dbef205492f4d40ab03503ef795fea</anchor>
      <arglist>(DirichletResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e650fc93dc98042a5979453782c6785</anchor>
      <arglist>(DirichletResidual, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0a8660ecea3290661721dfc313364e47</anchor>
      <arglist>(DirichletResidual, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_BasisToBasis.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__BasisToBasis_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_BasisToBasis_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__BasisToBasis__decl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOF_BasisToBasis</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_BasisToBasis_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__BasisToBasis__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOF</class>
    <class kind="class">panzer::DOF&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_Functors.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__Functors_8hpp</filename>
    <class kind="class">panzer::dof_functors::EvaluateDOFWithSens_Vector</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFWithSens_Scalar</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFFastSens_Vector</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFFastSens_Scalar</class>
    <namespace>panzer</namespace>
    <namespace>panzer::dof_functors</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__DOF__Functors_8hpp" name="Panzer_DOF_Functors.hpp" local="yes" imported="no">Panzer_DOF_Functors.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointField.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointField_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointField_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointField__decl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOF_PointField</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointField_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointField__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointValues.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointValues_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__DOF__PointValues_8hpp" name="Panzer_DOF_PointValues.hpp" local="yes" imported="no">Panzer_DOF_PointValues.hpp</includes>
    <includes id="Panzer__DOF__PointValues__impl_8hpp" name="Panzer_DOF_PointValues_impl.hpp" local="yes" imported="no">Panzer_DOF_PointValues_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointValues.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointValues_8hpp</filename>
    <includes id="Panzer__BasisValues2_8hpp" name="Panzer_BasisValues2.hpp" local="yes" imported="no">Panzer_BasisValues2.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOF_PointValues</class>
    <class kind="class">panzer::DOF_PointValues&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOF_PointValues_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOF__PointValues__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__DOF__Functors_8hpp" name="Panzer_DOF_Functors.hpp" local="yes" imported="no">Panzer_DOF_Functors.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFCurl.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFCurl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFCurl_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFCurl__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOFCurl</class>
    <class kind="class">panzer::DOFCurl&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFCurl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFCurl__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>abb8da4e1b387fdcb24d72b34f0ce9053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_curl</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>a7029d7667439ef98906564bf6db0b2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array</type>
      <name>curl_basis</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>a875067fab857b014d02108e7519ada71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numFields</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>a0eaa914cabe1458beab95ef652052272</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>a876743604f1c17f0d9f7137274b1a7fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets</name>
      <anchorfile>Panzer__DOFCurl__impl_8hpp.html</anchorfile>
      <anchor>a14f0fecdbfd0e057ff2c0c61fe7e30ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFDiv.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFDiv_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__DOFDiv_8hpp" name="Panzer_DOFDiv.hpp" local="yes" imported="no">Panzer_DOFDiv.hpp</includes>
    <includes id="Panzer__DOFDiv__impl_8hpp" name="Panzer_DOFDiv_impl.hpp" local="yes" imported="no">Panzer_DOFDiv_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFDiv.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFDiv_8hpp</filename>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::DOFDiv</class>
    <class kind="class">panzer::DOFDiv&lt; panzer::Traits::Jacobian, TRAITS &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFDiv_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFDiv__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFGradient.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFGradient_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFGradient_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFGradient__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3958b2112eff81e64c68e669232c7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_gradient</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7648b61cf32802a192ed1d70541b93d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a93f17aef1fb419cbbd8807343ca700bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac425629e2a9b08cb0bb636129811b47d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFGradient_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DOFGradient__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a368d50b5934ab1518864240fa9c871be</anchor>
      <arglist>(DOFGradient, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a77a3e1a2174621b1b843a94790309f7a</anchor>
      <arglist>(DOFGradient, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a955b84d08dacda68eda5a814e6b13680</anchor>
      <arglist>(DOFGradient, workset)</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_grad_</name>
      <anchorfile>Panzer__DOFGradient__impl_8hpp.html</anchorfile>
      <anchor>a45b9a7cc843bca71df618a4aa99cf117</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_value_</name>
      <anchorfile>Panzer__DOFGradient__impl_8hpp.html</anchorfile>
      <anchor>a4df535c114b98f0bb75c47908ce14a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const ArrayT</type>
      <name>grad_basis_</name>
      <anchorfile>Panzer__DOFGradient__impl_8hpp.html</anchorfile>
      <anchor>a34e050950727c1a5dd813781a69550d7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManager.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__DOFManager_8cpp</filename>
    <includes id="Panzer__DOFManager_8hpp" name="Panzer_DOFManager.hpp" local="yes" imported="no">Panzer_DOFManager.hpp</includes>
    <includes id="Panzer__DOFManager__impl_8hpp" name="Panzer_DOFManager_impl.hpp" local="yes" imported="no">Panzer_DOFManager_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__DOFManager_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <includes id="Panzer__FieldAggPattern_8hpp" name="Panzer_FieldAggPattern.hpp" local="yes" imported="no">Panzer_FieldAggPattern.hpp</includes>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">panzer::DOFManager</class>
    <class kind="class">panzer::DOFManager::ElementBlockAccess</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManager_Functors.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__DOFManager__Functors_8hpp</filename>
    <class kind="struct">panzer::dof_functors::SumRank2</class>
    <namespace>panzer</namespace>
    <namespace>panzer::dof_functors</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManager_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__DOFManager__impl_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <includes id="Panzer__FieldAggPattern_8hpp" name="Panzer_FieldAggPattern.hpp" local="yes" imported="no">Panzer_FieldAggPattern.hpp</includes>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__DOFManager__Functors_8hpp" name="Panzer_DOFManager_Functors.hpp" local="yes" imported="no">Panzer_DOFManager_Functors.hpp</includes>
    <includes id="Panzer__NodalFieldPattern_8hpp" name="Panzer_NodalFieldPattern.hpp" local="yes" imported="no">Panzer_NodalFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_DOFMGR_FUNC_TIME_MONITOR</name>
      <anchorfile>Panzer__DOFManager__impl_8hpp.html</anchorfile>
      <anchor>a99f1fba0f22f9fcfb218a846dfdc1baa</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const unsigned int</type>
      <name>seed_</name>
      <anchorfile>Panzer__DOFManager__impl_8hpp.html</anchorfile>
      <anchor>aaf02e21b80a188587aca23758c9e1646</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManagerFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__DOFManagerFactory_8cpp</filename>
    <includes id="Panzer__DOFManagerFactory__decl_8hpp" name="Panzer_DOFManagerFactory_decl.hpp" local="yes" imported="no">Panzer_DOFManagerFactory_decl.hpp</includes>
    <includes id="Panzer__DOFManagerFactory__impl_8hpp" name="Panzer_DOFManagerFactory_impl.hpp" local="yes" imported="no">Panzer_DOFManagerFactory_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManagerFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__DOFManagerFactory__decl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexerFactory_8hpp" name="Panzer_UniqueGlobalIndexerFactory.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexerFactory.hpp</includes>
    <class kind="class">panzer::DOFManagerFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DOFManagerFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__DOFManagerFactory__impl_8hpp</filename>
    <includes id="Panzer__DOFManager_8hpp" name="Panzer_DOFManager.hpp" local="yes" imported="no">Panzer_DOFManager.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_DotProduct.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DotProduct_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_DotProduct_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DotProduct__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a_dot_vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab248785ef794652f418107ba75c4c247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DotProduct_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__DotProduct__impl_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aab8b4411d2f4c9c94f583c288c580c6b</anchor>
      <arglist>(DotProduct, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2888e0c90240b8a88b166bfcbe7bff9d</anchor>
      <arglist>(DotProduct, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af4baf3cde0bd1b4e82c8d7c1840c6e67</anchor>
      <arglist>(DotProduct, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_DoxygenDocumentation.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/doc/</path>
    <filename>Panzer__DoxygenDocumentation_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ElementBlockIdToPhysicsIdMap.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ElementBlockIdToPhysicsIdMap_8cpp</filename>
    <includes id="Panzer__ElementBlockIdToPhysicsIdMap_8hpp" name="Panzer_ElementBlockIdToPhysicsIdMap.hpp" local="yes" imported="no">Panzer_ElementBlockIdToPhysicsIdMap.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>buildBlockIdToPhysicsIdMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae10c99e4e7d3bae8fe8c7d558edbf93c</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;b_to_p, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ElementBlockIdToPhysicsIdMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ElementBlockIdToPhysicsIdMap_8hpp</filename>
    <namespace>Teuchos</namespace>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>buildBlockIdToPhysicsIdMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae10c99e4e7d3bae8fe8c7d558edbf93c</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;b_to_p, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraLinearObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__EpetraLinearObjContainer_8hpp</filename>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <class kind="class">panzer::EpetraLinearObjContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraLinearObjFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__EpetraLinearObjFactory_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__EpetraLinearObjFactory__decl_8hpp" name="Panzer_EpetraLinearObjFactory_decl.hpp" local="yes" imported="no">Panzer_EpetraLinearObjFactory_decl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraLinearObjFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__EpetraLinearObjFactory__decl_8hpp</filename>
    <includes id="Panzer__BlockedEpetraLinearObjFactory_8hpp" name="Panzer_BlockedEpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjFactory.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_USE_BLOCKED_EPETRA_LOF</name>
      <anchorfile>Panzer__EpetraLinearObjFactory__decl_8hpp.html</anchorfile>
      <anchor>aec4c3b4f360a1a0af0963037ea2e3a44</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BlockedEpetraLinearObjFactory&lt; Traits, LocalOrdinalT &gt;</type>
      <name>EpetraLinearObjFactory</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5ec7ea87f5a2b2a630c4dce4d83c9fe0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraLinearObjFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__EpetraLinearObjFactory__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__Filtered__UniqueGlobalIndexer_8hpp" name="Panzer_Filtered_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_Filtered_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8cpp</filename>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__ReadOnlyVector__GlobalEvaluationData_8hpp" name="Panzer_ReadOnlyVector_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ReadOnlyVector_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::EpetraVector_ReadOnly_GlobalEvaluationData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet_8hpp</filename>
    <includes id="Panzer__EquationSet__Base_8hpp" name="Panzer_EquationSet_Base.hpp" local="yes" imported="no">Panzer_EquationSet_Base.hpp</includes>
    <class kind="class">PHX::FieldManager</class>
    <class kind="class">panzer::EquationSet</class>
    <namespace>PHX</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_Base.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__Base_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__FieldLibrary_8hpp" name="Panzer_FieldLibrary.hpp" local="yes" imported="no">Panzer_FieldLibrary.hpp</includes>
    <includes id="Panzer__EvaluatorsRegistrar_8hpp" name="Panzer_EvaluatorsRegistrar.hpp" local="yes" imported="no">Panzer_EvaluatorsRegistrar.hpp</includes>
    <class kind="class">panzer::EquationSetBase</class>
    <namespace>Teuchos</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_DefaultImpl.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__DefaultImpl_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_DefaultImpl_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__DefaultImpl__decl_8hpp</filename>
    <includes id="Panzer__EquationSet_8hpp" name="Panzer_EquationSet.hpp" local="yes" imported="no">Panzer_EquationSet.hpp</includes>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <class kind="class">PHX::FieldManager</class>
    <class kind="class">panzer::EquationSet_DefaultImpl</class>
    <class kind="struct">panzer::EquationSet_DefaultImpl::DOFDescriptor</class>
    <namespace>Teuchos</namespace>
    <namespace>PHX</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_DefaultImpl_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__DefaultImpl__impl_8hpp</filename>
    <includes id="Panzer__DOF__PointValues_8hpp" name="Panzer_DOF_PointValues.hpp" local="yes" imported="no">Panzer_DOF_PointValues.hpp</includes>
    <includes id="Panzer__DOFDiv_8hpp" name="Panzer_DOFDiv.hpp" local="yes" imported="no">Panzer_DOFDiv.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_Factory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__Factory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__EquationSet__TemplateManager_8hpp" name="Panzer_EquationSet_TemplateManager.hpp" local="yes" imported="no">Panzer_EquationSet_TemplateManager.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <class kind="struct">panzer::EquationSetFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_Factory_Composite.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__Factory__Composite_8cpp</filename>
    <includes id="Panzer__EquationSet__Factory__Composite_8hpp" name="Panzer_EquationSet_Factory_Composite.hpp" local="yes" imported="no">Panzer_EquationSet_Factory_Composite.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_Factory_Composite.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__Factory__Composite_8hpp</filename>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <class kind="class">panzer::EquationSet_FactoryComposite</class>
    <namespace>Teuchos</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_Factory_Defines.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__Factory__Defines_8hpp</filename>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <includes id="Panzer__EquationSet__TemplateManager_8hpp" name="Panzer_EquationSet_TemplateManager.hpp" local="yes" imported="no">Panzer_EquationSet_TemplateManager.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_DECLARE_EQSET_TEMPLATE_BUILDER</name>
      <anchorfile>Panzer__EquationSet__Factory__Defines_8hpp.html</anchorfile>
      <anchor>abd3ba392cf3693c96027a2a836be5d55</anchor>
      <arglist>(fClass, fType)                          </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_BUILD_EQSET_OBJECTS</name>
      <anchorfile>Panzer__EquationSet__Factory__Defines_8hpp.html</anchorfile>
      <anchor>ac274c5f3d254d7a0dafde6d01f9a9fec</anchor>
      <arglist>(key, fType)                                                  </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_EquationSet_TemplateManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EquationSet__TemplateManager_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__EquationSet_8hpp" name="Panzer_EquationSet.hpp" local="yes" imported="no">Panzer_EquationSet.hpp</includes>
    <class kind="class">panzer::EquationSet_TemplateManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EvaluationTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EvaluationTraits_8hpp</filename>
    <class kind="struct">panzer::EvaluationTraits</class>
    <class kind="struct">panzer::EvaluationTraits::apply</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Evaluator_Macros.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Evaluator__Macros_8hpp</filename>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_EVALUATOR_CLASS</name>
      <anchorfile>Panzer__Evaluator__Macros_8hpp.html</anchorfile>
      <anchor>aebbcb14cf067f219c44f1685c392258e</anchor>
      <arglist>(NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_EVALUATOR_CLASS_PP</name>
      <anchorfile>Panzer__Evaluator__Macros_8hpp.html</anchorfile>
      <anchor>ad0aa37e8c569e9135ad5fbb24a8785c6</anchor>
      <arglist>(NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_EVALUATOR_CLASS_END</name>
      <anchorfile>Panzer__Evaluator__Macros_8hpp.html</anchorfile>
      <anchor>a25cb5ae279febe08fc7b998e86c2a001</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Evaluator_WithBaseImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Evaluator__WithBaseImpl_8hpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <class kind="class">panzer::EvaluatorWithBaseImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_EvaluatorsRegistrar.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__EvaluatorsRegistrar_8hpp</filename>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::EvaluatorsRegistrar</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ExplicitModelEvaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ExplicitModelEvaluator_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ExplicitModelEvaluator_8hpp" name="Panzer_ExplicitModelEvaluator.hpp" local="yes" imported="no">Panzer_ExplicitModelEvaluator.hpp</includes>
    <includes id="Panzer__ExplicitModelEvaluator__impl_8hpp" name="Panzer_ExplicitModelEvaluator_impl.hpp" local="yes" imported="no">Panzer_ExplicitModelEvaluator_impl.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ExplicitModelEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ExplicitModelEvaluator_8hpp</filename>
    <includes id="Panzer__ModelEvaluator_8hpp" name="Panzer_ModelEvaluator.hpp" local="yes" imported="no">Panzer_ModelEvaluator.hpp</includes>
    <includes id="Panzer__ModelEvaluator__Epetra_8hpp" name="Panzer_ModelEvaluator_Epetra.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Epetra.hpp</includes>
    <includes id="Panzer__MassMatrixModelEvaluator_8hpp" name="Panzer_MassMatrixModelEvaluator.hpp" local="yes" imported="no">Panzer_MassMatrixModelEvaluator.hpp</includes>
    <class kind="class">panzer::ExplicitModelEvaluator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ExplicitModelEvaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ExplicitModelEvaluator__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ExplicitTemplateInstantiation.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ExplicitTemplateInstantiation_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_RESIDUAL_ONE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>afcfebdede418c1ce5bdef742bfea8612</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TANGENT_ONE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a28436857c6e04e1dd67414ebe1de42e9</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_JACOBIAN_ONE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>abaf4ac32c988d5b3b03c08d8b06ca792</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_HESSIAN_ONE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a25d42c32eaa04c403ff3a2e1a2a26eb5</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_ONE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a8133e31bc13cc7ffc9ba4ba60101cd68</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_RESIDUAL_TWO_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>af8301f76c1b1dc3d926f6277a62418c6</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TANGENT_TWO_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a15d844e9b3057b07516489aed0854e1e</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_JACOBIAN_TWO_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a61b0fe9e873b6e63c1f4641cae8a919c</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_HESSIAN_TWO_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a2e3a9ecf1859760c1fc392fe8875b26c</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TWO_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a0a7a4846c7dbfcf3269148924561957c</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_RESIDUAL_THREE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a1c0f5e9d6d124596ce240af44581645f</anchor>
      <arglist>(name, ExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TANGENT_THREE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a95d2fee25cf1324a44e8efe5b8b73394</anchor>
      <arglist>(name, ExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_JACOBIAN_THREE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>aa86f8c6948ec335f0092398363dfea96</anchor>
      <arglist>(name, ExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_HESSIAN_THREE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a7db7bdcc6e94dd952c51aa1431b686ef</anchor>
      <arglist>(name, ExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_THREE_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a79ec7c9fa92b124d7cf6c9aaaea5fc11</anchor>
      <arglist>(name, ExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_RESIDUAL_THREE_2U_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a928b673bd47b0c7978a1020877a52c30</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TANGENT_THREE_2U_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a0cad5b3d85fbc10233a6cf8a0222627f</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_JACOBIAN_THREE_2U_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a4a1a572f0ca3a7c25de2743effed1f1e</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_HESSIAN_THREE_2U_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a1d001e7b2a10d9fe8b1d60aab26e5b62</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_THREE_2U_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a7f2e7479d37a03d51290173f91f44b14</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_RESIDUAL_FOUR_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a09814b870432a5965d2afb0bdeb6fbe1</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_TANGENT_FOUR_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>ac4382e92651005642cb08f45f743b38b</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_JACOBIAN_FOUR_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a761f204effc424fc790552bf1d35bfb1</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_HESSIAN_FOUR_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>a90770152ea1c42e44872ed6a308f6427</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_INSTANTIATE_TEMPLATE_CLASS_FOUR_T</name>
      <anchorfile>Panzer__ExplicitTemplateInstantiation_8hpp.html</anchorfile>
      <anchor>accea31f2fa0bd739b478aaa9dee8aa96</anchor>
      <arglist>(name, FirstExtraT, SecondExtraT)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldAggPattern.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__FieldAggPattern_8cpp</filename>
    <includes id="Panzer__FieldAggPattern_8hpp" name="Panzer_FieldAggPattern.hpp" local="yes" imported="no">Panzer_FieldAggPattern.hpp</includes>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldAggPattern.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__FieldAggPattern_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <class kind="class">panzer::FieldAggPattern</class>
    <class kind="struct">panzer::FieldAggPattern::LessThan</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldLibrary.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__FieldLibrary_8cpp</filename>
    <includes id="Panzer__FieldLibrary_8hpp" name="Panzer_FieldLibrary.hpp" local="yes" imported="no">Panzer_FieldLibrary.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldLibrary.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__FieldLibrary_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <class kind="class">panzer::FieldLibraryBase</class>
    <class kind="class">panzer::FieldLayoutLibrary</class>
    <class kind="class">panzer::FieldLibrary</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a00f8bb3e1404e052fa5905156b019c6d</anchor>
      <arglist>(std::ostream &amp;os, const FieldLibraryBase &amp;flb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldManagerBuilder.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__FieldManagerBuilder_8cpp</filename>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__Shards__Utilities_8hpp" name="Panzer_Shards_Utilities.hpp" local="yes" imported="no">Panzer_Shards_Utilities.hpp</includes>
    <includes id="Panzer__BCStrategy__Factory_8hpp" name="Panzer_BCStrategy_Factory.hpp" local="yes" imported="no">Panzer_BCStrategy_Factory.hpp</includes>
    <includes id="Panzer__BCStrategy__TemplateManager_8hpp" name="Panzer_BCStrategy_TemplateManager.hpp" local="yes" imported="no">Panzer_BCStrategy_TemplateManager.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__StlMap__Utilities_8hpp" name="Panzer_StlMap_Utilities.hpp" local="yes" imported="no">Panzer_StlMap_Utilities.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldManagerBuilder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__FieldManagerBuilder_8hpp</filename>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <class kind="class">panzer::ConnManager</class>
    <class kind="class">panzer::DOFManager</class>
    <class kind="class">PHX::FieldManager</class>
    <class kind="class">panzer::GenericEvaluatorFactory</class>
    <class kind="class">panzer::EmptyEvaluatorFactory</class>
    <class kind="class">panzer::FieldManagerBuilder</class>
    <namespace>panzer</namespace>
    <namespace>PHX</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afd2f7d670a56de83b48d9db54169b432</anchor>
      <arglist>(std::ostream &amp;os, const panzer::FieldManagerBuilder &amp;rfd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldPattern.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__FieldPattern_8cpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac95ed5ca7d39c6c243ea049f1598ef15</anchor>
      <arglist>(std::ostream &amp;os, const FieldPattern &amp;fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldPattern.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__FieldPattern_8hpp</filename>
    <class kind="class">panzer::FieldPattern</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac95ed5ca7d39c6c243ea049f1598ef15</anchor>
      <arglist>(std::ostream &amp;os, const FieldPattern &amp;fp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldSpy.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__FieldSpy_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__FieldSpy_8hpp" name="Panzer_FieldSpy.hpp" local="yes" imported="no">Panzer_FieldSpy.hpp</includes>
    <includes id="Panzer__FieldSpy__impl_8hpp" name="Panzer_FieldSpy_impl.hpp" local="yes" imported="no">Panzer_FieldSpy_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldSpy.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__FieldSpy_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__FieldLibrary_8hpp" name="Panzer_FieldLibrary.hpp" local="yes" imported="no">Panzer_FieldLibrary.hpp</includes>
    <class kind="class">panzer::FieldSpy</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_FieldSpy_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__FieldSpy__impl_8hpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Filtered_UniqueGlobalIndexer.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__Filtered__UniqueGlobalIndexer_8cpp</filename>
    <includes id="Panzer__Filtered__UniqueGlobalIndexer_8hpp" name="Panzer_Filtered_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_Filtered_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__Filtered__UniqueGlobalIndexer__impl_8hpp" name="Panzer_Filtered_UniqueGlobalIndexer_impl.hpp" local="yes" imported="no">Panzer_Filtered_UniqueGlobalIndexer_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Filtered_UniqueGlobalIndexer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__Filtered__UniqueGlobalIndexer_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <class kind="class">panzer::Filtered_UniqueGlobalIndexer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Filtered_UniqueGlobalIndexer_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__Filtered__UniqueGlobalIndexer__impl_8hpp</filename>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherBasisCoordinates.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherBasisCoordinates_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherBasisCoordinates_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherBasisCoordinates__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::GatherBasisCoordinates</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherBasisCoordinates_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherBasisCoordinates__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherIntegrationCoordinates.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherIntegrationCoordinates_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherIntegrationCoordinates_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherIntegrationCoordinates__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::GatherIntegrationCoordinates</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherIntegrationCoordinates_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherIntegrationCoordinates__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherNormals.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherNormals_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__GatherNormals__decl_8hpp" name="Panzer_GatherNormals_decl.hpp" local="yes" imported="no">Panzer_GatherNormals_decl.hpp</includes>
    <includes id="Panzer__GatherNormals__impl_8hpp" name="Panzer_GatherNormals_impl.hpp" local="yes" imported="no">Panzer_GatherNormals_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherNormals_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherNormals__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <class kind="class">panzer::GatherNormals</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherNormals_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherNormals__impl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherOrientation.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherOrientation_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__GatherOrientation__decl_8hpp" name="Panzer_GatherOrientation_decl.hpp" local="yes" imported="no">Panzer_GatherOrientation_decl.hpp</includes>
    <includes id="Panzer__GatherOrientation__impl_8hpp" name="Panzer_GatherOrientation_impl.hpp" local="yes" imported="no">Panzer_GatherOrientation_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherOrientation_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherOrientation__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherOrientation</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherOrientation_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherOrientation__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedEpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedEpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__GatherSolution__BlockedEpetra__decl_8hpp" name="Panzer_GatherSolution_BlockedEpetra_decl.hpp" local="yes" imported="no">Panzer_GatherSolution_BlockedEpetra_decl.hpp</includes>
    <includes id="Panzer__GatherSolution__BlockedEpetra__impl_8hpp" name="Panzer_GatherSolution_BlockedEpetra_impl.hpp" local="yes" imported="no">Panzer_GatherSolution_BlockedEpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedEpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedEpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedEpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedEpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedEpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedEpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedEpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedEpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__BlockedVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_BlockedVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedTpetra.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedTpetra_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__GatherSolution__BlockedTpetra__impl_8hpp" name="Panzer_GatherSolution_BlockedTpetra_impl.hpp" local="yes" imported="no">Panzer_GatherSolution_BlockedTpetra_impl.hpp</includes>
    <class kind="class">panzer::BlockedTpetraLinearObjContainer</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, S, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Tangent, TRAITS, S, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, S, LO, GO, NodeT &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedTpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedTpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_BlockedTpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__BlockedTpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Epetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Epetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__GatherSolution__Epetra__decl_8hpp" name="Panzer_GatherSolution_Epetra_decl.hpp" local="yes" imported="no">Panzer_GatherSolution_Epetra_decl.hpp</includes>
    <includes id="Panzer__GatherSolution__Epetra__impl_8hpp" name="Panzer_GatherSolution_Epetra_impl.hpp" local="yes" imported="no">Panzer_GatherSolution_Epetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Epetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Epetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherSolution_Epetra</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Epetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Epetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Epetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Epetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Epetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Epetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Input.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Input_8cpp</filename>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Input.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Input_8hpp</filename>
    <class kind="class">panzer::GatherSolution_Input</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Tpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Tpetra_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Tpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Tpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherSolution_Tpetra</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="struct">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;::NoSeed</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Tpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Tpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherSolution_Tpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherSolution__Tpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__GatherSolution__Input_8hpp" name="Panzer_GatherSolution_Input.hpp" local="yes" imported="no">Panzer_GatherSolution_Input.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_BlockedEpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__BlockedEpetra_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_BlockedEpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__BlockedEpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherTangent_BlockedEpetra</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_BlockedEpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__BlockedEpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_BlockedTpetra.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__BlockedTpetra_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__GatherTangent__BlockedTpetra__impl_8hpp" name="Panzer_GatherTangent_BlockedTpetra_impl.hpp" local="yes" imported="no">Panzer_GatherTangent_BlockedTpetra_impl.hpp</includes>
    <class kind="class">panzer::BlockedTpetraLinearObjContainer</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::GatherTangent_BlockedTpetra</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_BlockedTpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__BlockedTpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Epetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Epetra_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Epetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Epetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherTangent_Epetra</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Epetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Epetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Tpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Tpetra_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Tpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Tpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::GatherTangent_Tpetra</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangent_Tpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangent__Tpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangents.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangents_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__GatherTangents__decl_8hpp" name="Panzer_GatherTangents_decl.hpp" local="yes" imported="no">Panzer_GatherTangents_decl.hpp</includes>
    <includes id="Panzer__GatherTangents__impl_8hpp" name="Panzer_GatherTangents_impl.hpp" local="yes" imported="no">Panzer_GatherTangents_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangents_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangents__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <class kind="class">panzer::GatherTangents</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GatherTangents_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GatherTangents__impl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_GeometricAggFieldPattern.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__GeometricAggFieldPattern_8cpp</filename>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GeometricAggFieldPattern.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__GeometricAggFieldPattern_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <class kind="class">panzer::GeometricAggFieldPattern</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalData.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalData_8cpp</filename>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>createGlobalData</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8bc3f7c0990ac4d2501c5e3fcda4dd46</anchor>
      <arglist>(bool build_default_os, int print_process)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalData_8hpp</filename>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <class kind="struct">panzer::GlobalData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalDataAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalDataAcceptor_8hpp</filename>
    <class kind="class">panzer::GlobalDataAcceptor</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalDataAcceptor_DefaultImpl.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalDataAcceptor__DefaultImpl_8cpp</filename>
    <includes id="Panzer__GlobalDataAcceptor__DefaultImpl_8hpp" name="Panzer_GlobalDataAcceptor_DefaultImpl.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor_DefaultImpl.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalDataAcceptor_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalDataAcceptor__DefaultImpl_8hpp</filename>
    <includes id="Panzer__GlobalDataAcceptor_8hpp" name="Panzer_GlobalDataAcceptor.hpp" local="yes" imported="no">Panzer_GlobalDataAcceptor.hpp</includes>
    <class kind="class">panzer::GlobalDataAcceptorDefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalEvaluationData_8hpp</filename>
    <class kind="class">panzer::GlobalEvaluationData</class>
    <class kind="class">panzer::GlobalEvaluationData_Default</class>
    <class kind="class">panzer::GlobalEvaluationData_BCAdjustment</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalEvaluationDataContainer.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalEvaluationDataContainer_8cpp</filename>
    <includes id="Panzer__GlobalEvaluationDataContainer_8hpp" name="Panzer_GlobalEvaluationDataContainer.hpp" local="yes" imported="no">Panzer_GlobalEvaluationDataContainer.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalEvaluationDataContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__GlobalEvaluationDataContainer_8hpp</filename>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::GlobalEvaluationDataContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalStatistics.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GlobalStatistics_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalStatistics_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GlobalStatistics__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>postprocess</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af33a04ce5413703d4ef503f4ee9221ae</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getRequiredFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaaf7e02109ccea89ed1f71775a7225a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>volumes</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab62d46baa087f24514800975eb53040b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>tmp</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac68c9b0d38aba64521ad46f58ff6b2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>ones</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad1c493dc712fbb731cf11df772827b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, IP &gt; &gt;</type>
      <name>field_values</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa194523e405ef62130acfe7faa6b3286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>total_volume</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a64d8bd868324041a2a9d328b9c9ba469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>averages</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3e61ebb28fa83217790e1b029c72b7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>maxs</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaab007eaed60e33ebc34ea0fb6fa9cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>mins</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ade1e5ba16cdd17ff5135467ecec15ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>global_total_volume</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa5511eb28fa10d70eaf7bf65dd17055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_averages</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3c59849154086d6294202284c93726f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_maxs</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2d24dd65f5437908fedf95a8e8976e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_mins</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70527b1fef2e8b464f0fac629f597199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ir_order</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0be9d5e152de83d91821d21fd3b6b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>ir_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af22d48dc757dea4ec4a8ec60552dde00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>comm</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a84f62496ffbc900e577ad2450e097af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>global_data</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a49394c0f84ea91db9c4546cfaf9b9f7d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_GlobalStatistics_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__GlobalStatistics__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <includes id="Panzer__IosAllSaver_8hpp" name="Panzer_IosAllSaver.hpp" local="yes" imported="no">Panzer_IosAllSaver.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afe57771713d4f546e924058a7f92b33a</anchor>
      <arglist>(GlobalStatistics, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8187bb6a5ac3260cad739daff0ad8064</anchor>
      <arglist>(GlobalStatistics, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac455879b29a1b4cd66efc07ecf265f1c</anchor>
      <arglist>(GlobalStatistics, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_PRE_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a55afa925ad99c2168722a8a0744e315e</anchor>
      <arglist>(GlobalStatistics, data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a510e1d5a36a94a131171e7923a4f9848</anchor>
      <arglist>(GlobalStatistics, data)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_HashUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__HashUtils_8hpp</filename>
    <class kind="struct">panzer::pair_hash</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>hash_combine</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa201508a4313c362c8eed869ce3a8ef0</anchor>
      <arglist>(std::size_t &amp;seed, const T &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_InitialCondition_Builder.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__InitialCondition__Builder_8cpp</filename>
    <includes id="Panzer__InitialCondition__Builder_8hpp" name="Panzer_InitialCondition_Builder.hpp" local="yes" imported="no">Panzer_InitialCondition_Builder.hpp</includes>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <includes id="Panzer__EquationSet__Factory__Defines_8hpp" name="Panzer_EquationSet_Factory_Defines.hpp" local="yes" imported="no">Panzer_EquationSet_Factory_Defines.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>setupInitialConditionFieldManagers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeedb67b7bd3ce4053e7dbf15b1713e47</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_block_closure_models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file, const std::string &amp;graphviz_file_prefix, std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5f373a1a9e051466dc9f50332a0eb034</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers, Teuchos::RCP&lt; panzer::LinearObjContainer &gt; loc, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const double time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupControlInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af43a3d15fe42293802ac9aba44202fd6</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, WorksetContainer &amp;wkstContainer, const LinearObjFactory&lt; Traits &gt; &amp;lof, const ClosureModelFactory_TemplateManager&lt; Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_closure_models, const Teuchos::ParameterList &amp;user_data, int workset_size, double t0, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildICPhysicsBlocks</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8c91355078f0beb66192aa3dff5114ae</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, int workset_size, std::vector&lt; Teuchos::RCP&lt; PhysicsBlock &gt; &gt; &amp;physics_blocks)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_InitialCondition_Builder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__InitialCondition__Builder_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <class kind="struct">panzer::ICFieldDescriptor</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>setupInitialConditionFieldManagers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeedb67b7bd3ce4053e7dbf15b1713e47</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_block_closure_models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file, const std::string &amp;graphviz_file_prefix, std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupControlInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af43a3d15fe42293802ac9aba44202fd6</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, WorksetContainer &amp;wkstContainer, const LinearObjFactory&lt; Traits &gt; &amp;lof, const ClosureModelFactory_TemplateManager&lt; Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_closure_models, const Teuchos::ParameterList &amp;user_data, int workset_size, double t0, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildICPhysicsBlocks</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aac9da94291810f4562b2e42169a59355</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, int workset_size, std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physics_blocks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5f373a1a9e051466dc9f50332a0eb034</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers, Teuchos::RCP&lt; panzer::LinearObjContainer &gt; loc, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const double time_stamp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_IntegrationRule.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IntegrationRule_8cpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_IntegrationRule.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IntegrationRule_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <class kind="class">panzer::IntegrationRule</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_IntegrationValues2.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IntegrationValues2_8cpp</filename>
    <includes id="Panzer__IntegrationValues2_8hpp" name="Panzer_IntegrationValues2.hpp" local="yes" imported="no">Panzer_IntegrationValues2.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INTEGRATION_VALUES2_INSTANTIATION</name>
      <anchorfile>Panzer__IntegrationValues2_8cpp.html</anchorfile>
      <anchor>ad77eab29a038ad59f2572ec0168862ae</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>permuteToOther</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8a1c61422d907e8a8b8db1d0c38d290b</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, IP, Dim &gt; &amp;coords, const PHX::MDField&lt; Scalar, Cell, IP, Dim &gt; &amp;other_coords, std::vector&lt; typename ArrayTraits&lt; Scalar, PHX::MDField&lt; Scalar &gt; &gt;::size_type &gt; &amp;permutation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_IntegrationValues2.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IntegrationValues2_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__ArrayTraits_8hpp" name="Panzer_ArrayTraits.hpp" local="yes" imported="no">Panzer_ArrayTraits.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <class kind="class">panzer::IntegrationValues2</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesScalar.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesScalar_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesScalar_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesScalar__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0ef14e95b85d45927d6a85e73eee1f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesScalar_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesScalar__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_USE_FAST_QUAD</name>
      <anchorfile>Panzer__Integrator__BasisTimesScalar__impl_8hpp.html</anchorfile>
      <anchor>a5e349eddb363176bc0ac99b675189730</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abd9ea472d461b5711e5d7ced6dc52fb7</anchor>
      <arglist>(Integrator_BasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad74dadd21a618f68de611fc4da7b5879</anchor>
      <arglist>(Integrator_BasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a739bd105615cd429f58e583244a7c6fa</anchor>
      <arglist>(Integrator_BasisTimesScalar, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesVector__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <class kind="struct">panzer::FieldMultTag</class>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>PHX::Device::scratch_memory_space</type>
      <name>shmem_space</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a81d3a1cd2ebb20fc421d4d9f82e9c1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae4f14a11f93f95aad6181596c7760fe8</anchor>
      <arglist>(const FieldMultTag&lt; NUM_FIELD_MULT &gt; &amp;, const std::size_t &amp;cell) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim &gt;</type>
      <name>vectorField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e1fc75de5c5fe65fe094abb4ca5ccb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; Kokkos::View&lt; ScalarT ** &gt; * &gt;</type>
      <name>kokkos_field_multipliers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6b303f2aabf81963c97bad5c2fcc914e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>basis_card</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5a98d4053db0e40494361551c3d2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; double, Cell, BASIS, IP, Dim &gt;</type>
      <name>weighted_basis_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0f356a3db4f99538b12f82ebcfabb3fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_BasisTimesVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__BasisTimesVector__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaa54d8ef94d88f4def4b0d7409e7465c</anchor>
      <arglist>(Integrator_BasisTimesVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1bd88b9744807c5094a23bfb33cd6f13</anchor>
      <arglist>(Integrator_BasisTimesVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a10f339bd59aadb07989dabdf0f15b060</anchor>
      <arglist>(Integrator_BasisTimesVector, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_CurlBasisDotVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__CurlBasisDotVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_CurlBasisDotVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__CurlBasisDotVector__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP &gt;</type>
      <name>flux_scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aba65d492c98c59ef5306ee38a78f2ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP, Dim &gt;</type>
      <name>flux_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a93ee0c81e0a3ab06059f151a9833420c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>scratch_scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab1b7018f0dea2df9b58a3c97051eaf69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim &gt;</type>
      <name>scratch_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab3e705174dd1ffb3600a9545a3fa5f9f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_CurlBasisDotVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__CurlBasisDotVector__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad31c8108c8183995da78294ab737bca6</anchor>
      <arglist>(Integrator_CurlBasisDotVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a495a3f5c7e6143a9e612c0c6f02a9ea3</anchor>
      <arglist>(Integrator_CurlBasisDotVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67f094e6f3462af816e0df4ee5505cbd</anchor>
      <arglist>(Integrator_CurlBasisDotVector, workset)</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim &gt;</type>
      <name>scratch</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>ab3915130cfea076d0dbeb23a2ce3437b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>multiplier</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>aaf220f69923619c408dc9b249a240fa5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP, Dim &gt;</type>
      <name>vectorField</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>af887cf91eaaf88a45f25b9bd0872c956</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP &gt;</type>
      <name>field</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>aacd31c83085d405c580afe1b243cd9c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>residual</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>acb754f6da48d38f36f75c35edff0a6ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; double, Cell, BASIS, IP, Dim &gt;</type>
      <name>weighted_curl_basis</name>
      <anchorfile>Panzer__Integrator__CurlBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>a75891227fa0362130e63028442b926a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_DivBasisTimesScalar.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__DivBasisTimesScalar_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Integrator__DivBasisTimesScalar_8hpp" name="Panzer_Integrator_DivBasisTimesScalar.hpp" local="yes" imported="no">Panzer_Integrator_DivBasisTimesScalar.hpp</includes>
    <includes id="Panzer__Integrator__DivBasisTimesScalar__impl_8hpp" name="Panzer_Integrator_DivBasisTimesScalar_impl.hpp" local="yes" imported="no">Panzer_Integrator_DivBasisTimesScalar_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_DivBasisTimesScalar.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__DivBasisTimesScalar_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_DivBasisTimesScalar_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__DivBasisTimesScalar__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5189c92558522d60fcb0a3bddbbabca9</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a65ad68cc292706317db3a47e5205d5fd</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5485e18cb4432a2e6aabd91ad2a8340e</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_GradBasisDotVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__GradBasisDotVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_GradBasisDotVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__GradBasisDotVector__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_GradBasisDotVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__GradBasisDotVector__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_USE_FAST_QUAD</name>
      <anchorfile>Panzer__Integrator__GradBasisDotVector__impl_8hpp.html</anchorfile>
      <anchor>a5e349eddb363176bc0ac99b675189730</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2ba4f1c2290bfd1843436e69d1ef526</anchor>
      <arglist>(Integrator_GradBasisDotVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af772abda86dc03b2116103f022546a13</anchor>
      <arglist>(Integrator_GradBasisDotVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e6b33e5dac5b55c42a81fb2a08a9943</anchor>
      <arglist>(Integrator_GradBasisDotVector, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_Scalar.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__Scalar_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_Scalar_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__Scalar__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>integral</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac40a1f5daafdafa5860080fc2a16a4e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_Scalar_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__Scalar__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad8255cd58d247a69917c5671ef5a2d50</anchor>
      <arglist>(Integrator_Scalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8f8ed7083705166b80dccad7ba23aa0c</anchor>
      <arglist>(Integrator_Scalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a85dda135cf7a857dd5b94a361c3b450a</anchor>
      <arglist>(Integrator_Scalar, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_TransientBasisTimesScalar.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__TransientBasisTimesScalar_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_TransientBasisTimesScalar_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__TransientBasisTimesScalar__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Integrator_TransientBasisTimesScalar_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Integrator__TransientBasisTimesScalar__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aae86f243bdd94c8f91351e5b1b84bf42</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a719e3840a7cdc2299eec66d44590fdf2</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a886ced449768b26ad11dcd57ad715b12</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Interface_Residual.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Interface__Residual_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Interface_Residual_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Interface__Residual__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal_dot_flux</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3ec17be059e60941fc58bd485737b233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8de2a99cd6c704ae809b11640dbdab14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_ip</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70dc26db82b6238591ac46512b1089f4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Interface_Residual_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Interface__Residual__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a811f4e74eca8931762a50f1d4d7e6cbe</anchor>
      <arglist>(InterfaceResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac2afac21d4d9d0d3b32b711e0dd8d5e6</anchor>
      <arglist>(InterfaceResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab355dd92c7938c05456436d80fbd1db1</anchor>
      <arglist>(InterfaceResidual, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Intrepid_ConstBasis.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Intrepid__ConstBasis_8hpp</filename>
    <includes id="Panzer__Intrepid__ConstBasis__impl_8hpp" name="Panzer_Intrepid_ConstBasis_impl.hpp" local="yes" imported="no">Panzer_Intrepid_ConstBasis_impl.hpp</includes>
    <class kind="class">panzer::Basis_Constant</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Intrepid_ConstBasis_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Intrepid__ConstBasis__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_IntrepidBasisFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IntrepidBasisFactory_8hpp</filename>
    <includes id="Panzer__Intrepid__ConstBasis_8hpp" name="Panzer_Intrepid_ConstBasis.hpp" local="yes" imported="no">Panzer_Intrepid_ConstBasis.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; ScalarT, ArrayT &gt; &gt;</type>
      <name>createIntrepid2Basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8efed85e12542eebb654284cb2451070</anchor>
      <arglist>(const std::string basis_type, int basis_order, const shards::CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; ScalarT, ArrayT &gt; &gt;</type>
      <name>createIntrepid2Basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6cdaea25e4559e4f517f4aec14983bfc</anchor>
      <arglist>(const std::string basis_type, int basis_order, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;cell_topology)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_IntrepidFieldPattern.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__IntrepidFieldPattern_8cpp</filename>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_IntrepidFieldPattern.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__IntrepidFieldPattern_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <class kind="class">panzer::Intrepid2FieldPattern</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_IosAllSaver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__IosAllSaver_8hpp</filename>
    <class kind="class">panzer::basic_ios_all_saver</class>
    <class kind="class">panzer::basic_ios_all_saver</class>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>basic_ios_all_saver&lt; char &gt;</type>
      <name>ios_all_saver</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4b1625b8ed39f2fc993d620137a064b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_ios_all_saver&lt; wchar_t &gt;</type>
      <name>wios_all_saver</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad9442439d0b287db5b9147101f7ecf3b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_LinearObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__LinearObjContainer_8hpp</filename>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::LinearObjContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_LinearObjFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__LinearObjFactory_8hpp</filename>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__LinearObjContainer_8hpp" name="Panzer_LinearObjContainer.hpp" local="yes" imported="no">Panzer_LinearObjContainer.hpp</includes>
    <includes id="Panzer__ReadOnlyVector__GlobalEvaluationData_8hpp" name="Panzer_ReadOnlyVector_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ReadOnlyVector_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::LinearObjFactory</class>
    <class kind="struct">panzer::LinearObjFactory::Scatter_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::ScatterDirichlet_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::Gather_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherTangent_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherDomain_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherOrientation_Builder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_LinearObjFactory_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__LinearObjFactory__Utilities_8cpp</filename>
    <includes id="Panzer__LinearObjFactory__Utilities_8hpp" name="Panzer_LinearObjFactory_Utilities.hpp" local="yes" imported="no">Panzer_LinearObjFactory_Utilities.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjFactory_8hpp" name="Panzer_BlockedEpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjFactory.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjFactory_8hpp" name="Panzer_BlockedTpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjFactory.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e8ea2c6f17c750568c75bb6b394a1e5</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRange</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e633d65ad6997a762e565270135207b</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRangeAndDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a37a81f034951d350cf87a2a8b5c8026f</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_LinearObjFactory_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__LinearObjFactory__Utilities_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <class kind="class">panzer::LinearObjFactory</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e8ea2c6f17c750568c75bb6b394a1e5</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRange</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e633d65ad6997a762e565270135207b</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRangeAndDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a37a81f034951d350cf87a2a8b5c8026f</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_LOCPair_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__LOCPair__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <class kind="class">panzer::LOCPair_GlobalEvaluationData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_MassMatrixModelEvaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__MassMatrixModelEvaluator_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__MassMatrixModelEvaluator_8hpp" name="Panzer_MassMatrixModelEvaluator.hpp" local="yes" imported="no">Panzer_MassMatrixModelEvaluator.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_MassMatrixModelEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__MassMatrixModelEvaluator_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateManager_8hpp" name="Panzer_AssemblyEngine_TemplateManager.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateManager.hpp</includes>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__ResponseMESupportBase_8hpp" name="Panzer_ResponseMESupportBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBase.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="no" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">panzer::MassMatrixModelEvaluator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_MaterialModelEntry.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__MaterialModelEntry_8cpp</filename>
    <includes id="Panzer__MaterialModelEntry_8hpp" name="Panzer_MaterialModelEntry.hpp" local="yes" imported="no">Panzer_MaterialModelEntry.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_MaterialModelEntry.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__MaterialModelEntry_8hpp</filename>
    <class kind="class">panzer::MaterialModelEntry</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaeea923ab6997c7c91493c21e1d35eb0</anchor>
      <arglist>(std::ostream &amp;os, panzer::MaterialModelEntry &amp;m)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_MemUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__MemUtils_8cpp</filename>
    <includes id="Panzer__MemUtils_8hpp" name="Panzer_MemUtils.hpp" local="no" imported="no">Panzer_MemUtils.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aab80176f6de2f010f3fd9b5b0100a602</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7615f84135d16703af8cd9eae2707766</anchor>
      <arglist>(std::ostream &amp;s, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsage &amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pretty</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa3295fff1215db8294647c65d512cb0e</anchor>
      <arglist>(std::ostream &amp;s, size_t num)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8fd224b79bcba7bbe4cd3b7911a7b19</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getPeakRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aefb1e640b6a5c9a36e70c713f0ccd356</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getCurrentRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2195802fa96a4c6e8bff44328abf01b0</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>reduceMemUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac7fdb65f4f2f1ef6b49294aa1bdfcd26</anchor>
      <arglist>(size_t &amp;mem, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsageType &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_MemUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__MemUtils_8hpp</filename>
    <class kind="struct">panzer::MemUsage</class>
    <namespace>panzer</namespace>
    <member kind="enumeration">
      <type></type>
      <name>MemUsageType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEM_USAGE_CURRENT</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12afe4f427739a20989826b71d41eede8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEM_USAGE_PEAK</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12a2cba3d75e069a65c429d80357fcd56ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aab80176f6de2f010f3fd9b5b0100a602</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7615f84135d16703af8cd9eae2707766</anchor>
      <arglist>(std::ostream &amp;s, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsage &amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pretty</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa3295fff1215db8294647c65d512cb0e</anchor>
      <arglist>(std::ostream &amp;s, size_t num)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8fd224b79bcba7bbe4cd3b7911a7b19</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getPeakRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aefb1e640b6a5c9a36e70c713f0ccd356</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getCurrentRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2195802fa96a4c6e8bff44328abf01b0</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>reduceMemUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac7fdb65f4f2f1ef6b49294aa1bdfcd26</anchor>
      <arglist>(size_t &amp;mem, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsageType &amp;type)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ModelEvaluator_8hpp" name="Panzer_ModelEvaluator.hpp" local="yes" imported="no">Panzer_ModelEvaluator.hpp</includes>
    <includes id="Panzer__ModelEvaluator__impl_8hpp" name="Panzer_ModelEvaluator_impl.hpp" local="yes" imported="no">Panzer_ModelEvaluator_impl.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateManager_8hpp" name="Panzer_AssemblyEngine_TemplateManager.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateManager.hpp</includes>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__ResponseMESupportBase_8hpp" name="Panzer_ResponseMESupportBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBase.hpp</includes>
    <includes id="Panzer__ResponseMESupportBuilderBase_8hpp" name="Panzer_ResponseMESupportBuilderBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBuilderBase.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="no" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">panzer::LinearObjFactory</class>
    <class kind="class">panzer::ModelEvaluator</class>
    <class kind="struct">panzer::ModelEvaluator::ParameterObject</class>
    <class kind="struct">panzer::ModelEvaluator::ResponseObject</class>
    <class kind="struct">panzer::ModelEvaluator::ResponseObject::SearchName</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator_Epetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator__Epetra_8cpp</filename>
    <includes id="Panzer__ModelEvaluator__Epetra_8hpp" name="Panzer_ModelEvaluator_Epetra.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Epetra.hpp</includes>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateBuilder_8hpp" name="Panzer_AssemblyEngine_TemplateBuilder.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateBuilder.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator_Epetra.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator__Epetra_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateManager_8hpp" name="Panzer_AssemblyEngine_TemplateManager.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateManager.hpp</includes>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__ResponseMESupportBase_8hpp" name="Panzer_ResponseMESupportBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBase.hpp</includes>
    <class kind="class">panzer::ModelEvaluator_Epetra</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; ModelEvaluator_Epetra &gt;</type>
      <name>buildEpetraME</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3079e39cf12f73242b888a4b0f8b5392</anchor>
      <arglist>(const Teuchos::RCP&lt; FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator_Factory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator__Factory_8hpp</filename>
    <includes id="Panzer__ModelEvaluator__Factory__impl_8hpp" name="Panzer_ModelEvaluator_Factory_impl.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Factory_impl.hpp</includes>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>buildModelEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a670964f24540a00e53cd383f1fa9e9ae</anchor>
      <arglist>(const RCP&lt; panzer::FieldManagerBuilder &amp;fmb, const RCP&lt; panzer::EpetraLinearObjFactory&lt; panzer::Traits, int &gt; &gt; &amp;lof)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator_Factory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator__Factory__impl_8hpp</filename>
    <includes id="Panzer__ModelEvaluator__Epetra_8hpp" name="Panzer_ModelEvaluator_Epetra.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Epetra.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>buildModelEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a670964f24540a00e53cd383f1fa9e9ae</anchor>
      <arglist>(const RCP&lt; panzer::FieldManagerBuilder &amp;fmb, const RCP&lt; panzer::EpetraLinearObjFactory&lt; panzer::Traits, int &gt; &gt; &amp;lof)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ModelEvaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ModelEvaluator__impl_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__AssemblyEngine_8hpp" name="Panzer_AssemblyEngine.hpp" local="yes" imported="no">Panzer_AssemblyEngine.hpp</includes>
    <includes id="Panzer__AssemblyEngine__InArgs_8hpp" name="Panzer_AssemblyEngine_InArgs.hpp" local="yes" imported="no">Panzer_AssemblyEngine_InArgs.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateBuilder_8hpp" name="Panzer_AssemblyEngine_TemplateBuilder.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateBuilder.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateManager_8hpp" name="Panzer_AssemblyEngine_TemplateManager.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateManager.hpp</includes>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
    <includes id="Panzer__EpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_EpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__LinearObjFactory__Utilities_8hpp" name="Panzer_LinearObjFactory_Utilities.hpp" local="yes" imported="no">Panzer_LinearObjFactory_Utilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_MultiVariateParameter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__MultiVariateParameter_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_MultiVariateParameter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__MultiVariateParameter__decl_8hpp</filename>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::ScalarParameterEntry</class>
    <class kind="class">panzer::MultiVariateParameter</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_MultiVariateParameter_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__MultiVariateParameter__impl_8hpp</filename>
    <includes id="Panzer__ScalarParameterEntry_8hpp" name="Panzer_ScalarParameterEntry.hpp" local="yes" imported="no">Panzer_ScalarParameterEntry.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Neumann_Residual.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Neumann__Residual_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Neumann_Residual_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Neumann__Residual__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Neumann_Residual_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Neumann__Residual__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad8d523d2e00ec9b419e0d37fd0489bcb</anchor>
      <arglist>(NeumannResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a997cf391c66ad54ae9b87557a42aed4a</anchor>
      <arglist>(NeumannResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a148230506ce3d1c858e4c35d12aa4db2</anchor>
      <arglist>(NeumannResidual, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_NodalFieldPattern.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__NodalFieldPattern_8cpp</filename>
    <includes id="Panzer__NodalFieldPattern_8hpp" name="Panzer_NodalFieldPattern.hpp" local="yes" imported="no">Panzer_NodalFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_NodalFieldPattern.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__NodalFieldPattern_8hpp</filename>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <class kind="class">panzer::NodalFieldPattern</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_NodeType.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__NodeType_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosDeviceWrapperNode&lt; PHX::Device &gt;</type>
      <name>TpetraNodeType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abccccd000ea6cf0ac6427576e791bb42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Normals.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Normals_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Normals_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Normals__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>side_id</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abbf7d47ecc9e4f4b51c2db59b3d83168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>normals</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af1b6ebbb435615e13d148f6162ac73ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5da91ca34bae41d4c05fc13ee68e1c2a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Normals_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Normals__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a07fa60da48176c561d68004ce4335f06</anchor>
      <arglist>(Normals, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a575ada5856d98421b9d85308bf604e4d</anchor>
      <arglist>(Normals, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abf62f93294f24cfdf32e68b82a4799e9</anchor>
      <arglist>(Normals, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_OrientationContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OrientationContainer_8hpp</filename>
    <includes id="Panzer__OrientationContainerBase_8hpp" name="Panzer_OrientationContainerBase.hpp" local="yes" imported="no">Panzer_OrientationContainerBase.hpp</includes>
    <includes id="Panzer__OrientationContainer__impl_8hpp" name="Panzer_OrientationContainer_impl.hpp" local="yes" imported="no">Panzer_OrientationContainer_impl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::OrientationContainer</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::OrientationContainerBase&lt; Scalar, Array &gt; &gt;</type>
      <name>buildOrientationContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a28457eebb6e2092cba945e1f956a231a</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const std::string &amp;fieldName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_OrientationContainer_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OrientationContainer__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrientationContainerBase&lt; Scalar, Array &gt; &gt;</type>
      <name>buildOrientationContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab86efc87bd69dfa690f2f380ce87509c</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const std::string &amp;fieldName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_OrientationContainerBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OrientationContainerBase_8hpp</filename>
    <class kind="class">panzer::OrientationContainerBase</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_OutputStream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OutputStream_8hpp</filename>
    <class kind="class">panzer::OutputStream</class>
    <namespace>panzer</namespace>
    <member kind="enumeration">
      <type></type>
      <name>EVerbosityLevel</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_NONE</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efaf4c78c85b117918fec2107ce441c2c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_LOW</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efa4858c5cbe8e1cdce53cf9f45f0e657a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_MEDIUM</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efaf3f265cbdf3ae50a4e0180675ccb3825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_HIGH</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efac2ffbd662f5ca81c8dce40cdec7cd141</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_EXTREME</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efa0d314ec6e80dddea7bf929c52c4bfd3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_OutputStream_DefaultImpl.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OutputStream__DefaultImpl_8cpp</filename>
    <includes id="Panzer__OutputStream__DefaultImpl_8hpp" name="Panzer_OutputStream_DefaultImpl.hpp" local="yes" imported="no">Panzer_OutputStream_DefaultImpl.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_OutputStream_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__OutputStream__DefaultImpl_8hpp</filename>
    <includes id="Panzer__OutputStream_8hpp" name="Panzer_OutputStream.hpp" local="yes" imported="no">Panzer_OutputStream.hpp</includes>
    <class kind="class">panzer::OutputStreamDefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PAPI_Counter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/papi/</path>
    <filename>Panzer__PAPI__Counter_8cpp</filename>
    <includes id="Panzer__PAPI__Counter_8hpp" name="Panzer_PAPI_Counter.hpp" local="yes" imported="no">Panzer_PAPI_Counter.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PAPI_Counter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/papi/</path>
    <filename>Panzer__PAPI__Counter_8hpp</filename>
    <class kind="class">panzer::PAPICounter</class>
    <class kind="struct">panzer::PAPICounter::InternalCounter</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PAPI_Counter2.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/papi/</path>
    <filename>Panzer__PAPI__Counter2_8cpp</filename>
    <includes id="Panzer__PAPI__Counter2_8hpp" name="Panzer_PAPI_Counter2.hpp" local="yes" imported="no">Panzer_PAPI_Counter2.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PAPI_Counter2.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/papi/</path>
    <filename>Panzer__PAPI__Counter2_8hpp</filename>
    <class kind="class">panzer::PAPICounter2</class>
    <class kind="struct">panzer::PAPICounter2::InternalCounter2</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Parameter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Parameter_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Parameter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Parameter__decl_8hpp</filename>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::ScalarParameterEntry</class>
    <class kind="class">panzer::Parameter</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Parameter_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Parameter__impl_8hpp</filename>
    <includes id="Panzer__ScalarParameterEntry_8hpp" name="Panzer_ScalarParameterEntry.hpp" local="yes" imported="no">Panzer_ScalarParameterEntry.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibrary.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibrary_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__EvaluationTraits_8hpp" name="Panzer_EvaluationTraits.hpp" local="yes" imported="no">Panzer_EvaluationTraits.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>Sacado::ScalarParameterLibrary&lt; panzer::EvaluationTraits &gt;</type>
      <name>ParamLib</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeb4f6068664e1d39e43c1574de099f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sacado::ScalarParameterVector&lt; panzer::EvaluationTraits &gt;</type>
      <name>ParamVec</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaa54d8ad3ec6aafbdc08cf1ea705b7ad</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibraryAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibraryAcceptor_8hpp</filename>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <class kind="class">panzer::ParameterLibraryAcceptor</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibraryAcceptor_DefaultImpl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibraryAcceptor__DefaultImpl_8hpp</filename>
    <includes id="Panzer__ParameterLibraryAcceptor_8hpp" name="Panzer_ParameterLibraryAcceptor.hpp" local="yes" imported="no">Panzer_ParameterLibraryAcceptor.hpp</includes>
    <class kind="class">panzer::ParameterLibraryAcceptor_DefaultImpl</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibraryUtilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibraryUtilities_8cpp</filename>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_PARAMETER_LIBRARY_UTILITIES_CPP</name>
      <anchorfile>Panzer__ParameterLibraryUtilities_8cpp.html</anchorfile>
      <anchor>a3463659029a0b0190693990a675be11e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>acc3c5a54466e2c398598656bcb3451c0</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl, double realValue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibraryUtilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibraryUtilities_8hpp</filename>
    <includes id="Panzer__ParameterLibrary_8hpp" name="Panzer_ParameterLibrary.hpp" local="yes" imported="no">Panzer_ParameterLibrary.hpp</includes>
    <includes id="Panzer__ScalarParameterEntry_8hpp" name="Panzer_ScalarParameterEntry.hpp" local="yes" imported="no">Panzer_ScalarParameterEntry.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities__impl_8hpp" name="Panzer_ParameterLibraryUtilities_impl.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities_impl.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>accessScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a904de281f4ec82341c82ede44b4e247a</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>acc3c5a54466e2c398598656bcb3451c0</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl, double realValue)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterLibraryUtilities_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterLibraryUtilities__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>createAndRegisterScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a15a7ed4d85aea088be12058a22ef3db3</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>accessScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a904de281f4ec82341c82ede44b4e247a</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ParameterList_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ParameterList__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::ParameterList_GlobalEvaluationData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PauseToAttach.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PauseToAttach_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>pauseToAttach</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a61db1a49606c4c12072deb0a91c94c44</anchor>
      <arglist>(MPI_Comm mpicomm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseToAttach</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a35abc1824bd0f6ac5b60bbf0291ec37d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_PhysicsBlock.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PhysicsBlock_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_PhysicsBlock.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PhysicsBlock_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__EquationSet_8hpp" name="Panzer_EquationSet.hpp" local="yes" imported="no">Panzer_EquationSet.hpp</includes>
    <includes id="Panzer__EquationSet__TemplateManager_8hpp" name="Panzer_EquationSet_TemplateManager.hpp" local="yes" imported="no">Panzer_EquationSet_TemplateManager.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__FieldLibrary_8hpp" name="Panzer_FieldLibrary.hpp" local="yes" imported="no">Panzer_FieldLibrary.hpp</includes>
    <includes id="Panzer__EvaluatorsRegistrar_8hpp" name="Panzer_EvaluatorsRegistrar.hpp" local="yes" imported="no">Panzer_EvaluatorsRegistrar.hpp</includes>
    <class kind="class">panzer::PhysicsBlock</class>
    <namespace>Teuchos</namespace>
    <namespace>shards</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PointRule.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PointRule_8cpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_PointRule.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PointRule_8hpp</filename>
    <class kind="class">panzer::PointRule</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues2.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PointValues2_8cpp</filename>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <includes id="Panzer__PointValues2__impl_8hpp" name="Panzer_PointValues2_impl.hpp" local="yes" imported="no">Panzer_PointValues2_impl.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>POINT_VALUES_INSTANTIATION</name>
      <anchorfile>Panzer__PointValues2_8cpp.html</anchorfile>
      <anchor>a40eff13a03481820b7d44b19801a527c</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>POINT_VALUES_INSTANTIATION2</name>
      <anchorfile>Panzer__PointValues2_8cpp.html</anchorfile>
      <anchor>a55210368603e0249a2a92a74afed330a</anchor>
      <arglist>(SCALAR, SCALAR2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues2.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PointValues2_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__ArrayTraits_8hpp" name="Panzer_ArrayTraits.hpp" local="yes" imported="no">Panzer_ArrayTraits.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__PointValues2__impl_8hpp" name="Panzer_PointValues2_impl.hpp" local="yes" imported="no">Panzer_PointValues2_impl.hpp</includes>
    <class kind="struct">panzer::PointValues2</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues2_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PointValues2__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues_Evaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__PointValues__Evaluator_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues_Evaluator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__PointValues__Evaluator__decl_8hpp</filename>
    <includes id="Panzer__PointValues2_8hpp" name="Panzer_PointValues2.hpp" local="yes" imported="no">Panzer_PointValues2.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a76f9ee8d022711e4f06cb99aa707e51a</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::Ptr&lt; const ArrayT &gt; &amp;userArray, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;pureBasis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8f593288c669674012caf702da974687</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;userArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a388e77043ea0ed04436d05269d6d79d4</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const PHX::MDField&lt; double, panzer::IP, panzer::Dim &gt; &amp;userArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8e1ec3b308c486f4c22aaf5de6edda0</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;pureBasis)</arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>refPointArray</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3326a24ece850a3e527ac88a64cd15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useBasisValuesRefArray</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afc4c97a08a2d303de017ba7e65d76c92</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_PointValues_Evaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__PointValues__Evaluator__impl_8hpp</filename>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>accd6727c6f9b8edcd04bd0cc350a7993</anchor>
      <arglist>(PointValues_Evaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7a9e444b73aa9f4290568353fcbdf2b7</anchor>
      <arglist>(PointValues_Evaluator, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8a8b815a2c44d6e2de72d1b06940fefe</anchor>
      <arglist>(PointValues_Evaluator, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Product.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Product_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Product_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Product__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>double</type>
      <name>scaling</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2bd2217e985d1c5a5e6cb371d3775513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>product</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae021c221a0de086d57ac8eb5e1228373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Product_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Product__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8eb7292848b44d5e3d03c4ada84b25e7</anchor>
      <arglist>(Product, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a53291f36dc93f65a66de18c2a64ac45c</anchor>
      <arglist>(Product, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3dcf50304701858c684028184dcdcd28</anchor>
      <arglist>(Product, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToEdges.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToEdges_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ProjectToEdges__decl_8hpp" name="Panzer_ProjectToEdges_decl.hpp" local="yes" imported="no">Panzer_ProjectToEdges_decl.hpp</includes>
    <includes id="Panzer__ProjectToEdges__impl_8hpp" name="Panzer_ProjectToEdges_impl.hpp" local="yes" imported="no">Panzer_ProjectToEdges_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToEdges_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToEdges__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <class kind="class">panzer::ProjectToEdges</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToEdges_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToEdges__impl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToFaces.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToFaces_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ProjectToFaces__decl_8hpp" name="Panzer_ProjectToFaces_decl.hpp" local="yes" imported="no">Panzer_ProjectToFaces_decl.hpp</includes>
    <includes id="Panzer__ProjectToFaces__impl_8hpp" name="Panzer_ProjectToFaces_impl.hpp" local="yes" imported="no">Panzer_ProjectToFaces_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToFaces_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToFaces__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <class kind="class">panzer::ProjectToFaces</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ProjectToFaces_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ProjectToFaces__impl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_PtrFromStlVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PtrFromStlVector_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>T *</type>
      <name>ptrFromStlVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af1dc018e835f182a012430c46f9b6cf9</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_PureBasis.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PureBasis_8cpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__IntrepidBasisFactory_8hpp" name="Panzer_IntrepidBasisFactory.hpp" local="yes" imported="no">Panzer_IntrepidBasisFactory.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_PureBasis.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__PureBasis_8hpp</filename>
    <includes id="Panzer__IntrepidBasisFactory_8hpp" name="Panzer_IntrepidBasisFactory.hpp" local="yes" imported="no">Panzer_IntrepidBasisFactory.hpp</includes>
    <class kind="class">panzer::PureBasis</class>
    <class kind="struct">panzer::StrPureBasisComp</class>
    <namespace>panzer</namespace>
    <member kind="typedef">
      <type>std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt;</type>
      <name>StrPureBasisPair</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa21a2913d458cd65171b772ce9bd5204</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ReadOnlyVector_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ReadOnlyVector__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::ReadOnlyVector_GlobalEvaluationData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ReorderADValues_Evaluator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ReorderADValues__Evaluator_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ReorderADValues_Evaluator_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ReorderADValues__Evaluator__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::ReorderADValues_Evaluator</class>
    <class kind="class">panzer::ReorderADValues_Evaluator&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ReorderADValues_Evaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ReorderADValues__Evaluator__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_ExtremeValue.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__ExtremeValue_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Response__ExtremeValue_8hpp" name="Panzer_Response_ExtremeValue.hpp" local="yes" imported="no">Panzer_Response_ExtremeValue.hpp</includes>
    <includes id="Panzer__Response__ExtremeValue__impl_8hpp" name="Panzer_Response_ExtremeValue_impl.hpp" local="yes" imported="no">Panzer_Response_ExtremeValue_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_ExtremeValue.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__ExtremeValue_8hpp</filename>
    <includes id="Panzer__ResponseMESupport__Default_8hpp" name="Panzer_ResponseMESupport_Default.hpp" local="yes" imported="no">Panzer_ResponseMESupport_Default.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <class kind="class">panzer::Response_ExtremeValue</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_ExtremeValue_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__ExtremeValue__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Functional.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Functional_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Response__Functional_8hpp" name="Panzer_Response_Functional.hpp" local="yes" imported="no">Panzer_Response_Functional.hpp</includes>
    <includes id="Panzer__Response__Functional__impl_8hpp" name="Panzer_Response_Functional_impl.hpp" local="yes" imported="no">Panzer_Response_Functional_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Functional.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Functional_8hpp</filename>
    <includes id="Panzer__ResponseMESupport__Default_8hpp" name="Panzer_ResponseMESupport_Default.hpp" local="yes" imported="no">Panzer_ResponseMESupport_Default.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <class kind="class">panzer::Response_Functional</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Functional_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Functional__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_IPCoordinates.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__IPCoordinates_8hpp</filename>
    <includes id="Panzer__ResponseMESupport__Default_8hpp" name="Panzer_ResponseMESupport_Default.hpp" local="yes" imported="no">Panzer_ResponseMESupport_Default.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::Response_IPCoordinates</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Probe.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Probe_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Response__Probe_8hpp" name="Panzer_Response_Probe.hpp" local="yes" imported="no">Panzer_Response_Probe.hpp</includes>
    <includes id="Panzer__Response__Probe__impl_8hpp" name="Panzer_Response_Probe_impl.hpp" local="yes" imported="no">Panzer_Response_Probe_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Probe.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Probe_8hpp</filename>
    <includes id="Panzer__ResponseMESupport__Default_8hpp" name="Panzer_ResponseMESupport_Default.hpp" local="yes" imported="no">Panzer_ResponseMESupport_Default.hpp</includes>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <class kind="class">panzer::Response_Probe</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Probe_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Probe__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Residual.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Residual_8cpp</filename>
    <includes id="Panzer__Response__Residual_8hpp" name="Panzer_Response_Residual.hpp" local="yes" imported="no">Panzer_Response_Residual.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Response_Residual.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__Response__Residual_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <class kind="class">panzer::Response_Residual</class>
    <class kind="class">panzer::Response_Residual&lt; panzer::Traits::Residual &gt;</class>
    <class kind="class">panzer::Response_Residual&lt; panzer::Traits::Jacobian &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseBase_8hpp</filename>
    <includes id="Panzer__GlobalEvaluationData_8hpp" name="Panzer_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::ResponseBase</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactoryBase_8hpp" name="Panzer_ResponseEvaluatorFactoryBase.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactoryBase.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_ExtremeValue.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__ExtremeValue_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ResponseMESupportBuilderBase_8hpp" name="Panzer_ResponseMESupportBuilderBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBuilderBase.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory__ExtremeValue__impl_8hpp" name="Panzer_ResponseEvaluatorFactory_ExtremeValue_impl.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory_ExtremeValue_impl.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory_ExtremeValue</class>
    <class kind="struct">panzer::ExtremeValueResponse_Builder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_ExtremeValue_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__ExtremeValue__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__CellExtreme_8hpp" name="Panzer_CellExtreme.hpp" local="yes" imported="no">Panzer_CellExtreme.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__ExtremeValue_8hpp" name="Panzer_ResponseScatterEvaluator_ExtremeValue.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_ExtremeValue.hpp</includes>
    <includes id="Panzer__Response__ExtremeValue_8hpp" name="Panzer_Response_ExtremeValue.hpp" local="yes" imported="no">Panzer_Response_ExtremeValue.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_Functional.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__Functional_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ResponseMESupportBuilderBase_8hpp" name="Panzer_ResponseMESupportBuilderBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBuilderBase.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory__Functional__impl_8hpp" name="Panzer_ResponseEvaluatorFactory_Functional_impl.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory_Functional_impl.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory_Functional</class>
    <class kind="struct">panzer::FunctionalResponse_Builder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_Functional_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__Functional__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Functional_8hpp" name="Panzer_ResponseScatterEvaluator_Functional.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Functional.hpp</includes>
    <includes id="Panzer__Response__Functional_8hpp" name="Panzer_Response_Functional.hpp" local="yes" imported="no">Panzer_Response_Functional.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_IPCoordinates.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__IPCoordinates_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory__IPCoordinates__impl_8hpp" name="Panzer_ResponseEvaluatorFactory_IPCoordinates_impl.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory_IPCoordinates_impl.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory_IPCoordinates</class>
    <class kind="struct">panzer::ResponseEvaluatorFactory_IPCoordinates_Builder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_IPCoordinates_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__IPCoordinates__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__IPCoordinates_8hpp" name="Panzer_ResponseScatterEvaluator_IPCoordinates.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_IPCoordinates.hpp</includes>
    <includes id="Panzer__Response__IPCoordinates_8hpp" name="Panzer_Response_IPCoordinates.hpp" local="yes" imported="no">Panzer_Response_IPCoordinates.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_Probe.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__Probe_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ResponseMESupportBuilderBase_8hpp" name="Panzer_ResponseMESupportBuilderBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBuilderBase.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory__Probe__impl_8hpp" name="Panzer_ResponseEvaluatorFactory_Probe_impl.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory_Probe_impl.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory_Probe</class>
    <class kind="struct">panzer::ProbeResponse_Builder</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_Probe_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__Probe__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__CellExtreme_8hpp" name="Panzer_CellExtreme.hpp" local="yes" imported="no">Panzer_CellExtreme.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Probe_8hpp" name="Panzer_ResponseScatterEvaluator_Probe.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Probe.hpp</includes>
    <includes id="Panzer__Response__Probe_8hpp" name="Panzer_Response_Probe.hpp" local="yes" imported="no">Panzer_Response_Probe.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactory_TemplateManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactory__TemplateManager_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactory_TemplateManager</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseEvaluatorFactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseEvaluatorFactoryBase_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__WorksetDescriptor_8hpp" name="Panzer_WorksetDescriptor.hpp" local="yes" imported="no">Panzer_WorksetDescriptor.hpp</includes>
    <includes id="Panzer__EvaluatorsRegistrar_8hpp" name="Panzer_EvaluatorsRegistrar.hpp" local="yes" imported="no">Panzer_EvaluatorsRegistrar.hpp</includes>
    <class kind="class">panzer::ResponseEvaluatorFactoryBase</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseFactory_BCStrategyAdapter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseFactory__BCStrategyAdapter_8hpp</filename>
    <includes id="Panzer__BCStrategy__Factory_8hpp" name="Panzer_BCStrategy_Factory.hpp" local="yes" imported="no">Panzer_BCStrategy_Factory.hpp</includes>
    <includes id="Panzer__BCStrategy__TemplateManager_8hpp" name="Panzer_BCStrategy_TemplateManager.hpp" local="yes" imported="no">Panzer_BCStrategy_TemplateManager.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <class kind="class">panzer::response_bc_adapters::ResponseFactory_BCStrategyAdapter</class>
    <class kind="class">panzer::response_bc_adapters::BCStrategy_TM_ResponseAdapterBuilder</class>
    <class kind="class">panzer::response_bc_adapters::BCFactoryResponse</class>
    <namespace>panzer</namespace>
    <namespace>panzer::response_bc_adapters</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseLibrary.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseLibrary_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__AssemblyEngine__InArgs_8hpp" name="Panzer_AssemblyEngine_InArgs.hpp" local="yes" imported="no">Panzer_AssemblyEngine_InArgs.hpp</includes>
    <includes id="Panzer__AssemblyEngine__TemplateManager_8hpp" name="Panzer_AssemblyEngine_TemplateManager.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateManager.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <includes id="Panzer__WorksetDescriptor_8hpp" name="Panzer_WorksetDescriptor.hpp" local="yes" imported="no">Panzer_WorksetDescriptor.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__TypeAssocMap_8hpp" name="Panzer_TypeAssocMap.hpp" local="yes" imported="no">Panzer_TypeAssocMap.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory__TemplateManager_8hpp" name="Panzer_ResponseEvaluatorFactory_TemplateManager.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory_TemplateManager.hpp</includes>
    <includes id="Panzer__ResponseLibrary__impl_8hpp" name="Panzer_ResponseLibrary_impl.hpp" local="yes" imported="no">Panzer_ResponseLibrary_impl.hpp</includes>
    <class kind="class">panzer::ResponseContainerBase</class>
    <class kind="class">panzer::ResponseContainer</class>
    <class kind="class">panzer::ResponseLibrary</class>
    <class kind="struct">panzer::ResponseLibrary::Overloader</class>
    <class kind="struct">panzer::ResponseLibrary::Printer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseLibrary_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseLibrary__impl_8hpp</filename>
    <includes id="Panzer__AssemblyEngine__TemplateBuilder_8hpp" name="Panzer_AssemblyEngine_TemplateBuilder.hpp" local="yes" imported="no">Panzer_AssemblyEngine_TemplateBuilder.hpp</includes>
    <includes id="Panzer__ResponseFactory__BCStrategyAdapter_8hpp" name="Panzer_ResponseFactory_BCStrategyAdapter.hpp" local="yes" imported="no">Panzer_ResponseFactory_BCStrategyAdapter.hpp</includes>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__Response__Residual_8hpp" name="Panzer_Response_Residual.hpp" local="yes" imported="no">Panzer_Response_Residual.hpp</includes>
    <class kind="class">panzer::RVEF2</class>
    <namespace>panzer</namespace>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; TraitsT &gt; &gt;</type>
      <name>respFact_</name>
      <anchorfile>Panzer__ResponseLibrary__impl_8hpp.html</anchorfile>
      <anchor>a8826be3b3c17de63445ab6e3d7acb8c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>respName_</name>
      <anchorfile>Panzer__ResponseLibrary__impl_8hpp.html</anchorfile>
      <anchor>a0f57c6c0622f0d14e3ebe9b11626ac98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; WorksetDescriptor &gt;</type>
      <name>wkstDesc_</name>
      <anchorfile>Panzer__ResponseLibrary__impl_8hpp.html</anchorfile>
      <anchor>a402268a5caffb1b83b7e8f05750f1055</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt;</type>
      <name>lof_</name>
      <anchorfile>Panzer__ResponseLibrary__impl_8hpp.html</anchorfile>
      <anchor>ae8a1fcce12ee7c986a449c2ab3629c93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseMESupport_Default.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseMESupport__Default_8hpp</filename>
    <includes id="Panzer__ResponseMESupportBase_8hpp" name="Panzer_ResponseMESupportBase.hpp" local="yes" imported="no">Panzer_ResponseMESupportBase.hpp</includes>
    <includes id="Panzer__ResponseMESupport__Default__impl_8hpp" name="Panzer_ResponseMESupport_Default_impl.hpp" local="yes" imported="no">Panzer_ResponseMESupport_Default_impl.hpp</includes>
    <class kind="class">panzer::ResponseMESupport_Default</class>
    <class kind="class">panzer::ResponseMESupport_Default&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="class">panzer::ResponseMESupport_Default&lt; panzer::Traits::Tangent &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseMESupport_Default_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseMESupport__Default__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseMESupportBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseMESupportBase_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <class kind="class">panzer::ResponseMESupportBase</class>
    <class kind="class">panzer::ResponseMESupportBase&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="class">panzer::ResponseMESupportBase&lt; panzer::Traits::Tangent &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseMESupportBuilderBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseMESupportBuilderBase_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <class kind="class">panzer::ResponseMESupportBuilderBase</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Residual &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac4b78d2f1420b0ec7c41d2ab89ff5e46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Jacobian &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a944a1e7d5acbde0cd2938736abf536b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Tangent &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a51abeea67ae9967a88568c1022c497c5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__impl_8hpp" name="Panzer_ResponseScatterEvaluator_impl.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_impl.hpp</includes>
    <class kind="class">panzer::ResponseScatterEvaluator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_ExtremeValue.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__ExtremeValue_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__ExtremeValue_8hpp" name="Panzer_ResponseScatterEvaluator_ExtremeValue.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_ExtremeValue.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__ExtremeValue__impl_8hpp" name="Panzer_ResponseScatterEvaluator_ExtremeValue_impl.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_ExtremeValue_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_ExtremeValue.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__ExtremeValue_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__Response__ExtremeValue_8hpp" name="Panzer_Response_ExtremeValue.hpp" local="yes" imported="no">Panzer_Response_ExtremeValue.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::ExtremeValueScatterBase</class>
    <class kind="class">panzer::ExtremeValueScatter</class>
    <class kind="class">panzer::ResponseScatterEvaluator_ExtremeValue</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_ExtremeValue_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__ExtremeValue__impl_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Functional.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Functional_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Functional_8hpp" name="Panzer_ResponseScatterEvaluator_Functional.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Functional.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Functional__impl_8hpp" name="Panzer_ResponseScatterEvaluator_Functional_impl.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Functional_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Functional.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Functional_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__Response__Functional_8hpp" name="Panzer_Response_Functional.hpp" local="yes" imported="no">Panzer_Response_Functional.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::FunctionalScatterBase</class>
    <class kind="class">panzer::FunctionalScatter</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Functional</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Functional_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Functional__impl_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__impl_8hpp</filename>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_IPCoordinates.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__IPCoordinates_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__Response__IPCoordinates_8hpp" name="Panzer_Response_IPCoordinates.hpp" local="yes" imported="no">Panzer_Response_IPCoordinates.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__IPCoordinates__impl_8hpp" name="Panzer_ResponseScatterEvaluator_IPCoordinates_impl.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_IPCoordinates_impl.hpp</includes>
    <class kind="class">panzer::ResponseScatterEvaluator_IPCoordinates</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_IPCoordinates_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__IPCoordinates__impl_8hpp</filename>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Probe.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Probe_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Probe_8hpp" name="Panzer_ResponseScatterEvaluator_Probe.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Probe.hpp</includes>
    <includes id="Panzer__ResponseScatterEvaluator__Probe__impl_8hpp" name="Panzer_ResponseScatterEvaluator_Probe_impl.hpp" local="yes" imported="no">Panzer_ResponseScatterEvaluator_Probe_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Probe.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Probe_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__Response__Probe_8hpp" name="Panzer_Response_Probe.hpp" local="yes" imported="no">Panzer_Response_Probe.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::ProbeScatterBase</class>
    <class kind="class">panzer::ProbeScatter</class>
    <class kind="class">panzer::ResponseScatterEvaluator_ProbeBase</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Probe</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Probe&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ResponseScatterEvaluator_Probe_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/responses/</path>
    <filename>Panzer__ResponseScatterEvaluator__Probe__impl_8hpp</filename>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__ResponseBase_8hpp" name="Panzer_ResponseBase.hpp" local="yes" imported="no">Panzer_ResponseBase.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScalarParameterEntry.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ScalarParameterEntry_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__EvaluationTraits_8hpp" name="Panzer_EvaluationTraits.hpp" local="yes" imported="no">Panzer_EvaluationTraits.hpp</includes>
    <class kind="class">panzer::ScalarParameterEntry</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScalarToVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScalarToVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScalarToVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScalarToVector__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="typedef" protection="protected">
      <type>Kokkos::View&lt; ScalarT ** &gt;</type>
      <name>KokkosScalarFields_t</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a88f9e414f7fa31a96a67c2cd6d9115bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb14dab8c4182cb9ac0cbd0c6ad8e151</anchor>
      <arglist>(const size_t &amp;cell) const </arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, Point &gt; &gt;</type>
      <name>scalar_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a74b8ffb5f37f75a68ea9ab2f60e1d2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>vector_field</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2d4d185bd6131bcba52dce93bf3c8ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kokkos::View&lt; KokkosScalarFields_t * &gt;</type>
      <name>internal_scalar_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb01549d579afc3b3c76924643f4569d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ScalarToVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScalarToVector__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa5b6801e52f1e5b4aaec691625bf0fcb</anchor>
      <arglist>(ScalarToVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae4983eea9d6aa600518ba47e3a05dad2</anchor>
      <arglist>(ScalarToVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6982706c915e06e1e99ea96d2f79f3f3</anchor>
      <arglist>(ScalarToVector, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedEpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedEpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__BlockedEpetra__decl_8hpp" name="Panzer_ScatterDirichletResidual_BlockedEpetra_decl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_BlockedEpetra_decl.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__BlockedEpetra__impl_8hpp" name="Panzer_ScatterDirichletResidual_BlockedEpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_BlockedEpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedEpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedEpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">Thyra::BlockedLinearOpBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedEpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedEpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedEpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedEpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedEpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedEpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedTpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedTpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__BlockedTpetra_8hpp" name="Panzer_ScatterDirichletResidual_BlockedTpetra.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_BlockedTpetra.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__BlockedTpetra__impl_8hpp" name="Panzer_ScatterDirichletResidual_BlockedTpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_BlockedTpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedTpetra.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedTpetra_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedTpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedTpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedTpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedTpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_BlockedTpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__BlockedTpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Epetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Epetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__Epetra__decl_8hpp" name="Panzer_ScatterDirichletResidual_Epetra_decl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_Epetra_decl.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__Epetra__impl_8hpp" name="Panzer_ScatterDirichletResidual_Epetra_impl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_Epetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Epetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Epetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Epetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Epetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Epetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Epetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Epetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Epetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Tpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Tpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__Tpetra__decl_8hpp" name="Panzer_ScatterDirichletResidual_Tpetra_decl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_Tpetra_decl.hpp</includes>
    <includes id="Panzer__ScatterDirichletResidual__Tpetra__impl_8hpp" name="Panzer_ScatterDirichletResidual_Tpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterDirichletResidual_Tpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Tpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Tpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Tpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Tpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Tpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Tpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterDirichletResidual_Tpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterDirichletResidual__Tpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedEpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedEpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ScatterResidual__BlockedEpetra__decl_8hpp" name="Panzer_ScatterResidual_BlockedEpetra_decl.hpp" local="yes" imported="no">Panzer_ScatterResidual_BlockedEpetra_decl.hpp</includes>
    <includes id="Panzer__ScatterResidual__BlockedEpetra__impl_8hpp" name="Panzer_ScatterResidual_BlockedEpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterResidual_BlockedEpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedEpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedEpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">Thyra::BlockedLinearOpBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedEpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedEpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedEpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedEpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedEpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedEpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjContainer_8hpp" name="Panzer_BlockedEpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedTpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedTpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ScatterResidual__BlockedTpetra_8hpp" name="Panzer_ScatterResidual_BlockedTpetra.hpp" local="yes" imported="no">Panzer_ScatterResidual_BlockedTpetra.hpp</includes>
    <includes id="Panzer__ScatterResidual__BlockedTpetra__impl_8hpp" name="Panzer_ScatterResidual_BlockedTpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterResidual_BlockedTpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedTpetra.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedTpetra_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedTpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedTpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedTpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedTpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_BlockedTpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__BlockedTpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjContainer_8hpp" name="Panzer_BlockedTpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Epetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Epetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__ScatterResidual__Epetra__decl_8hpp" name="Panzer_ScatterResidual_Epetra_decl.hpp" local="yes" imported="no">Panzer_ScatterResidual_Epetra_decl.hpp</includes>
    <includes id="Panzer__ScatterResidual__Epetra__impl_8hpp" name="Panzer_ScatterResidual_Epetra_impl.hpp" local="yes" imported="no">Panzer_ScatterResidual_Epetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Epetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Epetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::ScatterResidual_Epetra</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Epetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Epetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Epetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Epetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Epetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Epetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__PtrFromStlVector_8hpp" name="Panzer_PtrFromStlVector.hpp" local="yes" imported="no">Panzer_PtrFromStlVector.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Tpetra.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Tpetra_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ScatterResidual__Tpetra__decl_8hpp" name="Panzer_ScatterResidual_Tpetra_decl.hpp" local="yes" imported="no">Panzer_ScatterResidual_Tpetra_decl.hpp</includes>
    <includes id="Panzer__ScatterResidual__Tpetra__impl_8hpp" name="Panzer_ScatterResidual_Tpetra_impl.hpp" local="yes" imported="no">Panzer_ScatterResidual_Tpetra_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Tpetra_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Tpetra__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::ScatterResidual_Tpetra</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Tpetra_Hessian.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Tpetra__Hessian_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Tpetra_Hessian_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Tpetra__Hessian__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_ScatterResidual_Tpetra_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__ScatterResidual__Tpetra__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__LOCPair__GlobalEvaluationData_8hpp" name="Panzer_LOCPair_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_LOCPair_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ParameterList__GlobalEvaluationData_8hpp" name="Panzer_ParameterList_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ParameterList_GlobalEvaluationData.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>bool</type>
      <name>fillResidual</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>aeaef194fbb755995d16f936367eb2c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; double **, Kokkos::LayoutLeft, PHX::Device &gt;</type>
      <name>r_data</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>af0a66c6ecc7c5495108af4601ef95469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>LocalMatrixT</type>
      <name>jac</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>a565362aeb357bf5670a1131514095e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const LO **, PHX::Device &gt;</type>
      <name>lids</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>ad5f30848f98e8f68b4f7950c63f347a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>a14f0fecdbfd0e057ff2c0c61fe7e30ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>FieldType</type>
      <name>field</name>
      <anchorfile>Panzer__ScatterResidual__Tpetra__impl_8hpp.html</anchorfile>
      <anchor>ad69f39566b402fb54e10d8159bc44176</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Shards_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Shards__Utilities_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>unsigned</type>
      <name>getLocalSideIndexFromGlobalNodeList</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae9d1b374844b5202a3b87a8546824c52</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const ArraySideGIDs &amp;sideGIDs, const shards::CellTopology &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getLocalSubcellIndexFromGlobalNodeList</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad435fc53a16a61f7828dc40cb80c2494</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const ArraySideGIDs &amp;subcellGIDs, const shards::CellTopology &amp;cell, unsigned subcell_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalSubcellMapFromGlobalNodeLists</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8b363eb895661064a0518c72330a12a</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const std::vector&lt; ArraySubcellGIDs &gt; &amp;subcellGIDs, const shards::CellTopology &amp;cell, unsigned subcell_dim, std::vector&lt; unsigned &gt; &amp;subcellMap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CubeHexMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CubeHexMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__CubeHexMeshFactory_8hpp" name="Panzer_STK_CubeHexMeshFactory.hpp" local="no" imported="no">Panzer_STK_CubeHexMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CubeHexMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CubeHexMeshFactory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="no" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::CubeHexMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CubeTetMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CubeTetMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__CubeTetMeshFactory_8hpp" name="Panzer_STK_CubeTetMeshFactory.hpp" local="no" imported="no">Panzer_STK_CubeTetMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CubeTetMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CubeTetMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::CubeTetMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CustomMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CustomMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__CustomMeshFactory_8hpp" name="Panzer_STK_CustomMeshFactory.hpp" local="no" imported="no">Panzer_STK_CustomMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_CustomMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__CustomMeshFactory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="no" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::CustomMeshFactory</class>
    <class kind="struct">panzer_stk::CustomMeshFactory::FieldContainer</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ExodusReaderFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__ExodusReaderFactory_8cpp</filename>
    <includes id="Panzer__STK__ExodusReaderFactory_8hpp" name="Panzer_STK_ExodusReaderFactory.hpp" local="yes" imported="no">Panzer_STK_ExodusReaderFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ExodusReaderFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__ExodusReaderFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="yes" imported="no">Panzer_STK_MeshFactory.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherFields.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherFields_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherFields_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherFields__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer_stk::GatherFields</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherFields_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherFields__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherRefCoords.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherRefCoords_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__STK__GatherRefCoords_8hpp" name="Panzer_STK_GatherRefCoords.hpp" local="yes" imported="no">Panzer_STK_GatherRefCoords.hpp</includes>
    <includes id="Panzer__STK__GatherRefCoords__impl_8hpp" name="Panzer_STK_GatherRefCoords_impl.hpp" local="yes" imported="no">Panzer_STK_GatherRefCoords_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherRefCoords.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherRefCoords_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer_stk::GatherRefCoords</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_GatherRefCoords_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__GatherRefCoords__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Interface.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__Interface_8cpp</filename>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__PeriodicBC__Matcher_8hpp" name="Panzer_STK_PeriodicBC_Matcher.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Matcher.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; ElementDescriptor &gt;</type>
      <name>buildElementDescriptor</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ace397f2edb3360f6559a49a3c67522b5</anchor>
      <arglist>(stk::mesh::EntityId elmtId, std::vector&lt; stk::mesh::EntityId &gt; &amp;nodes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Interface.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__Interface_8hpp</filename>
    <class kind="class">panzer_stk::ElementDescriptor</class>
    <class kind="class">panzer_stk::STK_Interface</class>
    <class kind="struct">panzer_stk::STK_Interface::ElementBlockException</class>
    <class kind="struct">panzer_stk::STK_Interface::SidesetException</class>
    <class kind="class">panzer_stk::STK_Interface::LocalIdCompare</class>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; ElementDescriptor &gt;</type>
      <name>buildElementDescriptor</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ace397f2edb3360f6559a49a3c67522b5</anchor>
      <arglist>(stk::mesh::EntityId elmtId, std::vector&lt; stk::mesh::EntityId &gt; &amp;nodes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_IOClosureModel_Factory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__IOClosureModel__Factory_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_IOClosureModel_Factory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__IOClosureModel__Factory__decl_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory_8hpp" name="Panzer_ClosureModel_Factory.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::IOClosureModelFactory</class>
    <namespace>panzer</namespace>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_IOClosureModel_Factory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__IOClosureModel__Factory__impl_8hpp</filename>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_IOClosureModel_Factory_TemplateBuilder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__IOClosureModel__Factory__TemplateBuilder_8hpp</filename>
    <includes id="Panzer__Base_8hpp" name="Panzer_Base.hpp" local="yes" imported="no">Panzer_Base.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <class kind="class">panzer_stk::IOClosureModelFactory_TemplateBuilder</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_LineMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__LineMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__LineMeshFactory_8hpp" name="Panzer_STK_LineMeshFactory.hpp" local="no" imported="no">Panzer_STK_LineMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_LineMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__LineMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::LineMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_MeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__MeshFactory_8hpp</filename>
    <includes id="Panzer__STK__PeriodicBC__Parser_8hpp" name="Panzer_STK_PeriodicBC_Parser.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Parser.hpp</includes>
    <class kind="class">panzer_stk::STK_MeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ModelEvaluatorFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ModelEvaluatorFactory_8cpp</filename>
    <includes id="Panzer__STK__ModelEvaluatorFactory_8hpp" name="Panzer_STK_ModelEvaluatorFactory.hpp" local="yes" imported="no">Panzer_STK_ModelEvaluatorFactory.hpp</includes>
    <includes id="Panzer__STK__ModelEvaluatorFactory__impl_8hpp" name="Panzer_STK_ModelEvaluatorFactory_impl.hpp" local="yes" imported="no">Panzer_STK_ModelEvaluatorFactory_impl.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ModelEvaluatorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ModelEvaluatorFactory_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="yes" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <includes id="Panzer__ResponseLibrary_8hpp" name="Panzer_ResponseLibrary.hpp" local="yes" imported="no">Panzer_ResponseLibrary.hpp</includes>
    <includes id="Panzer__EquationSet__Factory_8hpp" name="Panzer_EquationSet_Factory.hpp" local="yes" imported="no">Panzer_EquationSet_Factory.hpp</includes>
    <includes id="Panzer__BCStrategy__Factory_8hpp" name="Panzer_BCStrategy_Factory.hpp" local="yes" imported="no">Panzer_BCStrategy_Factory.hpp</includes>
    <includes id="Panzer__ClosureModel__Factory__TemplateManager_8hpp" name="Panzer_ClosureModel_Factory_TemplateManager.hpp" local="yes" imported="no">Panzer_ClosureModel_Factory_TemplateManager.hpp</includes>
    <includes id="Panzer__ModelEvaluator__Epetra_8hpp" name="Panzer_ModelEvaluator_Epetra.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Epetra.hpp</includes>
    <includes id="Panzer__ModelEvaluator_8hpp" name="Panzer_ModelEvaluator.hpp" local="yes" imported="no">Panzer_ModelEvaluator.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">Piro::RythmosSolver</class>
    <class kind="class">panzer::LinearObjFactory</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::DOFManager</class>
    <class kind="class">panzer::ConnManagerBase</class>
    <class kind="class">panzer_stk::STKConnManager</class>
    <class kind="class">panzer_stk::ModelEvaluatorFactory</class>
    <namespace>Piro</namespace>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ModelEvaluatorFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ModelEvaluatorFactory__impl_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__GlobalData_8hpp" name="Panzer_GlobalData.hpp" local="yes" imported="no">Panzer_GlobalData.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__FieldManagerBuilder_8hpp" name="Panzer_FieldManagerBuilder.hpp" local="yes" imported="no">Panzer_FieldManagerBuilder.hpp</includes>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__DOFManager_8hpp" name="Panzer_DOFManager.hpp" local="yes" imported="no">Panzer_DOFManager.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__EpetraLinearObjContainer_8hpp" name="Panzer_EpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_EpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__BlockedEpetraLinearObjFactory_8hpp" name="Panzer_BlockedEpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedEpetraLinearObjFactory.hpp</includes>
    <includes id="Panzer__BlockedTpetraLinearObjFactory_8hpp" name="Panzer_BlockedTpetraLinearObjFactory.hpp" local="yes" imported="no">Panzer_BlockedTpetraLinearObjFactory.hpp</includes>
    <includes id="Panzer__InitialCondition__Builder_8hpp" name="Panzer_InitialCondition_Builder.hpp" local="yes" imported="no">Panzer_InitialCondition_Builder.hpp</includes>
    <includes id="Panzer__ModelEvaluator__Epetra_8hpp" name="Panzer_ModelEvaluator_Epetra.hpp" local="yes" imported="no">Panzer_ModelEvaluator_Epetra.hpp</includes>
    <includes id="Panzer__ModelEvaluator_8hpp" name="Panzer_ModelEvaluator.hpp" local="yes" imported="no">Panzer_ModelEvaluator.hpp</includes>
    <includes id="Panzer__ElementBlockIdToPhysicsIdMap_8hpp" name="Panzer_ElementBlockIdToPhysicsIdMap.hpp" local="yes" imported="no">Panzer_ElementBlockIdToPhysicsIdMap.hpp</includes>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <includes id="Panzer__ExplicitModelEvaluator_8hpp" name="Panzer_ExplicitModelEvaluator.hpp" local="yes" imported="no">Panzer_ExplicitModelEvaluator.hpp</includes>
    <includes id="Panzer__ParameterLibraryUtilities_8hpp" name="Panzer_ParameterLibraryUtilities.hpp" local="yes" imported="no">Panzer_ParameterLibraryUtilities.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__ExodusReaderFactory_8hpp" name="Panzer_STK_ExodusReaderFactory.hpp" local="yes" imported="no">Panzer_STK_ExodusReaderFactory.hpp</includes>
    <includes id="Panzer__STK__PamgenReaderFactory_8hpp" name="Panzer_STK_PamgenReaderFactory.hpp" local="yes" imported="no">Panzer_STK_PamgenReaderFactory.hpp</includes>
    <includes id="Panzer__STK__LineMeshFactory_8hpp" name="Panzer_STK_LineMeshFactory.hpp" local="yes" imported="no">Panzer_STK_LineMeshFactory.hpp</includes>
    <includes id="Panzer__STK__SquareQuadMeshFactory_8hpp" name="Panzer_STK_SquareQuadMeshFactory.hpp" local="yes" imported="no">Panzer_STK_SquareQuadMeshFactory.hpp</includes>
    <includes id="Panzer__STK__SquareTriMeshFactory_8hpp" name="Panzer_STK_SquareTriMeshFactory.hpp" local="yes" imported="no">Panzer_STK_SquareTriMeshFactory.hpp</includes>
    <includes id="Panzer__STK__CubeHexMeshFactory_8hpp" name="Panzer_STK_CubeHexMeshFactory.hpp" local="yes" imported="no">Panzer_STK_CubeHexMeshFactory.hpp</includes>
    <includes id="Panzer__STK__CubeTetMeshFactory_8hpp" name="Panzer_STK_CubeTetMeshFactory.hpp" local="yes" imported="no">Panzer_STK_CubeTetMeshFactory.hpp</includes>
    <includes id="Panzer__STK__MultiBlockMeshFactory_8hpp" name="Panzer_STK_MultiBlockMeshFactory.hpp" local="yes" imported="no">Panzer_STK_MultiBlockMeshFactory.hpp</includes>
    <includes id="Panzer__STK__CustomMeshFactory_8hpp" name="Panzer_STK_CustomMeshFactory.hpp" local="yes" imported="no">Panzer_STK_CustomMeshFactory.hpp</includes>
    <includes id="Panzer__STK__SetupUtilities_8hpp" name="Panzer_STK_SetupUtilities.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities.hpp</includes>
    <includes id="Panzer__STK__Utilities_8hpp" name="Panzer_STK_Utilities.hpp" local="yes" imported="no">Panzer_STK_Utilities.hpp</includes>
    <includes id="Panzer__STK__WorksetFactory_8hpp" name="Panzer_STK_WorksetFactory.hpp" local="yes" imported="no">Panzer_STK_WorksetFactory.hpp</includes>
    <includes id="Panzer__STKConnManager_8hpp" name="Panzer_STKConnManager.hpp" local="yes" imported="no">Panzer_STKConnManager.hpp</includes>
    <includes id="Panzer__STK__NOXObserverFactory_8hpp" name="Panzer_STK_NOXObserverFactory.hpp" local="yes" imported="no">Panzer_STK_NOXObserverFactory.hpp</includes>
    <includes id="Panzer__STK__RythmosObserverFactory_8hpp" name="Panzer_STK_RythmosObserverFactory.hpp" local="yes" imported="no">Panzer_STK_RythmosObserverFactory.hpp</includes>
    <includes id="Panzer__STK__ParameterListCallback_8hpp" name="Panzer_STK_ParameterListCallback.hpp" local="yes" imported="no">Panzer_STK_ParameterListCallback.hpp</includes>
    <includes id="Panzer__STK__ParameterListCallbackBlocked_8hpp" name="Panzer_STK_ParameterListCallbackBlocked.hpp" local="yes" imported="no">Panzer_STK_ParameterListCallbackBlocked.hpp</includes>
    <includes id="Panzer__STK__IOClosureModel__Factory__TemplateBuilder_8hpp" name="Panzer_STK_IOClosureModel_Factory_TemplateBuilder.hpp" local="yes" imported="no">Panzer_STK_IOClosureModel_Factory_TemplateBuilder.hpp</includes>
    <includes id="Panzer__STK__ResponseEvaluatorFactory__SolutionWriter_8hpp" name="Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.hpp" local="yes" imported="no">Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.hpp</includes>
    <includes id="Panzer__STK__SetupLOWSFactory_8hpp" name="Panzer_STK_SetupLOWSFactory.hpp" local="yes" imported="no">Panzer_STK_SetupLOWSFactory.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="no" imported="no">Panzer_NodeType.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_MultiBlockMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__MultiBlockMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__MultiBlockMeshFactory_8hpp" name="Panzer_STK_MultiBlockMeshFactory.hpp" local="no" imported="no">Panzer_STK_MultiBlockMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_MultiBlockMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__MultiBlockMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::MultiBlockMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_NOXObserverFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__NOXObserverFactory_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__Utilities_8hpp" name="Panzer_STK_Utilities.hpp" local="yes" imported="no">Panzer_STK_Utilities.hpp</includes>
    <class kind="class">panzer_stk::NOXObserverFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PamgenReaderFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PamgenReaderFactory_8cpp</filename>
    <includes id="Panzer__STK__PamgenReaderFactory_8hpp" name="Panzer_STK_PamgenReaderFactory.hpp" local="yes" imported="no">Panzer_STK_PamgenReaderFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PamgenReaderFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PamgenReaderFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="yes" imported="no">Panzer_STK_MeshFactory.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ParameterListCallback.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ParameterListCallback_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ParameterListCallback_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ParameterListCallback__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ParameterListCallbackBlocked.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ParameterListCallbackBlocked_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ParameterListCallbackBlocked_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__ParameterListCallbackBlocked__impl_8hpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_MatchConditions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__MatchConditions_8hpp</filename>
    <class kind="class">panzer_stk::CoordMatcher</class>
    <class kind="class">panzer_stk::PlaneMatcher</class>
    <class kind="class">panzer_stk::QuarterPlaneMatcher</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_Matcher.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__Matcher_8cpp</filename>
    <includes id="Panzer__STK__PeriodicBC__Matcher_8hpp" name="Panzer_STK_PeriodicBC_Matcher.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Matcher.hpp</includes>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::periodic_helpers</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getGlobalPairing</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a203d18c67b652191702cab790c011431</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;locallyRequiredIds, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;locallyMatchedIds, const STK_Interface &amp;mesh, bool failure)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;</type>
      <name>getLocalSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ad92d2fea9e32db3162e55d2e44ef2659</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getLocalSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a572b7f471842472c0c2a5484e6503dea</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a3f44ffd2a912bcec743698736275b729</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_Matcher.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__Matcher_8hpp</filename>
    <includes id="Panzer__STK__Version_8hpp" name="Panzer_STK_Version.hpp" local="yes" imported="no">Panzer_STK_Version.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__PeriodicBC__Matcher__impl_8hpp" name="Panzer_STK_PeriodicBC_Matcher_impl.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Matcher_impl.hpp</includes>
    <class kind="class">panzer_stk::PeriodicBC_MatcherBase</class>
    <class kind="class">panzer_stk::PeriodicBC_Matcher</class>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::periodic_helpers</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a7e7841a47d766e87970209b13cc03245</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ab284455c0b8ad48b2168d93b0fe3837a</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;current, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a3f44ffd2a912bcec743698736275b729</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getLocalSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a572b7f471842472c0c2a5484e6503dea</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;</type>
      <name>getLocalSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ad92d2fea9e32db3162e55d2e44ef2659</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getLocallyMatchedSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a644be49d847a031bd78c634d71ccff5c</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;side_ids, const std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &amp;side_coords, const STK_Interface &amp;mesh, const std::string &amp;sideName, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getGlobalPairing</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a203d18c67b652191702cab790c011431</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;locallyRequiredIds, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;locallyMatchedIds, const STK_Interface &amp;mesh, bool failure)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PeriodicBC_MatcherBase &gt;</type>
      <name>buildPeriodicBC_Matcher</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a7ea987cbad7e4c78a95238e4260987e3</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const Matcher &amp;matcher, const std::string type=&quot;coord&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_Matcher_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__Matcher__impl_8hpp</filename>
    <includes id="Panzer__STK__Version_8hpp" name="Panzer_STK_Version.hpp" local="yes" imported="no">Panzer_STK_Version.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__Utilities_8hpp" name="Panzer_STK_Utilities.hpp" local="yes" imported="no">Panzer_STK_Utilities.hpp</includes>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::periodic_helpers</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ab284455c0b8ad48b2168d93b0fe3837a</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;current, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a7e7841a47d766e87970209b13cc03245</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getLocallyMatchedSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a644be49d847a031bd78c634d71ccff5c</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;side_ids, const std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &amp;side_coords, const STK_Interface &amp;mesh, const std::string &amp;sideName, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_Parser.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__Parser_8cpp</filename>
    <includes id="Panzer__STK__PeriodicBC__Parser_8hpp" name="Panzer_STK_PeriodicBC_Parser.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Parser.hpp</includes>
    <includes id="Panzer__STK__PeriodicBC__MatchConditions_8hpp" name="Panzer_STK_PeriodicBC_MatchConditions.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_MatchConditions.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim_left</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a17e7bfc0854f27e670482176355a7c32</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim_right</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>acf9956c58e926ca58a362a8e25fd573d</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a322a6d4491f92fc8e6ada7d9a66d9674</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_PeriodicBC_Parser.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__PeriodicBC__Parser_8hpp</filename>
    <includes id="Panzer__STK__PeriodicBC__Matcher_8hpp" name="Panzer_STK_PeriodicBC_Matcher.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Matcher.hpp</includes>
    <class kind="class">panzer_stk::PeriodicBC_Parser</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/responses/</path>
    <filename>Panzer__STK__ResponseEvaluatorFactory__SolutionWriter_8cpp</filename>
    <includes id="Panzer__ExplicitTemplateInstantiation_8hpp" name="Panzer_ExplicitTemplateInstantiation.hpp" local="yes" imported="no">Panzer_ExplicitTemplateInstantiation.hpp</includes>
    <includes id="Panzer__STK__ResponseEvaluatorFactory__SolutionWriter_8hpp" name="Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.hpp" local="yes" imported="no">Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.hpp</includes>
    <includes id="Panzer__STK__ResponseEvaluatorFactory__SolutionWriter__impl_8hpp" name="Panzer_STK_ResponseEvaluatorFactory_SolutionWriter_impl.hpp" local="yes" imported="no">Panzer_STK_ResponseEvaluatorFactory_SolutionWriter_impl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ResponseEvaluatorFactory_SolutionWriter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/responses/</path>
    <filename>Panzer__STK__ResponseEvaluatorFactory__SolutionWriter_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__ResponseEvaluatorFactory_8hpp" name="Panzer_ResponseEvaluatorFactory.hpp" local="yes" imported="no">Panzer_ResponseEvaluatorFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::ResponseEvaluatorFactory_SolutionWriter</class>
    <class kind="struct">panzer_stk::ResponseEvaluatorFactory_SolutionWriter::RemovedFieldsSearchUnaryFunctor</class>
    <class kind="struct">panzer_stk::RespFactorySolnWriter_Builder</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ResponseEvaluatorFactory_SolutionWriter_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/responses/</path>
    <filename>Panzer__STK__ResponseEvaluatorFactory__SolutionWriter__impl_8hpp</filename>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__DOF__PointValues_8hpp" name="Panzer_DOF_PointValues.hpp" local="yes" imported="no">Panzer_DOF_PointValues.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_RythmosObserverFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__RythmosObserverFactory_8hpp</filename>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__STK__Utilities_8hpp" name="Panzer_STK_Utilities.hpp" local="yes" imported="no">Panzer_STK_Utilities.hpp</includes>
    <class kind="class">panzer_stk::RythmosObserverFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgQuantity.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgQuantity_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgQuantity_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgQuantity__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="typedef">
      <type>panzer_stk::STK_Interface::SolutionFieldType</type>
      <name>VariableField</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a9b381fa1493114bbc1179c7d767fb6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>numValues_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a635df0e9e1e9b29bf87346f568d15622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::Point &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a59147c16f3462f89ee5bce429fc9c897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a3ded3f8b5b772def0795f501cd7caadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; VariableField * &gt;</type>
      <name>stkFields_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a25c457c66570265b00b2ce20a3f0f247</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgQuantity_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgQuantity__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>acf6f7f2265e04e13c78b21e4439d5d37</anchor>
      <arglist>(ScatterCellAvgQuantity, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a957ac26bf086b0aa332350a888411864</anchor>
      <arglist>(ScatterCellAvgQuantity, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ac4ab6481cf1329a39176b053e8926da2</anchor>
      <arglist>(ScatterCellAvgQuantity, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgVector__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellAvgVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellAvgVector__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ab93a07d3c434b5d477aa33bc27440e9d</anchor>
      <arglist>(ScatterCellAvgVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a04de2dfac2aeb79856cbbc4cf4b196b0</anchor>
      <arglist>(ScatterCellAvgVector, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a15cd73628119ed9a93ad10426ebf18e1</anchor>
      <arglist>(ScatterCellAvgVector, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellQuantity.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellQuantity_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellQuantity_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellQuantity__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterCellQuantity_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterCellQuantity__impl_8hpp</filename>
    <includes id="Panzer__IntegrationRule_8hpp" name="Panzer_IntegrationRule.hpp" local="yes" imported="no">Panzer_IntegrationRule.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ad2881129e0c00d479d9e1276725b5969</anchor>
      <arglist>(ScatterCellQuantity, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a9dd1d9d4d96538a2640609dae52736ae</anchor>
      <arglist>(ScatterCellQuantity, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a6a9ef9042994dcd484094c710372cc9d</anchor>
      <arglist>(ScatterCellQuantity, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterFields.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterFields_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterFields_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterFields__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="class">panzer_stk::ScatterFields</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterFields_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterFields__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterVectorFields.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterVectorFields_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterVectorFields_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterVectorFields__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__PointRule_8hpp" name="Panzer_PointRule.hpp" local="yes" imported="no">Panzer_PointRule.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type></type>
      <name>ScatterVectorFields</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a33c28625d118fac419e1ebda441cecef</anchor>
      <arglist>(const std::string &amp;scatterName, const Teuchos::RCP&lt; STK_Interface &gt; mesh, const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const std::vector&lt; std::string &gt; &amp;names, const std::vector&lt; double &gt; &amp;scaling=std::vector&lt; double &gt;())</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>names_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aeed11100b06cb2bf44f7358b3fa44b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::IP, panzer::Dim &gt;</type>
      <name>pointField_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ae2a588fc6876159b7e513c979a1136f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>scaling_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a8bb14f0637404eb984f31e47423502bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spatialDimension_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a01a77d812abec699e84d98867af00da0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_ScatterVectorFields_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/evaluators/</path>
    <filename>Panzer__STK__ScatterVectorFields__impl_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a05a6cccb02c514a7230c7e19ddde88fd</anchor>
      <arglist>(ScatterVectorFields, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a53d9e108e4d5d1866388a51f4084a6c7</anchor>
      <arglist>(ScatterVectorFields, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a49c4f69187d3fbdcef0861ead93fcc12</anchor>
      <arglist>(ScatterVectorFields, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SculptMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SculptMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__SculptMeshFactory_8hpp" name="Panzer_STK_SculptMeshFactory.hpp" local="no" imported="no">Panzer_STK_SculptMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SculptMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SculptMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::SculptMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupLOWSFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupLOWSFactory_8cpp</filename>
    <includes id="Panzer__STK__SetupLOWSFactory_8hpp" name="Panzer_STK_SetupLOWSFactory.hpp" local="yes" imported="no">Panzer_STK_SetupLOWSFactory.hpp</includes>
    <includes id="Panzer__STK__SetupLOWSFactory__impl_8hpp" name="Panzer_STK_SetupLOWSFactory_impl.hpp" local="yes" imported="no">Panzer_STK_SetupLOWSFactory_impl.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>template Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a957d1eac7c8f78041c99cb6b635b45bb</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; int &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>template Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory&lt; panzer::Ordinal64 &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aa75be7a3cc9e5f52d7c56f20be5ce4b1</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; panzer::Ordinal64 &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af0c5185eb89d337eb7158ebfd197ce90</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt; &amp;conn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupLOWSFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupLOWSFactory_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__BlockedDOFManager_8hpp" name="Panzer_BlockedDOFManager.hpp" local="yes" imported="no">Panzer_BlockedDOFManager.hpp</includes>
    <includes id="Panzer__STKConnManager_8hpp" name="Panzer_STKConnManager.hpp" local="yes" imported="no">Panzer_STKConnManager.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af0c5185eb89d337eb7158ebfd197ce90</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt; &amp;conn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a93df7a192e15c09b2d25ac2f32a14646</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; GO &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates=false, bool writeTopo=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTopology</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a621350d669355eea5157ef7ede33390c</anchor>
      <arglist>(const panzer::BlockedDOFManager&lt; int, GO &gt; &amp;blkDofs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupLOWSFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupLOWSFactory__impl_8hpp</filename>
    <includes id="Panzer__STK__ParameterListCallback_8hpp" name="Panzer_STK_ParameterListCallback.hpp" local="yes" imported="no">Panzer_STK_ParameterListCallback.hpp</includes>
    <includes id="Panzer__STK__ParameterListCallbackBlocked_8hpp" name="Panzer_STK_ParameterListCallbackBlocked.hpp" local="yes" imported="no">Panzer_STK_ParameterListCallbackBlocked.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a93df7a192e15c09b2d25ac2f32a14646</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; GO &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates=false, bool writeTopo=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTopology</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a621350d669355eea5157ef7ede33390c</anchor>
      <arglist>(const panzer::BlockedDOFManager&lt; int, GO &gt; &amp;blkDofs)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupUtilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupUtilities_8cpp</filename>
    <includes id="Panzer__STK__SetupUtilities_8hpp" name="Panzer_STK_SetupUtilities.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities.hpp</includes>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::workset_utils</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a056183a0ae3e447f22977c1aa100f0b1</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a2713e661c9bd1590b3ad7fa636dbf642</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;eBlock, const panzer::WorksetNeeds &amp;needs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aabde2cdfb751585e267cf9bef7198497</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sideset, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a70312a6502beb5d1ae9a830307b450ca</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;sideset, const std::string &amp;eBlock, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a6667ddd017cecd77eb0a49db26a50bc8</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb_a, const panzer::PhysicsBlock &amp;pb_b, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a78defc95b33f96cc096e700a854fda4e</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a87d79574bdfb3b974974e7de141770cb</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;eblockID, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>afc5a100b667415f1253ed2782d27025f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUniversalSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a7de9dea74839e0b887ae174201e3908f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElementCascade</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae844494dc5aabd253a71ba71f7ec5324</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSubcellDim, std::vector&lt; std::size_t &gt; &amp;localSubcellIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a641d6a4e35d6958de816809285bbac8f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ade9314ade8687ee1a31f80a9c0784f1d</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId_a, const std::string &amp;blockId_b, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds_a, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_a, std::vector&lt; std::size_t &gt; &amp;localSideIds_b, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNodeElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae64c9cc823a82c49f489c66ee3351dfe</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;nodes, std::vector&lt; std::size_t &gt; &amp;localNodeIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellEntities</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>abe54d141aea41a52787a5a285fbcf0df</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::vector&lt; stk::mesh::Entity &gt; &gt; &amp;subcells)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupUtilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupUtilities_8hpp</filename>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <includes id="Panzer__WorksetNeeds_8hpp" name="Panzer_WorksetNeeds.hpp" local="yes" imported="no">Panzer_WorksetNeeds.hpp</includes>
    <includes id="Panzer__STK__SetupUtilities__impl_8hpp" name="Panzer_STK_SetupUtilities_impl.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities_impl.hpp</includes>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::workset_utils</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a056183a0ae3e447f22977c1aa100f0b1</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a2713e661c9bd1590b3ad7fa636dbf642</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;eBlock, const panzer::WorksetNeeds &amp;needs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aabde2cdfb751585e267cf9bef7198497</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sideset, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a70312a6502beb5d1ae9a830307b450ca</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;sideset, const std::string &amp;eBlock, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a6667ddd017cecd77eb0a49db26a50bc8</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb_a, const panzer::PhysicsBlock &amp;pb_b, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a78defc95b33f96cc096e700a854fda4e</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a87d79574bdfb3b974974e7de141770cb</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;eblockID, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIdsAndVertices</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a61533531e2c9c9c6c7506a3cf0a579b3</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, std::string blockId, std::vector&lt; std::size_t &gt; &amp;localIds, ArrayT &amp;vertices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>afc5a100b667415f1253ed2782d27025f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUniversalSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a7de9dea74839e0b887ae174201e3908f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a641d6a4e35d6958de816809285bbac8f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ade9314ade8687ee1a31f80a9c0784f1d</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId_a, const std::string &amp;blockId_b, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds_a, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_a, std::vector&lt; std::size_t &gt; &amp;localSideIds_b, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNodeElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae64c9cc823a82c49f489c66ee3351dfe</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;nodes, std::vector&lt; std::size_t &gt; &amp;localNodeIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElementCascade</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae844494dc5aabd253a71ba71f7ec5324</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSubcellDim, std::vector&lt; std::size_t &gt; &amp;localSubcellIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellEntities</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>abe54d141aea41a52787a5a285fbcf0df</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::vector&lt; stk::mesh::Entity &gt; &gt; &amp;subcells)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SetupUtilities_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SetupUtilities__impl_8hpp</filename>
    <namespace>panzer_stk</namespace>
    <namespace>panzer_stk::workset_utils</namespace>
    <member kind="function">
      <type>void</type>
      <name>getIdsAndVertices</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a61533531e2c9c9c6c7506a3cf0a579b3</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, std::string blockId, std::vector&lt; std::size_t &gt; &amp;localIds, ArrayT &amp;vertices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SquareQuadMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SquareQuadMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__SquareQuadMeshFactory_8hpp" name="Panzer_STK_SquareQuadMeshFactory.hpp" local="no" imported="no">Panzer_STK_SquareQuadMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SquareQuadMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SquareQuadMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::SquareQuadMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SquareTriMeshFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SquareTriMeshFactory_8cpp</filename>
    <includes id="Panzer__STK__SquareTriMeshFactory_8hpp" name="Panzer_STK_SquareTriMeshFactory.hpp" local="no" imported="no">Panzer_STK_SquareTriMeshFactory.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SquareTriMeshFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/stk_interface/</path>
    <filename>Panzer__STK__SquareTriMeshFactory_8hpp</filename>
    <includes id="Panzer__STK__MeshFactory_8hpp" name="Panzer_STK_MeshFactory.hpp" local="no" imported="no">Panzer_STK_MeshFactory.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="no" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::SquareTriMeshFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SurfaceNodeNormals.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SurfaceNodeNormals_8cpp</filename>
    <includes id="Panzer__STK__SurfaceNodeNormals_8hpp" name="Panzer_STK_SurfaceNodeNormals.hpp" local="yes" imported="no">Panzer_STK_SurfaceNodeNormals.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__STK__CubeHexMeshFactory_8hpp" name="Panzer_STK_CubeHexMeshFactory.hpp" local="yes" imported="no">Panzer_STK_CubeHexMeshFactory.hpp</includes>
    <includes id="Panzer__STK__SetupUtilities_8hpp" name="Panzer_STK_SetupUtilities.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities.hpp</includes>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <includes id="Panzer__IntegrationValues2_8hpp" name="Panzer_IntegrationValues2.hpp" local="yes" imported="no">Panzer_IntegrationValues2.hpp</includes>
    <includes id="Panzer__STK__WorksetFactory_8hpp" name="Panzer_STK_WorksetFactory.hpp" local="yes" imported="no">Panzer_STK_WorksetFactory.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af5abae32447a393b453a30bee8b09231</anchor>
      <arglist>(std::unordered_map&lt; unsigned, std::vector&lt; double &gt; &gt; &amp;normals, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a406442f7223aebb34951cbb52f1718cd</anchor>
      <arglist>(std::unordered_map&lt; std::size_t, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;elementToNormalMap, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_SurfaceNodeNormals.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__SurfaceNodeNormals_8hpp</filename>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af5abae32447a393b453a30bee8b09231</anchor>
      <arglist>(std::unordered_map&lt; unsigned, std::vector&lt; double &gt; &gt; &amp;normals, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a406442f7223aebb34951cbb52f1718cd</anchor>
      <arglist>(std::unordered_map&lt; std::size_t, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;elementToNormalMap, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__Utilities_8cpp</filename>
    <includes id="Panzer__STK__Utilities_8hpp" name="Panzer_STK_Utilities.hpp" local="yes" imported="no">Panzer_STK_Utilities.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <namespace>panzer_stk</namespace>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gather_in_block</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a23bc119d899d96e620f0c7a96a17f127</anchor>
      <arglist>(const std::string &amp;blockId, const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, const Epetra_Vector &amp;x, const std::vector&lt; std::size_t &gt; &amp;localCellIds, std::map&lt; std::string, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;fc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>build_local_ids</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a03336aa66bf4403d4e02f77ad181eff8</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt; &gt; &amp;localIds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_cell_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ae83e57ff624d239961ffe6b8a9fed19d</anchor>
      <arglist>(panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; double &gt; &amp;data, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ab6bdae17788b409059c9866059e26c94</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_MultiVector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>write_solution_data&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a7a9562813f84765174854b408d19e310</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, int &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_MultiVector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a5bd38f7d60b58e3e218bfd2f9cf7d3c4</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_Vector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>write_solution_data&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aea2c3be9aa14973478085287df30a03b</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, int &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_Vector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather_in_block</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a1c75792e2c1ad97450128634c37b4c45</anchor>
      <arglist>(const std::string &amp;blockId, const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, const Epetra_Vector &amp;x, const std::vector&lt; std::size_t &gt; &amp;localCellIds, std::map&lt; std::string, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;fc)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__Utilities_8hpp</filename>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="struct">panzer_stk::PermFunctor</class>
    <namespace>panzer</namespace>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>void</type>
      <name>write_cell_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ae83e57ff624d239961ffe6b8a9fed19d</anchor>
      <arglist>(panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; double &gt; &amp;data, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ab6bdae17788b409059c9866059e26c94</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_MultiVector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a5bd38f7d60b58e3e218bfd2f9cf7d3c4</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_Vector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sorted_permutation</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a744227a1a545c5f8bc735cf3f76000f3</anchor>
      <arglist>(const RAContainer &amp;cont, std::vector&lt; std::size_t &gt; &amp;permutation, const Compare &amp;comp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sorted_permutation</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a2b6e3e2e8f25d576ad0239893c4e17a5</anchor>
      <arglist>(const RAContainer &amp;cont, std::vector&lt; std::size_t &gt; &amp;permutation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Version.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__Version_8cpp</filename>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a91b44689021f957b06321ee80c26dd60</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_Version.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__Version_8hpp</filename>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a91b44689021f957b06321ee80c26dd60</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_WorksetFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__WorksetFactory_8cpp</filename>
    <includes id="Panzer__STK__WorksetFactory_8hpp" name="Panzer_STK_WorksetFactory.hpp" local="yes" imported="no">Panzer_STK_WorksetFactory.hpp</includes>
    <includes id="Panzer__WorksetFactoryBase_8hpp" name="Panzer_WorksetFactoryBase.hpp" local="yes" imported="no">Panzer_WorksetFactoryBase.hpp</includes>
    <includes id="Panzer__STK__SetupUtilities_8hpp" name="Panzer_STK_SetupUtilities.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STK_WorksetFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STK__WorksetFactory_8hpp</filename>
    <includes id="Panzer__WorksetFactoryBase_8hpp" name="Panzer_WorksetFactoryBase.hpp" local="yes" imported="no">Panzer_WorksetFactoryBase.hpp</includes>
    <includes id="Panzer__WorksetDescriptor_8hpp" name="Panzer_WorksetDescriptor.hpp" local="yes" imported="no">Panzer_WorksetDescriptor.hpp</includes>
    <includes id="Panzer__WorksetNeeds_8hpp" name="Panzer_WorksetNeeds.hpp" local="yes" imported="no">Panzer_WorksetNeeds.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <class kind="class">panzer_stk::WorksetFactory</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STKConnManager.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STKConnManager_8cpp</filename>
    <includes id="Panzer__STKConnManager_8hpp" name="Panzer_STKConnManager.hpp" local="yes" imported="no">Panzer_STKConnManager.hpp</includes>
    <includes id="Panzer__STKConnManager__impl_8hpp" name="Panzer_STKConnManager_impl.hpp" local="yes" imported="no">Panzer_STKConnManager_impl.hpp</includes>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STKConnManager.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STKConnManager_8hpp</filename>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <includes id="Panzer__STK__Interface_8hpp" name="Panzer_STK_Interface.hpp" local="yes" imported="no">Panzer_STK_Interface.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <class kind="class">panzer_stk::STKConnManager</class>
    <namespace>panzer_stk</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_STKConnManager_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/adapters-stk/src/</path>
    <filename>Panzer__STKConnManager__impl_8hpp</filename>
    <includes id="Panzer__STKConnManager_8hpp" name="Panzer_STKConnManager.hpp" local="yes" imported="no">Panzer_STKConnManager.hpp</includes>
    <includes id="Panzer__GeometricAggFieldPattern_8hpp" name="Panzer_GeometricAggFieldPattern.hpp" local="yes" imported="no">Panzer_GeometricAggFieldPattern.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <includes id="Panzer__STK__PeriodicBC__Matcher_8hpp" name="Panzer_STK_PeriodicBC_Matcher.hpp" local="yes" imported="no">Panzer_STK_PeriodicBC_Matcher.hpp</includes>
    <includes id="Panzer__STK__SetupUtilities_8hpp" name="Panzer_STK_SetupUtilities.hpp" local="yes" imported="no">Panzer_STK_SetupUtilities.hpp</includes>
    <class kind="class">panzer_stk::LocalIdCompare</class>
    <namespace>panzer_stk</namespace>
    <member kind="function">
      <type>std::size_t</type>
      <name>getElementIdx</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a8a449868fb7af9c3c6ed172d6e169b80</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, stk::mesh::Entity const e)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_StlMap_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__StlMap__Utilities_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const MapT::mapped_type &amp;</type>
      <name>getEntry</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a51817f7bd46a72b0c3af5c1f16c2ea78</anchor>
      <arglist>(const MapT &amp;in_map, const typename MapT::key_type &amp;in_key)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_String_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__String__Utilities_8cpp</filename>
    <includes id="Panzer__String__Utilities_8hpp" name="Panzer_String_Utilities.hpp" local="yes" imported="no">Panzer_String_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>trim</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9d8a9465baa32d718826ade891f83f4c</anchor>
      <arglist>(std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StringTokenizer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a545e94c068b2693a7ba7a79e6fa154a4</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;tokens, const std::string &amp;str, const std::string delimiter=&quot;,&quot;, bool trim=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToDoubles</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aad370e4fd4df0c30cc8d15b177030a91</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToInts</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a02de53e134ffacb2aaf09a93c78d331a</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_String_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__String__Utilities_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>trim</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9d8a9465baa32d718826ade891f83f4c</anchor>
      <arglist>(std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StringTokenizer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a545e94c068b2693a7ba7a79e6fa154a4</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;tokens, const std::string &amp;str, const std::string delimiter=&quot;,&quot;, bool trim=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToDoubles</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aad370e4fd4df0c30cc8d15b177030a91</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToInts</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a02de53e134ffacb2aaf09a93c78d331a</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>ScalarT</type>
      <name>getScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a42c7d3947db8a440e1d82c87aea8aaa2</anchor>
      <arglist>(const std::string &amp;field, const Teuchos::ParameterList &amp;plist)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_SubcellSum.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__SubcellSum_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_SubcellSum_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__SubcellSum__decl_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>outField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0360a8c98ffd8221e36bb7c6a9f6311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>inField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9f20b4a52b71ee5be357b6d20f9f67aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::FieldPattern &gt;</type>
      <name>fieldPattern_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab611046e85d8b2dd68cc42d8d9e16afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>evaluateOnClosure_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0e362717e0b9d02f90619d6e55bf3307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_SubcellSum_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__SubcellSum__impl_8hpp</filename>
    <includes id="Panzer__PureBasis_8hpp" name="Panzer_PureBasis.hpp" local="yes" imported="no">Panzer_PureBasis.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__IntrepidFieldPattern_8hpp" name="Panzer_IntrepidFieldPattern.hpp" local="yes" imported="no">Panzer_IntrepidFieldPattern.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac3473795fdeedb1dce72a807946b780f</anchor>
      <arglist>(SubcellSum, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3b1b05f729f99b2c2369f14d7308bcd</anchor>
      <arglist>(SubcellSum, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac13830dd2d66453a6a5534e6ba1c88a0</anchor>
      <arglist>(SubcellSum, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Sum.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Sum_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_Sum_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Sum__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <includes id="Panzer__Evaluator__WithBaseImpl_8hpp" name="Panzer_Evaluator_WithBaseImpl.hpp" local="yes" imported="no">Panzer_Evaluator_WithBaseImpl.hpp</includes>
    <class kind="struct">panzer::PanzerSumTag</class>
    <class kind="class">panzer::SumStatic</class>
    <class kind="class">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, void, void &gt;</class>
    <class kind="class">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;</class>
    <class kind="struct">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::ScalarsTag</class>
    <class kind="struct">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::NoScalarsTag</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb1cf1edf2e7d3249fab2b677e3e7fc9</anchor>
      <arglist>(PanzerSumTag&lt; RANK &gt;, const int &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; TRAITS &gt; &gt;</type>
      <name>buildStaticSumEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa000590e2ec788d6d926aa1f375812b8</anchor>
      <arglist>(const std::string &amp;sum_name, const std::vector&lt; std::string &gt; &amp;value_names, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_VALUES</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad08e5c95c81255c1551000c57aa59591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>sum</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5c05e75ac665b9ebcb4f9e4257fa7b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const double *, PHX::Device &gt;</type>
      <name>scalars</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a28c209b0b6b4cf325d657b9cbaeac05a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Sum_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__Sum__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_USE_FAST_SUM</name>
      <anchorfile>Panzer__Sum__impl_8hpp.html</anchorfile>
      <anchor>ac15e430b0b86efe359eeba36636d35d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aebf247c3dfd4b070fde5b83a20a27037</anchor>
      <arglist>(Sum, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a677c25532be0472c0a362e38670a00be</anchor>
      <arglist>(Sum, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab56c6bc9cd75fd1aa43eb6008a110c5b</anchor>
      <arglist>(Sum, workset)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; TRAITS &gt; &gt;</type>
      <name>buildStaticSumEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa000590e2ec788d6d926aa1f375812b8</anchor>
      <arglist>(const std::string &amp;sum_name, const std::vector&lt; std::string &gt; &amp;value_names, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_TensorToStdVector.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TensorToStdVector_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_TensorToStdVector_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TensorToStdVector__decl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>PHX_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>tensorToStdVectorEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1ff6d7f5ccfb4656136615304204bce8</anchor>
      <arglist>(const std::string &amp;tensorName, const std::string &amp;vectorPrefix, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;tensorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>tensorToStdVectorEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab082b1ee253dea321193299955ffa915</anchor>
      <arglist>(const std::string &amp;tensorName, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;tensorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout)</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim, Dim &gt;</type>
      <name>tensor_field</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5d3ee62a9a5f712932f513eb56315800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt; &gt;</type>
      <name>vector_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a86ef29124d1964a0dd0803c48fe40ff7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_TensorToStdVector_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TensorToStdVector__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a958f3ee423f7b4b6488ccb5a41eb3f7d</anchor>
      <arglist>(TensorToStdVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a16052654a78380f1994653c97b1ca000</anchor>
      <arglist>(TensorToStdVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9f8713ff7fed17541efd5635442cce45</anchor>
      <arglist>(TensorToStdVector, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_TestScatter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TestScatter_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_TestScatter_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TestScatter__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE &gt;</type>
      <name>scatter_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a858753b34e60df2075a80f523a317dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>localOffset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7663f7dc4645cb1637311cd0a63b77d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>offset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a26d3f8d14d2d02595d3bd3d5ea3e1355</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_TestScatter_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__TestScatter__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac6a6d05cba9c29e25aaa0ca02f45687c</anchor>
      <arglist>(TestScatter, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a17bbefeaa5d23ae61120e7e7623d3dca</anchor>
      <arglist>(TestScatter, setupData, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9953f00a3755e0174f7fbaf6ca8f9dcd</anchor>
      <arglist>(TestScatter, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ThyraObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__ThyraObjContainer_8hpp</filename>
    <class kind="class">panzer::ThyraObjContainer</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ThyraObjFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__ThyraObjFactory_8hpp</filename>
    <class kind="class">Thyra::VectorSpaceBase</class>
    <class kind="class">panzer::ThyraObjFactory</class>
    <namespace>Thyra</namespace>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraLinearObjContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__TpetraLinearObjContainer_8hpp</filename>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__ThyraObjContainer_8hpp" name="Panzer_ThyraObjContainer.hpp" local="yes" imported="no">Panzer_ThyraObjContainer.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">panzer::TpetraLinearObjContainer</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraLinearObjFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__TpetraLinearObjFactory_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__TpetraLinearObjFactory__decl_8hpp" name="Panzer_TpetraLinearObjFactory_decl.hpp" local="yes" imported="no">Panzer_TpetraLinearObjFactory_decl.hpp</includes>
    <includes id="Panzer__TpetraLinearObjFactory__impl_8hpp" name="Panzer_TpetraLinearObjFactory_impl.hpp" local="yes" imported="no">Panzer_TpetraLinearObjFactory_impl.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraLinearObjFactory_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__TpetraLinearObjFactory__decl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__LinearObjFactory_8hpp" name="Panzer_LinearObjFactory.hpp" local="yes" imported="no">Panzer_LinearObjFactory.hpp</includes>
    <includes id="Panzer__TpetraLinearObjContainer_8hpp" name="Panzer_TpetraLinearObjContainer.hpp" local="yes" imported="no">Panzer_TpetraLinearObjContainer.hpp</includes>
    <includes id="Panzer__CloneableEvaluator_8hpp" name="Panzer_CloneableEvaluator.hpp" local="yes" imported="no">Panzer_CloneableEvaluator.hpp</includes>
    <includes id="Panzer__ThyraObjFactory_8hpp" name="Panzer_ThyraObjFactory.hpp" local="yes" imported="no">Panzer_ThyraObjFactory.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <class kind="class">panzer::TpetraLinearObjFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraLinearObjFactory_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/lof/</path>
    <filename>Panzer__TpetraLinearObjFactory__impl_8hpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8hpp" name="Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp</includes>
    <includes id="Panzer__TpetraVector__ReadOnly__GlobalEvaluationData__impl_8hpp" name="Panzer_TpetraVector_ReadOnly_GlobalEvaluationData_impl.hpp" local="yes" imported="no">Panzer_TpetraVector_ReadOnly_GlobalEvaluationData_impl.hpp</includes>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraVector_ReadOnly_GlobalEvaluationData.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__TpetraVector__ReadOnly__GlobalEvaluationData_8hpp</filename>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="yes" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__ReadOnlyVector__GlobalEvaluationData_8hpp" name="Panzer_ReadOnlyVector_GlobalEvaluationData.hpp" local="yes" imported="no">Panzer_ReadOnlyVector_GlobalEvaluationData.hpp</includes>
    <class kind="class">panzer::TpetraVector_ReadOnly_GlobalEvaluationData</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TpetraVector_ReadOnly_GlobalEvaluationData_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__TpetraVector__ReadOnly__GlobalEvaluationData__impl_8hpp</filename>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_Traits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Traits_8hpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <includes id="Panzer__GlobalEvaluationDataContainer_8hpp" name="Panzer_GlobalEvaluationDataContainer.hpp" local="yes" imported="no">Panzer_GlobalEvaluationDataContainer.hpp</includes>
    <class kind="struct">panzer::Traits</class>
    <class kind="struct">panzer::Traits::Residual</class>
    <class kind="struct">panzer::Traits::Jacobian</class>
    <class kind="struct">panzer::Traits::Tangent</class>
    <class kind="struct">panzer::Traits::SD</class>
    <class kind="struct">panzer::Traits::PreEvalData</class>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Residual &gt;</class>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Tangent &gt;</class>
    <namespace>panzer</namespace>
    <namespace>PHX</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_TypeAssocMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__TypeAssocMap_8hpp</filename>
    <class kind="class">panzer::TypeAssocMap</class>
    <class kind="struct">panzer::TypeAssocMap::BuildObjects</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_UniqueGlobalIndexer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__UniqueGlobalIndexer_8hpp</filename>
    <class kind="class">panzer::ConnManagerBase</class>
    <class kind="class">panzer::UniqueGlobalIndexerBase</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::UniqueGlobalIndexer::CopyCellLIDsFunctor</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_UniqueGlobalIndexer_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__UniqueGlobalIndexer__Utilities_8cpp</filename>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <namespace>panzer::orientation_helpers</namespace>
    <member kind="function">
      <type>void</type>
      <name>computePatternEdgeIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a616432e3e6465a679ee1ea50bc71b192</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;edgeIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePatternFaceIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a95afecb0f810f05738a36e5a97139347</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;faceIndices)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_UniqueGlobalIndexer_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__UniqueGlobalIndexer__Utilities_8hpp</filename>
    <includes id="Panzer__NodeType_8hpp" name="Panzer_NodeType.hpp" local="no" imported="no">Panzer_NodeType.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__FieldPattern_8hpp" name="Panzer_FieldPattern.hpp" local="yes" imported="no">Panzer_FieldPattern.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer__Utilities__impl_8hpp" name="Panzer_UniqueGlobalIndexer_Utilities_impl.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer_Utilities_impl.hpp</includes>
    <class kind="class">panzer::ArrayToFieldVector</class>
    <namespace>panzer</namespace>
    <namespace>panzer::orientation_helpers</namespace>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>nc2c_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a841cc4eb5a5f14c5c5b145d0f6f8814a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a238a06ee1790909c87de91b3dbd5851a</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a744f1aa451d2b344e1412783d6104239</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa99a78d084186133f0d784a445358f70</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab0fc4fdfed1ac46319ba66b5df5cf6e9</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>printUGILoadBalancingInformation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0a6cd5f56502f6ce100439414d883c8</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMeshTopology</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67289bcc3b963776985d6fff4b524b81</anchor>
      <arglist>(std::ostream &amp;os, const panzer::UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4c4029a5a078d1e05c964b8a9fc68204</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c3dcd2112e2bd1ae8d3e16dfbb67bd2</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt;</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1e0ccf591c3c6729027473fc6f12c485</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa1a40e6c6a6bdb5d0da7d071b23a3af0</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, std::vector&lt; int &gt; &amp;fieldNumbers, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a43114e55e7dae567c3088572ed31d63e</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, std::vector&lt; int &gt; &amp;fieldNumbers, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGhostedDataReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1d4d54689b94bba62f5b71b4a7097b5f</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string blockId, const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const ArrayT &amp;data, Tpetra::MultiVector&lt; ScalarT, int, GlobalOrdinalT, Node &gt; &amp;dataVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getFieldMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a30a3c282f67e143bca95827d0968c0a2</anchor>
      <arglist>(int fieldNum, const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &amp;fieldVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePatternEdgeIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a616432e3e6465a679ee1ea50bc71b192</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;edgeIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellEdgeOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a518619986b512a24e649a958676cd164</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;topEdgeIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePatternFaceIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a95afecb0f810f05738a36e5a97139347</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;faceIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellFaceOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a35ba3abff49b1bdf8a1face67005bea3</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;topEdgeIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_UniqueGlobalIndexer_Utilities_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/dof-mgr/src/</path>
    <filename>Panzer__UniqueGlobalIndexer__Utilities__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <namespace>panzer::orientation_helpers</namespace>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>nc2c_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a841cc4eb5a5f14c5c5b145d0f6f8814a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a744f1aa451d2b344e1412783d6104239</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a238a06ee1790909c87de91b3dbd5851a</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa99a78d084186133f0d784a445358f70</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab0fc4fdfed1ac46319ba66b5df5cf6e9</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>printUGILoadBalancingInformation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0a6cd5f56502f6ce100439414d883c8</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMeshTopology</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67289bcc3b963776985d6fff4b524b81</anchor>
      <arglist>(std::ostream &amp;os, const panzer::UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4c4029a5a078d1e05c964b8a9fc68204</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa1a40e6c6a6bdb5d0da7d071b23a3af0</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, std::vector&lt; int &gt; &amp;fieldNumbers, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c3dcd2112e2bd1ae8d3e16dfbb67bd2</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGhostedDataReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1d4d54689b94bba62f5b71b4a7097b5f</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string blockId, const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const ArrayT &amp;data, Tpetra::MultiVector&lt; ScalarT, int, GlobalOrdinalT, Node &gt; &amp;dataVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getFieldMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a30a3c282f67e143bca95827d0968c0a2</anchor>
      <arglist>(int fieldNum, const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &amp;fieldVector)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellEdgeOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a518619986b512a24e649a958676cd164</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;topEdgeIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellFaceOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>aefeab611c0d8a939c088b35e73d1b177</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;topFaceIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_UniqueGlobalIndexerFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__UniqueGlobalIndexerFactory_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__UniqueGlobalIndexer_8hpp" name="Panzer_UniqueGlobalIndexer.hpp" local="yes" imported="no">Panzer_UniqueGlobalIndexer.hpp</includes>
    <includes id="Panzer__ConnManager_8hpp" name="Panzer_ConnManager.hpp" local="yes" imported="no">Panzer_ConnManager.hpp</includes>
    <class kind="class">panzer::UniqueGlobalIndexerFactory</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_VectorTemplateIterator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__VectorTemplateIterator_8hpp</filename>
    <class kind="class">panzer::VectorTemplateIterator</class>
    <class kind="class">panzer::ConstVectorTemplateIterator</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_VectorToScalar.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__VectorToScalar_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_VectorToScalar_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__VectorToScalar__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>PANZER_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>vectorToScalarEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>affd1c2b30b242d887745d88905374daa</anchor>
      <arglist>(const std::string &amp;vectorName, const std::string &amp;scalarPrefix, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;scalarLayout)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>vectorToScalarEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a973d429f7d39556bcb7cadf7eccbe8fe</anchor>
      <arglist>(const std::string &amp;vectorName, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;scalarLayout)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_VectorToScalar_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__VectorToScalar__impl_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af4eda7b9695d0481f71b21908b90d83c</anchor>
      <arglist>(VectorToScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad1e302aa06d513d9635776136f068561</anchor>
      <arglist>(VectorToScalar, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a65bb263c812e72e1b24e53f265371434</anchor>
      <arglist>(VectorToScalar, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Version.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__Version_8cpp</filename>
    <includes id="Panzer__Version_8hpp" name="Panzer_Version.hpp" local="yes" imported="no">Panzer_Version.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a66520ec1579a2b12f519ea0230ae393f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Version.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/core/src/</path>
    <filename>Panzer__Version_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a66520ec1579a2b12f519ea0230ae393f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_ViewFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ViewFactory_8hpp</filename>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; typename InputArray::value_type, PHX::Device &gt;</type>
      <name>createDynRankView</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afb7745c01c211a7362486f75deb90153</anchor>
      <arglist>(const InputArray &amp;a, const std::string &amp;name, const DimensionPack...dims)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WeakDirichlet_Residual.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__WeakDirichlet__Residual_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Panzer_WeakDirichlet_Residual_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__WeakDirichlet__Residual__decl_8hpp</filename>
    <includes id="Panzer__Evaluator__Macros_8hpp" name="Panzer_Evaluator_Macros.hpp" local="yes" imported="no">Panzer_Evaluator_Macros.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal_dot_flux_plus_pen</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7b091602f04e78a4cb77ccee6c8a5d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>sigma</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>acd408b0ee54f4087feb1ff62086e9fe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WeakDirichlet_Residual_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/evaluators/</path>
    <filename>Panzer__WeakDirichlet__Residual__impl_8hpp</filename>
    <includes id="Panzer__BasisIRLayout_8hpp" name="Panzer_BasisIRLayout.hpp" local="yes" imported="no">Panzer_BasisIRLayout.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3552d24b937b0590254f5fd56a3ef9ce</anchor>
      <arglist>(WeakDirichletResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4c23dd09e601427446105cf9b03f4b98</anchor>
      <arglist>(WeakDirichletResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4048a79524e209575197be7699665e74</anchor>
      <arglist>(WeakDirichletResidual, workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset_8cpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1e8ef581b944adf8cf230680b5d3450b</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset_8hpp</filename>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <includes id="Panzer__BasisValues2_8hpp" name="Panzer_BasisValues2.hpp" local="yes" imported="no">Panzer_BasisValues2.hpp</includes>
    <includes id="Panzer__IntegrationValues2_8hpp" name="Panzer_IntegrationValues2.hpp" local="yes" imported="no">Panzer_IntegrationValues2.hpp</includes>
    <class kind="struct">panzer::WorksetDetails</class>
    <class kind="struct">panzer::Workset</class>
    <class kind="class">panzer::WorksetDetailsAccessor</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1e8ef581b944adf8cf230680b5d3450b</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;w)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset_Builder.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset__Builder_8cpp</filename>
    <includes id="Panzer__Workset__Builder__decl_8hpp" name="Panzer_Workset_Builder_decl.hpp" local="yes" imported="no">Panzer_Workset_Builder_decl.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2841fbf44e56395245319688494df309</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const WorksetNeeds &amp;needs, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab4c071742a2f0e7fc566892c288bb1fe</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const panzer::PhysicsBlock &amp;pb, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset_Builder_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset__Builder__decl_8hpp</filename>
    <includes id="Panzer__WorksetNeeds_8hpp" name="Panzer_WorksetNeeds.hpp" local="yes" imported="no">Panzer_WorksetNeeds.hpp</includes>
    <namespace>shards</namespace>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a77adfd8fc65323cb1d39e282e8820e5a</anchor>
      <arglist>(const PhysicsBlock &amp;pb, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a04890c88be98faba54b53e0412964648</anchor>
      <arglist>(const WorksetNeeds &amp;needs, const std::string &amp;elementBlock, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a37e4cd8b381dcb72386f35d5e8804fe9</anchor>
      <arglist>(const PhysicsBlock &amp;volume_pb, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const std::vector&lt; std::size_t &gt; &amp;local_side_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afcc4f28b9fa01b3fa159ea06bdb5ef3e</anchor>
      <arglist>(const WorksetNeeds &amp;needs, const std::string &amp;elementBlock, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const std::vector&lt; std::size_t &gt; &amp;local_side_ids, const ArrayT &amp;vertex_coordinates, const bool populate_value_arrays=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaeb7569fc10e21fc20efb0c30107e0ca</anchor>
      <arglist>(const PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a02376091ae219171c005889c3eaf33be</anchor>
      <arglist>(const WorksetNeeds &amp;needs_a, const std::string &amp;eblock_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const WorksetNeeds &amp;needs_b, const std::string &amp;eblock_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a036191542be3d49d4c6e82f3d135f572</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;cell_indices, const PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b, std::vector&lt; Workset &gt;::iterator beg)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac605c62c4421e71c17c4331c6f49c876</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;cell_indices, const WorksetNeeds &amp;needs_a, const std::string &amp;eblock_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const WorksetNeeds &amp;needs_b, const std::string &amp;eblock_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b, std::vector&lt; Workset &gt;::iterator beg)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a151eb5ce831d7e7a813f82536623c14d</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const panzer::PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab4c071742a2f0e7fc566892c288bb1fe</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const panzer::PhysicsBlock &amp;pb, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2841fbf44e56395245319688494df309</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const WorksetNeeds &amp;needs, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset_Builder_impl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset__Builder__impl_8hpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__Shards__Utilities_8hpp" name="Panzer_Shards_Utilities.hpp" local="yes" imported="no">Panzer_Shards_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset_Utilities.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset__Utilities_8cpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PANZER_WORKSET_UTILITIES_HPP</name>
      <anchorfile>Panzer__Workset__Utilities_8cpp.html</anchorfile>
      <anchor>a32202a5b9745f8323ca6ce17382619f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a27b634399e452f901b8aba0a924e09c6</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a733b48c590c3d0fcd1851e67d833eee0</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0eb8931ae5334bfa3ed3289270f1968c</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac4cd4fd8693317b82fade8ae072afcad</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c18d0d2e129a1d3523c2d75bb0bfcf8</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac62b72b6a6cc7211a3e0bda5064b8b1b</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2681bff3fa0058fbc45d4906ab05211f</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a46902b74e622862181ee02702c40f6c3</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_Workset_Utilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__Workset__Utilities_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a27b634399e452f901b8aba0a924e09c6</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a733b48c590c3d0fcd1851e67d833eee0</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0eb8931ae5334bfa3ed3289270f1968c</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac4cd4fd8693317b82fade8ae072afcad</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c18d0d2e129a1d3523c2d75bb0bfcf8</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac62b72b6a6cc7211a3e0bda5064b8b1b</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2681bff3fa0058fbc45d4906ab05211f</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a46902b74e622862181ee02702c40f6c3</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WorksetContainer.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__WorksetContainer_8cpp</filename>
    <includes id="Panzer__WorksetContainer_8hpp" name="Panzer_WorksetContainer.hpp" local="yes" imported="no">Panzer_WorksetContainer.hpp</includes>
    <includes id="Panzer__Workset__Utilities_8hpp" name="Panzer_Workset_Utilities.hpp" local="yes" imported="no">Panzer_Workset_Utilities.hpp</includes>
    <includes id="Panzer__CommonArrayFactories_8hpp" name="Panzer_CommonArrayFactories.hpp" local="yes" imported="no">Panzer_CommonArrayFactories.hpp</includes>
    <includes id="Panzer__OrientationContainer_8hpp" name="Panzer_OrientationContainer.hpp" local="yes" imported="no">Panzer_OrientationContainer.hpp</includes>
    <includes id="Panzer__Dimension_8hpp" name="Panzer_Dimension.hpp" local="yes" imported="no">Panzer_Dimension.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>getVolumeWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3f0535c4e17999b37851887da3f1e9d4</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; std::string &gt; &amp;elementBlockNames, std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt; &gt; &amp;volumeWksts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2450947561e1174d7c49596bc17cb32</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; BC &gt; &amp;bcs, std::map&lt; BC, Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;, LessBC &gt; &amp;sideWksts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WorksetContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__WorksetContainer_8hpp</filename>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__WorksetFactoryBase_8hpp" name="Panzer_WorksetFactoryBase.hpp" local="yes" imported="no">Panzer_WorksetFactoryBase.hpp</includes>
    <includes id="Panzer__WorksetDescriptor_8hpp" name="Panzer_WorksetDescriptor.hpp" local="yes" imported="no">Panzer_WorksetDescriptor.hpp</includes>
    <includes id="Panzer__WorksetNeeds_8hpp" name="Panzer_WorksetNeeds.hpp" local="yes" imported="no">Panzer_WorksetNeeds.hpp</includes>
    <class kind="struct">panzer::SideId</class>
    <class kind="struct">panzer::LessSide</class>
    <class kind="class">panzer::WorksetContainer</class>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>getVolumeWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3f0535c4e17999b37851887da3f1e9d4</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; std::string &gt; &amp;elementBlockNames, std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt; &gt; &amp;volumeWksts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2450947561e1174d7c49596bc17cb32</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; BC &gt; &amp;bcs, std::map&lt; BC, Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;, LessBC &gt; &amp;sideWksts)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WorksetDescriptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__WorksetDescriptor_8hpp</filename>
    <includes id="Panzer__HashUtils_8hpp" name="Panzer_HashUtils.hpp" local="yes" imported="no">Panzer_HashUtils.hpp</includes>
    <class kind="class">panzer::WorksetDescriptor</class>
    <class kind="struct">std::hash&lt; panzer::WorksetDescriptor &gt;</class>
    <namespace>panzer</namespace>
    <namespace>std</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a672d266e70379c66d9e44384e5aed2aa</anchor>
      <arglist>(const WorksetDescriptor &amp;a, const WorksetDescriptor &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>hash_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af7b431c41ab59fb9f6a8ef80fd211c41</anchor>
      <arglist>(const WorksetDescriptor &amp;wd)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad6b82b00da5547055cf3e5cb0ec28a1b</anchor>
      <arglist>(std::ostream &amp;os, const WorksetDescriptor &amp;wd)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>blockDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a29b04d474c0c4642b93a374f0db8c9fc</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>sidesetDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a144ae9eb47047dafb40a9de2af4b0210</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>sidesetVolumeDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abd714f937e9cfb8f92afefe492286aee</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;sideset)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Panzer_WorksetFactoryBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__WorksetFactoryBase_8hpp</filename>
    <includes id="Panzer__Workset_8hpp" name="Panzer_Workset.hpp" local="yes" imported="no">Panzer_Workset.hpp</includes>
    <includes id="Panzer__BC_8hpp" name="Panzer_BC.hpp" local="yes" imported="no">Panzer_BC.hpp</includes>
    <includes id="Panzer__PhysicsBlock_8hpp" name="Panzer_PhysicsBlock.hpp" local="yes" imported="no">Panzer_PhysicsBlock.hpp</includes>
    <includes id="Panzer__WorksetDescriptor_8hpp" name="Panzer_WorksetDescriptor.hpp" local="yes" imported="no">Panzer_WorksetDescriptor.hpp</includes>
    <includes id="Panzer__WorksetNeeds_8hpp" name="Panzer_WorksetNeeds.hpp" local="yes" imported="no">Panzer_WorksetNeeds.hpp</includes>
    <class kind="class">panzer::WorksetFactoryBase</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_WorksetNeeds.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__WorksetNeeds_8hpp</filename>
    <includes id="Panzer__CellData_8hpp" name="Panzer_CellData.hpp" local="yes" imported="no">Panzer_CellData.hpp</includes>
    <class kind="struct">panzer::WorksetNeeds</class>
    <namespace>panzer</namespace>
  </compound>
  <compound kind="file">
    <name>Panzer_ZeroSensitivities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/panzer/disc-fe/src/</path>
    <filename>Panzer__ZeroSensitivities_8hpp</filename>
    <includes id="Panzer__Traits_8hpp" name="Panzer_Traits.hpp" local="yes" imported="no">Panzer_Traits.hpp</includes>
    <namespace>panzer</namespace>
    <member kind="function">
      <type>void</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9aad3dd36cb716a48d72b37bd03448ae</anchor>
      <arglist>(panzer::Traits::RealType &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ada3d6c7ea22eb1aebd345cf107721eeb</anchor>
      <arglist>(panzer::Traits::FadType &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Sacado::mpl::enable_if&lt; Sacado::IsView&lt; T &gt; &gt;::type</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa72885901440b7927dad42d7045b584f</anchor>
      <arglist>(T x)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::EvaluationTraits::apply</name>
    <filename>structpanzer_1_1EvaluationTraits_1_1apply.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T::ScalarT</type>
      <name>type</name>
      <anchorfile>structpanzer_1_1EvaluationTraits_1_1apply.html</anchorfile>
      <anchor>acae71023ab390a439b11848284754686</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ArrayToFieldVector</name>
    <filename>classpanzer_1_1ArrayToFieldVector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ArrayToFieldVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a18c80a76fb230596fca37091f184a909</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::MultiVector&lt; ScalarT, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getGhostedDataVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a87a9a80ef407a9c28079d068f2d4e461</anchor>
      <arglist>(const std::string &amp;fieldName, const std::map&lt; std::string, ArrayT &gt; &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::MultiVector&lt; ScalarT, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getDataVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a571da2ebe00f69889f808eea3c1310ef</anchor>
      <arglist>(const std::string &amp;fieldName, const std::map&lt; std::string, ArrayT &gt; &amp;data) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getFieldMap</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>ae931a48babfd5963d988898aa33b9a28</anchor>
      <arglist>(const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getFieldMap</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a704ef54e102b89958f60c42e7b75316a</anchor>
      <arglist>(int fieldNum) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt;</type>
      <name>IntVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>ac0d743584b8d6c621775fe090637ef52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt;</type>
      <name>Map</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a63c2fb9e82e3c57f1e6af4fe03325d8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildFieldVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a10b391e111ec440d57a94f14bef07d35</anchor>
      <arglist>(const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &amp;source) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>ugi_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>ae0985d99796baed93dda8954815fa6a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const IntVector &gt;</type>
      <name>gh_reducedFieldVector_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a7a3ef789686bc506f4c1a78cbadb2744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const IntVector &gt;</type>
      <name>gh_fieldVector_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a617e1d663c11ee8c19da4bfad8bf466b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, Teuchos::RCP&lt; const Map &gt; &gt;</type>
      <name>gh_reducedFieldMaps_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a8a82d01778eaa1b3ae52abce7c873b76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, Teuchos::RCP&lt; const Map &gt; &gt;</type>
      <name>gh_fieldMaps_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a4195b6a7120724241a2ad71985d43406</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const IntVector &gt;</type>
      <name>fieldVector_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a1e5efa05049723f4837632865fa34738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, Teuchos::RCP&lt; const Map &gt; &gt;</type>
      <name>fieldMaps_</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a822de6983c6f3d1d51fc6b02e00ecda1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ArrayToFieldVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>ae14261a68655eb7f94a447373ee1145b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ArrayToFieldVector</name>
      <anchorfile>classpanzer_1_1ArrayToFieldVector.html</anchorfile>
      <anchor>a351fbec44ef6b4e27d9e3524d0df6978</anchor>
      <arglist>(const ArrayToFieldVector &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ArrayTraits</name>
    <filename>structpanzer_1_1ArrayTraits.html</filename>
    <templarg>Scalar</templarg>
    <templarg>Array</templarg>
    <member kind="typedef">
      <type>Array::size_type</type>
      <name>size_type</name>
      <anchorfile>structpanzer_1_1ArrayTraits.html</anchorfile>
      <anchor>a2b066d377f9d420ac89f619b61a69c31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::AssemblyEngine</name>
    <filename>classpanzer_1_1AssemblyEngine.html</filename>
    <templarg></templarg>
    <base>panzer::Base</base>
    <member kind="function">
      <type></type>
      <name>AssemblyEngine</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>aa38ff0c263fad9e8bb50c780e61cbfea</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a9da55c8446b3a77621c7522c9f88e3ff</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateVolume</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a4b1e635c7c6e053d96fa738b82eb3c58</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>evaluateOnlyDirichletBCs</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a26072973216420ae9e4fd05f93e79b6f</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateNeumannBCs</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a5b2ef6feefad9e524bc82af9409247d3</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateInterfaceBCs</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a7eeb315f12e390badc8b5c86acdaa59b</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>evaluateDirichletBCs</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>ab504e342b6bbb504104bea5bd0524d53</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_arguments)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt;</type>
      <name>getManagerBuilder</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a409777aced38f3f9dfb39795dd5ac972</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evaluateBCs</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>acd94e51c4cc8b0552304a46609bae136</anchor>
      <arglist>(const panzer::BCType bc_type, const panzer::AssemblyEngineInArgs &amp;input_arguments, const Teuchos::RCP&lt; LinearObjContainer &gt; preEval_loc=Teuchos::null)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt;</type>
      <name>m_field_manager_builder</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a2be0bcb6c98a00b97e91b76a0562f560</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>m_lin_obj_factory</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>af4c026ceae031e7ec0b9534593125a9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>countersInitialized_</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>adacf83f7d353190876f0e70b3e43d687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>localCounter_</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a95d22f18b70002fd0950b9bfff5b723b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>globalCounter_</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a9d19a27ae2fa2e929016047204f95ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>summedGhostedCounter_</name>
      <anchorfile>classpanzer_1_1AssemblyEngine.html</anchorfile>
      <anchor>a5de4d41b7013426a4a116ca48a01e3bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::AssemblyEngine_TemplateBuilder</name>
    <filename>classpanzer_1_1AssemblyEngine__TemplateBuilder.html</filename>
    <member kind="function">
      <type></type>
      <name>AssemblyEngine_TemplateBuilder</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateBuilder.html</anchorfile>
      <anchor>a4c1db5c22e87696dbefe48d6e26a362b</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::Base &gt;</type>
      <name>build</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateBuilder.html</anchorfile>
      <anchor>ac772a8b09f4f2476604ba91bd362f455</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt;</type>
      <name>m_fmb</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateBuilder.html</anchorfile>
      <anchor>af37de12da3625297bec8960d6ba1b4a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>m_lof</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateBuilder.html</anchorfile>
      <anchor>a0b56824ace93fb804df25544d4c6629f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::AssemblyEngine_TemplateManager</name>
    <filename>classpanzer_1_1AssemblyEngine__TemplateManager.html</filename>
    <templarg>Traits</templarg>
    <member kind="function">
      <type></type>
      <name>AssemblyEngine_TemplateManager</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateManager.html</anchorfile>
      <anchor>a840a593c068dc8fd7dce16babfdca41e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssemblyEngine_TemplateManager</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateManager.html</anchorfile>
      <anchor>ae52884fd26065794a7136b499d077e45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AssemblyEngine_TemplateManager&lt; panzer::panzer::Traits &gt;</name>
    <filename>classpanzer_1_1AssemblyEngine__TemplateManager.html</filename>
    <member kind="function">
      <type></type>
      <name>AssemblyEngine_TemplateManager</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateManager.html</anchorfile>
      <anchor>a840a593c068dc8fd7dce16babfdca41e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~AssemblyEngine_TemplateManager</name>
      <anchorfile>classpanzer_1_1AssemblyEngine__TemplateManager.html</anchorfile>
      <anchor>ae52884fd26065794a7136b499d077e45</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::AssemblyEngineInArgs</name>
    <filename>classpanzer_1_1AssemblyEngineInArgs.html</filename>
    <member kind="function">
      <type></type>
      <name>AssemblyEngineInArgs</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a270a787c70918e381155eafccb205fd7</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::LinearObjContainer &gt; &amp;ghostedContainer, const Teuchos::RCP&lt; panzer::LinearObjContainer &gt; &amp;container)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AssemblyEngineInArgs</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>ac686ea59c1cbda97b153b09967122698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a3795fb808d6b480a71693c71ccebd21f</anchor>
      <arglist>(const std::string &amp;key, const Teuchos::RCP&lt; GlobalEvaluationData &gt; &amp;ged)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addGlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a3e2ba21bcdf98aaf6013d70fc430cf3d</anchor>
      <arglist>(const GlobalEvaluationDataContainer &amp;gedc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillGlobalEvaluationDataContainer</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a29dec50ce2abe23b060195706e7cc970</anchor>
      <arglist>(GlobalEvaluationDataContainer &amp;gedc) const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; std::string, Teuchos::RCP&lt; GlobalEvaluationData &gt; &gt; &amp;</type>
      <name>getGlobalEvaluationDataMap</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a722d8c3f6cab3e35e506e74f9c4c2704</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a4305cdee7e6d2e56c103490c00dede62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::LinearObjContainer &gt;</type>
      <name>container_</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>aa52370e0471b2a1db9820a78f2cf4598</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a8bd09e8866495549cd595439d9ebc743</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beta</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>ae90582dc7d69770be5def2fe5f29cb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>aad0b776df6bd30b1258654ede1e725cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>gather_seeds</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a1f05c6e26b4ae47c18ec1cac3ad4bce9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>evaluate_transient_terms</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a9bb0c9074868ce48d6d8ffd669b32b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>first_sensitivities_name</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>abeccf580184285be35afe38f5b439a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>second_sensitivities_name</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a84b6df91762edfbdf9740a98c3b14b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>apply_dirichlet_beta</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a5f0628ed06d6de59a64cf0b72de2fe5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>dirichlet_beta</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a3b45224cc7bfce7a23def70e1b6ac032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; GlobalEvaluationData &gt; &gt;</type>
      <name>ged_map</name>
      <anchorfile>classpanzer_1_1AssemblyEngineInArgs.html</anchorfile>
      <anchor>a24438eda53a0e4d13507ac312c69b8f1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Base</name>
    <filename>classpanzer_1_1Base.html</filename>
    <member kind="function">
      <type></type>
      <name>Base</name>
      <anchorfile>classpanzer_1_1Base.html</anchorfile>
      <anchor>ac4a20017b3a1fd17d37eca2d234628f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Base</name>
      <anchorfile>classpanzer_1_1Base.html</anchorfile>
      <anchor>ad15f2814df497315b9668b66142ab4b7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::basic_ios_all_saver</name>
    <filename>classpanzer_1_1basic__ios__all__saver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>::std::basic_ios&lt; Ch, Tr &gt;</type>
      <name>state_type</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>ad3704a6dfd7d1a9e7cf0e51e81a88fdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_ios_all_saver</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>ab73bcb65f40d9de08c4f3dc651c8b7ac</anchor>
      <arglist>(state_type &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_ios_all_saver</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a3f0588cc3d664630598794a59dd4ec12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>restore</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>adafe4fced83aedcc4d2d5b6fd97f9093</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>basic_ios_all_saver &amp;</type>
      <name>operator=</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a1c932dfdc93e1c6d121c2a3ccb6c2f52</anchor>
      <arglist>(const basic_ios_all_saver &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>state_type &amp;</type>
      <name>s_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a02b47e4c30804f8665d379095ffdc10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>state_type::fmtflags const</type>
      <name>a1_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a81d628dd0d22ba017368a207fb25bc26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>::std::streamsize const</type>
      <name>a2_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a82bc8edd859af3dfd8d4bccefc0607ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>::std::streamsize const</type>
      <name>a3_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>ac7ade5bc7cabdb97eeaf50edcdeaf9db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>state_type::iostate const</type>
      <name>a4_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a86b0a45c6ab339fc1da3e4e82124b10e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>state_type::iostate const</type>
      <name>a5_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a68e30aea6e3932ed67cc4b73089ca276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>::std::basic_ostream&lt; Ch, Tr &gt; *const</type>
      <name>a6_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a17443e0f61b858ef24f8e5e1b5d46de0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>::std::basic_streambuf&lt; Ch, Tr &gt; *const</type>
      <name>a7_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a56988eba833006dfe7ac10af5daec78d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>state_type::char_type const</type>
      <name>a8_save_</name>
      <anchorfile>classpanzer_1_1basic__ios__all__saver.html</anchorfile>
      <anchor>a32b14bd8d5b1b3e6b7ed762bca88e657</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Basis_Constant</name>
    <filename>classpanzer_1_1Basis__Constant.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Basis_Constant</name>
      <anchorfile>classpanzer_1_1Basis__Constant.html</anchorfile>
      <anchor>ac80bf176fb9a7e8ab03b8400bf9c7c32</anchor>
      <arglist>(const shards::CellTopology &amp;ct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValues</name>
      <anchorfile>classpanzer_1_1Basis__Constant.html</anchorfile>
      <anchor>aeacae02079ac9471cd9d9a78ecb2feca</anchor>
      <arglist>(ArrayScalar &amp;outputValues, const ArrayScalar &amp;inputPoints, const Intrepid2::EOperator operatorType) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getValues</name>
      <anchorfile>classpanzer_1_1Basis__Constant.html</anchorfile>
      <anchor>a70367e1432e8c51ce99b8e4ad7160b4e</anchor>
      <arglist>(ArrayScalar &amp;outputValues, const ArrayScalar &amp;inputPoints, const ArrayScalar &amp;cellVertices, const Intrepid2::EOperator operatorType=Intrepid2::OPERATOR_VALUE) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeTags</name>
      <anchorfile>classpanzer_1_1Basis__Constant.html</anchorfile>
      <anchor>a5ac950223d07397588bcf2955e1f8a61</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BasisInformation</name>
    <filename>classpanzer_1_1BasisInformation.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>EElementSpace</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HGRAD</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6af6be4eb326fab6b13e4803aac48f426c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HCURL</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a66d1462875e2de0607aee031a5b8fa69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HDIV</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a0a8055b2d4cef0f84450243b0e847cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a1f622a68a6f724f347f19263e6e235b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HGRAD</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6af6be4eb326fab6b13e4803aac48f426c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HCURL</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a66d1462875e2de0607aee031a5b8fa69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HDIV</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a0a8055b2d4cef0f84450243b0e847cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1cd6eb6cdd9810d6d8648a89119bbee6a1f622a68a6f724f347f19263e6e235b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisInformation</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a8d315014318ba5288e71a01e56f98df7</anchor>
      <arglist>(const std::string &amp;basis_type, const int basis_order, const shards::CellTopology &amp;cell_topo)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>add3758afa8cb3560112bdd8f070a896d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>order</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>ac2a26ae2232993a810aa9dca8a0daca6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const shards::CellTopology &amp;</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a991dda70e2264c4dfc57e37491a877d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>ae8d4a971a16e70651a37152363b0af46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EElementSpace</type>
      <name>getElementSpace</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1d74521f01233309b15f7c6e175932ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresOrientations</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a6b0457dd53ad6be963e013b0b2b7858a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsGrad</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>acf03705038489a8c543795395230364f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCurl</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>aa4e1154a8c89207cdac71b46a8337026</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsDiv</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a12653deddc404fadddbbb7aee5618b85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVectorBasis</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>aa3573f38cccea95f86cfd4b873216faa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScalarBasis</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a377c1f3da16901df97500a056dca4df1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>shards::CellTopology</type>
      <name>topology_</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a9b2131bf62db7af7b1c3d0bf58f21740</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_type_</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>ad57eb21c2cae8ab71f09dcc781ab9af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_order_</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a5d011a90db889d1d1acdd7cf0b521a08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EElementSpace</type>
      <name>element_space_</name>
      <anchorfile>classpanzer_1_1BasisInformation.html</anchorfile>
      <anchor>a1ad22f2929089c5d182b2247bc1c18a4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BasisIRLayout</name>
    <filename>classpanzer_1_1BasisIRLayout.html</filename>
    <member kind="function">
      <type></type>
      <name>BasisIRLayout</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a6c76ecc073ac86e0a952bd0539fd3996</anchor>
      <arglist>(std::string basis_type, const int basis_order, const PointRule &amp;int_rule)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisIRLayout</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a32e771777bdf6b27f969bc6592d6a0c3</anchor>
      <arglist>(const Teuchos::RCP&lt; const PureBasis &gt; &amp;b, const PointRule &amp;int_rule)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>aba00720f4ca1e7dda0238008b7e2a4f9</anchor>
      <arglist>(const panzer::PointRule &amp;int_rule)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cardinality</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a7163123a27a7aaaed4dd836a40f5bd85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numCells</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>ae3a95822f3c56eb1d76c5fbc1e2a14cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>ad5fa2a7e9a9dfaedbba39839ea87cb79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a0f28f0394e54c3b7d49437578603c619</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>ac7feb9339bd225d5394b463ca110c051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldName</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>adc6d446d533e935b73ee52e305dffadc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldNameD1</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a9bae7789b2a26caae7776d85afdcb121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldNameD2</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a12dee1f888be1fee704648412fb7fb97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt;</type>
      <name>getIntrepid2Basis</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a9cacbe017cb62fe84c1355a56358696f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>getBasis</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a4d40389b8c8982f19adcfcfc41f1b8e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>ac78f9adb30c97679a78ce71947dbc5bf</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const CellTopologyInfo &gt;</type>
      <name>getCellTopologyInfo</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a00ff8e11aa42592e5ea8d5fa0abf9bb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis_ref</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a9a35475dcb9c23a1afd9878083236b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>aabcb1f37436ed30f1cff7b4b373ab4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis_grad_ref</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a7b8eb4d56f96ceb40a44725ca1780761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis_grad</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a0ee1ea044352d2f5ba4ac74750e21092</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis_D2_ref</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a5cb28e441d8a466853b7929d7349ef43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>basis_D2</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a407bf6a91778ef612c6e4c24024ad44b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a240ba1cdfa4dac6e9890c02c93339cb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional_grad</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>af6387a6383f2e5754efc08225cf49c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional_D2</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a59ee62f3ce2aa63582e2682c4e379c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name_</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a4190a508c07bf20b318123dfd6fbca93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_cells_</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>abd85f5b676ae14de5e16f69ad8dfb608</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_points_</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a72ff02d5b36b072a4d0d563dde2c080a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dimension_</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>aaa96940270d91a0faad53e73c269ab68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis_data_</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a12eaac2b68cf91d9f560cc8b49104c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const CellTopologyInfo &gt;</type>
      <name>cell_topo_info</name>
      <anchorfile>classpanzer_1_1BasisIRLayout.html</anchorfile>
      <anchor>a3f011b25afe7d42187c0562e08afce07</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BasisValues2</name>
    <filename>classpanzer_1_1BasisValues2.html</filename>
    <templarg>Scalar</templarg>
    <member kind="typedef">
      <type>ArrayTraits&lt; Scalar, PHX::MDField&lt; Scalar, void, void, void, void, void, void, void, void &gt; &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a99d23978e8811124ed936a4b405f0f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>ArrayDynamic</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a677b154cfe6cdb4199ff030b8401db39</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, BASIS, IP, void, void, void, void, void, void &gt;</type>
      <name>Array_BasisIP</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>af6de1945873c3622d65b486bc15c05f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, BASIS, IP, void, void, void, void, void &gt;</type>
      <name>Array_CellBasisIP</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ae74f17aeb8070a2a1195d61a595bb7b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, BASIS, IP, Dim, void, void, void, void, void &gt;</type>
      <name>Array_BasisIPDim</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a074f758654ce180a515746e1972680bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, BASIS, IP, Dim, void, void, void, void &gt;</type>
      <name>Array_CellBasisIPDim</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a9184141da925c53c361104dfab447a56</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, BASIS, Dim, void, void, void, void, void, void &gt;</type>
      <name>Array_BasisDim</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>abb0dd1b36b0d058644844fb883a2e5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, BASIS, Dim, void, void, void, void, void &gt;</type>
      <name>Array_CellBasisDim</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>aa4f8c39872577b76a7e4007c4874eb16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisValues2</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ace681538f85262fdde9cff6cef9f6354</anchor>
      <arglist>(const std::string &amp;pre=&quot;&quot;, bool allocArrays=false, bool buildWeighted=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArrays</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>adec80f6ced9b8e33aa5fcb5a3caf4a44</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::BasisIRLayout &gt; &amp;basis, bool computeDerivatives=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a2043f6c1e18380307978b376cd129f80</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, IP, Dim, void, void, void, void, void, void &gt; &amp;cub_points, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac, const PHX::MDField&lt; Scalar, Cell, IP, void, void, void, void, void, void &gt; &amp;jac_det, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac_inv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a5b3a870bad2dd9434947579d080644a9</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, IP, Dim, void, void, void, void, void, void &gt; &amp;cub_points, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac, const PHX::MDField&lt; Scalar, Cell, IP, void, void, void, void, void, void &gt; &amp;jac_det, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac_inv, const PHX::MDField&lt; Scalar, Cell, IP &gt; &amp;weighted_measure, const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;vertex_coordinates, bool use_vertex_coordinates=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValuesCV</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ac0d950daa49f6575b0746727665b0858</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, IP, Dim, void, void, void, void, void &gt; &amp;cell_cub_points, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac, const PHX::MDField&lt; Scalar, Cell, IP, void, void, void, void, void, void &gt; &amp;jac_det, const PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt; &amp;jac_inv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyOrientations</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>aa652285b6fa8ab7ddaae5909fdbfb7ad</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, BASIS &gt; &amp;orientations)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setExtendedDimensions</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a44467bd3abcce8a859ec11693b38e730</anchor>
      <arglist>(const std::vector&lt; PHX::index_size_type &gt; &amp;ddims)</arglist>
    </member>
    <member kind="function">
      <type>PureBasis::EElementSpace</type>
      <name>getElementSpace</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ac4747612a690751cfd73593e60ba4a28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIP</type>
      <name>basis_ref_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ad2df3e3c9786ecf3b916b2c049e96184</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>basis_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a1e9c0ac5593ef86930054a6f82e550ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIPDim</type>
      <name>basis_ref_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>acbdb5348e77f031865f075b49760528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>basis_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ab3bd1af999e1e3834749c822fc8fc381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIPDim</type>
      <name>grad_basis_ref</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a245975d712a3f11fc42ddc63906d38e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>grad_basis</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ade3b3eb127f22b48157a5c0e98856a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIP</type>
      <name>curl_basis_ref_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a38c00e34a5e3734c9809a77a1266004d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>curl_basis_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a6a30d100802f6bd6a6206c38706424e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIPDim</type>
      <name>curl_basis_ref_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a9825aada468d084459dee98d25d73893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>curl_basis_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a60816b32c67669348b12c0e5c7013f27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisIP</type>
      <name>div_basis_ref</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a9eea541817b13b770e50b922cf27bf40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>div_basis</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>aac50b3585559f9d12106a66d290b941c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>weighted_basis_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ae120e709e22927829761b09733ddeaee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>weighted_basis_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ae426532a307e45672a6e014208db531f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>weighted_grad_basis</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a46ddaf73dc9b12991a54842a44cc5f0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>weighted_curl_basis_scalar</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a41a5ddf468278b93d4742001fd8979be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIPDim</type>
      <name>weighted_curl_basis_vector</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a353143f1424d38bbf3b40c80c96b2b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisIP</type>
      <name>weighted_div_basis</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a0cc93e2cfd21ab65fcac170570fde757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_BasisDim</type>
      <name>basis_coordinates_ref</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a3a0881ea2586b3262938830f2204ed20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBasisDim</type>
      <name>basis_coordinates</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ab7689ff7c5169ae06b1fbc910940b6e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::BasisIRLayout &gt;</type>
      <name>basis_layout</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a10f64a1403433cdd8af2ae2358ff2bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; Scalar, ArrayDynamic &gt; &gt;</type>
      <name>intrepid_basis</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a72e97102c30217b937ed11e784ca5468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>compute_derivatives</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a9fcda2e693e705598ccc3da3b582ea27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>build_weighted</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a935901ce35b47fb7b795568f37d0c7c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>alloc_arrays</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>aba63349b841194220ddce7ecddaafe85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a34080a6e5dea34282f8ad7f4a758ed97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::index_size_type &gt;</type>
      <name>ddims_</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>a9910868e84e622b662791bdcff7bcbc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evaluateReferenceValues</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>afd0cf169d4a4bc2e6af935bc8a360968</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, IP, Dim &gt; &amp;cub_points, bool compute_derivatives, bool use_vertex_coordinates)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>references_evaluated</name>
      <anchorfile>classpanzer_1_1BasisValues2.html</anchorfile>
      <anchor>ac8ec9f606d10243d2856b9e7c06ea5a2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BC</name>
    <filename>classpanzer_1_1BC.html</filename>
    <class kind="struct">panzer::BC::BCEquality</class>
    <class kind="struct">panzer::BC::BCHash</class>
    <member kind="function">
      <type></type>
      <name>BC</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>afe75c2c320169d870fb741957960ea04</anchor>
      <arglist>(std::size_t bc_id, BCType bc_type, std::string sideset_id, std::string element_block_id, std::string equation_set_name, std::string strategy)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BC</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a5f63c8afa783ac7d92f25eb46ea20f06</anchor>
      <arglist>(std::size_t bc_id, BCType bc_type, std::string sideset_id, std::string element_block_id, std::string equation_set_name, std::string strategy, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BC</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a2862f74ba8756678270ed1b78d39f0f3</anchor>
      <arglist>(std::size_t bc_id, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BC</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a7fcdc92614cf4d2f91b8d98b17e48921</anchor>
      <arglist>(std::size_t bc_id, const Teuchos::ParameterList &amp;p, const Teuchos::RCP&lt; panzer::GlobalData &gt; gd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BC</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a540b71f0bcc5af843e544458f181c221</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>bcID</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a43358508b0268a89f20c92a233bf91fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>BCType</type>
      <name>bcType</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>ac1f3ec24e132ad45663099069db4ec39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>sidesetID</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a16419fb09ad220def67eba253b63a3b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementBlockID</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a0652fa902d398f11e3578696ba0db68e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementBlockID2</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a74f56371ba3ed21489fcd2021d8fb8d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>equationSetName</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>abfa7baa353d3c8c87b5af5bf70bf4ba1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>equationSetName2</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>aedc6372e64eefb94e7390de096f1f5e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>strategy</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a155c8e352045c36f95b67b9cda2b124f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a906a62c35c7fc2445ca0ef8de1d5341b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>global_data</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>afb91e12b55b29cfce2a5b6b8f396acce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>nonconstParams</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a0cc3c89d96ac68be7b5b886b5ba818a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>identifier</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a3957561ba83491a7b69df0be6429ac46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a5e3686a6c817aac118ad46a4888626df</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateParameters</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>ac59d5c775a3cb0b4076b903380c28e88</anchor>
      <arglist>(Teuchos::ParameterList &amp;p) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>m_bc_id</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>ac4a96b25a8426c44dc32940dbe0540b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BCType</type>
      <name>m_bc_type</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a38f5aac8adaf53b7304871af67471ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_sideset_id</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a90b40dac047a1bbeadb115d761477c94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_element_block_id</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a9458590cc41a790e9ae12a0a934619e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_element_block_id2</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a6bbf133027e3ac41e54baf29af8389c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_equation_set_name</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a39d953847042046286de72a744749b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_equation_set_name2</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a9f4096bfff655b20e5589f30a2c831b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_strategy</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a07fb8d13cb5ea96c3375fd3ec051f9a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>m_params</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>ada3b020cda2676ce289cec183f44dcff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>m_gd</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a12a0ba3e76ff6559db43ed766b81d12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildBCs</name>
      <anchorfile>classpanzer_1_1BC.html</anchorfile>
      <anchor>a220aae565d2e3c2cfeadb9f970e001ed</anchor>
      <arglist>(std::vector&lt; panzer::BC &gt; &amp;bcs, const Teuchos::ParameterList &amp;p, const Teuchos::RCP&lt; panzer::GlobalData &gt; global_data)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BC::BCEquality</name>
    <filename>structpanzer_1_1BC_1_1BCEquality.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1BC_1_1BCEquality.html</anchorfile>
      <anchor>abcdd1b9e31b80f8047fd99d1f470a3ef</anchor>
      <arglist>(const BC &amp;bc1, const BC &amp;bc2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BCFactoryComposite</name>
    <filename>structpanzer_1_1BCFactoryComposite.html</filename>
    <base>panzer::BCStrategyFactory</base>
    <member kind="function">
      <type></type>
      <name>BCFactoryComposite</name>
      <anchorfile>structpanzer_1_1BCFactoryComposite.html</anchorfile>
      <anchor>a3b628cdb0c94e6b4f6e1444bec3f0a12</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::BCStrategyFactory &gt; &gt; &amp;factories)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BCStrategy_TemplateManager&lt; panzer::Traits &gt; &gt;</type>
      <name>buildBCStrategy</name>
      <anchorfile>structpanzer_1_1BCFactoryComposite.html</anchorfile>
      <anchor>a86d6d030f92ea096f0e627f6b3ded235</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::BCStrategyFactory &gt; &gt;</type>
      <name>m_bc_strategy_factories</name>
      <anchorfile>structpanzer_1_1BCFactoryComposite.html</anchorfile>
      <anchor>ad9d44e306ba5891a35c4028829058d79</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::response_bc_adapters::BCFactoryResponse</name>
    <filename>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</filename>
    <base>panzer::BCStrategyFactory</base>
    <member kind="typedef">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>RespFact_TM_Vector</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</anchorfile>
      <anchor>a290b25d7f855f57b28df5b3acf28d267</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; BC, Teuchos::RCP&lt; RespFact_TM_Vector &gt;, BC::BCHash, BC::BCEquality &gt;</type>
      <name>BCHashMap</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</anchorfile>
      <anchor>a94a5cbe1f7d4b6ce3cc2d7342f69dde6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BCFactoryResponse</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</anchorfile>
      <anchor>a682873692c677ed773087eee08936f95</anchor>
      <arglist>(const BCHashMap &amp;hashMap)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BCStrategy_TemplateManager&lt; panzer::Traits &gt; &gt;</type>
      <name>buildBCStrategy</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</anchorfile>
      <anchor>ad82a60613cc69d53c5cb53912a7e076a</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BCHashMap</type>
      <name>hashMap_</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCFactoryResponse.html</anchorfile>
      <anchor>a27d8fce0630f120565fa5e8f8ef9dad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BC::BCHash</name>
    <filename>structpanzer_1_1BC_1_1BCHash.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1BC_1_1BCHash.html</anchorfile>
      <anchor>a3cac4bcf1cd7a5d4518f2c25728b85b5</anchor>
      <arglist>(const BC &amp;bc) const </arglist>
    </member>
    <member kind="variable">
      <type>std::hash&lt; std::string &gt;</type>
      <name>hash</name>
      <anchorfile>structpanzer_1_1BC_1_1BCHash.html</anchorfile>
      <anchor>a05827cc5dffa37573680442ae488e189</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy</name>
    <filename>classpanzer_1_1BCStrategy.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategyBase</base>
    <member kind="function">
      <type></type>
      <name>BCStrategy</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>a46c5b39c4f024f5e29d419e0382180a8</anchor>
      <arglist>(const panzer::BC &amp;bc)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategy</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>a33cc1ca03763840cad9b5103c901134c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>aacfcfdf2e92f05059a4ecc751a9780ca</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>a1689e11da59fdac6259b3489f740bc75</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>a40a9381468583a07b80d472b7fe05317</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>acad519e7a0d24cd3a27b8c609f504f79</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const panzer::BC</type>
      <name>m_bc</name>
      <anchorfile>classpanzer_1_1BCStrategy.html</anchorfile>
      <anchor>a3b7433234f2d8d8bb3123f6effe92855</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy_Dirichlet_DefaultImpl</name>
    <filename>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategy</base>
    <base>panzer::GlobalDataAcceptorDefaultImpl</base>
    <class kind="struct">panzer::BCStrategy_Dirichlet_DefaultImpl::DOFDescriptor</class>
    <member kind="function">
      <type></type>
      <name>BCStrategy_Dirichlet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a714496ee7322385f159a06c296691bb3</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const bool check_apply_bc=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategy_Dirichlet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a2ca4023be80a00cbbb5947d798b0053b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a2f861dc3dc1d76fc74833ef59dce782b</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a1fbc8a7cf568c680cc18c8281505da27</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a1fbfd6f95edce47295036f4c4a7e9479</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;pb, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a180d2aea39130f7064ddef3c136243a8</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a882a6f6fd2c3e10f1df92786716b6ce5</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; std::string, DOFDescriptor &gt;::const_iterator</type>
      <name>DescriptorIterator</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a51d0b62cf861dcaa3818303e65610d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildDescriptorMapFromVectors</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a2b4a9e74dac00527f1d944b4ea1225b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOF</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>abdf182f2b383df4878c90f14772fe0b9</anchor>
      <arglist>(const std::string &amp;dofName)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addCoefficientTarget</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>aacabf02cb91202eaac21829e0e238f09</anchor>
      <arglist>(const std::string &amp;targetName, const std::string &amp;dofName, const std::string &amp;residualName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addTarget</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>aadbf4b1ca7bac2f2487a9d37bb04ffe1</anchor>
      <arglist>(const std::string &amp;targetName, const std::string &amp;dofName, const std::string &amp;residualName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDotTarget</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>aace93c229aff89f1525eb25fdb572d21</anchor>
      <arglist>(const std::string &amp;targetName, const std::string &amp;dofName, const std::string &amp;dotName=&quot;&quot;, const std::string &amp;residualName=&quot;&quot;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, DOFDescriptor &gt;</type>
      <name>m_provided_dofs_desc</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>ac023a56effeef427738bff6b1f70e4b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>required_dof_names</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>ace96579c628e23fbd31b8c5e479a6870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>residual_to_dof_names_map</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a90f1c5bd1f38c5fa3cf1aec4e5fe7f2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::string &gt;</type>
      <name>residual_to_target_field_map</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a47da4b58793b86fa05ee3b91eae13a53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>check_apply_bc</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>a6f8a841a19c5b1ae0b00d9908fcdde8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>descriptor_map_built</name>
      <anchorfile>classpanzer_1_1BCStrategy__Dirichlet__DefaultImpl.html</anchorfile>
      <anchor>ad77f2a3d516eac3cb0facc5da793ac74</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy_Interface_DefaultImpl</name>
    <filename>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategy</base>
    <base>panzer::GlobalDataAcceptorDefaultImpl</base>
    <base>EvaluatorWithBaseImpl&lt; panzer::Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>BCStrategy_Interface_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>ac9b6bd9e39715aca36a0a02649a6b751</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategy_Interface_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>ae65d6189f2fc8e8300a59da1bab7e5cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>m_residual_contributions</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a8aae65af7367f0b1b4dd7bb9c3de99cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_required_dof_names</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a088818d4ba72cd530a3ec838e6dcea53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a87dd5759eb69f9ac2a28e24dcce4a7de</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>af74cf9d5fcc7612eeb1046c777f7d9c0</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a78064a06a099bffe4fe2600bf9f0bafa</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>ae9405513443f8651b947d4b05b7162c7</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a445535f922b36d58e87d552de2fc0d30</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>acb8edd478a2051b58a5757b035d4a2a4</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a729e6ac32cd2c1827030e47e2ec41713</anchor>
      <arglist>(typename Traits::EvalData d)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requireDOFGather</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a1ca9178b423dc8f876256e41a3ed6939</anchor>
      <arglist>(const std::string required_dof_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addResidualContribution</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a8c23282a78d6513f07b1be3d01858ce8</anchor>
      <arglist>(const std::string residual_name, const std::string dof_name, const std::string flux_name, const int integration_order, const panzer::PhysicsBlock &amp;side_pb)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>getResidualContributionData</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a1625bf766ce81341352730610f2fbbff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const panzer::BC</type>
      <name>bc</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>aa7b3a0cbf84d10e08ecff4ec7c01150c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::PureBasis &gt;</type>
      <name>getBasis</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a9b19f9234324dfe0dea7fd70a6101572</anchor>
      <arglist>(const std::string dof_name, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::IntegrationRule &gt;</type>
      <name>buildIntegrationRule</name>
      <anchorfile>classpanzer_1_1BCStrategy__Interface__DefaultImpl.html</anchorfile>
      <anchor>a1faecb5a928a478d605ee171fd746ef5</anchor>
      <arglist>(const int integration_order, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy_Neumann_DefaultImpl</name>
    <filename>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategy</base>
    <base>panzer::GlobalDataAcceptorDefaultImpl</base>
    <base>EvaluatorWithBaseImpl&lt; panzer::Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>BCStrategy_Neumann_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a0606e4800a140592f3d0540093b499aa</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategy_Neumann_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a68b52c781bec581be9b3545fd74e4d2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>m_residual_contributions</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a4526107b993bb23dd053c59880ecf41c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_required_dof_names</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a87bb4ba1a2bd6b40d27d70cda69b35df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>aae9e9facbbd6570d1a36bfe04d4fac86</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a1a9680628e45c6cd29d9aec62e77f50b</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>ae575788b5346460b51f0239ef515db9f</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>ac8ae30791d351295a2367e354f71b064</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>ab472483483c255d88a7b0c012cbb8245</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>aae7646028f5c41fca2b711bdb8f96f80</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a9ea14d08ba06cfee54122c376da33330</anchor>
      <arglist>(typename Traits::EvalData d)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requireDOFGather</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>ab980a382c44e11b5f3474329f9e2637b</anchor>
      <arglist>(const std::string required_dof_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addResidualContribution</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>a3cb4072b40bccacf09c7ee9e561488c1</anchor>
      <arglist>(const std::string residual_name, const std::string dof_name, const std::string flux_name, const int integration_order, const panzer::PhysicsBlock &amp;side_pb)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>getResidualContributionData</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>abbda73ce9784a0d8ae84031299624e25</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const panzer::BC</type>
      <name>bc</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>aef73cd07dd49200a97ebc9c5b1940f5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::PureBasis &gt;</type>
      <name>getBasis</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>ad5ba203d94c8eb338f95c7daf75d722d</anchor>
      <arglist>(const std::string dof_name, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::IntegrationRule &gt;</type>
      <name>buildIntegrationRule</name>
      <anchorfile>classpanzer_1_1BCStrategy__Neumann__DefaultImpl.html</anchorfile>
      <anchor>aeb3bf05dcce0bfc0d322588a706fa609</anchor>
      <arglist>(const int integration_order, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy_TemplateManager</name>
    <filename>classpanzer_1_1BCStrategy__TemplateManager.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>BCStrategy_TemplateManager</name>
      <anchorfile>classpanzer_1_1BCStrategy__TemplateManager.html</anchorfile>
      <anchor>a128f53ffdd45d222f988941a65eac679</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~BCStrategy_TemplateManager</name>
      <anchorfile>classpanzer_1_1BCStrategy__TemplateManager.html</anchorfile>
      <anchor>a76205e87f884ddb814ff14a5a838c60c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::response_bc_adapters::BCStrategy_TM_ResponseAdapterBuilder</name>
    <filename>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</filename>
    <member kind="typedef">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>RespFact_TM_Vector</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</anchorfile>
      <anchor>aaee98d33e83a27225962126bd216c48b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BCStrategy_TM_ResponseAdapterBuilder</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</anchorfile>
      <anchor>a6a3ba496af0b876acdef879e64efd92f</anchor>
      <arglist>(const BC &amp;bc, const RespFact_TM_Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; BCStrategyBase &gt;</type>
      <name>build</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</anchorfile>
      <anchor>af1a3dc454b54b99cc65fb83622d5c0e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>const BC &amp;</type>
      <name>bc_</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</anchorfile>
      <anchor>a76f5df8cf305a6171edeff1baed64149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const RespFact_TM_Vector &amp;</type>
      <name>vec_</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1BCStrategy__TM__ResponseAdapterBuilder.html</anchorfile>
      <anchor>a732187f062d57222dbc08f98d588e237</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategy_WeakDirichlet_DefaultImpl</name>
    <filename>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategy</base>
    <base>panzer::GlobalDataAcceptorDefaultImpl</base>
    <base>EvaluatorWithBaseImpl&lt; panzer::Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>BCStrategy_WeakDirichlet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>aafd9b870cf7a4dcbdc12ae263dee5a94</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategy_WeakDirichlet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a51c864e74ad81a4b8b35cb8faf972911</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>m_residual_contributions</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a1171f8212dd2e030cc32fc9da1cf45ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_required_dof_names</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>aad7e0523eb166883b873baca2666ef9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a2833250469b5e959502c3e346f926fe5</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a54f37dbaf7de7145345cf034fd9ee270</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>abfff441582d4feda281300c70d7272b6</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a9bd244f9a8db92357fa100505ff46eff</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a48698b0197f6fb6646b6454aa7e5b118</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>aed2801decd00c87fccd261bf464d7e1c</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>aa7857c1a482cb756a1fc35d6d4c57f73</anchor>
      <arglist>(typename Traits::EvalData d)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>requireDOFGather</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>ae0901b550ea4329953f00407811c9307</anchor>
      <arglist>(const std::string required_dof_name)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>addResidualContribution</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>aa662ad0927c8cc58e767c5b8681e5844</anchor>
      <arglist>(const std::string residual_name, const std::string dof_name, const std::string flux_name, const int integration_order, const panzer::PhysicsBlock &amp;side_pb)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::tuple&lt; std::string, std::string, std::string, int, Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &gt;</type>
      <name>getResidualContributionData</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a75c5d2ab3be929bbcf33c03cdde8c6c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const panzer::BC</type>
      <name>bc</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>adbd2cd09511b886894d1157116d83558</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::PureBasis &gt;</type>
      <name>getBasis</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>ac9de89c885430bc6fa20f3164c502e84</anchor>
      <arglist>(const std::string dof_name, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; panzer::IntegrationRule &gt;</type>
      <name>buildIntegrationRule</name>
      <anchorfile>classpanzer_1_1BCStrategy__WeakDirichlet__DefaultImpl.html</anchorfile>
      <anchor>a055feb01099a84624140957f3329c5c4</anchor>
      <arglist>(const int integration_order, const panzer::PhysicsBlock &amp;side_pb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BCStrategyBase</name>
    <filename>classpanzer_1_1BCStrategyBase.html</filename>
    <base>panzer::EvaluatorsRegistrar</base>
    <member kind="function">
      <type></type>
      <name>BCStrategyBase</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>afb0faf5ce9c3901959b1eca51b7d1cdf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategyBase</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>ae353bb3a1a2e57f97804a0df27e4b0bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>ad09ac65e72c27e6478cf688b2aadd90b</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>a84fc3494d700b2deda9649e4724fa1ba</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>a51998a1d244341da4d7e12280e20d5f3</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1BCStrategyBase.html</anchorfile>
      <anchor>a12b97946eb650088d07064c8655908a3</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BCStrategyFactory</name>
    <filename>structpanzer_1_1BCStrategyFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>BCStrategyFactory</name>
      <anchorfile>structpanzer_1_1BCStrategyFactory.html</anchorfile>
      <anchor>a7366934e7f9117cac9fcea848fada87b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BCStrategyFactory</name>
      <anchorfile>structpanzer_1_1BCStrategyFactory.html</anchorfile>
      <anchor>ab6b4747957c95bda2b34835f4aad1b64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::BCStrategy_TemplateManager&lt; panzer::Traits &gt; &gt;</type>
      <name>buildBCStrategy</name>
      <anchorfile>structpanzer_1_1BCStrategyFactory.html</anchorfile>
      <anchor>a3dbe10f01fb916f4585aa3344731701e</anchor>
      <arglist>(const panzer::BC &amp;bc, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedDOFManager</name>
    <filename>classpanzer_1_1BlockedDOFManager.html</filename>
    <templarg>LocalOrdinalT</templarg>
    <templarg>GlobalOrdinalT</templarg>
    <base>UniqueGlobalIndexer&lt; LocalOrdinalT, std::pair&lt; int, GlobalOrdinalT &gt; &gt;</base>
    <class kind="struct">panzer::BlockedDOFManager::LessThan</class>
    <member kind="typedef">
      <type>std::pair&lt; int, GlobalOrdinalT &gt;</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a2cf157dcafc3d4cffd0e0fdfebc87b18</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinalT</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>aa8b028fc23c46e406904020a838743f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; int, std::string &gt;::const_iterator</type>
      <name>const_field_iterator</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a7aea2f14d92ab2c0f7a100a199cc5b94</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedDOFManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a43707c58c09d559f30fc07c90e4ca704</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedDOFManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a6ef6db3964b7d4579fcca8ad0797e903</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedDOFManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a629bfa18ce1235a0166ffd6d19d09970</anchor>
      <arglist>(const Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;connMngr, MPI_Comm mpiComm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga24c0f1854034109d12d2253f90332708</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldNum</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>gace441456624d863c096c77756356bd4e</anchor>
      <arglist>(const std::string &amp;str) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFieldString</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga49b09e7380345521bdde18f09d9f199f</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga22af41cb31d6400bf7cc33e2aa8e7833</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>gabb7a5ffee685e44013e18db96cc8f226</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga980b8c9a38ed50f0e1c46f7601e77c3d</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga4aa15d87b8840502311f999d6db42af9</anchor>
      <arglist>(const std::string &amp;block) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementGIDs</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga2d112f110f353e51b1f9a45e47533bee</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; GlobalOrdinal &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementOrientation</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga456c816ce4f1a65b7109f57e63dfaeb5</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga12893598ca2d4f7bebddf344131de280</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga58ca4767a2fef44eee501096832afb02</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga75ac5db5a226b7bccd591e6af7fb4730</anchor>
      <arglist>(std::vector&lt; GlobalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga11ea7f6172eb8d854604d99239f672cb</anchor>
      <arglist>(std::vector&lt; GlobalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ownedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga06144b6e4ded98792419dfb246b313db</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinal &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ae87f7649564d92c8949e31cb2d993e87</anchor>
      <arglist>(bool useFEI)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a322368bdec3c2d05772fc87002391955</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a2f4a8690d3154b3b42a2b2f47a362658</anchor>
      <arglist>(const Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;connMngr, MPI_Comm mpiComm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getGeometricFieldPattern</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a317d00861588846f25a5f6fbdec5820c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>resetIndices</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>aeeccf5fb9fcae7e89fc396c37224dc37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a68903873265244bf967000eadf789865</anchor>
      <arglist>(const std::string &amp;str, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addField</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>af9affef2d5a93f47ed855cadf680f5cb</anchor>
      <arglist>(const std::string &amp;blockId, const std::string &amp;str, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFieldOrder</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>aa6ec864439de578407a17dcfa1b7da01</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;fieldOrder)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFieldBlocks</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a60a7e4f78b1a2bef8a823823733f0924</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a7f845deff98b816e825ea0cf42e688f6</anchor>
      <arglist>(std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;fieldOrder) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a00a88676833daff82205c07ece009754</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getFieldPattern</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>adb2f7d18633d5e5ebcd9109c94e8e7a0</anchor>
      <arglist>(const std::string &amp;blockId, const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>acf5a59ba13ebdde1c6171c609ce5a614</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>getConnManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ac5db0894ed8389095949e21ac5bec13b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>getConnManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a0bcfb0c903adeaf0f6e6ae5a1004531b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>getConnManagerBase</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a4f49244cb70f89ab9456d6dd1676c41a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a2d72625eb29b21941eef9d5c75930198</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ac1c4125b78ebe609ab4c3046f8f90933</anchor>
      <arglist>(const Teuchos::RCP&lt; const FieldPattern &gt; &amp;geomPattern)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>aa18362ffdd5611ee35601c4db51104c3</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;fieldBlockManagers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printFieldInformation</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a0f9b9a5ba7d2a3c2c2a645f06a1bf85d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validFieldOrder</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a901c260a1d63fe4e6e33720e3da2eeab</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;fieldOrder_ut, const std::set&lt; std::string &gt; &amp;fields) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerFields</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a17d872b92e75f9799dd0566d41b6d50b</anchor>
      <arglist>(bool buildSubUGIs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fieldsRegistered</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a4e67b6b15b280c975d141762f996541f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;</type>
      <name>getFieldDOFManagers</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a5d95b9877420ad1fa62832f3dc1a1611</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxSubFieldNumber</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a0f4292966ea649f3db339c9b93d8a3ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a4751fc5d9d9a958cfb0863b7357dfa6e</anchor>
      <arglist>(int fieldNum) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockGIDOffset</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a49287a0d9f6f67f92c905cbbe75c4f5f</anchor>
      <arglist>(const std::string &amp;elementBlock, int fieldBlock) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOrientationsRequired</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a0e4ad9176b4c44e24f26c5673578abbb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientationsRequired</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>aff1da2b699a222f2c71fb04a6422051b</anchor>
      <arglist>(bool ro)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTieBreak</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a06c346249c425fc1cdb5906385f6aefc</anchor>
      <arglist>(bool useTieBreak)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a3a368ac3cac65a1f55ebb8556575a011</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a42206e53bd8f13829f53902da61783bf</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>std::map&lt; Teuchos::Tuple&lt; int, 3 &gt;, std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt;, LessThan &gt;</type>
      <name>TupleToVectorPairMap</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ac3002895912c23a38d63f76f9eea6f77</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>buildNewIndexer</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a21a7aa99446aaebb00414d3a36374db3</anchor>
      <arglist>(const Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;connManager, MPI_Comm mpiComm) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setOrientationsRequired</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a0084d0ce92f6aad46d8dcc6846d7e843</anchor>
      <arglist>(const Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;indexer, bool required) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a4ef7cb9a0921ff01275327d48fcc1481</anchor>
      <arglist>(const Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;geomPattern) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a49c67c5d59a22c00785bf8d165c66edc</anchor>
      <arglist>(const Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;indexer, const std::string &amp;elementBlock) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a126c64b18b60de01cf885f4e2f2d3080</anchor>
      <arglist>(const Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;indexer, const std::size_t &amp;blockIndex) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>printFieldInformation</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a8d2d0dbe7567bb1fd3937867a545f82e</anchor>
      <arglist>(const Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;indexer, std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addFieldsToFieldBlockManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a28f089bf2022984c9462efb33cbb6f00</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;activeFields, UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;fieldBlockManager) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addFieldsToFieldBlockManager</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ab59a2c6c330f3bda2df52dfaa2777bb7</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;activeFields, DOFManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;fieldBlockManager) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>connMngr_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a09bb95253ec7e91495cb2c100180b302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>fieldStrToNum_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga083cfc062ec80bb6432a67056424208f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::string &gt;</type>
      <name>fieldNumToStr_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga5ada5e0a1c04700f9a5349b78b1bed72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>fieldNumToFieldBlk_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>gaf98941dd1f35b6efdb78c0ebf00ee4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, std::string &gt;, Teuchos::RCP&lt; const FieldPattern &gt; &gt;</type>
      <name>fieldStringToPattern_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga93bb50e1cbc4f0d1f03eeb64123af206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::set&lt; std::string &gt; &gt;</type>
      <name>blockIdToFieldStrings_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga256a47b6600ee2e3ff7bc8215be5012b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::vector&lt; int &gt; &gt;</type>
      <name>blockIdToFieldNumbers_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga11feca4bcb43f7aff5c9f839f01b1b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, int &gt;, int &gt;</type>
      <name>blockGIDOffset_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga5f3305e57cfde4213f22fe78a63f8f4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; GlobalOrdinal, panzer::pair_hash &gt;</type>
      <name>ownedGIDHashTable_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a9a1af34979e8d7937979daf1d729e0fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>fieldOrder_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ab077900adfe8a44eb848a830fd75d568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fieldsRegistered_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ae9915516c783d782b57fba8d88cdb508</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>geomPattern_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a9df275a44066f47e6dfe911a5a30124f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>communicator_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>ab01b526f5619a7a310069e0a5daac0f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>fieldBlockManagers_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>afe2239f85210f0b17b7763014efe5910</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MPI_Comm</type>
      <name>mpiComm_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a5c8235b3184b3ebe8bc441c46bb2312b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>maxSubFieldNum_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a624c05814472ddcc07582bf277332462</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::map&lt; int, std::vector&lt; int &gt; &gt; &gt;</type>
      <name>gidFieldOffsets_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>af3d19c2e3fb6bb2bd98f61618a9daffb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, TupleToVectorPairMap &gt;</type>
      <name>gidFieldOffsets_closure_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a53b415704e14d911fb0668c6cbfe943e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>requireOrientations_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a9cd471effb520040c1d0fb935ea833db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useDOFManagerFEI_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>a702b3b95e43554040c3dd4d6eeedd3cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTieBreak_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManager.html</anchorfile>
      <anchor>afe6bf4e4f12a7b4e4e16a25cadfff28a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedDOFManagerFactory</name>
    <filename>classpanzer_1_1BlockedDOFManagerFactory.html</filename>
    <templarg>LO</templarg>
    <templarg>GO</templarg>
    <base virtualness="virtual">UniqueGlobalIndexerFactory&lt; LO, std::pair&lt; int, GO &gt;, LO, GO &gt;</base>
    <member kind="function">
      <type></type>
      <name>BlockedDOFManagerFactory</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>ab7238ad1b8cf2ab3321bc127dfcc0824</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedDOFManagerFactory</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a34c90c69970c92db3c8a8144a1f18d00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, std::pair&lt; int, GO &gt; &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>abe959ff325387bd8eac70f9cf1977d7c</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a691c4fc3bf2feef02977cf28de687063</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>af5d1241214e9d30e30a39a393973b0b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseTieBreak</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a236ac1bd155bc2b01a9f13dbfb06beaf</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseTieBreak</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a430e08ea686f0e573cc1a0d7e0bb073e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>requiresBlocking</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a2ad14b48be2557275bf8fd7c785b137c</anchor>
      <arglist>(const std::string &amp;fieldorder)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>buildBlocking</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a4aad211a75ddd8169ca3fe01b7f8c0c3</anchor>
      <arglist>(const std::string &amp;fieldorder, std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;blocks)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDOFManagerFEI_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a0452e0e58e863aa14951690508b86ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTieBreak_</name>
      <anchorfile>classpanzer_1_1BlockedDOFManagerFactory.html</anchorfile>
      <anchor>a6bd04a11f572b8ebba10a814751acd32</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedEpetraLinearObjContainer</name>
    <filename>classpanzer_1_1BlockedEpetraLinearObjContainer.html</filename>
    <base>panzer::LinearObjContainer</base>
    <base>ThyraObjContainer&lt; double &gt;</base>
    <member kind="typedef">
      <type>Thyra::VectorBase&lt; double &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a35b8ceb10bf9feb8d50ea87b0003b716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Thyra::LinearOpBase&lt; double &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>aab018d90ede25e6d86072026c9f1a086</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCompatibility</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a1259db271a8573d02a8a8d3d256a132f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>af75804b0a7175ce0430be9df3031419c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>aec6f3f17b3a75fe77f108e1e5573d094</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapsForBlocks</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a9850d443cce1537913b845b2543529bd</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt; &amp;blockMaps)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getMapForBlock</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ae9d977f107fa74c8c595dd7e950a7806</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ab7604178539e1a6b398c6834a637e7f9</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_x</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a114a71472e9e843f40920694a27bcb5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a2d68ead54d1b6357620448d879a67c9d</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_dxdt</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ac1db90b519ff7d5091a07b7a0ba60a55</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ac4efd7112d8df5140f4d17b8e975d1ee</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_f</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a84b0b3eec26a7c9e1aca7a6195cf53ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>aa107bebac3480aef8dc8f99528eeaae6</anchor>
      <arglist>(const Teuchos::RCP&lt; CrsMatrixType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>get_A</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a16d1a2f0d20c3e55e6c13263625a1822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a4f9d95abc9b04d9e9f84457a66fd5ca4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a80f2ef3b670eb30aa6ce1dad13a752c2</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ad2ff640148812d112f1d36787a45597c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a2b79b88c77bf32198b986f828216a2a3</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a65c8f2bc56c8f779773f0b617312a9f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a9656706bf8282de67bafb05dda9a6927</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a628785cc83056a1233310be633e04887</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a1541e940c3a227103627f6ecb4c23d9b</anchor>
      <arglist>(const Teuchos::RCP&lt; CrsMatrixType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ac3b6467dcb889500f74f84a269bb96e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>x</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a82228aff6efad828b28b70b9285dc0d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>dxdt</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a73ebe6393376131174b2bbe15fd38c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>f</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>ac45c4acf480cee98c3157823de1df799</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>A</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>af7c01cfe6b78edb12c1dc14a9de6d4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>blockMaps_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjContainer.html</anchorfile>
      <anchor>a7710eb06b5d641ffda27bd5ea2f5af9b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedEpetraLinearObjFactory</name>
    <filename>classpanzer_1_1BlockedEpetraLinearObjFactory.html</filename>
    <templarg>Traits</templarg>
    <templarg>LocalOrdinalT</templarg>
    <base>panzer::LinearObjFactory</base>
    <base>ThyraObjFactory&lt; double &gt;</base>
    <class kind="class">panzer::BlockedEpetraLinearObjFactory::DOFManagerContainer</class>
    <member kind="function">
      <type></type>
      <name>BlockedEpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa71ab77b39e32cf21b5cbabe85697e20</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;gidProvider, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedEpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aff86ad3b3c864f8ee442ce74cfbb94a2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;gidProvider, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;colGidProvider, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedEpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a8e88146092347b8735d713f6c1053c96</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ad92db412a6edb8a774a691409a8ecd29</anchor>
      <arglist>(const std::string &amp;identifier, LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a1efc459dc5f463d47ae55111f51419c4</anchor>
      <arglist>(const std::string &amp;identifier, const LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a31ba27107410658612643db301a5cfd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa2e7121075f4c09ad82040e5318713a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a759ec1751a6686a9b328c13e983ca7bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a19087f88dc61d87cd0e0f022f11d30c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhostContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a4fcb2b002ac75f3a0d1c769a0c7edb33</anchor>
      <arglist>(const LinearObjContainer &amp;container, LinearObjContainer &amp;ghostContainer, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobalContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a5f5ec1b62dc655e5d13576afe6c87402</anchor>
      <arglist>(const LinearObjContainer &amp;ghostContainer, LinearObjContainer &amp;container, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a305302830783451a771f97674305004d</anchor>
      <arglist>(const LinearObjContainer &amp;localBCRows, const LinearObjContainer &amp;globalBCRows, LinearObjContainer &amp;ghostedObjs, bool zeroVectorRows=false, bool adjustX=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>adb5f80321d59ea3999f4a62fd35cda40</anchor>
      <arglist>(const LinearObjContainer &amp;counter, LinearObjContainer &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>buildDomainContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>af29ff8a98d57daf4ef8cb6150b4de23e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::MpiComm&lt; int &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab568d9d31e345e688d1db30f371aacc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatter</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a8ea793cd2bb9a484fde2ad87510fe1d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGather</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ad42707b4f5fa019c1ee83b1b1fd8b3ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherTangent</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a7d7c9213e96d9ce7752afb0e4de2f015</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherDomain</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a03aab9853dc156f4b4dba2a4efef755c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherOrientation</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a233624efed43103773242fb194419806</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatterDirichlet</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab4cea24cc3d9b7b1b4139ca949739c98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a3cacd20796b8cd67a6c293eab3e045df</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2a1451a6f89b15ff6d0ba405101d39fa</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a6305c4143a23d7effbc669a19ce21bc5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ac6da1b9313f9a997bf820e07b6225a75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraDomainVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab6fe5f0864e3cf2bedaa7d3d20125a7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getThyraRangeVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa0cdbe3344d2df7a6f98e0df828ba251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>getThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a9c75b108b018b3c4f0866dcfeb9ec76f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getGhostedThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab1b2de2a1390f3dbe88790f75050c460</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getGhostedThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab7746768bfd8782ad7794ee25b8144db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedThyraDomainVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a3c6a5025e8eb0a7726b54cdeb3801b4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedThyraRangeVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ad0e3a70b74a3a819000926c37b252a4e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>getGhostedThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a9aa00d28cf4bc90d1b5fbfdbbcc30067</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2f6b963d30e2a76274100c34be6ca267</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>getColMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a456490dbba15366692f97bb2aade6f0f</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>getGhostedMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a4a31bbfdaccc5c3f8cc528f639428ef6</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>getGhostedColMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a74df4328999ddfeadb7c6cfeec373b05</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>getGraph</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2d4fd1c682940a6ba04872962fcfd94f</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>getGhostedGraph</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2d4f844d9dfc35baf284016d42a9fa3f</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>getGhostedImport</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>afb1b9c46ff23183ccc37974e3d6ad855</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>getGhostedColImport</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a954558c502863fad550a844f963606fd</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>getGhostedExport</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>abae3689e07087e6ba21976cd5a8a05c6</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>getGhostedColExport</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a48d971e82b9486800ec212ee1f50a420</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>getEpetraComm</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a867a8d368d3ce7aeadf76fab0614a901</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>getEpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa78f005d17eca7563e03358c0311497a</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>getGhostedEpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aef9f872373054b9d86ce3c2403cb2af4</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockRowCount</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a436ee999ff776d42fbbbfe78a05c1fc7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockColCount</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a3c68e35e3c6c1b761ce9759c8b586ea0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::BlockedDOFManager&lt; int, int &gt; &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>adbf882072186aacd3addf10a56f69bd6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getRangeGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a21ddf394fdc0831684f37885851e99cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getDomainGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a0bb5bfa8ed18af55fcd12646d9b72637</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt; &gt; &amp;</type>
      <name>getRangeGlobalIndexers</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a7012c861ba903f3cbf61ccf69f6a2199</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt; &gt; &amp;</type>
      <name>getDomainGlobalIndexers</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a88772ae7b5df0c9921bbea128537a523</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExcludedPair</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a1f4bdef0d2e654b38c64280b5442a787</anchor>
      <arglist>(int rowBlock, int colBlock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExcludedPairs</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a40d000955b82495bf1b5d91d5bbde82c</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;exPairs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeContainer_internal</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>afdb8519f63757862b2833fb322a42615</anchor>
      <arglist>(int mem, ThyraObjContainer&lt; double &gt; &amp;loc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeGhostedContainer_internal</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a91467f8237a3905108dd732aebfdea75</anchor>
      <arglist>(int mem, ThyraObjContainer&lt; double &gt; &amp;loc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a7f0fa233ceb8e38456d44ebf8550e31c</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt;</type>
      <name>getColGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a4f18ecdfc2b33d8a003955eb508a7d73</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>makeRoomForBlocks</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a31160591474151834d0794088851e94d</anchor>
      <arglist>(std::size_t blockCnt, std::size_t colBlockCnt=0)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalThyraVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa0cf99f9bdf03660af79da1c7647c6e9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;in, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a06c589ddd4ec61ebc61eff718a47b9b9</anchor>
      <arglist>(const Thyra::LinearOpBase&lt; double &gt; &amp;in, Thyra::LinearOpBase&lt; double &gt; &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>globalToGhostThyraVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a09501841061f5af382afdf9893d590df</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;in, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a5ba1b83a5d2db771bee5d394a66f3a7b</anchor>
      <arglist>(const Epetra_Vector &amp;local_bcs, const Epetra_Vector &amp;global_bcs, const Teuchos::Ptr&lt; Epetra_Vector &gt; &amp;f, const Teuchos::Ptr&lt; Epetra_CrsMatrix &gt; &amp;A, bool zeroVectorRows) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalEpetraVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a0b3fcf33a9a9d22661e1b1c8ef48eb81</anchor>
      <arglist>(int i, const Epetra_Vector &amp;in, Epetra_Vector &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>globalToGhostEpetraVector</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a193633a1023c37f4418e3c4611a205a1</anchor>
      <arglist>(int i, const Epetra_Vector &amp;in, Epetra_Vector &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalEpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2446e039ae4a0c21911ecd24cfffdea2</anchor>
      <arglist>(int blockRow, const Epetra_CrsMatrix &amp;in, Epetra_CrsMatrix &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a941048e0e52f5a763628b4644b86af09</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildGhostedMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a600f64db799a877189725a34f4dac2cf</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildColMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>afe86d869e3c2a0591671d6a83b64ef77</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildColGhostedMap</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a2980b4fe45f1126f28badc77c3c41cf9</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>buildGraph</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a3ae8efd8212245a3a6c925634b621acc</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>buildGhostedGraph</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a362faf4dd9828a9341c3526311383d0a</anchor>
      <arglist>(int i, int j, bool optimizeStorage) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>buildFilteredGhostedGraph</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab7c4ea0f9b10ac3a4e5fec5217d26fdf</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const DOFManagerContainer &gt;</type>
      <name>rowDOFManagerContainer_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a51fd2e52887454a1e15e5b21bea7bf68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const DOFManagerContainer &gt;</type>
      <name>colDOFManagerContainer_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a4b33dc0f96ab91c9cd3b0a3911457e78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useColGidProviders_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>afab0a048b1658a3a0c5c41db05ed9140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::pair&lt; int, int &gt;, panzer::pair_hash &gt;</type>
      <name>excludedPairs_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a6107499570c178a2b7a9111552407dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>rangeSpace_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a4f454d91cd0dda5254e3a968c0a318cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>domainSpace_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa6f37c4eac315b3d9e5e15eba9f64ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>ghostedRangeSpace_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a9a4dceea98deda54b63ff0d058442c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>ghostedDomainSpace_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa5e702216cac8ba935bdd94c0257f02d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>eComm_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a08777fd8e0cc8dceba575028d10c06b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt;</type>
      <name>rawMpiComm_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a7ce3de9b1b6a086aa43d1c632cd7f645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>tComm_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ac138d2ccc320c06d334300ea0eab138b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Map &gt; &gt;</type>
      <name>maps_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a38d3c4a069e5a92c1eb226157a4b8ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Map &gt; &gt;</type>
      <name>ghostedMaps_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a7e555c5c4c1811d7ed3c50f5d44c0d0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Import &gt; &gt;</type>
      <name>importers_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aa323aa8ae8258ba38d98a7f1ffb90f3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Export &gt; &gt;</type>
      <name>exporters_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>aba65b2264bbef0771d8b90043f24bfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Map &gt; &gt;</type>
      <name>colMaps_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a8622ff3c56b695209c8be6f55f876f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Map &gt; &gt;</type>
      <name>colGhostedMaps_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>acdbd8e1225536c6bd2c5929432d72568</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Import &gt; &gt;</type>
      <name>colImporters_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ad1ca7b525472976561fe2aec54b4ad25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Export &gt; &gt;</type>
      <name>colExporters_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a171dc69e5759b34f2392708cc87e7e61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::pair&lt; int, int &gt;, Teuchos::RCP&lt; Epetra_CrsGraph &gt;, panzer::pair_hash &gt;</type>
      <name>graphs_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>ab0c5cbf9489549897bc5888dc746f1f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::pair&lt; int, int &gt;, Teuchos::RCP&lt; Epetra_CrsGraph &gt;, panzer::pair_hash &gt;</type>
      <name>ghostedGraphs_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>afc00fab96a86657be1bddf174ea8088a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useDiscreteAdjoint_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory.html</anchorfile>
      <anchor>a61f2a87e035d752601040fed7a571524</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::BlockedLinearOpBase</name>
    <filename>classThyra_1_1BlockedLinearOpBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedTpetraLinearObjContainer</name>
    <filename>classpanzer_1_1BlockedTpetraLinearObjContainer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::LinearObjContainer</base>
    <base>panzer::ThyraObjContainer</base>
    <member kind="typedef">
      <type>Thyra::VectorBase&lt; ScalarT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ac142e690c4884ded1b59f8a316517402</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Thyra::LinearOpBase&lt; ScalarT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>af5bc2027198c46b2b217ff9f5f24d61a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ad07af715e4c8302f959b5f2947dfdfa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCompatibility</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a52aba5c063ae7d3b6c4f949285e84e74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a903e876ffb1ae86834b3190ec99ed33f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aae93cc5f8c0cfb4671c5dd0a6601cbe0</anchor>
      <arglist>(ScalarT value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMapsForBlocks</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a89e519f3dd1077c7a1c4f4af23bb4075</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const MapType &gt; &gt; &amp;blockMaps)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const MapType &gt;</type>
      <name>getMapForBlock</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ae7cf825e74b6c33f340cf813150852af</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aba554a86eb8c07ec6fce3e5f55e6b7ce</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_x</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a4cd704b91489e420acd00bc9228e6530</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>af5854b8ef8877502a85e05bf94bc1f52</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_dxdt</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aeef7a2d88ae25b3c1336319ef7244790</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aad000be3b4aca617c21172a555a34379</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_f</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aa5bc0e5d25f75cc40084def40a9f5cac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aa0c96cc83205b4119d9f829c9ee547d1</anchor>
      <arglist>(const Teuchos::RCP&lt; CrsMatrixType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>get_A</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a0dbf6dedc1115bcbb9dafa6777f3781b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a0d1c536ba7f5132b71ca959f802f5729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aca0bd31a1d705cc9bfb2679b883f6984</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>aea6ef7b6d6e198cd6308a740c514afff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a01a329cb9b7af5f7b5e341feb2953e83</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a8edcd4d87dde1b682f1acbc44a07a37c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ae766341153d7e9b5cc98445422dff4b7</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a7e8717b8e7aa06c5965b8f29191dca70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a378762818310659edb218cbd3eccd809</anchor>
      <arglist>(const Teuchos::RCP&lt; CrsMatrixType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a2f521ce60c4268804e3408637bcc18bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginFill</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ad68fff33a75bcb3b1bda52469adcaa70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endFill</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a146fcebd8305d18f8c4e61ce2e6f3a02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>x</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a36f3fc59ceae9b1e62dc8fd827b404c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>dxdt</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ae1f83a240a459617921ba883b630c219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>f</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a97918faed60a1cb25dc510f5c6ef400a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>A</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>a7d95224a884665461a65f58cbae3cc2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const MapType &gt; &gt;</type>
      <name>blockMaps_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjContainer.html</anchorfile>
      <anchor>ad75cdb70645e399b429828c36bd2dac3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedTpetraLinearObjFactory</name>
    <filename>classpanzer_1_1BlockedTpetraLinearObjFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::LinearObjFactory</base>
    <base>ThyraObjFactory&lt; double &gt;</base>
    <member kind="typedef">
      <type>BlockedTpetraLinearObjContainer&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>BTLOC</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ae5b637e86fbe1f50e208e8f9cad0193d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7f738d2bd645812516e98fd236407738</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>acc9fa49b8ed8a059a873d0e43cf85682</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Operator&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>OperatorType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0a38983b35c40bb4655203ea8974e0c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7132971a280845107f9ee79ec4f72296</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>acf28978128b60e254604cc2d9cf14bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>adac4046e9333f5eaa157e61a6e90fdeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Export&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7876f9fea08dc3f3114fbea78797e389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Thyra::TpetraVector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ThyraVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>af5e1b6f88f2b7424ea0477a8d718dc65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Thyra::TpetraLinearOp&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ThyraLinearOp</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ad24145b03fcb004d3126e7a7c2e3be16</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedTpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aa580ea835092617cba39bcd5325f2e2f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; const BlockedDOFManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;gidProvider)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedTpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>afb9f885e2916b441015234f031beca6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ae07d8ecece6bd470dcad36a7c704a54d</anchor>
      <arglist>(const std::string &amp;identifier, LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a2c988c8622a741a96ea54d0a58e53cb3</anchor>
      <arglist>(const std::string &amp;identifier, const LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ab762a8094084f22451909c1cc37e1df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ab11baebe75a5ff535a98259b818b8f1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a305e8c96f218ceaba29573471b06026f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac80c4db970b7482473a4da93243897d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhostContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7918b6945c60294ee575e0d26ed3edec</anchor>
      <arglist>(const LinearObjContainer &amp;container, LinearObjContainer &amp;ghostContainer, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobalContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a8e114722292d6a0adc9a9350ac5b8284</anchor>
      <arglist>(const LinearObjContainer &amp;ghostContainer, LinearObjContainer &amp;container, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a615571013b66376346e884ceb67acc10</anchor>
      <arglist>(const LinearObjContainer &amp;localBCRows, const LinearObjContainer &amp;globalBCRows, LinearObjContainer &amp;ghostedObjs, bool zeroVectorRows=false, bool adjustX=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a33b4a16fd6d04e792ab708bfdf7b3701</anchor>
      <arglist>(const LinearObjContainer &amp;counter, LinearObjContainer &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>buildDomainContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a820e5b4e29fdaea717e98c229a586cf5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::MpiComm&lt; int &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0d1346b628acab36c5a6ceefb27e0744</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatter</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ab8b51f08fa9c16a21ca07f8bff440339</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGather</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a568a7628e03a99bb96650af36c0810f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherTangent</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a554183d8390e770c6d523e3f3f227e72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherDomain</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0947bdf2edce6fc8e569937fc0f64e96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherOrientation</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a6f9add474e1e4ef0ab1db560f57163fb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatterDirichlet</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a81cc8189b3424d45cb26f9fe5a6b34aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a5d1c92c42e8fd5531aa9ed71e908fccf</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a76dc47eae85257b26e90f855e7abecb7</anchor>
      <arglist>(int mem, BTLOC &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a74e80487d43e87e17da4ab697b4508b5</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>adf581f0f376483020495e6f1756b8adc</anchor>
      <arglist>(int mem, BTLOC &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac3a17d6a99ba1b5a1dca71dcf63eb3aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>abf06a89a496dd6ca5261a7284de68671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraDomainVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0bab89a603e6a0971a61397a0c0f6eb4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraRangeVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0739e45e2063b26d8a48f32017cc0b6a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>adc5f1a9f93c8c884869ce9ae443c5519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getGhostedThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>af2243f71a511447303f41ef0fbbcaa6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getGhostedThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a38b0f78c856378b515a1052805136970</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>getGhostedThyraDomainVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a9f63ef4991eb1929a21b9a824160cbed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>getGhostedThyraRangeVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ab2f644229998b83665d82a48dc2b5235</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::BlockedLinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>getGhostedThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a32060eff5a1dcb7abe6b9cd58192df43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const MapType &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a6e9a715e84457b2d11bdca855ee01b67</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const MapType &gt;</type>
      <name>getGhostedMap</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ad05f1a2bf25ee6b9e9614757246b7af7</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const CrsGraphType &gt;</type>
      <name>getGraph</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aa3ae05d530f3fbe3408d62b52fa5f6e2</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const CrsGraphType &gt;</type>
      <name>getGhostedGraph</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a9685e21f0519a2055fdab421e7874771</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ImportType &gt;</type>
      <name>getGhostedImport</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aaf53c479b6afbb293b6bfa807b616070</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ExportType &gt;</type>
      <name>getGhostedExport</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a43443c34f7c6dbbefc267b918e774a66</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>getTpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a2ed31d626ac1366e2da4df1066467c45</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>getGhostedTpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ad2e90c9f18a4bbeb6efc44d886d75faa</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockRowCount</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ab3790be032240652f960de10d3a88e84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBlockColCount</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a6aaef7381c8a18d8c41df86fa066e500</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExcludedPair</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac2a2ebca704c3f2764e8952bfdb4f0a1</anchor>
      <arglist>(int rowBlock, int colBlock)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addExcludedPairs</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>af0f292b4c328092c7e92fd1bf05b6a51</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;exPairs)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginFill</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a8a7f0368e326a8dfac10fd3757de8b80</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endFill</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7385b35bbbba1f8db9a0055964a049d1</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::BlockedDOFManager&lt; int, GlobalOrdinalT &gt; &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac24e40a3ae7f85a938936c778c44ca09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getDomainGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aaf492add822a7c2efb04caa2eabee158</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getRangeGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac7cf3a3903d8a1f1cdc17352ef381d4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>af3acbb75232e71b4f0685d03303b2d24</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>makeRoomForBlocks</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a6d70f478c5fe262214cc701a8b946b63</anchor>
      <arglist>(std::size_t blockCnt)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalThyraVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aaa3bb1d239c7aee8ac9a189455cf5296</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in, const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalThyraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a632b99c4c5e19200b745de2cb3b442c7</anchor>
      <arglist>(const Thyra::LinearOpBase&lt; ScalarT &gt; &amp;in, Thyra::LinearOpBase&lt; ScalarT &gt; &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>globalToGhostThyraVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a9c9571d1f886dccdb0f88eeb458ff87f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in, const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>afe99ef65930eed79fdb076187080209c</anchor>
      <arglist>(const VectorType &amp;local_bcs, const VectorType &amp;global_bcs, const Teuchos::Ptr&lt; VectorType &gt; &amp;f, const Teuchos::Ptr&lt; CrsMatrixType &gt; &amp;A, bool zeroVectorRows) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalTpetraVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7fa22f8e77eaf6969dc7506bb1c92eef</anchor>
      <arglist>(int i, const VectorType &amp;in, VectorType &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalTpetraMatrix</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a0baa2bf71d3436de9f42fa4a83126ae4</anchor>
      <arglist>(int blockRow, const CrsMatrixType &amp;in, CrsMatrixType &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>globalToGhostTpetraVector</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a59158ed2bd5df21dd250a8842ed9b796</anchor>
      <arglist>(int i, const VectorType &amp;in, VectorType &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const MapType &gt;</type>
      <name>buildTpetraMap</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a83458facaa348bb42b6f3565f7bab0a3</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const MapType &gt;</type>
      <name>buildTpetraGhostedMap</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a78e413ba1d360d789ab41da0043da782</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const CrsGraphType &gt;</type>
      <name>buildTpetraGraph</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a54309f208680df8facb90f048c9cfc38</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const CrsGraphType &gt;</type>
      <name>buildTpetraGhostedGraph</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7d505300a3973768bd02dd77e9687eb1</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, std::pair&lt; int, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>blockProvider_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a73840486df7835d1132a8233a30ef21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>blockedDOFManager_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7ba6f331e7c71cb110310b8f10105b8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>gidProviders_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a7813878296c097102e6f87a5761183a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_set&lt; std::pair&lt; int, int &gt;, panzer::pair_hash &gt;</type>
      <name>excludedPairs_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>acb390297ae865805668f071001ee74f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>rangeSpace_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ad7e89cfe68100bec8ade71e22200849d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>domainSpace_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>acf26432f9879bc6362050072cb38f132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>ghostedRangeSpace_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ad55e13d3a2f5f0f911fbe58ab37d0e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>ghostedDomainSpace_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a877ae958e96394988a740a447e565e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>comm_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a20d726d96e28fe2919549a8bc2557281</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const MapType &gt; &gt;</type>
      <name>maps_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>aa270be3b8047f59ea9d701911e06a805</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const MapType &gt; &gt;</type>
      <name>ghostedMaps_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a3048d8fae9438682b89cb639b198bc19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::pair&lt; int, int &gt;, Teuchos::RCP&lt; const CrsGraphType &gt;, panzer::pair_hash &gt;</type>
      <name>graphs_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a708be0e93ecbbfe64bf406295c7a2d96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; std::pair&lt; int, int &gt;, Teuchos::RCP&lt; const CrsGraphType &gt;, panzer::pair_hash &gt;</type>
      <name>ghostedGraphs_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a913a167d9ad09ac888ae8fe8cc827fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const ImportType &gt; &gt;</type>
      <name>importers_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>ac3b5546a294f269a6a476efcd40a5730</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const ExportType &gt; &gt;</type>
      <name>exporters_</name>
      <anchorfile>classpanzer_1_1BlockedTpetraLinearObjFactory.html</anchorfile>
      <anchor>a4a91c3cca53ae73e96088e12de412df6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedVector_ReadOnly_GlobalEvaluationData</name>
    <filename>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</filename>
    <base>panzer::ReadOnlyVector_GlobalEvaluationData</base>
    <member kind="function">
      <type></type>
      <name>BlockedVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ac9541419ddef1af46b73bede0f1f608e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a22bd4b4d52f81273c19f623455b038b3</anchor>
      <arglist>(const BlockedVector_ReadOnly_GlobalEvaluationData &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BlockedVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a01dcda8974cceda2d1b52e0461ff7df6</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; ghostedSpace, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; uniqueSpace, const std::vector&lt; Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt; &gt; &amp;gedBlocks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockedVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ab29c6cbf7fc8589a538067a09504e272</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a0374471fe6072864ba18ddc3eee5053a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;ghostedSpace, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;uniqueSpace, const std::vector&lt; Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt; &gt; &amp;gedBlocks)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isInitialized</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a6447237c1a8153f7c7cab8f026830bbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a6c5e23838f3bb51edc2616afdce2c5aa</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a1cac7517fdbb811c96eae8f4307c1a17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setUniqueVector</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a9787287fc343d15f0ebd358a593c40f9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;uniqueVector)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getUniqueVector</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a01259d66436c9fb03896ec5987b6b060</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>af991820d0ed2b58fd3cf4ebcf59c3944</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>getBlockCount</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a368536174ea5861fe1247eb3ff32836f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>getGEDBlock</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a940da2dca7bafcd25cf7d2e2261f71ed</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>getGEDBlock</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a1be97791b0f65d062edf4116ccb0a223</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a441f8fdef0c87e85e8f2950909388f94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isInitialized_</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a1b61a11f7148898f11b62cace67cb5f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt; &gt;</type>
      <name>gedBlocks_</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a674663fd3fb90acd21319a34dc3d1571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>uniqueVector_</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a8f5cc5d0f70717a40f319f6792581eb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::DefaultProductVectorSpace&lt; double &gt; &gt;</type>
      <name>ghostedSpace_</name>
      <anchorfile>classpanzer_1_1BlockedVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a48a50f24246befa3ef8c2227b0d0d1b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::TypeAssocMap::BuildObjects</name>
    <filename>structpanzer_1_1TypeAssocMap_1_1BuildObjects.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>BuildObjects</name>
      <anchorfile>structpanzer_1_1TypeAssocMap_1_1BuildObjects.html</anchorfile>
      <anchor>a2a1eb8b14fbe206c4e08a43672afc9d0</anchor>
      <arglist>(std::vector&lt; ValueType &gt; &amp;mv, const BuilderOpT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1TypeAssocMap_1_1BuildObjects.html</anchorfile>
      <anchor>a9b1da1baf8fe72db8f0e46e2312d79ba</anchor>
      <arglist>(T) const </arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ValueType &gt; &amp;</type>
      <name>mv_</name>
      <anchorfile>structpanzer_1_1TypeAssocMap_1_1BuildObjects.html</anchorfile>
      <anchor>af17701003bfacc7e36c934bd6cc78a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const BuilderOpT &amp;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1TypeAssocMap_1_1BuildObjects.html</anchorfile>
      <anchor>aea325032f719f9f6cbc40e8e2bdd58b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::CellData</name>
    <filename>classpanzer_1_1CellData.html</filename>
    <member kind="function">
      <type></type>
      <name>CellData</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a8603dadf84cc34370d3f43daf20c3c2f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellData</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a77a1a1788a8a9f748740adc7202d86b9</anchor>
      <arglist>(std::size_t num_cells, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;ct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CellData</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>afd8a5275318d5b07e22cb13a8b5c3d14</anchor>
      <arglist>(std::size_t num_cells, int local_side_id, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;ct)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSide</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a3e4fe55d7ada2acff153d8ed5513a207</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>side</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>aa44c78ded65b25d39c58105d5db01133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>numCells</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>aa877f8b9d3d60b2650289dc2fc8580c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>baseCellDimension</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a7a155093f05662246ba17a601ae5bee5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a7fbce993fdb6844a36c60f8d70643fff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>m_num_cells</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>ac826d58faa4718746adc702085e86520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_is_side</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a75e9a133777311c13821c34885290d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_side</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a3222461544a5ffa67ac2d6f12e2b582c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>m_cell_topo</name>
      <anchorfile>classpanzer_1_1CellData.html</anchorfile>
      <anchor>a1eb8a1d39bafba0de7c72fb4cdd4d560</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::CellTopologyInfo</name>
    <filename>classpanzer_1_1CellTopologyInfo.html</filename>
    <member kind="function">
      <type></type>
      <name>CellTopologyInfo</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a71afb0083bc77b02096f433e1d31182d</anchor>
      <arglist>(int numCells, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;cellTopo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCells</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a392d9ab5e5a7bd18d800498316bc558d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>ae4157d0d1281592c2345da132473c5f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumEdges</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a54756e459958a059ac1daa9ddd44642c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getCellName</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a8a405276d12e5f8713140bfafada0549</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a0d3178f4adf04f817be1255bcab4b827</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>edge_scalar</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a9232f1b8fe6d27f47b0817883c3bbcd6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>edge_vector</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>ad3fe623b89e3c49100e71b180e8ce9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeDataLayouts</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>ae9fd9f84f35a416e18d4a61970694488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>topology</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>ac0f7972c3ee244895fef5582d8f73bf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>cell_topo_name</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a250acfbbe8a102177409c9d6669cd3ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_cells</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>ae5a5def01aa67e5ee98078252e7aaf78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a1e9de0950dc0183516540cf439dcfb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_edges</name>
      <anchorfile>classpanzer_1_1CellTopologyInfo.html</anchorfile>
      <anchor>a4a807b920f05463caff2d9c91d46111a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::CloneableEvaluator</name>
    <filename>classpanzer_1_1CloneableEvaluator.html</filename>
    <member kind="function">
      <type></type>
      <name>CloneableEvaluator</name>
      <anchorfile>classpanzer_1_1CloneableEvaluator.html</anchorfile>
      <anchor>aa31e55de77f34116ea67501a36182a62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CloneableEvaluator</name>
      <anchorfile>classpanzer_1_1CloneableEvaluator.html</anchorfile>
      <anchor>a41e8f5c84e6275d6fdb8a7c275795c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1CloneableEvaluator.html</anchorfile>
      <anchor>a10e3db39953760906bfea10830d565a5</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ClosureModelFactory</name>
    <filename>classpanzer_1_1ClosureModelFactory.html</filename>
    <templarg></templarg>
    <base>panzer::ClosureModelFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>ClosureModelFactory</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>ab19566b432a9d2c817e0c8c7223e1dfd</anchor>
      <arglist>(bool throw_if_model_not_found=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClosureModelFactory</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>a2cd1a1bf16facedceede21599b3cb212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>a6e46d464f98d529e156270a4419aca03</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;equation_set_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>registerEvaluators</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>a7450cd1e56008293e63b07c043a506d3</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &amp;evaluators, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setThrowOnModelNotFound</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>a798a5bcd87e1e4787c83c0b1e25f7d01</anchor>
      <arglist>(bool do_throw)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_throw_if_model_not_found</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory.html</anchorfile>
      <anchor>a32ca952affaa73a868dc0edc4c8c88a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ClosureModelFactory_TemplateManager</name>
    <filename>classpanzer_1_1ClosureModelFactory__TemplateManager.html</filename>
    <templarg>Traits</templarg>
    <member kind="function">
      <type></type>
      <name>ClosureModelFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory__TemplateManager.html</anchorfile>
      <anchor>a1560cade8f104756a0ee091bd5a246af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClosureModelFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory__TemplateManager.html</anchorfile>
      <anchor>a47d16642d3522a92433c4ca5b67689e3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ClosureModelFactory_TemplateManager&lt; TraitsT &gt;</name>
    <filename>classpanzer_1_1ClosureModelFactory__TemplateManager.html</filename>
    <member kind="function">
      <type></type>
      <name>ClosureModelFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory__TemplateManager.html</anchorfile>
      <anchor>a1560cade8f104756a0ee091bd5a246af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClosureModelFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ClosureModelFactory__TemplateManager.html</anchorfile>
      <anchor>a47d16642d3522a92433c4ca5b67689e3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ClosureModelFactoryBase</name>
    <filename>classpanzer_1_1ClosureModelFactoryBase.html</filename>
    <base>panzer::Base</base>
    <base>panzer::EvaluatorsRegistrar</base>
    <member kind="function">
      <type></type>
      <name>ClosureModelFactoryBase</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryBase.html</anchorfile>
      <anchor>a51ddf98d939d16208d39041a6ff8cdb2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClosureModelFactoryBase</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryBase.html</anchorfile>
      <anchor>af0746235d3d21dfdb1620ff52e309145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryBase.html</anchorfile>
      <anchor>a39941052aaebb5bd11fbd3ca38481dd8</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;equation_set_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>registerEvaluators</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryBase.html</anchorfile>
      <anchor>a9b38e798be7c9f6c16e3f10d8ab373fd</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &amp;evaluators, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ClosureModelFactoryComposite</name>
    <filename>classpanzer_1_1ClosureModelFactoryComposite.html</filename>
    <templarg></templarg>
    <base>panzer::ClosureModelFactory</base>
    <member kind="function">
      <type></type>
      <name>ClosureModelFactoryComposite</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite.html</anchorfile>
      <anchor>accc746b22ceb0c1474b3869a04491bdb</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt; &amp;factories)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite.html</anchorfile>
      <anchor>ad0fc7f8530efe3bcd4ae28032b19134f</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;default_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt;</type>
      <name>m_factories</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite.html</anchorfile>
      <anchor>aac6d81f4f05a6d786ebb05d3747f0dd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ClosureModelFactoryComposite_TemplateBuilder</name>
    <filename>classpanzer_1_1ClosureModelFactoryComposite__TemplateBuilder.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ClosureModelFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite__TemplateBuilder.html</anchorfile>
      <anchor>ae4d58258559e81f8c0b7c02205744992</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFactory</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite__TemplateBuilder.html</anchorfile>
      <anchor>a358cfb373285c796145036a253f83ce8</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &amp;factory)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt;</type>
      <name>m_factories</name>
      <anchorfile>classpanzer_1_1ClosureModelFactoryComposite__TemplateBuilder.html</anchorfile>
      <anchor>a55222def6debd9d53e8d176dbadaae11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::CommaSeparatedEntryValidator</name>
    <filename>classpanzer_1_1CommaSeparatedEntryValidator.html</filename>
    <member kind="function">
      <type></type>
      <name>CommaSeparatedEntryValidator</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a8d3f55718d9e9231a3e749312ab061b9</anchor>
      <arglist>(bool allowEmpty=false)</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>ac7925065f7a0ca29e830cf42f6171f1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a9c068ac58e47912bc4cc19249136caeb</anchor>
      <arglist>(const Teuchos::ParameterEntry &amp;entry, const std::string &amp;paramName, const std::string &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a70dd26cd278e01441c1bbbdf724796be</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a47e470d6cbc8e0c71c6dd9cea80e275e</anchor>
      <arglist>(const std::string &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>split</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a50afc24dff49e8473bc05111fbb23eb0</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delim, std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allowEmpty_</name>
      <anchorfile>classpanzer_1_1CommaSeparatedEntryValidator.html</anchorfile>
      <anchor>a2873a3a31393bac7fd775a2963395671</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ConnManager</name>
    <filename>classpanzer_1_1ConnManager.html</filename>
    <templarg>LocalOrdinalT</templarg>
    <templarg>GlobalOrdinalT</templarg>
    <base>panzer::ConnManagerBase</base>
    <member kind="typedef">
      <type>GlobalOrdinalT</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>aa0b002f9f6639af86d901e3ea0603416</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinalT</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a674979e401e6657f6904b56fcce20942</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnManager</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a23527983ce826af1aa7b425c7393ee7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a5f72b716eb57a8452e9af23a03d95409</anchor>
      <arglist>(const FieldPattern &amp;fp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>noConnectivityClone</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a6d381ac84bb0360c7efc4675ea09b569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const GlobalOrdinal *</type>
      <name>getConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>acbb4d927deaff476374c781f2d4ecdbf</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getConnectivitySize</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a047f11c5876fa7f37acb3cadb36b774e</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBlockId</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>aec45a200f90135a10fd1559d48c5353c</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>numElementBlocks</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a2566a36a867d66372e95bfe038118baa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a54b43d970f65a1c58611016633f8dc1e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a394717a31cc2696fc98c073828b0c781</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getNeighborElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>addf887b2e464e8f5e1d43da5469ebc1e</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConnManager&lt; int, GO &gt;</name>
    <filename>classpanzer_1_1ConnManager.html</filename>
    <base>ConnManagerBase&lt; int &gt;</base>
    <member kind="typedef">
      <type>GO</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>aa0b002f9f6639af86d901e3ea0603416</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a674979e401e6657f6904b56fcce20942</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnManager</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a23527983ce826af1aa7b425c7393ee7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a5f72b716eb57a8452e9af23a03d95409</anchor>
      <arglist>(const FieldPattern &amp;fp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ConnManagerBase&lt; int &gt; &gt;</type>
      <name>noConnectivityClone</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a6d381ac84bb0360c7efc4675ea09b569</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const GlobalOrdinal *</type>
      <name>getConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>acbb4d927deaff476374c781f2d4ecdbf</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getConnectivitySize</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a047f11c5876fa7f37acb3cadb36b774e</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBlockId</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>aec45a200f90135a10fd1559d48c5353c</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>numElementBlocks</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a2566a36a867d66372e95bfe038118baa</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a54b43d970f65a1c58611016633f8dc1e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>a394717a31cc2696fc98c073828b0c781</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getNeighborElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManager.html</anchorfile>
      <anchor>addf887b2e464e8f5e1d43da5469ebc1e</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ConnManagerBase</name>
    <filename>classpanzer_1_1ConnManagerBase.html</filename>
    <templarg>LocalOrdinalT</templarg>
    <member kind="typedef">
      <type>LocalOrdinalT</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a311f6a3cd7a564c161dd4abd3a89a16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnManagerBase</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a5b281c5b7c9f5bd3dd0f4b8b524326c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a6e6501938d4f97ed4b2e872d94b162c0</anchor>
      <arglist>(const FieldPattern &amp;fp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>noConnectivityClone</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a54ed25285a0ca098d7a44dfdf090db23</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getConnectivitySize</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>acdfc77e2801f905872fed348a6b38ac8</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBlockId</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a2467126bd4de0eca214a993458769706</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>numElementBlocks</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a40aa9dc4c9a54e69ff670f6a0ee6d96e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a731f2c6c066f8debcd30d9ecaf757b29</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>af69baf0218d8ce946c4fa4166376b69d</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getNeighborElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>ae67fb3eaece3f3707c7fd340298af542</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getAssociatedNeighbors</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a199e84129b87ce1ba83b76ff48571897</anchor>
      <arglist>(const LocalOrdinal &amp;el) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasAssociatedNeighbors</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>aabb1deac734119e451f681d3ed31ae6e</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ConnManagerBase&lt; int &gt;</name>
    <filename>classpanzer_1_1ConnManagerBase.html</filename>
    <member kind="typedef">
      <type>int</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a311f6a3cd7a564c161dd4abd3a89a16d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConnManagerBase</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a5b281c5b7c9f5bd3dd0f4b8b524326c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildConnectivity</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a6e6501938d4f97ed4b2e872d94b162c0</anchor>
      <arglist>(const FieldPattern &amp;fp)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ConnManagerBase&lt; int &gt; &gt;</type>
      <name>noConnectivityClone</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a54ed25285a0ca098d7a44dfdf090db23</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LocalOrdinal</type>
      <name>getConnectivitySize</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>acdfc77e2801f905872fed348a6b38ac8</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBlockId</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a2467126bd4de0eca214a993458769706</anchor>
      <arglist>(LocalOrdinal localElmtId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>numElementBlocks</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a40aa9dc4c9a54e69ff670f6a0ee6d96e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a731f2c6c066f8debcd30d9ecaf757b29</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>af69baf0218d8ce946c4fa4166376b69d</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getNeighborElementBlock</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>ae67fb3eaece3f3707c7fd340298af542</anchor>
      <arglist>(const std::string &amp;blockID) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getAssociatedNeighbors</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>a199e84129b87ce1ba83b76ff48571897</anchor>
      <arglist>(const LocalOrdinal &amp;el) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>hasAssociatedNeighbors</name>
      <anchorfile>classpanzer_1_1ConnManagerBase.html</anchorfile>
      <anchor>aabb1deac734119e451f681d3ed31ae6e</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ConstVectorTemplateIterator</name>
    <filename>classpanzer_1_1ConstVectorTemplateIterator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstVectorTemplateIterator</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>aa9462107d6bfeed33cb288f72bcadc03</anchor>
      <arglist>(const panzer::VectorTemplateManager&lt; TypeSeq, BaseT, ObjectT &gt; &amp;m, typename std::vector&lt; std::vector&lt; Teuchos::RCP&lt; BaseT &gt; &gt; &gt;::const_iterator p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a1ba0e9d093753ce9e7a4327a9ca8a73a</anchor>
      <arglist>(const ConstVectorTemplateIterator &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a7d2d036e039b677d0f0fdb615946c8e7</anchor>
      <arglist>(const ConstVectorTemplateIterator &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>panzer::ConstVectorTemplateIterator&lt; TypeSeq, BaseT, ObjectT &gt;::reference</type>
      <name>operator*</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a3a68c0316a36fd551c2adfc19c38d99b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>panzer::ConstVectorTemplateIterator&lt; TypeSeq, BaseT, ObjectT &gt;::pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a4d8a2beb8f73c61d7925a7cad548bca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstVectorTemplateIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>ac2acc5309ac9bbb803ac685bd4aa3e2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstVectorTemplateIterator</type>
      <name>operator++</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a5bcc9791764204847c48947e22c2d3e0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const panzer::VectorTemplateManager&lt; TypeSeq, BaseT, ObjectT &gt; *</type>
      <name>manager_</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a9d0cd3b066f6157e989a2d1d8b1434b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; Teuchos::RCP&lt; BaseT &gt; &gt; &gt;::const_iterator</type>
      <name>object_iterator_</name>
      <anchorfile>classpanzer_1_1ConstVectorTemplateIterator.html</anchorfile>
      <anchor>a59c322db32a4f0769cc1f98f2f2d68cd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::CoordMatcher</name>
    <filename>classpanzer__stk_1_1CoordMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>CoordMatcher</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a4bb9bca9f14b0c7becdb485229b88654</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordMatcher</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a8c97df04ded7a11b062ed1bb2c5962d7</anchor>
      <arglist>(int index, double error)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordMatcher</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a2732ad7f4c318f4c94d8950609737aba</anchor>
      <arglist>(int index, const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordMatcher</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a9cc283b9ee53a9c1aec3eec5b7859a88</anchor>
      <arglist>(const CoordMatcher &amp;cm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a0c44b6a2703fea856253a0a75e3f9aeb</anchor>
      <arglist>(const Teuchos::Tuple&lt; double, 3 &gt; &amp;a, const Teuchos::Tuple&lt; double, 3 &gt; &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a3262e25462e9e765033423bbf0b05ad8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildLabels</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a6fe6869c53b223b66d75d9cce972d1dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>parseParams</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a0ec11bcda3b2b4b61b9de3a788c50c06</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>error_</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a829d137030cd73d17cd646fd183b6ab8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index_</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a40df9f10fd42c491fb1a3637fce88b83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>labels_</name>
      <anchorfile>classpanzer__stk_1_1CoordMatcher.html</anchorfile>
      <anchor>a13c6c3b3a02505a69a2d1f49bd667731</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::UniqueGlobalIndexer::CopyCellLIDsFunctor</name>
    <filename>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</filename>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</anchorfile>
      <anchor>abdc2953e07b048f453e3d28b490142f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</anchorfile>
      <anchor>aeb45bf31c764396e929057a1d16db70d</anchor>
      <arglist>(const int cell) const </arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>cellIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</anchorfile>
      <anchor>ad8ac9c8d9be701854801e20332674af5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const LocalOrdinalT **, PHX::Device &gt;</type>
      <name>global_lids</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</anchorfile>
      <anchor>af27c2d1eae10e0f87701326225633716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; LocalOrdinalT **, PHX::Device &gt;</type>
      <name>local_lids</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer_1_1CopyCellLIDsFunctor.html</anchorfile>
      <anchor>aed5757431857ddeb7ca9cc2cfec91466</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::CubeHexMeshFactory</name>
    <filename>classpanzer__stk_1_1CubeHexMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>CubeHexMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ac70ac81e7185e80379ad98f181adf3b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CubeHexMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aa0f566be2cac7c77de9287822bf1dd74</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a73ff8fb75b0ed3c74fbe4322a13a2c3e</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a4a09cf50ff95d2baf3868d9c8351ccb1</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a096f3254b458614f2b68dbb57c4d93f4</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ae42197009a7cb8b848e8e4e2be8308cc</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a97fe562b916fb604c978189702579424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 3 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a2e03d8a91a7826d7c5fc3d9b1df2974d</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>abdd80415f40592b59e73d0925aad331c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a1173d17323a76d08b6c59fdbe07097b0</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a38b6ad84729bbdb2ef60eaf7e8df1cb6</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a60a4c8a55999dbbda7d0bddfb2c44723</anchor>
      <arglist>(stk::ParallelMachine machRank, int xBlock, int yBlock, int zBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; panzer::Ordinal64, panzer::Ordinal64 &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a62a741bbf2f499a5a20df200123cfd5c</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; panzer::Ordinal64, panzer::Ordinal64 &gt;</type>
      <name>determineYElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aa5dec7efa8f12fde2d6339144efa06f3</anchor>
      <arglist>(int yBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; panzer::Ordinal64, panzer::Ordinal64 &gt;</type>
      <name>determineZElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>abaf8a86fbc0bc7ab491d6dd01d7afbb2</anchor>
      <arglist>(int zBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSides</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a18763b299a0e05486480cd368b0741a0</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ad1fbaa64438bfda7701235af5922325a</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNodeSets</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a02a5ac391fafd1a2b488b6314812a11a</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x0_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a2dd3afd8110e2e515ade9c9d514ae847</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>y0_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a2431cf53853d41ed7a8e5d984df10420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>z0_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ab8137a674aaf8eee1f3a44d138bcb125</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xf_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a69fbe7d270cfb1fcfdcb497d991be570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yf_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a5636432197d2bb0256c8f7d2bfb924f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>zf_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a92065cf1b6e48a9c22c7fef079684f49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>abd41fb53c362a2132f91198d4e63acff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a82938da39d9587d52437ff477e704a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>zBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aed6006833c1913de7fb9773fb3f1551e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>panzer::Ordinal64</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a8db5706bbfe913a0af92cc78dd57b42f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>panzer::Ordinal64</type>
      <name>nYElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a69c5cdf2605b99a9a480f7d85ffa9233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>panzer::Ordinal64</type>
      <name>nZElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ab007aba95307bbd8961a42cd965c8d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ad175098ef86d4fb6d74de6f0a9d87518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ac2ab0c0c9ca3a1eb1eab70a351a27537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>zProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aa8036397a01e2f3b1fd9b92e9b82e209</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aa95aa06204452dd5fbb59d3da2f39708</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a25b6813508db5bec19235b64c49b3367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>buildInterfaceSidesets_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>ab4d1f2d76359e3634eaa0b94e36d16db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>buildSubcells_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>aa718d5d4c64443b5297ed82ef6b3ed4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 3 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1CubeHexMeshFactory.html</anchorfile>
      <anchor>a97c8ac2a244661bc45dfa72215e4d714</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::CubeTetMeshFactory</name>
    <filename>classpanzer__stk_1_1CubeTetMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>CubeTetMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>ae0add27a38f894ce450823470add2663</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CubeTetMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a022d6f411703558cf2a7418c087bc3c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>add6617c07899075b5798db4458cbf3c9</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>aab0e1853cdd9ba0970db6ffa754e11bd</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a571251eb64f69053825b78989b83e23b</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a74fbc1bfe5ed6f527c456a759224bbba</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>ada2d0f5af159e4766d058cbcdac89d23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 3 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a448e5a853c76e15fa777853be5b14f83</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>ac219ddeb7da0bec5e930e336d1064d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a5ff145cc2f2bb96600c003dc8e82654f</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a71a2ebd09d5b708c365f663065e7de2f</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a1c1a75304ae394f4f0ae4b00bbe77ca4</anchor>
      <arglist>(stk::ParallelMachine machRank, int xBlock, int yBlock, int zBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a05146f2ac3d8227e69c652186bd25e8e</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineYElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a3c0f2835a2e96bbfae36da51c184793c</anchor>
      <arglist>(int yBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineZElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a57dc72da99be950e78d573e13d236381</anchor>
      <arglist>(int zBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a920cc6228c616332e64125ca7f34a6dd</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildTetsOnHex</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a133ad8c8b3e66c9bd501395d08da1f96</anchor>
      <arglist>(const Teuchos::Tuple&lt; int, 3 &gt; &amp;meshDesc, const Teuchos::Tuple&lt; int, 3 &gt; &amp;element, stk::mesh::Part *block, const std::vector&lt; stk::mesh::EntityId &gt; &amp;h_nodes, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x0_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a94cb61a47b5ba30b2b55c170d5796043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>y0_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a3531f3bb94f677a70dbadcfcb46f8a24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>z0_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>aa141a917fa1600fc0ffc4ea5006478ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xf_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a15c5878668b97104eef91c81d6ba788d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yf_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a9b78fc7c8580dce7d0d67126d4ec9980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>zf_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>aa98a8936713d26aec9889ef329619fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>acf8b287468ad39dfe123eb6204002457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a83be13c840eb915a863ca0e9e577f94b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>zBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a371ba12823840f7d439712caadba312a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a0c43bad5df22350f334717e0a8562cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nYElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>acc3b4335286d11644f2f841548b5030a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nZElems_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>adc0bff8111b84e497be2015437b86486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a69f55ddcd80bee0984e08fa63d876a3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>aca09eb7a1e4f2efe38a750a0c2d83062</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>zProcs_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a541c931f13539913f8523a2f88550c46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>adcebc25d48e43f62bcc7fe58a6d5578e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a9ac56504f9edfb0ab3512739831b875d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 3 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1CubeTetMeshFactory.html</anchorfile>
      <anchor>a438be77bb7901aadc0a1ee4ed3d66183</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::CustomMeshFactory</name>
    <filename>classpanzer__stk_1_1CustomMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <class kind="struct">panzer_stk::CustomMeshFactory::FieldContainer</class>
    <member kind="function">
      <type></type>
      <name>CustomMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a9bf085ae3476d944db376d8c97e9d8b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CustomMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a37bc1962654ee9820586af53324ce0c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a7a7932c922676b448bae3e13ea923319</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a4934cece400a464a095a5a972169de48</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a62754e9a503ff31081d040ea512f9278</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a7616c5c99c3cb1bf3a5a7ecc4486cdf1</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a748850c875a8329fcac7aea62e232c5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>aa4f0a1c4db9a7fa7e1b5fdafc302365e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>aa1c654d554ff77c15226688a6ef783b8</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a976cfe51322856735af5b85e54f65c21</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a29d268b146076d5bc466447231f034e2</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fillSolutionFieldData</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a82fdc8cd93823448bddafda7056b93a6</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>Dimension_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>abd27012177dfc02ce3d6c6ef951cad31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumBlocks_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a425dabc6254ef6c764b1d5e60fb7a04e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumNodesPerProc_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a914e12830008600d2af779022bd6d93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>Nodes_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a50a5d605798a8d68835f9b87aba282a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>Coords_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a2bb44a3a52d6062c9a09a99e2d860157</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>NumElementsPerProc_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>ad47a4e02a4039dd319f696d1d675a248</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>BlockIDs_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a30f80a3f8c4de8538025eeec9d3b6298</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int *</type>
      <name>Element2Nodes_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a8bc73c1503b81f40d777a28c20a100bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>OffsetToGlobalElementIDs_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a521f9c71986d2efaffda836b4fe2ccaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>ChargeDensity_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a442fcac246e9a604fc54a29a64371778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double *</type>
      <name>ElectricPotential_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a150a34cbf70e8d883ba2fe1d28b67fa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a1d5502fdebd95008dc8c38d8e8ed2624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1CustomMeshFactory.html</anchorfile>
      <anchor>a03a376a5a204fed4cba4035bc32f2cb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::DefaultProductVectorSpace</name>
    <filename>classThyra_1_1DefaultProductVectorSpace.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::DOF</name>
    <filename>classpanzer_1_1DOF.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOF</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>ad7b7b9fa8d9915adcae6fdc7639c86f9</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a461e7a5dc230c66b29b135415467ee22</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a0737206431e1a5253c8d435e31fee58d</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a3e42da9862f7c74cf64a139dbc7781cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a02d271dce8eedf386d32c0e755bf30dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip_scalar</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>af2aa9efe730c6e78bd4ca45ece2b72c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip_vector</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a41e1195ecbe26d246720399a39c18645</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>ae53b2790245a19446d1e61f1a1aaa7a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a689cc81bd639a8bb82485031e52c5565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a402e5949cdda3da90d229596f9a854ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>is_vector_basis</name>
      <anchorfile>classpanzer_1_1DOF.html</anchorfile>
      <anchor>a4a907ef3f5cbc8f425a893aa5a9d63cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOF&lt; typename TRAITS::Jacobian, TRAITS &gt;</name>
    <filename>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</filename>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOF</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>aac35bae981b27b3f2dd85fc709378647</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a5b46cc3d227efc1618a68f143cc361d8</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ab385a58b3912977cff765a9751476058</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a6901cf9cb0d99b8d77b96a8432e25643</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>af8c8f20c1f5ea5e268852948f5b4e929</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a0761c2f89f24582aed1cfcf818d8bb89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip_scalar</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a70306516e01662ea2ed2eb58115f51b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip_vector</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a8b8096d016364da99e35b869af9123db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>afff36f4424cd83ce47fb2a52dcbbd635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a329e1010286968facecc0baaaad50895</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>accelerate_jacobian_enabled</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a6e27bdea4d0eb3fc11295d45f26d4b79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>accelerate_jacobian</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a3b0298efc7f8cc1a08cd94a0fe9de9ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; int *, PHX::Device &gt;</type>
      <name>offsets_array</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a9f32cf55ba5c26cb375a15c91bc35a63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sensitivities_name</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>abde762b92b6514819fa28d1cdf706a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>is_vector_basis</name>
      <anchorfile>classpanzer_1_1DOF_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a591b4ddfdafa9200e786af053254363b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOF_BasisToBasis</name>
    <filename>classpanzer_1_1DOF__BasisToBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; TRAITST &gt;</base>
    <member kind="function">
      <type></type>
      <name>DOF_BasisToBasis</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>a6228670c9bf42c37bb2cc8be33680feb</anchor>
      <arglist>(const std::string &amp;fieldName, const PureBasis &amp;sourceBasis, const PureBasis &amp;targetBasis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>a28fe4525016c0a4fbd28bf494e2bf807</anchor>
      <arglist>(typename TRAITST::SetupData d, PHX::FieldManager&lt; TRAITST &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>a279e6db7d6efba0d94670228fb439bd3</anchor>
      <arglist>(typename TRAITST::EvalData workset)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>a6ff70d37a35adf5b2a28645497938c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_source_coeff</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>ae2077c9e3b89b490d7844b462a4932fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_target_coeff</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>ab3cd670aab0f8eea546d3992fdbcba7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1DOF__BasisToBasis.html</anchorfile>
      <anchor>aae2dc41cce16cba9ba98bc9199a8d0d3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOF_PointField</name>
    <filename>classpanzer_1_1DOF__PointField.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; TRAITST &gt;</base>
    <member kind="function">
      <type></type>
      <name>DOF_PointField</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a8a04421b34acee2ef8fba180038c2e40</anchor>
      <arglist>(const std::string &amp;postfixFieldName, const std::string &amp;fieldName, const PureBasis &amp;fieldBasis, const std::string &amp;coordinateName, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;coordLayout, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;quadLayout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DOF_PointField</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a3d95da5a4b0c8840fafcf55ccc07d90a</anchor>
      <arglist>(const std::string &amp;fieldName, const PureBasis &amp;fieldBasis, const std::string &amp;coordinateName, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;coordLayout, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;quadLayout, bool useCoordPostfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a24d40386b43744a18dab3a2831fa98de</anchor>
      <arglist>(typename TRAITST::SetupData d, PHX::FieldManager&lt; TRAITST &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>aa1b33f7bc04b207c31db35e3a9c3079d</anchor>
      <arglist>(typename TRAITST::EvalData workset)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a56780346dcc81415ee9e01169e082225</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a5f43df88deb0ef4c9a1f699647b874fc</anchor>
      <arglist>(const std::string &amp;fieldName, const PureBasis &amp;fieldBasis, const std::string &amp;coordinateName, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;coordLayout, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;quadLayout, const std::string &amp;postfixFieldName)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Point, Dim &gt;</type>
      <name>coordinates</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a711fff5950bc0f36513f9369169d5fbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_coeff</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a852de9679d8cfd5ebd03afcb4d22f9f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_field</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a81fa5009ce88755d9e6af757ba4b4d27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt;</type>
      <name>intrepidBasis</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a908f098a31450b4702c994739440025d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>intrpCoords</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a17702477bb90e64ab168de7ecce673c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>basisRef</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>a77c7d41f7299126c0e0f0f9b9e45418b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1DOF__PointField.html</anchorfile>
      <anchor>ab8832d96bd0fefa70c00239520359ab9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOF_PointValues</name>
    <filename>classpanzer_1_1DOF__PointValues.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOF_PointValues</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a7959610d970b9292c1c284bdc0a704d3</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>ab68d63774e340f2440386f8e8451cc67</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a0e0c668d27c1cc4ec57a9d87428b5369</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a4e4b448760d186d2cb4a7c07ad91717f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a175d1e75d9f2aadd6d5f263c97f87eee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip_scalar</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a48bf3c9e3631f4c6fea7074ede5f5d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip_vector</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a6b340b99df9898db0be09eee3b12cfcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>is_vector_basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a597cf2954cfb2fc68258145b5f80ef36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>a1f2aaf2fb9cb0d268a9a87bcb942b4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; BasisValues2&lt; ScalarT &gt; &gt;</type>
      <name>basisValues</name>
      <anchorfile>classpanzer_1_1DOF__PointValues.html</anchorfile>
      <anchor>af732c1cc451c7a733d1607347702d7ab</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOF_PointValues&lt; typename TRAITS::Jacobian, TRAITS &gt;</name>
    <filename>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</filename>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOF_PointValues</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a95f6d3ecb56f37b0ad2dde69fc4dbf89</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ac13eb86351261c30b686e868cb366869</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a9b5bca1f9c049c6b84a321cd8177a0dc</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a2c6b974f87dda91d1e53aa9ce3d978af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ad0d34a02b82b9fd9ece365972a2c8fac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip_scalar</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ac7ea6e40394ed797802486fb8a6c0093</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip_vector</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a8b5676c536d15ae0853265484b2cdea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>is_vector_basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a7b4c4ad4618f19df33746d42702e4987</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>accelerate_jacobian</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a094ddd0b79956b5c2cce0b5b13f14d98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; int *, PHX::Device &gt;</type>
      <name>offsets_array</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ac7a15cff41968eec5a29b98c8afcda5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ae6f339e37c70daf1f4f50dd626cef411</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; BasisValues2&lt; ScalarT &gt; &gt;</type>
      <name>basisValues</name>
      <anchorfile>classpanzer_1_1DOF__PointValues_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a38dec5c427f52bb7306b2efbbc21d215</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFCurl</name>
    <filename>classpanzer_1_1DOFCurl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOFCurl</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>a741323db7799daca25fef03a54d47201</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>a914e06fb825f5612a41c325e4c803dfd</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>a1376383f193a6bd0197081c66e87c8d5</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>ad63cf0f686cbf42b37adc3c86d3b12e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>ab25d7cf4d31cc9894c1bc9bfbce03efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_curl_scalar</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>a471b4f03e1e510fed317997bac285e46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_curl_vector</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>affc5afee58178d46b0ff479b1388de37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>ab5f07235a3406bb01f674f1195cc6798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>aa2108803b71719cf3b945632883c719a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_dimension</name>
      <anchorfile>classpanzer_1_1DOFCurl.html</anchorfile>
      <anchor>ab09e69fbdd21347ae5327dc8b445fa5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFCurl&lt; typename TRAITS::Jacobian, TRAITS &gt;</name>
    <filename>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</filename>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOFCurl</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a04b872f5c208ac956a87fd99ed4bc590</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>abba6215bf2349e3aebc0dbab32630e61</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a403fab01b22b189d4161254119c667d3</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a39b219d7323484773b7eb9b5c3c027b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>aacf4238d24532bc5684668b16bda0cf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_curl_scalar</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>aa486b1db0239af9370e1087739d08f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_curl_vector</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a9d600a1a33eb678e610d9fb8d9781dce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets_array</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a597df1761f95ca5e59023084a1d7d91c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>offsets</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a2a0b2d3c49b4a3acae1958ed2f31c90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>acb485fa53a9e426602f0869ae82be5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a180e6b6da459564460639f35aced884f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_dimension</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a6cad5748a69d7cf2d50ddd672f138629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>accelerate_jacobian</name>
      <anchorfile>classpanzer_1_1DOFCurl_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a9fc85ad5cba770def11461f31fa2be97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BCStrategy_Dirichlet_DefaultImpl::DOFDescriptor</name>
    <filename>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>DOFDescriptor</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a468a438988405331a2ee7932aaf0b99b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>aa3555e87cd2edf73bcb5437c617c1e80</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dofName</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a58bd66ae48d26acce6155fb4e1cb1e9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>coefficientResidual</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a4784ae8835acbd7276ecbf76cbfa65f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>residualName</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a70efa4dbab88ac89733be6f5306bc206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>scatterName</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a3202b40ed79dcf57379cc6283fb05716</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>targetName</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a4dbd1ccf321006f5664100fd91e75203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>timeDerivative</name>
      <anchorfile>structpanzer_1_1BCStrategy__Dirichlet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>acdceb70c887ca982a40bfe46e4c5f1f0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::EquationSet_DefaultImpl::DOFDescriptor</name>
    <filename>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>DOFDescriptor</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a097b1258973cecccbd73d106726191ec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a234a0eb906365d2a5e6e8e282119e84a</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dofName</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a97dc6993c93a498afc2585ffb4336adf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>basisType</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a6890744ac8e355182cda7e17555c225d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>basisOrder</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>aa607fed48b7228c1b4deafb6f5fbc0f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>ac88b7b03910c5578e4a62752073085be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>integrationOrder</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a15750e810122c753e6d094de1c8336be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::IntegrationRule &gt;</type>
      <name>intRule</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a1f7a1fd5805a851a12b7d48d39ae5308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>residualName</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>ae353a9b8375da7efefa359739275e231</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>scatterName</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a931ba417ff58bf7446e712e33682de14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>grad</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a25e5ba651e97d141e24c445a2121602d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>curl</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>aeee7d6f3fa3a31f9388fdccc421196e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>div</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>abee0795a01aa21a8324801ac837109ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>timeDerivative</name>
      <anchorfile>structpanzer_1_1EquationSet__DefaultImpl_1_1DOFDescriptor.html</anchorfile>
      <anchor>a09284a124446324a135535635b911ab8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFDiv</name>
    <filename>classpanzer_1_1DOFDiv.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOFDiv</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>adc0ccc876c55bace6e1236aee9774d90</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>aeb4a6116e3e52e126e4d3acd788ffd9c</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a533479d92f6f4f8b4e2078a4a7a2052c</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a805a7db6690670f51756381987b8bea8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a3a83783461e67f6319e425d9d106ed81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>dof_div</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>ae2255bc0b8b159ce8e305dcf043a9260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a2e77a8b371889a0107e8906188a6af5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a62f0662a293a2d350f25b8b16753b5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_dimension</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>a70bad580479410a0c3c804298a27d702</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>classpanzer_1_1DOFDiv.html</anchorfile>
      <anchor>afd008b421ea8daf442c38207181ea6d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFDiv&lt; panzer::Traits::Jacobian, TRAITS &gt;</name>
    <filename>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</filename>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>DOFDiv</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a1f9cc4290e409314ee234174ff593dd9</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a5ed8afa7f30fc0e54e04707ed48801c5</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a1bf634fbcfa8034991da8b31f49e3e6b</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>af4d8dc935a2cd18ec7366a4beff75512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>afcf3a792775c3a3e664dbcc39510df95</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>dof_div</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a39a8ae0e654795e72450f6b4094436fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a0fc6baf62575aa71f2233f2652dc9481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ae68db08b71d9eae2abbc1ec80c437a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_dimension</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>aecf0d056e4f081190b1b3f374797b8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>accelerate_jacobian</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a2ddd78affce4499803b331947c2145da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>offsets</name>
      <anchorfile>classpanzer_1_1DOFDiv_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a71f12ed8c4232ac90bd92654a629eeb7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFManager</name>
    <filename>classpanzer_1_1DOFManager.html</filename>
    <templarg>LocalOrdinalT</templarg>
    <templarg>GlobalOrdinalT</templarg>
    <base>panzer::UniqueGlobalIndexer</base>
    <class kind="class">panzer::DOFManager::ElementBlockAccess</class>
    <member kind="typedef">
      <type>GlobalOrdinalT</type>
      <name>GO</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a145aa282c0bcc64703811af4a100338d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>LocalOrdinalT</type>
      <name>LO</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a25f2bf3a35c1344742afd3b5fdb96b0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DOFManager</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a8f5e169f03f8a9e639bd1b68d49e9ce9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DOFManager</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a349506dc99e7c58ee872efea2725a35d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DOFManager</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>afc9753a1a8666c22b887a041b85bf6da</anchor>
      <arglist>(const Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;connMngr, MPI_Comm mpiComm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setConnManager</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ae3f7bd4b22d0623f94ba4cf7652f52e0</anchor>
      <arglist>(const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, MPI_Comm mpiComm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt;</type>
      <name>getConnManager</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a8e7c3d5f4848276fd64e034e14db04a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>getConnManagerBase</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aaa84af10bc23caa9ac9e73547eb7c11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addField</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aa9ed35189731e8c9b0e732eb6536ef79</anchor>
      <arglist>(const std::string &amp;str, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addField</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>af20aa71f18bd7d8f2763cbddfe350807</anchor>
      <arglist>(const std::string &amp;blockID, const std::string &amp;str, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getFieldPattern</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a500687107f1acb15ca4642d7fa750481</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getFieldPattern</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a0f3a49ac35ab44f84636738e0d6a3b2c</anchor>
      <arglist>(const std::string &amp;blockId, const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwnedIndices</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a3bf989c030390eba81ed2d3fe87e3d31</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a1130a1f53c51b060e40d33c7b9a8b3ca</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a44ff115dbc7383dad27b3fa1f494ad5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a5a20f545c9df209bdca043d413b7beb1</anchor>
      <arglist>(const std::string &amp;blockID, int fieldNum) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementGIDs</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aa77f13c3c5ea2588f3ed26264a39811d</anchor>
      <arglist>(LO localElementID, std::vector&lt; GO &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a0ab9e5e4b6f6d34c37dee30733a9a84c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGlobalUnknowns</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ad13549d3ed0e1bf3f74d187de3f995ad</anchor>
      <arglist>(const Teuchos::RCP&lt; const FieldPattern &gt; &amp;geomPattern)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldNum</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aea55034700e392f13615e4e249d95daa</anchor>
      <arglist>(const std::string &amp;string) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>abda83d90bedca9dd1b7b10760f58d584</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getGeometricFieldPattern</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a0c79a770418f02cdba699b742f3f29f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>afec8b5d1cd6fc556d49d05ef74faa566</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fieldInBlock</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a5e5296bf8eb091f823d2ed6c9cb50776</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a82852560495e3b1d64b854dd279c536e</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a544c74dbf16c13b161dcfbf97fc43b4c</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a48675f1639f274e923128040fc9f373e</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ownedIndices</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ab373ae64249f8dc87598c18c121c1054</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinalT &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFieldOrder</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a77c7c2f2b5f7a9f04400591827ded3fc</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;fieldOrder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a3c579e453890470bbf5dfeae2708458f</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validFieldOrder</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a2f634ba20ddce83a010d00b31a706656</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;proposed_fieldOrder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildUnknownsOrientation</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ad17431d7f400e71d17f45196076232df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getOrientationsRequired</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>abb24722a2bc2c5bad715a32a0cf89cf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOrientationsRequired</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a1bc5dd7d98cc2a98e0e78629d58f0cdb</anchor>
      <arglist>(bool ro)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementOrientation</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a43910d6e55153210aea77ee35231a15e</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFieldString</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a5022e0ed4f41703c52f51ffb8eeb3b11</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ConnManager&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>resetIndices</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a2af8d359722546c28c8f504fd7d44d03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a601c3f3d274ce8ec16dd8651f74b471c</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>af6b880110ef92eee91da08e76168d74e</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printFieldInformation</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a6ecb584fb20d9a00bedcfb423d6d43bd</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableTieBreak</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>acda409178cdefb3fb93992feca7705ab</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableGhosting</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aaaa5bbe3e02340ea66932c7300374713</anchor>
      <arglist>(bool enable)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumberElementGIDArrays</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a0f2d6288ad42db3d859dc503c1a4e1e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LO, GO, panzer::TpetraNodeType &gt; &gt;</type>
      <name>runLocalRCMReordering</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a3d5dc20e38506204a94eb2abff4b5126</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::size_t</type>
      <name>blockIdToIndex</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a2977eac815c884209c62b70d00d15db6</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; LO, GO, panzer::TpetraNodeType &gt; &gt;</type>
      <name>buildOverlapMapFromElements</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a7aa32d3b19b2dd6756379243805463bb</anchor>
      <arglist>(const ElementBlockAccess &amp;access) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::MultiVector&lt; GO, LO, GO, panzer::TpetraNodeType &gt; &gt;</type>
      <name>buildTaggedMultiVector</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a9649f7960c7809ca3d924ad0fdae21c9</anchor>
      <arglist>(const ElementBlockAccess &amp;access)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::MultiVector&lt; GO, LO, GO, panzer::TpetraNodeType &gt; &gt;</type>
      <name>buildGlobalUnknowns_GUN</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a9eebed32769262f733c7889114237c08</anchor>
      <arglist>(Tpetra::MultiVector&lt; GO, LO, GO, panzer::TpetraNodeType &gt; &amp;overlap_mv) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>fillGIDsFromOverlappedMV</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ac6b57178cc7106d1d35aa4f678d6fd15</anchor>
      <arglist>(const ElementBlockAccess &amp;access, std::vector&lt; std::vector&lt; GO &gt; &gt; &amp;elementGIDs, const Tpetra::Map&lt; LO, GO, panzer::TpetraNodeType &gt; &amp;overlapmap, const Tpetra::MultiVector&lt; GO, LO, GO, panzer::TpetraNodeType &gt; &amp;overlap_mv) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalIdsFromOwnedAndSharedElements</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a5576e37fdeb95c786e7369b7bbcbab22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt;</type>
      <name>connMngr_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>acb5a48aad22bc78c93b15d7de137e226</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>communicator_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aef44700edabaefc11fcf10725a111b1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const FieldPattern &gt; &gt;</type>
      <name>fieldPatterns_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a1a8246173e0a1f3d2f6ddc1b946bcf64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>fieldNameToAID_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>af25c53261cc64b195631e1c3ba2be23a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>blockOrder_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ab02d9464165ff9d4d1ff36a71b6ca969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>blockNameToID_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a93115c20e1d147e938307e71dd9b1376</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
      <name>blockToAssociatedFP_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a1e95578e620f6b1891a796ac484e4aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>fieldStringOrder_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a6f425d6e8a83080c590911d8f515b7d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldAIDOrder_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ab30d5615b187cf305b54af07d5b21d6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::FieldPattern &gt;</type>
      <name>ga_fp_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a5b13ea8ee054ce005e2037718c419b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::FieldAggPattern &gt; &gt;</type>
      <name>fa_fps_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>ab1ef0cfcdd671484afeeccc2f3b9d6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; GO &gt;</type>
      <name>owned_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>afed2d51cb64c26e42d9b09e66c99fb7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; GO &gt;</type>
      <name>owned_and_ghosted_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a83d1084985aa9671414971d308d7afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; GO &gt; &gt;</type>
      <name>elementGIDs_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a3352fde0fdf8c24d2b6bd7e71de3a07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>elementBlockGIDCount_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a78665f9f4bb7ef5e216944630addc45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>numFields_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a2d1a385f70811f67d090e6eb5f986876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>buildConnectivityRun_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>aff9dc8d7d95e5d980dbfa1b0445158a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>requireOrientations_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a1223b6cac93f4081d558bac79617be1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; char &gt; &gt;</type>
      <name>orientation_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a6f363851c6c8e2e3996be1f4fffa9abb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTieBreak_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a90ad1c47bb6fe2f751c3dbcb3a5f4544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>buildGhosted_</name>
      <anchorfile>classpanzer_1_1DOFManager.html</anchorfile>
      <anchor>a3081009a44a58ec961a7ce60df939f17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::BlockedEpetraLinearObjFactory::DOFManagerContainer</name>
    <filename>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</filename>
    <member kind="function">
      <type></type>
      <name>DOFManagerContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a9470d56e467ec78f1723a31001618f05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DOFManagerContainer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a74367e47d8e0db162d4fa6cfc7650766</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>aec449ed3cc6858939e8fe3612997f3aa</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlocks</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a9c1ed1edb033917905cdf1f599b490fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsBlockedDOFManager</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a15576c853afdde1809dfcb777555de04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LocalOrdinalT, int &gt; &gt;</type>
      <name>getBlockedIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a28a37b468adcb9239d7d066d19903cae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a488311f3a05ace86ea3cb5f304946dac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt; &gt; &amp;</type>
      <name>getFieldDOFManagers</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a5188572ac4d4969842d7509b7b11bcfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LocalOrdinalT, int &gt; &gt;</type>
      <name>blockedDOFManager_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>ac8c2a5640feda49c13ec74c4d2f1e8a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, int &gt; &gt; &gt;</type>
      <name>gidProviders_</name>
      <anchorfile>classpanzer_1_1BlockedEpetraLinearObjFactory_1_1DOFManagerContainer.html</anchorfile>
      <anchor>a0386fe943259ec6f4cf750be6acca172</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFManagerFactory</name>
    <filename>classpanzer_1_1DOFManagerFactory.html</filename>
    <templarg>LO</templarg>
    <templarg>GO</templarg>
    <base virtualness="virtual">UniqueGlobalIndexerFactory&lt; LO, GO, LO, GO &gt;</base>
    <member kind="function">
      <type></type>
      <name>DOFManagerFactory</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>afe3fafda2937d1a7eb515b20a1d53c1f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DOFManagerFactory</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>aabdb2fb017129fc3095a1e4618007d1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>abe24add7c7acd0ea902ee2decf911f99</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a220e5c6db9cc8d67d72810d01337d045</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseDOFManagerFEI</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>ab64b99f1e28f435f0ce1359a876988dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseTieBreak</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>af371327cfd2239ed3c17c04c2ea0c832</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseTieBreak</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a983fa58590d5a1ba451a9595c394fd3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setEnableGhosting</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a2500a27d9a6ba2fc74a181af95122709</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getEnableGhosting</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a54d9be1587ab59b825d9689a91789585</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>buildFieldOrder</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>ae3e2080adc3a48892592324b1567b374</anchor>
      <arglist>(const std::string &amp;fieldOrderStr, std::vector&lt; std::string &gt; &amp;fieldOrder)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>aaeb05d64ceb6268b2fcdc5d7d4d5faba</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useDOFManagerFEI_</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>ae54d9ad02deb5b78abe315c87a3b05f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTieBreak_</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a30a3e94df783a1387bd2cf193c2ffa5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enableGhosting_</name>
      <anchorfile>classpanzer_1_1DOFManagerFactory.html</anchorfile>
      <anchor>a1a50b73b26373e15a0dd4108e0159eff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::DOFManager::ElementBlockAccess</name>
    <filename>classpanzer_1_1DOFManager_1_1ElementBlockAccess.html</filename>
    <member kind="function">
      <type></type>
      <name>ElementBlockAccess</name>
      <anchorfile>classpanzer_1_1DOFManager_1_1ElementBlockAccess.html</anchorfile>
      <anchor>a0790a1441d8d1c8e7825101c7b6b586e</anchor>
      <arglist>(bool owned, const Teuchos::RCP&lt; const ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; LO &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1DOFManager_1_1ElementBlockAccess.html</anchorfile>
      <anchor>a1e25a16dd719328b8a376cb7bd947918</anchor>
      <arglist>(const std::string &amp;eBlock) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useOwned_</name>
      <anchorfile>classpanzer_1_1DOFManager_1_1ElementBlockAccess.html</anchorfile>
      <anchor>a17c7590d8008ab483f20c1ba0fbed539</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const ConnManager&lt; LO, GO &gt; &gt;</type>
      <name>connMngr_</name>
      <anchorfile>classpanzer_1_1DOFManager_1_1ElementBlockAccess.html</anchorfile>
      <anchor>a8e72e03e689886f5194d4320619968e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::STK_Interface::ElementBlockException</name>
    <filename>structpanzer__stk_1_1STK__Interface_1_1ElementBlockException.html</filename>
    <member kind="function">
      <type></type>
      <name>ElementBlockException</name>
      <anchorfile>structpanzer__stk_1_1STK__Interface_1_1ElementBlockException.html</anchorfile>
      <anchor>a2122d4387ce54d0e0128129b15fd4547</anchor>
      <arglist>(const std::string &amp;what)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::ElementDescriptor</name>
    <filename>classpanzer__stk_1_1ElementDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>ElementDescriptor</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>a5e0a131023b2bf0329892e5b222a18ff</anchor>
      <arglist>(stk::mesh::EntityId gid, const std::vector&lt; stk::mesh::EntityId &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ElementDescriptor</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>a114952c7206c315920217cc4b8ed8e3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>getGID</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>abeaa7b63111ed6acf82a41d4879d4e93</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; stk::mesh::EntityId &gt; &amp;</type>
      <name>getNodes</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>a7f842bec691da85262000447782f6a30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ElementDescriptor</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>a306b6056f2a7dd39e40deb19c6e63948</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>stk::mesh::EntityId</type>
      <name>gid_</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>a00aa0776aefdf3dc0e913207c01863a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; stk::mesh::EntityId &gt;</type>
      <name>nodes_</name>
      <anchorfile>classpanzer__stk_1_1ElementDescriptor.html</anchorfile>
      <anchor>aeb6dbb6f8cb4c145bbd518178a4ec013</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EmptyEvaluatorFactory</name>
    <filename>classpanzer_1_1EmptyEvaluatorFactory.html</filename>
    <base>panzer::GenericEvaluatorFactory</base>
    <member kind="function">
      <type>bool</type>
      <name>registerEvaluators</name>
      <anchorfile>classpanzer_1_1EmptyEvaluatorFactory.html</anchorfile>
      <anchor>ac34aa7ac8f2559ef6af173175c81e4c8</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const WorksetDescriptor &amp;wd, const PhysicsBlock &amp;pb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EpetraLinearObjContainer</name>
    <filename>classpanzer_1_1EpetraLinearObjContainer.html</filename>
    <base>panzer::LinearObjContainer</base>
    <base>ThyraObjContainer&lt; double &gt;</base>
    <member kind="typedef">
      <type>LinearObjContainer::Members</type>
      <name>Members</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>af7cda7356154c58519d86ddcef7743eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Epetra_Vector</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a645ee29750d08119f38a195ee2818390</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Epetra_CrsMatrix</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a8aff4665baffbd49571a2276aa83187b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraLinearObjContainer</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a779db66f853163b6e5a1c4c09addb4f9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraLinearObjContainer</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>aad7513fb9418ba1a751a2399fbe23bd2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;domainS, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;rangeS)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a2b8484200fc47739fea3305d9474a66e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a211c472ef8ad08b779163a013a5abb77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a625e2982048df43cc1919d440d9cce65</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>get_x</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>afdc2bd8122c845b526b90065338819bb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>af6289e9ce13f2339e3c702bb36d67861</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>get_dxdt</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a2d8ce6b72fc0b5f1f893095664bdbf26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a413582e5c845ac3d9987b5e97d86f274</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>get_f</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>abe0fb270813a049a817dd55be4b01907</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>ab2681a8982a702c0b13d45627762d759</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>get_A</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a9e2412886d3f32efb788573709eda683</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a92d4ac76438a1ea16fe5f86a67d5f3cd</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a80a89147c279a870a5fb214d1b685994</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a9e2aba930ffe8fcc2a8d53e89feedcc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a87a020f7ac39cd726840db26c3149f4c</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>ae1225b9ec0bbd90dc7427d251ca976a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a4476adefe0483273340ccfcc5eff9531</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>ad785a16bb700689352acb675810f95a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>ada9df1042f7fdc76f31fa589b3016198</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a77ac0522fc69276b24f498ea30348860</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>EpetraLinearObjContainer</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a894ba9638d0710d83047f57a4914cdac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domainMap</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a8e3f02e98dc02bccdb8d0e8a98d92577</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>rangeMap</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a9d3095ed10900d064282b1169b337d6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>domainSpace</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a8fc4699f16e6e72e99d9084f08ea4970</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>rangeSpace</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>ae3464ce8dfc4864d381a8d5f3ba79972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a58b0fb2af2feedd7784d85e42b278d65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dxdt</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>aaf97608c0da9903bf2bf40c55d199f03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>f</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>af7e4acb21526e8a42385c85c868761f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>A</name>
      <anchorfile>classpanzer_1_1EpetraLinearObjContainer.html</anchorfile>
      <anchor>a492d25cf510ec6216fd2f3e9854c7762</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EpetraVector_ReadOnly_GlobalEvaluationData</name>
    <filename>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</filename>
    <base>panzer::ReadOnlyVector_GlobalEvaluationData</base>
    <member kind="function">
      <type></type>
      <name>EpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a7aed3ee3cdd1c3b5fde4d0c65754b7eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a425fb325cecf3c5ae76dfe68240d1d9f</anchor>
      <arglist>(const EpetraVector_ReadOnly_GlobalEvaluationData &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aaf67879ca3130b9fb7fcbaa5986af6a2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Import &gt; &amp;importer, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;ghostedMap, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;uniqueMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useConstantValues</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aae5a2924f49d213bb776e3dc8efc1187</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;indices, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>acc4cd16a7c65e8267b72a3f47309257b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Import &gt; &amp;importer, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;ghostedMap, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;uniqueMap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aa227d54bfc5d78702c274427fedd1bcb</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>af0d8cde38abae9c9568ce2f110190413</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>adaea9dd44c4cee2f0acfbd3716b97f95</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aaba66b886d85ddda7b8b9087e82040d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniqueVector_Epetra</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ad27dbfb5e18a1ec47400aba994d5c4d9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Vector &gt; &amp;uniqueVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>getGhostedVector_Epetra</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a03b880d821e865290bb5ac0edd1e598b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniqueVector</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ae04a1c36f0d357bf09d6d1e34bfd1945</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;uniqueVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getUniqueVector</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a45e1faa3eaf3928b0645968c152fbde8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a0d2477f5cb554b2c5b5d93d7d147b803</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ad77f86e4d11a0a5565f10cee38f938d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aaea4f14b729d360d2ff4606d09910e54</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::vector&lt; int &gt;, double &gt;</type>
      <name>FilteredPair</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>afffa384dae68c3679c13496f69c87137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isInitialized_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>af6fba5a9cf2e916d47655654d3b55d2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>ghostedMap_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a65d3979a8dd8beee968d5f1355843551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>uniqueMap_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a7567c8162a59c3ba723c7f277a35ba84</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>ghostedSpace_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a7763518fc1987a3e355dd7bd425523cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>uniqueSpace_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a0e1fbc1823ef9f24db14fb51b758f375</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Import &gt;</type>
      <name>importer_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a1b6e4d7e9c9461788864a05f93ab791a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>ghostedVector_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a49ad56c9c397df1d460e1a4058e327f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>uniqueVector_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aaaec34fb8b2e8bd107ea13d259df6ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; FilteredPair &gt;</type>
      <name>filteredPairs_</name>
      <anchorfile>classpanzer_1_1EpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ae7f23fc69a7da994112fa2e5593526bf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EquationSet</name>
    <filename>classpanzer_1_1EquationSet.html</filename>
    <templarg></templarg>
    <base>panzer::EquationSetBase</base>
    <member kind="function">
      <type></type>
      <name>EquationSet</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a99ab63b12ae80dd967756903b5b10835</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EquationSet</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a6d08fec1864a0fcdb399fbad5f5505df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a8e2dc74876d694ed4c0f0ca43b05adf4</anchor>
      <arglist>(const std::string &amp;blockId)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>ad54a10b0c810987b4153c2df81770334</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a31787fbe14332eb494a5065a1992b420</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterDOFProjectionsToIPEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a5faebc385a819d079b59ba0393ee006d</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::Ptr&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEquationSetEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a95ded39b12ea17b380a0bff31543ca8a</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>ac66e00fd830e0870dc78a1e8280a7da0</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a8ce01235db1b5f1fcd68ca201d7889b8</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterInitialConditionEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a20e917b2e620ec6a421a6d967c152543</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getEvaluatorParameterList</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>afe5627ade54a3a1bc472bdfcb4f0daab</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &gt; &amp;</type>
      <name>getProvidedDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a4873941c1bd841faf660c6f57a0b0b76</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
      <name>getCoordinateDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>a5a5d368891f81e63c88190750d925794</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &amp;</type>
      <name>getIntegrationRules</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>ae533d1c40b6ea9a2b389d21ffcd2ef22</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>ae4d83ec5b5b2ec71facc5b27cba7e0b4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>classpanzer_1_1EquationSet.html</anchorfile>
      <anchor>ac1142783823b7e30f8c15d351e61359e</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EquationSet_DefaultImpl</name>
    <filename>classpanzer_1_1EquationSet__DefaultImpl.html</filename>
    <templarg>EvalT</templarg>
    <base>panzer::EquationSet</base>
    <base>panzer::GlobalDataAcceptorDefaultImpl</base>
    <class kind="struct">panzer::EquationSet_DefaultImpl::DOFDescriptor</class>
    <member kind="function">
      <type></type>
      <name>EquationSet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a423af54f943b9882d10ec17bdb6d7bf8</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params, const int &amp;default_integration_order, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const bool build_transient_support)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EquationSet_DefaultImpl</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a95b1dc50f9b53b0a9ca6551f1d5c3293</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ae4d37365ca1a0642382ee71f2f37db02</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;fl, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a1cbe25554df8fd9cf3f11e75e015a1ac</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;fl, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEquationSetEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a46d8691b892fe96913e4a965227ed619</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;fl, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterDOFProjectionsToIPEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a46e99ee056c2ea36730d8b53e680b72b</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::Ptr&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a4876fe013794e69a142e7475f41e4d1e</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ab100fe7a15827ea9dafd87389919abbc</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterInitialConditionEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a6ecba485bc9849ea0723d9a57b1c7d2a</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;fl, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getEvaluatorParameterList</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ab9c55207ad949afcdc991faedcfaa8b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &gt; &amp;</type>
      <name>getProvidedDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aba0580b9e0bfdbac665cecb837f0b7eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
      <name>getCoordinateDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a8b6ea3c6fe1d450742f3210c67fab2a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &amp;</type>
      <name>getIntegrationRules</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a963bcc4c67f184e45e534222614fd316</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ac904c62fa200f9d4539f08252acd7d99</anchor>
      <arglist>(const std::string &amp;blockId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aca6a2419dd4a5cfa3badf2d3793d3ffd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>adf094c0c27171384257c2b7a1f85a6e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setTangentParamNames</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ac2fed004bef2c5d5245be7104f6daf95</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;tangent_param_names)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAddedDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>acea724702641e625a02c0f680fddf2f7</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;dofNames) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateDOF</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a693cf43220dc87d1aec559c91baff3a3</anchor>
      <arglist>(const std::string &amp;dofName, int basisOrder, int integrationOrder=-1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBasisOrder</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a365a5a3605147e3a8ac020aca5f20364</anchor>
      <arglist>(const std::string &amp;dofName) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegrationOrder</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aae17d136b2ba0883a8df4d8941a5c2e3</anchor>
      <arglist>(const std::string &amp;dofName) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setupDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a5dd90647fa552c2a8c3a4ae8d422fb4b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>buildTransientSupport</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a7c897c7735c442a8be1dd51b610211d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOF</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a9879bc950d6378a5e7b6ffdab02b8999</anchor>
      <arglist>(const std::string &amp;dofName, const std::string &amp;basisType, const int &amp;basisOrder, const int integrationOrder=-1, const std::string residualName=&quot;&quot;, const std::string scatterName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOFGrad</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a043c34816f087329282a334010bd111d</anchor>
      <arglist>(const std::string &amp;dofName, const std::string &amp;gradName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOFCurl</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a0800ff260e032d02b5fab3c9d13fb09d</anchor>
      <arglist>(const std::string &amp;dofName, const std::string &amp;curlName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOFDiv</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ae8ab66b91afb24e1f3ade4e8301edd93</anchor>
      <arglist>(const std::string &amp;dofName, const std::string &amp;divName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addDOFTimeDerivative</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>abd8374fd89b5413ada002a05e9c993a7</anchor>
      <arglist>(const std::string &amp;dofName, const std::string &amp;dotName=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setCoordinateDOFs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a2968f337115a73b3abf7634dbddda852</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;dofNames)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addClosureModel</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a1f36ad5f54ff16f732dcd9bcec4c916c</anchor>
      <arglist>(const std::string &amp;closure_model)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDefaultValidParameters</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>afd5ae6326b879135c6c5c4695458ec0b</anchor>
      <arglist>(Teuchos::ParameterList &amp;valid_parameters)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::PureBasis &gt;</type>
      <name>getBasisForDOF</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ab2c4a227672661e9ec7f0bd75f4eca66</anchor>
      <arglist>(const std::string &amp;dof_name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::IntegrationRule &gt;</type>
      <name>getIntRuleForDOF</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>afc246c4d44190334bc8e65667dc23b28</anchor>
      <arglist>(const std::string &amp;dof_name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>getBasisIRLayoutForDOF</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a43eb9b7a8579a86d93aaf5d9eebb1779</anchor>
      <arglist>(const std::string &amp;dof_name) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildAndRegisterResidualSummationEvalautor</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a97e25c7829d6d02a3d62cb04dcd6ec60</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const std::string dof_name, const std::vector&lt; std::string &gt; &amp;residual_contributions, const std::string residual_field_name=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildAndRegisterResidualSummationEvalautor</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a0f5403932448b9da518754819e942387</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const std::string dof_name, const std::vector&lt; std::string &gt; &amp;residual_contributions, const std::vector&lt; double &gt; &amp;scale_contributions, const std::string residual_field_name=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getEquationSetParameterList</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ac29c1ffd413008c11ef0e8b9f026fd50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setupDeprecatedDOFsSupport</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a3b1287bc4f4e0de6aff99cec93f6653f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, DOFDescriptor &gt;</type>
      <name>m_provided_dofs_desc</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aeccb6059e79e90b603e801a161dc0eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_tangent_param_names</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>adb97e8d14389f7735137f824b76bcfc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, DOFDescriptor &gt;::const_iterator</type>
      <name>DescriptorIterator</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>afc95867802d6aefe60000886c003e936</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, std::pair&lt; Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt; &gt; &gt;::const_iterator</type>
      <name>BasisIterator</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a3d14c89b09bc54810c1937935093d9ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::pair&lt; Teuchos::RCP&lt; panzer::PureBasis &gt;, Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt; &gt; &gt;</type>
      <name>m_basis_to_dofs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>acf5d3f45d1f3bf9541c46306167bd456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>m_input_params</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ae7932c4e6732c914b11502594a579ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_default_integration_order</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ab09f0063df09f7f56456ad275beae7e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const panzer::CellData</type>
      <name>m_cell_data</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a196ddf6cd592bb8c7157577d66e094ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>m_build_transient_support</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a17567e7c092ba91a7f310619715f1936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &gt;</type>
      <name>m_provided_dofs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aa13d748721a7d0eaf320d6a8ca0075b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &gt;</type>
      <name>m_provided_coord_prefixes</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>ad34eaebda53e4443e451b743c9e35573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt;</type>
      <name>m_int_rules</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a32f6325143f70e6e96a66c67d7e7584b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt;</type>
      <name>m_unique_bases</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a0396cf69e7efd5d32238027990313a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>m_eval_plist</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>accec99daaefc909c6b98afdbcceccb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_block_id</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aecba44a668e7972a727d731b03668699</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_type</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>aa4751c3c1e44d4e802a7762cb460c33f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_closure_model_ids</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a30eedb6ad94557bc67618e3ac4d11dcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>m_coordinate_dofs</name>
      <anchorfile>classpanzer_1_1EquationSet__DefaultImpl.html</anchorfile>
      <anchor>a9386e2162062eda8e6a941c90eb0099d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EquationSet_FactoryComposite</name>
    <filename>classpanzer_1_1EquationSet__FactoryComposite.html</filename>
    <base>panzer::EquationSetFactory</base>
    <member kind="function">
      <type></type>
      <name>EquationSet_FactoryComposite</name>
      <anchorfile>classpanzer_1_1EquationSet__FactoryComposite.html</anchorfile>
      <anchor>a744b54939505a18754d7fe0ead7926b5</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::EquationSetFactory &gt; &gt; &amp;factories)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::EquationSet_TemplateManager&lt; panzer::Traits &gt; &gt;</type>
      <name>buildEquationSet</name>
      <anchorfile>classpanzer_1_1EquationSet__FactoryComposite.html</anchorfile>
      <anchor>af96518a41d0afdbac700650a1f45f59d</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;input_plist, const int &amp;default_integration_rule, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const bool build_transient_support) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::EquationSetFactory &gt; &gt;</type>
      <name>m_factories</name>
      <anchorfile>classpanzer_1_1EquationSet__FactoryComposite.html</anchorfile>
      <anchor>ac39e28dacb24f44b4c8f7a9e2f7d610f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EquationSet_TemplateManager</name>
    <filename>classpanzer_1_1EquationSet__TemplateManager.html</filename>
    <templarg>Traits</templarg>
    <member kind="function">
      <type></type>
      <name>EquationSet_TemplateManager</name>
      <anchorfile>classpanzer_1_1EquationSet__TemplateManager.html</anchorfile>
      <anchor>a1b02c2f61f3b842d6012555491cd21c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EquationSet_TemplateManager</name>
      <anchorfile>classpanzer_1_1EquationSet__TemplateManager.html</anchorfile>
      <anchor>a84e0e6bf9aaea04f460625384a98e061</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EquationSetBase</name>
    <filename>classpanzer_1_1EquationSetBase.html</filename>
    <base>panzer::EvaluatorsRegistrar</base>
    <member kind="function">
      <type></type>
      <name>EquationSetBase</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>ab9219c6966d2320d66578b288e063c8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EquationSetBase</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a3076574711205f8ff1402db5c613eb2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setTangentParamNames</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>acac7bbb986d67b8a3f451087d3dd8b4c</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;tangent_param_names)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>af1587a749bc20b02786282f9db1468e5</anchor>
      <arglist>(const std::string &amp;blockId)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>ae35a3f0d51db37c188220e320e2b12bb</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a308496d9719c340d8d1fd2b9a6d9b1d8</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterDOFProjectionsToIPEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>ac618cde832a9f9b2abd6409aa733cd2a</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::Ptr&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEquationSetEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>aa321a2170e67d595f46946f405837ba0</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a9b3bbdcabd01736ab1343d36a51d4279</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a59d9d8ecf8fe6dc69d983514b98f9bb6</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLayoutLibrary &amp;field_library, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterInitialConditionEvaluators</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>aaa24851546ca420537a0a0eb443a1e85</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::FieldLibrary &amp;field_library, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getEvaluatorParameterList</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a527e108de81096ccbb7366b6e6a4f7a4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &gt; &amp;</type>
      <name>getProvidedDOFs</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>aa558bd4a352a7bedd3c821cd75a54974</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
      <name>getCoordinateDOFs</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a8a11dca1e25b77959ab9e10e0ae778f1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &amp;</type>
      <name>getIntegrationRules</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>aaf0c521d7357aff34cc12de66603f652</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getElementBlockId</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>a1390f196b29f14ade7e047f440a54aa3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>classpanzer_1_1EquationSetBase.html</anchorfile>
      <anchor>acb8814f2ba2a7d88bc00cf88dd9dc8e5</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::EquationSetFactory</name>
    <filename>structpanzer_1_1EquationSetFactory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~EquationSetFactory</name>
      <anchorfile>structpanzer_1_1EquationSetFactory.html</anchorfile>
      <anchor>a94592c7647d1c79000cef7f95572631d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::EquationSet_TemplateManager&lt; panzer::Traits &gt; &gt;</type>
      <name>buildEquationSet</name>
      <anchorfile>structpanzer_1_1EquationSetFactory.html</anchorfile>
      <anchor>ab7d3f87d13a729546c7080e7e34a75f9</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params, const int &amp;default_integration_order, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHX::eval_scalar_types&lt; panzer::Traits::Jacobian &gt;</name>
    <filename>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</filename>
    <member kind="typedef">
      <type>Sacado::mpl::vector&lt; panzer::Traits::FadType, panzer::Traits::RealType, bool &gt;</type>
      <name>type</name>
      <anchorfile>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a3a11ee024004b1ab1f62da426a866244</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHX::eval_scalar_types&lt; panzer::Traits::Residual &gt;</name>
    <filename>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Residual_01_4.html</filename>
    <member kind="typedef">
      <type>Sacado::mpl::vector&lt; panzer::Traits::RealType, bool &gt;</type>
      <name>type</name>
      <anchorfile>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>aa6838776db2a4e94b8522a5d272f1ee1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>PHX::eval_scalar_types&lt; panzer::Traits::Tangent &gt;</name>
    <filename>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Tangent_01_4.html</filename>
    <member kind="typedef">
      <type>Sacado::mpl::vector&lt; panzer::Traits::FadType, panzer::Traits::RealType, bool &gt;</type>
      <name>type</name>
      <anchorfile>structPHX_1_1eval__scalar__types_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a81087ff76a1524d551d21f809a079905</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::dof_functors::EvaluateDOFFastSens_Scalar</name>
    <filename>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</filename>
    <templarg>ScalarT</templarg>
    <templarg>Array</templarg>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a2739c785b17935fdd1af93a9064f71c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EvaluateDOFFastSens_Scalar</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a8b59b8d2a1a216b44410d0600d725833</anchor>
      <arglist>(PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_basis, PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_ip, Kokkos::View&lt; const int *, PHX::Device &gt; in_offsets, Array in_basis)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>abc59021e2698334dd040d693388883e4</anchor>
      <arglist>(const unsigned int cell) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>aa49714c16551935d4a11e87f0b8f9b28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a42cb4b7a936d24dbb750ec9d9fdaac18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a8a7426c0502778b6f01f6356939c24f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a466be3d1fc3e1baf2af922132ef1767c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numFields</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>a69acb8462de52c7644f1d9ecff92c457</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Scalar.html</anchorfile>
      <anchor>aa2fd2607adedd3b7ac889cca8b4a6d83</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::dof_functors::EvaluateDOFFastSens_Vector</name>
    <filename>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</filename>
    <templarg>ScalarT</templarg>
    <templarg>Array</templarg>
    <templarg>spaceDim</templarg>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>a53978b65aa57da0422554be26cf9ec53</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EvaluateDOFFastSens_Vector</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>aee1d4d204c40f27181661a5cf18844fc</anchor>
      <arglist>(PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_basis, PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt; in_dof_ip, Kokkos::View&lt; const int *, PHX::Device &gt; in_offsets, Array in_basis)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>a210bf155a0fb70fa4ee3059270da48b8</anchor>
      <arglist>(const unsigned int cell) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>a8656f608057a0bca8bc4cfac5210e9d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>a781a1688def7456b5163d41b2f21a338</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>aa685c3d0b343f3eb56225db0434be7e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>acf44f221110f2f8d92e8e49ab7d28842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numFields</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>ac0ecf52b1c02c38fe8ad4e5dd5a15170</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFFastSens__Vector.html</anchorfile>
      <anchor>aa9fe0a449089894616570a72dc6193c3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::dof_functors::EvaluateDOFWithSens_Scalar</name>
    <filename>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</filename>
    <templarg>ScalarT</templarg>
    <templarg>Array</templarg>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>abe78366490443fef0879555a335855f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EvaluateDOFWithSens_Scalar</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>ab4a2f6aabab80754e50b0bfcc6421a0c</anchor>
      <arglist>(PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_basis, PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_ip, Array in_basis)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>acf2132abfc0289125e97a5892d3c09c5</anchor>
      <arglist>(const unsigned int cell) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>a11fcc9050f41152732118ffe44335368</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_ip</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>a41a1cbc2412cd92f50c6bc37ef5789fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>ac96429492236ee590c99382bc843a54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numFields</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>ac1d24aaa8fd962149cacf637e7ad22ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Scalar.html</anchorfile>
      <anchor>af3917f9f62f8c0bdbfca8d91f20e4ac3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::dof_functors::EvaluateDOFWithSens_Vector</name>
    <filename>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</filename>
    <templarg>ScalarT</templarg>
    <templarg>Array</templarg>
    <templarg>spaceDim</templarg>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>ab447f8e3752ce30577f42241ebd88668</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EvaluateDOFWithSens_Vector</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>a8beab6b49a9ff1b9d235ef1cd471d6be</anchor>
      <arglist>(PHX::MDField&lt; ScalarT, Cell, Point &gt; in_dof_basis, PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt; in_dof_ip, Array in_basis)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>a936c33c4fe36f94f0c7649771636668d</anchor>
      <arglist>(const unsigned int cell) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>a726a7cf3c358f80341a482371fb446f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>dof_ip</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>a0b34f014493604a165e82087973c8ffc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>a8e85d73db8d15b222ef2c7436f4b48ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numFields</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>aab7a667f7b99cf2157d2b7fb93b26791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numPoints</name>
      <anchorfile>classpanzer_1_1dof__functors_1_1EvaluateDOFWithSens__Vector.html</anchorfile>
      <anchor>ab4b89377db76072f604a8f3076f09307</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::EvaluationTraits</name>
    <filename>structpanzer_1_1EvaluationTraits.html</filename>
    <class kind="struct">panzer::EvaluationTraits::apply</class>
  </compound>
  <compound kind="class">
    <name>panzer::EvaluatorsRegistrar</name>
    <filename>classpanzer_1_1EvaluatorsRegistrar.html</filename>
    <member kind="function">
      <type>int</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>a969aaf12dcc97bbd9c07868327a5afa3</anchor>
      <arglist>(const int details_index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>a1f890ce35238daf4317099b264e1fefa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EvaluatorsRegistrar</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>af1ed4d0a4c383c17866f27b3635d075d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual</type>
      <name>~EvaluatorsRegistrar</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>ae308c483fade8f16fd565464265f3e2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>registerEvaluator</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>a5e4d2e5c801f2c1f7f6e387beb010386</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &amp;op) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>details_index_</name>
      <anchorfile>classpanzer_1_1EvaluatorsRegistrar.html</anchorfile>
      <anchor>aa5dbc2fed2e9ae45d6dda73ac6a5bec6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::EvaluatorWithBaseImpl</name>
    <filename>classpanzer_1_1EvaluatorWithBaseImpl.html</filename>
    <templarg>TRAITS</templarg>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a148dfeda8365bd4882d07cf971fec27f</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorksetDetailsAccessor</type>
      <name>wda</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a99fb9176d98742620b11a9099fec862d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvaluatorWithBaseImpl&lt; panzer::Traits &gt;</name>
    <filename>classpanzer_1_1EvaluatorWithBaseImpl.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a148dfeda8365bd4882d07cf971fec27f</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorksetDetailsAccessor</type>
      <name>wda</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a99fb9176d98742620b11a9099fec862d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvaluatorWithBaseImpl&lt; Traits &gt;</name>
    <filename>classpanzer_1_1EvaluatorWithBaseImpl.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a148dfeda8365bd4882d07cf971fec27f</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorksetDetailsAccessor</type>
      <name>wda</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a99fb9176d98742620b11a9099fec862d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvaluatorWithBaseImpl&lt; TraitsT &gt;</name>
    <filename>classpanzer_1_1EvaluatorWithBaseImpl.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a148dfeda8365bd4882d07cf971fec27f</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorksetDetailsAccessor</type>
      <name>wda</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a99fb9176d98742620b11a9099fec862d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvaluatorWithBaseImpl&lt; TRAITST &gt;</name>
    <filename>classpanzer_1_1EvaluatorWithBaseImpl.html</filename>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a148dfeda8365bd4882d07cf971fec27f</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>WorksetDetailsAccessor</type>
      <name>wda</name>
      <anchorfile>classpanzer_1_1EvaluatorWithBaseImpl.html</anchorfile>
      <anchor>a99fb9176d98742620b11a9099fec862d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ExplicitModelEvaluator</name>
    <filename>classpanzer_1_1ExplicitModelEvaluator.html</filename>
    <templarg></templarg>
    <base>panzer::MassMatrixModelEvaluator</base>
    <member kind="function">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>getNominalValues</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a627836d5731687448e8e7b032c0a0d2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>createInArgs</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a18a451308c066d46fe3d83b5bbeac871</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt;</type>
      <name>createOutArgs</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a45091001ce6ab5e9632758c57aec162b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ModelEvaluator&lt; Scalar &gt; &gt;</type>
      <name>getPanzerUnderlyingModel</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>ad04e9611f0aef3b388fccb6c50c93f13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyInverseMassMatrix</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a880f69b79eeca92e623aead5eebaa5d4</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; input, const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; output) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyMassMatrix</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a61d77465346b599b880adfaedaa57b0a</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; input, const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; output) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>af9a68edc50be33a792245acb2c642e9c</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;f) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildInverseMassMatrix</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a7b31c745e8a482fd3f5725897791b978</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildArgsPrototypes</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>aee753c402f591d2e983cd3de3e069331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setOneTimeDirichletBeta</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>aec4e2cfec2155915f077c3d146345e89</anchor>
      <arglist>(double beta, const Thyra::ModelEvaluator&lt; Scalar &gt; &amp;me) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ExplicitModelEvaluator</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a2b88618aa7005a9bc6194c4feca6c748</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>constantMassMatrix_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>ad3f5f974f9e8924e933ea20f60dd3394</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>massLumping_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>adc0e7fc54f2bf12aa56b7d8cb11057b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ModelEvaluator&lt; Scalar &gt; &gt;</type>
      <name>panzerModel_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a01103d772ca3ed22d8f073b40833813b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ModelEvaluator_Epetra &gt;</type>
      <name>panzerEpetraModel_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a1bd767a3f227f43520ebce61d54ea586</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt;</type>
      <name>mass_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a59dbb810c7c725a772fc766ac66ec425</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::LinearOpBase&lt; Scalar &gt; &gt;</type>
      <name>invMassMatrix_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a0aa7b8e181b46f5260fae68be0cf2130</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt;</type>
      <name>scrap_f_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>aa9f6da5def318cce42c671101e8dd687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt;</type>
      <name>zero_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a019d703cb0c928482c29852c024277a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>prototypeInArgs_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>aadf84bdef73d4685f216df96a6cc6af0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt;</type>
      <name>prototypeOutArgs_</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a01658c98facd9cade657629a1b10e066</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExplicitModelEvaluator</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>a1d7b44c3e8ac69f25c65c5fdc0e89a59</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; Scalar &gt; &gt; &amp;model, bool constantMassMatrix, bool useLumpedMass, bool applyMassInverse=true)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalModelImpl</name>
      <anchorfile>classpanzer_1_1ExplicitModelEvaluator.html</anchorfile>
      <anchor>ad4f489bb056a9a98398da3e011c5249c</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ExtremeValueResponse_Builder</name>
    <filename>structpanzer_1_1ExtremeValueResponse__Builder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseMESupportBuilderBase</base>
    <member kind="function">
      <type></type>
      <name>ExtremeValueResponse_Builder</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>af38be44c44d08745f4ef96a890f4b631</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtremeValueResponse_Builder</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a93da4086e7145e4c62ceab1cb2c36d2d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a39101f575abfeb1523d02d73b0f6a3d1</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;in_linearObjFactory, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;in_globalIndexer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a0817c99cc097844feee2bdb8bad86e26</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;in_linearObjFactory)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>ad56d2c6e0d348cae5d442ff8065c4f83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildValueFactory</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a40ce77e0df3ac076bfe767603c651ba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildDerivativeFactory</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a9e9e977a9352a4e55a295ce0845acfa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildTangentFactory</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a2eedc0f7d0137b85c4af5ad41bc742fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>MPI_Comm</type>
      <name>comm</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a49b5c78389582c49d03c69c0eb8f7737</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cubatureDegree</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a78964ea1b83fce8e3aef11fd78063179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>requiresCellExtreme</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a159c7080d435327684b8cb392b85edf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useMax</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>aca1b484b9c3964460d6ec51792f99ae3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>quadPointField</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a5f214450c3585845e1748d496849fc15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyDirichletToDerivative</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a6e6bc41c6b699972535589c750d6684e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>a27a371b7360dcbbea4eb0b6827a6e3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer</name>
      <anchorfile>structpanzer_1_1ExtremeValueResponse__Builder.html</anchorfile>
      <anchor>ada45a8ba40a7ddd63e670119d7139ff2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ExtremeValueScatter</name>
    <filename>classpanzer_1_1ExtremeValueScatter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ExtremeValueScatterBase</base>
    <member kind="function">
      <type></type>
      <name>ExtremeValueScatter</name>
      <anchorfile>classpanzer_1_1ExtremeValueScatter.html</anchorfile>
      <anchor>aa120b37ffa60c21b13a0d944e2274bea</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;globalIndexer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1ExtremeValueScatter.html</anchorfile>
      <anchor>a2ca8476c1230db42bbbbdd44300166fa</anchor>
      <arglist>(const PHX::MDField&lt; const panzer::Traits::Jacobian::ScalarT, panzer::Cell &gt; &amp;cellExtremeValue, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, Teuchos::ArrayRCP&lt; double &gt; &amp;dgdx) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ExtremeValueScatter.html</anchorfile>
      <anchor>a69ad9cb5cffd8c60fc7d3f5d723c9460</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ExtremeValueScatterBase</name>
    <filename>classpanzer_1_1ExtremeValueScatterBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExtremeValueScatterBase</name>
      <anchorfile>classpanzer_1_1ExtremeValueScatterBase.html</anchorfile>
      <anchor>a65d7c06f8f3fe9928e29cf40503d5e61</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1ExtremeValueScatterBase.html</anchorfile>
      <anchor>a81660f06f0f5eff456711a6f62a2d58c</anchor>
      <arglist>(const PHX::MDField&lt; const panzer::Traits::Jacobian::ScalarT, panzer::Cell &gt; &amp;cellExtremeValue, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, Teuchos::ArrayRCP&lt; double &gt; &amp;dgdx) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FieldAggPattern</name>
    <filename>classpanzer_1_1FieldAggPattern.html</filename>
    <base>panzer::FieldPattern</base>
    <class kind="struct">panzer::FieldAggPattern::LessThan</class>
    <member kind="function">
      <type></type>
      <name>FieldAggPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>adb8ebed3417a1adc64a270e25b1400cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldAggPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a609a7f6f9fab12dccb514867f39d6cd8</anchor>
      <arglist>(std::vector&lt; std::pair&lt; int, Teuchos::RCP&lt; const FieldPattern &gt; &gt; &gt; &amp;patterns, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;geomAggPattern=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FieldAggPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a56d637e1c742f2e01cafa2dc802319d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getGeometricAggFieldPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a62286c96e1b07d1601f2cbc43a712745</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a97c320db8c224317f556b11e47d94c65</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, Teuchos::RCP&lt; const FieldPattern &gt; &gt; &gt; &amp;patterns, const Teuchos::RCP&lt; const FieldPattern &gt; &amp;geomAggPattern=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a2499552d94e72ac0b9876f8ed012e62f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSubcellCount</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>adbeacbbf50da6121a9308d6ee58ec477</anchor>
      <arglist>(int dimension) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a1a291f17fd87cdc1aefa214c9f752d6f</anchor>
      <arglist>(int dimension, int subcell) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSubcellClosureIndices</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a1ad25a8f9ec53aaf08f992a1dce2eece</anchor>
      <arglist>(int, int, std::vector&lt; int &gt; &amp;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual shards::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a4b819ac8ee7bf71221aeeb188df6f46d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a8c378332c17596dbf12aca2d841a3f85</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>getFieldPattern</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a2be9d6d704217447564de7cc0907c0d2</anchor>
      <arglist>(int fieldId) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>numFieldsPerId</name>
      <anchorfile>group__FEISupport.html</anchorfile>
      <anchor>ga3e574fc6e922a66d174d345f5663b38c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>fieldIds</name>
      <anchorfile>group__FEISupport.html</anchorfile>
      <anchor>ga0a82938058234a499c3b8770435b2a70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>localOffsets</name>
      <anchorfile>group__LOCALOFFSET.html</anchorfile>
      <anchor>gab66b80a5a5b68cab1a1f5a9c4df6f84e</anchor>
      <arglist>(int fieldId) const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>localOffsets_closure</name>
      <anchorfile>group__LOCALOFFSET.html</anchorfile>
      <anchor>ga92634a0dca409ddbe1c3c3ae301657ea</anchor>
      <arglist>(int fieldId, int subcellDim, int subcellId) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>FPPtr</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>ac499a503fcf9f149c112b5259492b1fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildFieldIdToPatternIdx</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a02f4899f88f85fa8956115531051da01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildFieldIdsVector</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a062c819ded81caa4ac878e33c7031542</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>mergeFieldPatterns</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a7bb9dae6002b948d4f56b358c64f601f</anchor>
      <arglist>(int dim, int subcell)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addAllPatternSubcellIndices</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a8af4ea205ac3316a921ba28d9418136e</anchor>
      <arglist>(int dim, int sc, std::vector&lt; int &gt; &amp;indices)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildFieldPatternData</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a591c913a9fbea2259583edeeb9f0421f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>localOffsets_build</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a1e1a77e13f0c73265069ef07f7522fad</anchor>
      <arglist>(int fieldId, std::vector&lt; int &gt; &amp;offsets) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>dimension_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>afebdc012481fd127c636060d7420de3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const FieldPattern &gt;</type>
      <name>geomAggPattern_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a53f7216dbdc376ab77f11d25b437b9ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; std::vector&lt; int &gt; &gt; &gt;</type>
      <name>patternData_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>acb471b603a860ea7cef6d48738f4f784</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>numFields_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a246ef7197d1e7955586e24e35cf132df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>ad66d0d3fcdc68119de38b32270f5f0f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::pair&lt; int, Teuchos::RCP&lt; const FieldPattern &gt; &gt; &gt;</type>
      <name>patterns_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a70a0723c03ac153ed62d0a9e524a84fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>fieldIdToPatternIdx_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a08dd2c168bd24a76da4e912799292902</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::vector&lt; int &gt; &gt;</type>
      <name>fieldOffsets_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>ae16281b95600c59ae4a563358a58f706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; Teuchos::Tuple&lt; int, 3 &gt;, std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt;, LessThan &gt;</type>
      <name>fieldSubcellOffsets_closure_</name>
      <anchorfile>classpanzer_1_1FieldAggPattern.html</anchorfile>
      <anchor>a62fcadd9cab0f5f88ec1f542b167fc5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::CustomMeshFactory::FieldContainer</name>
    <filename>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldContainer</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>ad23ec6181c99c46d9de43320d23984c3</anchor>
      <arglist>(const std::size_t dim0, const std::size_t dim1, double *buffer)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>operator()</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>a6a607649a9571beabc38417d4f2ccef1</anchor>
      <arglist>(const std::size_t i, const std::size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>double &amp;</type>
      <name>operator()</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>af53810da50e86beac79fa901cc9e8908</anchor>
      <arglist>(const std::size_t i, const std::size_t j)</arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>_dim0</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>ad9e74e2b1d884bf37d55da5cc289420c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>_dim1</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>a7e24f01bcaf74feae36ccd381275897f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double *</type>
      <name>_buffer</name>
      <anchorfile>structpanzer__stk_1_1CustomMeshFactory_1_1FieldContainer.html</anchorfile>
      <anchor>a5137d8b17ae0d7b5e7e90b4715620216</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FieldLayoutLibrary</name>
    <filename>classpanzer_1_1FieldLayoutLibrary.html</filename>
    <base>panzer::FieldLibraryBase</base>
    <member kind="function">
      <type>void</type>
      <name>addFieldAndLayout</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>a61858052ed100a7068d481132ece0255</anchor>
      <arglist>(const std::string &amp;fieldName, const Teuchos::RCP&lt; panzer::BasisIRLayout &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniqueBases</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>ad9966808a78dce259ef9d7763a78f863</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &amp;bases) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>lookupBasis</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>aeb9f3d21d462b633ee228fcb674b8ff0</anchor>
      <arglist>(const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>lookupLayout</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>ad440eda871214492dec69578d10ca044</anchor>
      <arglist>(const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>ab81e34f686807ebfeced274dadacb288</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>basisPairs</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>ab8fa44ea859ebb5df620b4cd67c633bd</anchor>
      <arglist>(std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt; &amp;bases) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; panzer::BasisIRLayout &gt; &gt;</type>
      <name>fieldToLayout_</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>ac3ecc382834e4b5b63146f84b3c767ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt;</type>
      <name>basisNameToPointer_</name>
      <anchorfile>classpanzer_1_1FieldLayoutLibrary.html</anchorfile>
      <anchor>af7c92e7cb8314044d73fcde113080f5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FieldLibrary</name>
    <filename>classpanzer_1_1FieldLibrary.html</filename>
    <base>panzer::FieldLibraryBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>lookupBasis</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>ab6b67aef1147a5744ab9b9813f850113</anchor>
      <arglist>(const std::string &amp;fieldName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uniqueBases</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>ab31ad865d4346e899baeae5084b9f01b</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &amp;bases) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFieldAndBasis</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>ac9b85c523ec82ea60d87814547ff3412</anchor>
      <arglist>(const std::string &amp;fieldName, const Teuchos::RCP&lt; panzer::PureBasis &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldLayoutLibrary &gt;</type>
      <name>buildFieldLayoutLibrary</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>a19f78348f8b189d7985516094d2cf2a3</anchor>
      <arglist>(panzer::PointRule &amp;ir) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>aabc52af6c9a57e2413e70b4c8cf3100e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>basisPairs</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>a5b4f88e39afb8828390e6a32cc6e2170</anchor>
      <arglist>(std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt; &amp;bases) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt;</type>
      <name>fieldToBasis_</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>a120d56995cf9f3a44bd2b0f6ff44685f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt;</type>
      <name>basisNameToPointer_</name>
      <anchorfile>classpanzer_1_1FieldLibrary.html</anchorfile>
      <anchor>a5f0a4124789b6baef6843608e486d115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FieldLibraryBase</name>
    <filename>classpanzer_1_1FieldLibraryBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~FieldLibraryBase</name>
      <anchorfile>classpanzer_1_1FieldLibraryBase.html</anchorfile>
      <anchor>aa3a538ceac47052d8f066738a5db005d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>lookupBasis</name>
      <anchorfile>classpanzer_1_1FieldLibraryBase.html</anchorfile>
      <anchor>ac64e47de7faa1d50af479c578be213a5</anchor>
      <arglist>(const std::string &amp;fieldName) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>uniqueBases</name>
      <anchorfile>classpanzer_1_1FieldLibraryBase.html</anchorfile>
      <anchor>aae3163204ae6c9027d5ba6d74792787a</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &amp;bases) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>basisPairs</name>
      <anchorfile>classpanzer_1_1FieldLibraryBase.html</anchorfile>
      <anchor>a63570ad4e46145b1017fe3c9be8f89d5</anchor>
      <arglist>(std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt; &amp;bases) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldLibraryBase.html</anchorfile>
      <anchor>ae0848ab2425fc78af35504f69ebaca69</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PHX::FieldManager</name>
    <filename>classPHX_1_1FieldManager.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::FieldManagerBuilder</name>
    <filename>classpanzer_1_1FieldManagerBuilder.html</filename>
    <member kind="typedef">
      <type>std::map&lt; unsigned, panzer::Workset &gt;</type>
      <name>BCFaceWorksetMap</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a74fe4725c815b6f9fbabd2320d695844</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FieldManagerBuilder</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>aaea8c0bf2b7a53d412dc90edbc2b04ee</anchor>
      <arglist>(bool disablePhysicsBlockScatter=false, bool disablePhysicsBlockGather=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>af455748901881308f975503f8fbe203e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>physicsBlockScatterDisabled</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a090a279eadf7c9d16c88e33ab7983b56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>physicsBlockGatherDisabled</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>ab5f3341ba457397941e6f1465724e2fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorksetContainer</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a23c5af4103b051a5438ea938bb561075</anchor>
      <arglist>(const Teuchos::RCP&lt; WorksetContainer &gt; &amp;wc)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; WorksetContainer &gt;</type>
      <name>getWorksetContainer</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a9523d36c406b156d66df99e6d6b2f007</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;</type>
      <name>getVolumeFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a6a7b42270b2c6c0cc040e459989bfb94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt;</type>
      <name>getVolumeFieldManager</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a45b4a95a05f78be26c4bd48d36e9b12b</anchor>
      <arglist>(const WorksetDescriptor &amp;wd) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; WorksetDescriptor &gt; &amp;</type>
      <name>getVolumeWorksetDescriptors</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a55437a09da7ff981199ad35cb79b11e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; panzer::BC, std::map&lt; unsigned, PHX::FieldManager&lt; panzer::Traits &gt; &gt;, panzer::LessBC &gt; &amp;</type>
      <name>getBCFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a6e41078363b23e8b1aa4e5ac8b3e5ecc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupVolumeFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a0c987c0c983a47f92ab4f4517dc5cf23</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupVolumeFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>afb7dc0c3ff80bd7fdc17ecd579a8b565</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstDesc, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data, const GenericEvaluatorFactory &amp;gEvalFact, bool closureModelByEBlock=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupBCFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>ad1f6f34d30beb01ee354abffb1eb45e9</anchor>
      <arglist>(const std::vector&lt; panzer::BC &gt; &amp;bcs, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const panzer::BCStrategyFactory &amp;bc_factory, const Teuchos::ParameterList &amp;closure_models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupBCFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a2ad1a480d203083a53a3e10d20cc582a</anchor>
      <arglist>(const std::vector&lt; panzer::BC &gt; &amp;bcs, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const panzer::BCStrategyFactory &amp;bc_factory, const Teuchos::ParameterList &amp;closure_models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeVolumeGraphvizDependencyFiles</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a92ad99875193d034c03239ecd4553071</anchor>
      <arglist>(std::string filename_prefix, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBCGraphvizDependencyFiles</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a723a87588b7f2d908ca1c909d8fa60a8</anchor>
      <arglist>(std::string filename_prefix) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeVolumeTextDependencyFiles</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>aad8c50398ce81bf06781254afc1ec2a3</anchor>
      <arglist>(std::string filename_prefix, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeBCTextDependencyFiles</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a00fd8c9e9f2fd48e473bd0b8e26eb9f5</anchor>
      <arglist>(std::string filename_prefix) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setupBCFieldManagers</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a29698b6ce2ebb88968f7684927871dc6</anchor>
      <arglist>(const std::vector&lt; panzer::BC &gt; &amp;bcs, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::Ptr&lt; const panzer::EquationSetFactory &gt; &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const panzer::BCStrategyFactory &amp;bc_factory, const Teuchos::ParameterList &amp;closure_models, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setKokkosExtendedDataTypeDimensions</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>add476f12cf85e829488ba0b8eb87f0b8</anchor>
      <arglist>(const std::string &amp;eblock, const panzer::UniqueGlobalIndexerBase &amp;globalIndexer, const Teuchos::ParameterList &amp;user_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt;</type>
      <name>phx_volume_field_managers_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a65b671c76c29390c1abe42fc9bb98021</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; WorksetDescriptor &gt;</type>
      <name>volume_workset_desc_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a7073458ff784d1e87589779ff454446d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; panzer::BC, std::map&lt; unsigned, PHX::FieldManager&lt; panzer::Traits &gt; &gt;, panzer::LessBC &gt;</type>
      <name>bc_field_managers_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a79693ff6f565b789d3a6dd46590f97a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; WorksetContainer &gt;</type>
      <name>worksetContainer_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a58a9e1ef5b568bda78a621f09cd901b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disablePhysicsBlockScatter_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>aea3b5101b374926ba77de85edd1c417a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disablePhysicsBlockGather_</name>
      <anchorfile>classpanzer_1_1FieldManagerBuilder.html</anchorfile>
      <anchor>a04afd78a1f098df932afc9bbc0caa8dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::FieldMultTag</name>
    <filename>structpanzer_1_1FieldMultTag.html</filename>
    <templarg>NUM_FIELD_MULT</templarg>
  </compound>
  <compound kind="class">
    <name>panzer::FieldPattern</name>
    <filename>classpanzer_1_1FieldPattern.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~FieldPattern</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a14cc023ea3cbae51efcafd9afdda32c7</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSubcellCount</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a8bd3299c60b973c8683429e56540ab06</anchor>
      <arglist>(int dim) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a296c3826f452d05c752b67b1530581c3</anchor>
      <arglist>(int dim, int cellIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getSubcellClosureIndices</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>ababf4e2718fb9eeacb36b165938102e4</anchor>
      <arglist>(int dim, int cellIndex, std::vector&lt; int &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a13b8db4333ffc37d301e93f7f8a9e969</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual shards::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a124131535155cc19f3b031f4f0da61da</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>numberIds</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a4257fce27020bad72a4a43d51185e1a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>sameGeometry</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a2009056024349fc2b8402c20dffc4167</anchor>
      <arglist>(const FieldPattern &amp;fp) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>consistentSubcells</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>a15ddb39072b3bc39361f5f119ee9f88d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>ac40cf78dc5501a5f69ad353d0ad5919e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>equals</name>
      <anchorfile>classpanzer_1_1FieldPattern.html</anchorfile>
      <anchor>aa671c1b74c9eead55abe9b6f4c8963a4</anchor>
      <arglist>(const FieldPattern &amp;fp) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FieldSpy</name>
    <filename>classpanzer_1_1FieldSpy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>FieldSpy</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a0d950c5ba07eb45c87ecf27380df26c2</anchor>
      <arglist>(const std::string &amp;name, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a4e07db4e09bd814ead224ac6016d904b</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a4b9b515eaaebdcbbb829d8052a2bd309</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getRequiredFieldTag</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a1030dbdc2a6904ddc57edf0329eb1056</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a5d1523c2459cd9292b0d3e5c6e4bd041</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>dummyField</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>a5c0f5990c8ee1be6df191de7677e4b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::Point &gt;</type>
      <name>source</name>
      <anchorfile>classpanzer_1_1FieldSpy.html</anchorfile>
      <anchor>ae0a3bc84d3f1e61354c059371470af96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Filtered_UniqueGlobalIndexer</name>
    <filename>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::UniqueGlobalIndexer</base>
    <member kind="function">
      <type></type>
      <name>Filtered_UniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2e145bc1effd0998c86e3723d3979549</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>ad3faf8c725fd6a0d3ebc536091a596d1</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;ugi, const std::vector&lt; GlobalOrdinalT &gt; &amp;filteredIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwnedAndSharedNotFilteredIndicator</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a7658d1686fc0dfaf49bd1e6394b226e6</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;indicator) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getFilteredOwnedAndSharedIndices</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a678f455cc7ced51c572f5fe6f008461c</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedIndices</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a25d3f8a5c07f46f90bfb16638f48b45d</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ownedIndices</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>aa712153a243bfb55893937dc4677557e</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinalT &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Filtered_UniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>acd5df989e784cfccc4caa82f3d9f6853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>ac787b0c56ff88f2320c0229879e76075</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0e35afd2580aedb00fb2f36b0aaf880a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getFieldString</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2b7f9721f1701833a6f8ed94cffb8d8e</anchor>
      <arglist>(int fieldNum) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getFieldNum</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0fdb5e1b04c33512ce15ba608a75c83a</anchor>
      <arglist>(const std::string &amp;str) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a04a824679ccd423a7e35dd09869cc89b</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a08f36316f47083973915e37ebe326b1e</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0fd2f4c37c7cf0140f3185a33570a8ff</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a3fd850a65963f483d8b37680a4e7ef9c</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>ad7c5fe1135da9c4da07d9081ef171b8a</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a09a8a1dd204d016df54036108e626c95</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementOrientation</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>aa69a7d202bb5a969aa3ac4c5c26f464a</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>aedbd169c123d696c91e30f12317b04d7</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementGIDs</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a6c68b7447dd1b1aec74baaa9b4464200</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; GlobalOrdinalT &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a38c121b6e2ae1a322bea40dad5762f11</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>ac4dcd5417e4a40caf227d095b0073857</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0bc9f832ddab92c732c9b44ca833dd87</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>getConnManagerBase</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a1b6dbe005486207375f71dea7e9d35e3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>base_</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a5312c0123b1eff84afd1e20b33293629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; GlobalOrdinalT &gt;</type>
      <name>owned_</name>
      <anchorfile>classpanzer_1_1Filtered__UniqueGlobalIndexer.html</anchorfile>
      <anchor>a602cdace542ed0816c524990ae77be78</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::FunctionalResponse_Builder</name>
    <filename>structpanzer_1_1FunctionalResponse__Builder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseMESupportBuilderBase</base>
    <member kind="function">
      <type></type>
      <name>FunctionalResponse_Builder</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a56043e795fd108e665f00075565c027e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FunctionalResponse_Builder</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a31564621d540eefb8df8c4befcc3f37a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>afcdf6b640f65f92ed7cc2a78298af835</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;in_linearObjFactory)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>ae8a77668a0d460b778bbc881df13cda9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildValueFactory</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a487aef7e2975eeb093fc5b3fd1112961</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildDerivativeFactory</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>aafd51e65ca307f118c7f3d81745db814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildTangentFactory</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>ab6d56ff4b01c336c273efcfcf99f9553</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>MPI_Comm</type>
      <name>comm</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>ab1bdfb630c28a1b563f9d1e0c14fc156</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cubatureDegree</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a2d669f5319fb3f2d5c79ca58c3f32543</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>requiresCellIntegral</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>aa0f71185ac6f4101b11ebd2f4a2f5fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>quadPointField</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a7315421dcd587151283a353ccb6c6d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyDirichletToDerivative</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>ad48dfe490f7f139b6594973e3e664c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory</name>
      <anchorfile>structpanzer_1_1FunctionalResponse__Builder.html</anchorfile>
      <anchor>a4252cba7bbdba36e809bb0c6f0e96fe3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FunctionalScatter</name>
    <filename>classpanzer_1_1FunctionalScatter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::FunctionalScatterBase</base>
    <member kind="function">
      <type></type>
      <name>FunctionalScatter</name>
      <anchorfile>classpanzer_1_1FunctionalScatter.html</anchorfile>
      <anchor>a197962df113b097613b6daddfedf9ff2</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;globalIndexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FunctionalScatter</name>
      <anchorfile>classpanzer_1_1FunctionalScatter.html</anchorfile>
      <anchor>aa288663dc05ecb195d33f3b57a7d356a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1FunctionalScatter.html</anchorfile>
      <anchor>a460245a4ca3b0e12314ae07ff309f076</anchor>
      <arglist>(const PHX::MDField&lt; const panzer::Traits::Jacobian::ScalarT, panzer::Cell &gt; &amp;cellIntegral, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, const std::vector&lt; Teuchos::ArrayRCP&lt; double &gt; &gt; &amp;dgdx) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &gt;</type>
      <name>ugis_</name>
      <anchorfile>classpanzer_1_1FunctionalScatter.html</anchorfile>
      <anchor>abe64d9931afc77c8af6970632d6b8cb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::FunctionalScatterBase</name>
    <filename>classpanzer_1_1FunctionalScatterBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FunctionalScatterBase</name>
      <anchorfile>classpanzer_1_1FunctionalScatterBase.html</anchorfile>
      <anchor>ab6a80f9d5245950255d6a4a3d8dbeb91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1FunctionalScatterBase.html</anchorfile>
      <anchor>acba14ce2b2dc0457537a9ad64f7b9f6b</anchor>
      <arglist>(const PHX::MDField&lt; const panzer::Traits::Jacobian::ScalarT, panzer::Cell &gt; &amp;cellIntegral, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, const std::vector&lt; Teuchos::ArrayRCP&lt; double &gt; &gt; &amp;dgdx) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::Gather_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1Gather__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Gather_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Gather__Builder.html</anchorfile>
      <anchor>ab38eeaf8b1bed94c15d680910f9419e6</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Gather__Builder.html</anchorfile>
      <anchor>a6280adf8f1aaa7ab90329d2923dcae29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Gather__Builder.html</anchorfile>
      <anchor>a846a10b0b959ad509ac36e5c03747095</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherBasisCoordinates</name>
    <filename>classpanzer_1_1GatherBasisCoordinates.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>GatherBasisCoordinates</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a1513f7a8ac929b0a6cd88680f5a541c8</anchor>
      <arglist>(const panzer::PureBasis &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>ac6949b21f7e4918e00b05173aa3b7371</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>abfb1ff51aee85f6d6b8a5d30ee4fd4cd</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>fieldName</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a27b74f99f0aa9c5b853c8b0717d7b8f7</anchor>
      <arglist>(const std::string &amp;basisName)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a5ba37b81d0783a92729454509254fa42</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherBasisCoordinates</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a7c7591a5e218c6d1b187429046a38df9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basisName_</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a256483814d0ee81bd0e05c5a88757888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>basisIndex_</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>a63c261433093ccc9a0b7009b0828a04f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS, Dim &gt;</type>
      <name>basisCoordinates_</name>
      <anchorfile>classpanzer_1_1GatherBasisCoordinates.html</anchorfile>
      <anchor>abe685a8fdffdba8d5d7ab42a584b601e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::GatherDomain_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1GatherDomain__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GatherDomain_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherDomain__Builder.html</anchorfile>
      <anchor>afea00e9a504db6c8cb0b4965405e0cb1</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherDomain__Builder.html</anchorfile>
      <anchor>abc12d966db3044207e83198058b93bf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherDomain__Builder.html</anchorfile>
      <anchor>a17a42e5d7d3555bb6f69f10e1adf9e99</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::GatherFields</name>
    <filename>classpanzer__stk_1_1GatherFields.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>GatherFields</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a5029b7d7c1155ef5a0d7280ab558ec84</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>adf28b2587c2971e6f9995df0e2d76b53</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a5e547e0e748bd6555d7952b3e98d5ee4</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>ad9b84a60bcb7008d6c1b7e1a72e89067</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer_stk::STK_Interface::SolutionFieldType</type>
      <name>VariableField</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a755da63a2e790b31a7061d04bb7d61d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherFields</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a8769895bf483a81f03e6fd0ab253e15b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, panzer::Cell, panzer::NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>ae88102d00b7603eb9050959efba5e495</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; VariableField * &gt;</type>
      <name>stkFields_</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a184d654f60daa49c644dce495cf65638</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a386b90877e2817fb5811e0b1422e0498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isConstant_</name>
      <anchorfile>classpanzer__stk_1_1GatherFields.html</anchorfile>
      <anchor>a1f464c4962b943f1f0b84d92680046a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherIntegrationCoordinates</name>
    <filename>classpanzer_1_1GatherIntegrationCoordinates.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>GatherIntegrationCoordinates</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a60f5a3becdea7b81b8544fa7cb8ce1fc</anchor>
      <arglist>(const panzer::IntegrationRule &amp;quad)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a04c90e64c5ebec4b1479c1d9f50d0b81</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a0c5bc655d26c2be490c073713888ef10</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>fieldName</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>ad663134c3adc4d3a8095c3cd3ed6df0a</anchor>
      <arglist>(int degree)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a1ae81800332c724b5cacfeb0b7b24e7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherIntegrationCoordinates</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a7e6831719ff4e3d176e3be7f28baee43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>quadDegree_</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>af2934134b77e930c7a036b254d8fc537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;::size_type</type>
      <name>quadIndex_</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>a2093dad5bfa1d6794165abcaa7a52053</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>quadCoordinates_</name>
      <anchorfile>classpanzer_1_1GatherIntegrationCoordinates.html</anchorfile>
      <anchor>afc980e9f7fa0500ee8bd66c5f47b635e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherNormals</name>
    <filename>classpanzer_1_1GatherNormals.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherNormals</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>aff0563f589e34c69861ca555b4d45fbb</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a51fd043116cdceb25091a4940cc81d51</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a06676e6ef9d934da5316edf72877a009</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>af7f53ff31411ee8ed1d1a5d384c1c0c5</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a9816b26e3236784dd43797642231ba86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherNormals</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>ad1621ccea4094a63a3391cd9d61a1d8f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dof_name</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>ad8579506860a1e1fa10f8987781a3285</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE, Dim &gt;</type>
      <name>gatherFieldNormals</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a0caba5aaf03af449e7bf2439843de470</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>af9470a07f69837b9e9c22c6e87f10d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>af44adbf8b8864b9a2ffba6a3c883012a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PointRule &gt;</type>
      <name>pointRule</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>ae86f068073a6b31794cbeeab2b6bffb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>faceNormal</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a842dd7d462cfbac4c6c6574f755b90b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refFaceNormal</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>af17979234004ce05ffda3dbf0fdc1d80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PointValues2&lt; ScalarT, PHX::MDField &gt;</type>
      <name>pointValues</name>
      <anchorfile>classpanzer_1_1GatherNormals.html</anchorfile>
      <anchor>a9f0b7ef8dcc72fb53986b256a4755a57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherOrientation</name>
    <filename>classpanzer_1_1GatherOrientation.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherOrientation</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a29c45c621a33ac6fdd74aa948abdb24d</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherOrientation</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>ac4233ed0abdffb9c02e9f40f54897204</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherOrientation</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a2840acf4ba2a92617760b81efd1e7906</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &gt; &amp;indexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherOrientation</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a8444165dbcb2784e9f60c63d2fac6a5b</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &gt; &amp;indexers, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a858039b37ee1d2d9b226f85618f3e585</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a9fa2d03b0314b8cb5aeffbf2faadb279</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>aa1ded7bc069534482a524b2238405c45</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a7399915a609b7f3d9f57c72210d16904</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherOrientation</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>aa5646a5ca3c6d2f01672a057b2b0531f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a115ca7197bb905630106bb71f9c755bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &gt;</type>
      <name>indexers_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>ad64970c050a6ab75611a022cfe9be896</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a8c88c036ce87b0ea438cf43569a8a011</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a84ef5d414d8e8fb8a21641de95e836bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFieldOrientations_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>a6fa05131d3acafb4f0561c1ea44b9417</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherOrientation.html</anchorfile>
      <anchor>ae15702e29896c3b2be2a332daad1dde6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::GatherOrientation_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1GatherOrientation__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GatherOrientation_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherOrientation__Builder.html</anchorfile>
      <anchor>aa76eed06e9277c9f687e65abefa6d46e</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherOrientation__Builder.html</anchorfile>
      <anchor>a192c802756e0c57fa7e289529ece5c4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherOrientation__Builder.html</anchorfile>
      <anchor>a9fe8e4a142be05dd9118bc0b474b8d25</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::GatherRefCoords</name>
    <filename>classpanzer__stk_1_1GatherRefCoords.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>GatherRefCoords</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>a07fe6ca1e40dcdedab3de31538881741</anchor>
      <arglist>(const Teuchos::RCP&lt; const STK_Interface &gt; &amp;mesh, const panzer::BasisIRLayout &amp;basis, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>a8e9343a114915fd52195719abbd99361</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>aa40c46099e598ac5ab783fa8008873b8</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>a6fec9497c14e522dff0910a86bba30ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherRefCoords</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>af82ab81138785dc451374dd5b979e415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, panzer::Cell, panzer::NODE, panzer::Dim &gt;</type>
      <name>coordField_</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>a7174bec62188774dffe129f90b192528</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1GatherRefCoords.html</anchorfile>
      <anchor>a511ff8e3d7c4642caf02c2c9e66142bb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedEpetra</name>
    <filename>classpanzer_1_1GatherSolution__BlockedEpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra.html</anchorfile>
      <anchor>a6dff70961e31c10014b0116e3ce7f1bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra.html</anchorfile>
      <anchor>ac3a70c760fa71f040c5203aa5ec07799</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra.html</anchorfile>
      <anchor>a1f1a27997815c2c05f42bda732a5047e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra.html</anchorfile>
      <anchor>af589b84e072ae4c0ecfec678f31a3852</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra.html</anchorfile>
      <anchor>a63b1d1a8564b06dd253d8f9ba2af3231</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8c3592d5338e90cd44c6060651930b45</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a394050d1a1faa63fb50812810b375426</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a42878580fa6dfe563211daa1cb143798</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>add81194fac179ecc98fea2a3651e2ee8</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0b2d89414d13fc30703382a48c1d6de2</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a75c62ce65013819232a2f2d951efdf2b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9fc17119e6c6fc1b70aee954240f1962</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abaee9968c5ab068e20345e5577b42574</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a901fe24100fff6cd85e4b51d12054071</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>indexers_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afda95c3aa0008eec94b2b1456c4c40dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a32655e847d214ab273c28ea1d7233308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2f66d5b173b44acb225a265b2e991237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7814457af5a306797eb38c01e0d0a920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3a2abc50cf8c33a369ad7de4516760d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1f528182f3fa12bff44d3c80b0f298bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableSensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aacc05c95dfe9f4566275e56fc22feba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sensitivitiesName_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0c8c8dba0e6f8e4a3a6cf6ed77230908</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applySensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0ddd7ac8611ed2910fb4623991529087</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae8dcd11fe0692a5c034e6226e94013cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>gatherSeedIndex_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa017385f8d16fb462adce2eda248a0ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae729b305a42ace515679cbc07cf92b81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa502fee18f54eeb0f20db86073e47274</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aff47a509f64858af61d2fca9fd32521f</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a392d2aa67b314c5ba0e251c84c7314a5</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a01e4294624839000fe3eb9eb2569e8e7</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afd213256ebb116571a937a3bc983aa7a</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af4209ced127a5e8e0fa3b64daaf40e05</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aba2960465d424177f0b596b8a293371d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a68e14e250463685a611148e78f584f2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af16e6ad7b4489541538c6096879ac786</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>indexers_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af0dd9ac1186d237246d73b48ab58424e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aef1bacd835c926c0a970f6633ee959f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa679449f4cc42feb3420961697e9cfa9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adcf19bebed93f71109699454bb55f809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a073b8b795bf74c8cac5a0ce6f2223cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0d86945c92d866ab64c1c0106b7d1395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a713256d9e211a07c2b48957ab10b7cc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af2cea4eb40d570cf2971b2406e9c5744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa9d3802cd8c1dcde451c7834b838f243</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a955ea4ded5b7e6c20e655dc244a16b60</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac50659bf26c0336642fb8072fdc47d8e</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a96e0063436c6373f3eb60178e469782c</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a48dd4e186a4e56d9b5180626fd4fe311</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad800ecd76efb9ed9d33740298dcda928</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2c70a72cb0e0153a8903f8d64dd61152</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6511ca7a56b5b85a9d8688c48a8b0d6d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aac561ab30d8ddebddd772b209aa0aa2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aad9a192d469bb7ea3a752770c608692a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adac60194f8e71254cca7e28f38c8ea1b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>indexers_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8183f674c678b7ae8bd8ef92e2f69a0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ace8cec51a8d6f4697b51950980631186</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4907df6e48e25ae7875a2cfa45f3f71b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a878c69c2e12600969b7574594fcb5c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adcd705f68146a3f45e18ab386022e84e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3561e601acba02961aadbd7fd0c5a5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a63f623688ac31a6625e98c44ef29945d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a42dcff70bbc21b4551a0d41864008ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a505c366932e015e00f0d51b785a18879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad7ceaca7c092c4dcfd688d611b328827</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedTpetra</name>
    <filename>classpanzer_1_1GatherSolution__BlockedTpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a268d06f01b5fbedd5c2e83d01143b7c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a3673761d025e836ec8ba6be75c6a37a6</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a7dee0c56ec5a4e75aa33a313b2cac653</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;gidProviders, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a7c6e4291b82b4449eda9e895152205b8</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a65baec841ec0acc13da31230e735a96a</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra.html</anchorfile>
      <anchor>a974f756ca35cc19ed4f1820367e72867</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, S, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>aecacb4447310235b71fa60c7984bbe41</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a2d21b9868a61f591d0eb6cd43792cec4</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>abec1cfe50e2990d89acedf490df45b3d</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a292f6e4f277bd1be6566bebbffa66733</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a7ee738dfe094db61b487d97218adb3fe</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a9bae6e7463f3c9098804b55c455d9bbf</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a38519d5b036638af1e973bcb6e4cdf84</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a1168563a0922ae86c6d57dbcd5d84bd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a75344e19ba3ec47f13f544de172f6442</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; S, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>ab7b7fbfaf8c12610a110f67557d71779</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; S, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>ae292f309dd2709b4ca2c3edb8af0ab28</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a0871b6c4ea122bf338de142d2a2e8553</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a55962fc7ed7a1e1b2b2dea53d572a199</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>adb9b607cff41cb405d22effba3c60b19</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>acfa84738371089c24a36f79ae27f4749</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>aa5309ec75a7d85098daf1cb52caa0810</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>gidIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>aaef9844b2d32aa50dddf5e49a3b54997</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a1d33dd96ed90dfc47a7b52305a84b660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a1ce3a4f23986b23824d5915e7a75bf67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a515f47d74887039ace47019d0c8f0581</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a9261b0bb51063c502be11ec42fad8f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableSensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>a0939fad10d8aa750f0f96573830edcdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>ae56a34a072abb1c36a87fa5ff4fae4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01Sd2ddd7c59879ac5b61c9ab09a8dde058.html</anchorfile>
      <anchor>ab37f4ad468f51d79728d8dd8fd4ba22c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, S, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a41dce3961eb460bfe477c587adb9ed2f</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>ac6a2954e27f02a2ae34f32b96ae5f5e3</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>af23aa363b8281b3c94d9a063a2a3daaa</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a89efaeb0c399cac73c789e49b81b8c8d</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>abbe68b63dac19db634fd6b9bc4cbf59b</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a50187055020c8fbb383109bc36035fc9</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a84fd1a5524092deca9a2f1effc255d82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a7f3bcbd2e3fa759e5f2544687d6a989e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>ad8ce0ef4ed777cf40d8f8048153f227f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; S, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>affb3016becee09133553f0daa88a3128</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; S, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a051dd811133e8a229e068c655c7520cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a67fcf7db03ebba14ec93a5cef77bc692</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>abcb7fce08a2b11ebf44cba6c748abb6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a99ee008b6e147ae8bb2da168642f9716</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>aba3fb90ab3a225c95c37bff14182f559</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a07fa3f27d84454910235cf42258c8f0a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>gidIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a172ec384d67a7b88dd329810b0514236</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>af4b90fd3a90d96bc882c941492aac8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a38517e11e161743a197d427181de59ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>aa9c187578fea6a4b5cf9be1c12a3037e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a003e0b12b2caf5b5668179b1da59855e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a72a903d6ad797e7b661c50db1f16b89c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a4aed8a234c7863da7ab881b66e494f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>a05cf4c7641cd3c6f791442f38cfabe1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01Sff64e31733c7e2d92b7718fb2d61e2fb.html</anchorfile>
      <anchor>ab9be859b87982d93c448d0e3a5975e3a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Tangent, TRAITS, S, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a334f82047c4eafa571a249cd78c38934</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1e2d3221477c6501f640b888782275b1</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a768917119090f96023384cc5b32a71b8</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9d0d7725fe3cf7e038c52607014a2ab4</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab066ecb552abc40876f01257a1b0f8e6</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a4a7a929f344506eaebf0e0435bbc0fbb</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6df8c384296eeb633c10a3feb9df5288</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad239c91b75bc67920844a0c9f3988c5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0ff5d1bcd65d5dc083d2a5b5f1d3f096</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; S, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>acd5a3bf1ac4029d94ecb4dd5867b731c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; S, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6453044b3ed315cd81c5f63d5e192481</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>addf5a0d570f7a639ca56c376aa175025</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a711b114325e59f1ca269d0bbb7503fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a09f9c2efba9a35cdb1963944af55e5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0fb0ed5f5b40fd6fa5a32924a4d59e3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a252105ebf61346498788be29f71750f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>gidIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad7a0bf3b5a659d782a26697926585baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad64919edf9b409c61204faac5114ea40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9979401f1ef50055aafbc44e5f8fa3a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a993cea14984fb05ce0b2599fe89d31f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa908269faadab3d67470743667889744</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aab917a50e86200a48990ba1811235baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3808d95304049b2980e114c6a7caa2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab8aca065c5c50b4a1702a812d6adef65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__BlockedTpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01S_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae79677f7431b6363903e9e45a186212a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Epetra</name>
    <filename>classpanzer_1_1GatherSolution__Epetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3503169f0d14175047db9275a36310c6</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac84f5bb16df1be5e02608aad9a97104f</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a51714966d52e310a44b3b3d99a8d5728</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3fe81e06525a094481fd74c856f46aed</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a399d7cf3068b942c8abf32d753ae0564</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a37790e10faf83a8517bd9eccb5058a58</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab3529af54bc2aed5411cc84f964f17e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6acd0476edf44e733ccccb63f893ba99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8a4b46ff28bd479371c08e086f13ac7d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a34989e01619f1c4e66da52dd6951287a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a462e1796333daa93c2477502de9541bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab9d4b35ee41fd766ffdd1f3b64da880e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5ce18a81ce212820d9df243f2525ff5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae1a0ec243f0177e470ab2ede051e922f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableSensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2eb1e3ad770f53b117b5236a76b5111e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sensitivitiesName_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a92445d548b33bf0d61002a74b6cb46e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applySensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa6923d082b4eccb9b631f885a8c60893</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a19cd913ccaa1e2718deff2003f0719e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>gatherSeedIndex_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab3c134225b6b4534d8d69b7c5eac6f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aaf3d8fcb4e1c14a1f10b8c378a6f0644</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1dda8f41d17e67d112c0468ce6993473</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3211f3380340991b6cb24bf112653085</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa082bfc402b6e1ca8ecf55c699e10162</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9c4fac9a64846cde2678020dab9771db</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a52801f9abd598e51a20287e7e24fc52f</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a978808024d3f026ea0f66002f0d96a44</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a575f853975f3c258651669e1e91f1071</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a23f12ae5863c3147647229828d5383ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6c3809fc71f062e69edbda8bd0a5719b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab60de3122c0005d60600886f316d41fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abb3ecfc1007548a80d9bf0b814ca2b54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a450829ca631d00103694c8f7f1ad5ef0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a93ae63037f3c75c67adc26c43a55d570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab36ab26f5182fe0e56527a5bdee674e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afda3a60032b207c67522b6d85a48cf4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ade105307564c42c6944ac2dcc8715193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abe1cbce8b3ce068ca1d77d993cd7e7e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad7de3c0bbbbb50a5455d477053d6b9f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab62c82614374b451c1f2b3a9d0b087b2</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1756b6760ce1d9b696d463c619fe10c5</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0a7831d88c438822e16e7a14ef6288fd</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7638baf8221d5fece637c8d37962bcab</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afdeba0fd35242d629c5c9159cc51522f</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae46403793ced8c09262683b8a266efcb</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ada231e48e84da81adc14066690f79681</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad6f33cd9be55efdbc2147cd26d06482e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Epetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad4e63cfb5b125264832ca3d520cf3725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a941721494a376eacbafe7c18e12f485c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a393bfa8a7d8cd4b61c1e3b9eeeb82a6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa64227bee36ac66f934b51eddbf6d5d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8fafa4953ec4bff3eb6d79f84e3cb54e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a15ae470a33917b1235ff727f8c0ef0fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3964a36812cc623dc238e450eb1c6918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afdb06cec0161c4703668b2bfa1d3a64a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8cf133ac2ad34f1172afbf497a026fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa52e0fa7dc0c0e4a6ad4ec6414a96d2f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Input</name>
    <filename>classpanzer_1_1GatherSolution__Input.html</filename>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Input</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>ae8135f374b783592a6fd113003822306</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a4883fd8b70936435c76dd93819007f7c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a1d13de418c9a61f215017178a41b251a</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a2d58ef7a4dcab02c79502f03ec1dc1ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getDofNames</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a1f2bcd8e857173664ce0c0d9954b7919</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getIndexerNames</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>ab60c0e530abbf2cdf3be8bafaa7e1a4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>getBasis</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>aa1fb5c2386da1d6e4fa2218a14e1f169</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a7c10597b771d5b64e14bb99aff43eb84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getGlobalDataKey</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>aac5831995dfb39650705ad024d74e122</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
      <name>getTangentNames</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>acb91779d52570f0ecdb423e6af8d5003</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSensitivitiesName</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>afe9e015a7cc348e1a2438c883be6a462</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGatherSeedIndex</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a66db5f325ace043317ada7fadc65b631</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>firstSensitivitiesAvailable</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>abe0da24dda26aae3d56d691c3297d893</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>secondSensitivitiesAvailable</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>ae4cb63e58710ed063260b715e6a351a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSecondSensitivityDataKeyPrefix</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>aac00a3cb42a4079524154931cf0b3344</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Input</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a4b20514f35f2c058749e065e34ddedb9</anchor>
      <arglist>(const GatherSolution_Input &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>dofNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a924884d60df836a281a5a9540bc1bb65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a84b403068cfefe9aa267c36b39a4aad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>acd1a6ab13f11c6cc24df4d4cd12ad62b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivSolnVec_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a46eb886849f806b5477b0fbf3326728b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>aa4e5197d402d5d34423ed0c50c966f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>tangentNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a330766fcb0c776ab640348e91652fdf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sensName_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a894645bf87bb72a972dbb24d963bbec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>gatherSeedIndex_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>aeae5c5d23f71fd67a9d00ca9ae52e6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>firstSensAvail_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>abb172da6adffba71d05ee09ef42eeee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>secondSensAvail_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>ac232438e2b5319c1a6b23f1ec7499a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>secondSensDataKeyPrefix_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Input.html</anchorfile>
      <anchor>a8795f75ea9d8f3dbe4399f6bfb324a7a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Tpetra</name>
    <filename>classpanzer_1_1GatherSolution__Tpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>GatherSolution_Tpetra&lt; panzer::panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Tpetra.html</filename>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <class kind="struct">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;::NoSeed</class>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a2160968542b8b07868f3abe06146b5d5</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afacea2313748c9360a3d69f619970ea9</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3a4fa7216b9091354d584f93136e015d</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aee1a45ac2cafd2f29658caffa5875364</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa7a7e9a0a507f911ce1845224f0fc043</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a51bf4b1ece46423df549f5c8dc06938c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab3b86ef157394f610101e19113749094</anchor>
      <arglist>(const int cell) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a85e67a1cad6e4eaf2abf454e9a39e34f</anchor>
      <arglist>(const NoSeed, const int cell) const </arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const LO **, PHX::Device &gt;</type>
      <name>lids</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1cede64e0ede8e09982dbba1d3f7ae65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>offsets</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6721dcff9e2761ebb4b9abc304899590</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const double **, Kokkos::LayoutLeft, PHX::Device &gt;</type>
      <name>x_data</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aca2aaae509c2269b0b0069bf10b9471a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>seed_value</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad2ec59f83293912ed8461724f9f6ccbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE &gt;</type>
      <name>field</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad16a46ea9f9fa7dddb4d2e03c40bbde6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa8aad2211dfb0734d25fed404875bea5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8c5daa68ee74919ff504f239cec25c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab8a779629e0940654fcb7d99ccf2e669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1011a4cbb2e9081cf52b0cf224d12eb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a692daedc08c79b75d98f3dbf09f21f65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a96ef676be063291ee426b6ebbcb26686</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9ebc48adc99708808416f9f6d766b492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a4eac24db22763611129590db5f78710a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableSensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae6d09e7f1eb41688b692cbfd9c8843d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sensitivitiesName_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5c2bbbd72fa6059e239f1b48dc1a8cb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applySensitivities_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a739e6d2fdfb2567eb3bfbf183121cf10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a89664cc5ace0efca5f4870393f36568b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>gatherSeedIndex_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab88c16674063a983228a5a1deb1a3239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a581e98f7f43fa01b380419acc2ed8283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; typename TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt;::VectorType &gt;</type>
      <name>x_vector</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aefd3017f2b0b636f20832313d8962643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; int **, PHX::Device &gt;</type>
      <name>scratch_lids_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a913ebf0ed86d1a74d429f04cdc6383f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Kokkos::View&lt; int *, PHX::Device &gt; &gt;</type>
      <name>scratch_offsets_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a388f6e5315fc998e5f90a0d3201d4350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>struct panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;::@0</type>
      <name>functor_data</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a37f86605c18e51a8ca1a7cdabc4dd169</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa6c4814f4a9cd110da21b84d3a2a87fa</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a44782a02174377e91b301e495efd6e3e</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a300312a39f9a4aef60918a6125eab3de</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6fbd5b6cbcdaa449262fc19696f5a3e5</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa404174eb01c7b1cd6d1adef5560f677</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab5b3466db99d3e5f59c0d39db9d00bfb</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>abf68f49096c1f353269e3c2bc9cae43d</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6e2160821d31b1655a715a439de97d68</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a76bd87f69e503ea45fef78344b01581b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af05d15fbf0d7f757283fd6568378d875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac31583384b7eea5fe1348ad21f16dfe9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5ed1e34431f7f3eab3c6fb2eb72aafa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>abd07c4fa52ed9c9c169e5c54cbff1525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a78b45f3f9879d123d844c7c57843925f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a06d4d232cddd3697267349e9a39dfa9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab75dd144ec45c55c479c3b8a3f158127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae54b167745cfc3c7eb398074e18c46a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a02106e909c36555259f0a7f6ac22ea71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7ff009005222d53734be4ca9c1c6ae3f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherSolution_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7e8171d3adff076562fa9b95c73d6c0c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a393ca538a0af81e73b3606141457f6c4</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af95721b2799fff689250e70415898234</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7312e7b8a95f56367af7423aa18fbe95</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5d747030392b05a5b28261523e3763b9</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a374fb732c91b8c409e5dd5cecfa9ebcd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a98e42e5c154a81c942d5ff49d940f4c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afda86925708d74713956c5d9b7aea247</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::RealType</type>
      <name>RealT</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a761c1e74f3dae0557d7ca8c58e6071bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherSolution_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab75b63995151a84d403fc14b3177069c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae8966fb7797f932d8a0a0b523c284230</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a61840286943e69ad7609a4ccb4a80839</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7aeae1789ec009a0af61b550a4985822</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a2c8e90977259bbf326be5fec062bd0a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8f096bf5841e66c76d7e75ee8eaf7790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac51271f3ecb4cc211c03b1545d9af7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7291a3573ab08de91a1f0167c213e6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_tangent_fields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1c2c6e4ce0f7852f490965fd607ed244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; PHX::MDField&lt; const RealT, Cell, NODE &gt; &gt; &gt;</type>
      <name>tangentFields_</name>
      <anchorfile>classpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad93b7f2c8dc35a9a032cf8395ea717e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherTangent_BlockedEpetra</name>
    <filename>classpanzer_1_1GatherTangent__BlockedEpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherTangent_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a777a7f14d46a82b35718dbc4d581c9da</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherTangent_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a33630f3bc343270b400e035a6ab3f8e9</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;indexers, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>abac802dff252d634ebfa5db022226f5a</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a38beeeb3dfa132d2b99d456c7294e996</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>ae434550b40d0cfa6174bc06f0148ddcf</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a6d7f8bfa259745c41a7aa6aa938c5c35</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>aa9b3de8494de5b2e99621e33f2853fa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherTangent_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a99538abfd3bb07b7616b395db0ad73cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>indexers_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>afad872b84ded1367e11d45d61a5e6502</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a4f035888ebdbc06d2790a633364bf179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>ae5f37d973c48f6b05cf276203c30191e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>acc0432d5c138549d29f41f73fc19df90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a2284a0c5b9fe6287565b3aafcfbe4f28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a3bba65deb481f807595edfc33b3ad4c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>a9b16658ffe240323f54b57ac7221f39c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>x_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedEpetra.html</anchorfile>
      <anchor>ac77ca7730134b697cd2a58de6afe1f91</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherTangent_BlockedTpetra</name>
    <filename>classpanzer_1_1GatherTangent__BlockedTpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherTangent_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>aa931071ad9ff51172f492a2778c8d094</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherTangent_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>ae5c31a408b015be6d0b0421ebf4d7188</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a779469d99228f0941580a5b0b0c0d24d</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a0e03e9377bdcd1efe234b3f70233fcb0</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a4be9ec6404f7ac34f1d07844e412098d</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a4b60bce8bb1c22e09ab9721833896047</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a9dbf9f329dd5411fa7e2d9e22ef620de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>aafd6ab601ed7a628a908797675750c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; S, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a9d38c8910efef03529baaaeead837d41</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; S, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a0d24a1d931a937c15befe73d6ff894df</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>ae3182a2e5b5a57daab2b353856e8db8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>ad6fac6dbc464da5eb089987469e3a5bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a683e21682b12a92366e80060eb2f78d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a135f8067c4b9d6b7bf10583eb953dd91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherTangent_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a29dcacafca08cb2b24cd615239a400ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>gidIndexer_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>af3477bd6cb97612896bc0ac69d4a64cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a10463ac18c30d1a2eeb3ac78d38a29ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a246ecdde1c8fb768f99f3687fed5caa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a6d50c4ac2489f12ecdcbb77b6c4acb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a3ed9e25351c5b6622d9b75b39f9a103e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a611c9769121aaf7fd335056e198ec931</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; S, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1GatherTangent__BlockedTpetra.html</anchorfile>
      <anchor>a9a2c414f3fb24cc8952826d07f4af76c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::GatherTangent_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1GatherTangent__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GatherTangent_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherTangent__Builder.html</anchorfile>
      <anchor>acb2dfe9a200ef6c9abcd2f3dad613283</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherTangent__Builder.html</anchorfile>
      <anchor>a18899bf07ca24b5484ec9a05af8b6d7f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1GatherTangent__Builder.html</anchorfile>
      <anchor>a55bbb62b902e203adfe0d1ebfcd63880</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherTangent_Epetra</name>
    <filename>classpanzer_1_1GatherTangent__Epetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherTangent_Epetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a6565672319bcb8752cd70f813db76a99</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherTangent_Epetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a0d35be4022df89821a5bec9d7e108e0e</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>ae6764fae5946d43ebba521350b9c4df8</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>ac14c40564f7af2ae454ba2530f614fce</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a9741575dbbfcbc16858aac9318e3899a</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>afc08e3fd351c6caee4c2d3213f4216e3</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a905c9fb8259a5ea24a68c72e4a2e1286</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherTangent_Epetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a0c98691c11a26df7c5e9098f46b9dc60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a7cc3184577b28ab838fac2cce65e08dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a0e4b82f3736f364b2f709e0e3fc635de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>af14dc064ff7d43225d8b4b92442e9da2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>abd075832228caa2bac45ccf4d16c4b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a5dcdb0733d766ab7dc6d7b2fddb36df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a0941641214c5374d8aecf7e5e733d1d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dxdp_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Epetra.html</anchorfile>
      <anchor>a76a117647a90d08a97b27ef3bd6c8bb9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherTangent_Tpetra</name>
    <filename>classpanzer_1_1GatherTangent__Tpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherTangent_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a07bfa0205fb286a3e18a2af2a585322c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GatherTangent_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a6f58bddceb46b7e607df40b7582a95b1</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>abf186bfc01ab19cde91ccb81d30f8c58</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a51f21174147378eb9f785054b836a5c6</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a87e3f4adba361725e93b67d4e94f2ca3</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a8eb6fa28af305a345065edd28449be8d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a88a79d81b74e083a66dc6cf3d674d0cd</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::RealType</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a8432d130b8c67f3fac8d25740180307c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherTangent_Tpetra</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a27722a4452c3ecf3d720ed28daa100b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a5bb4409920e46d604c9952744e518ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>aadd0db79bd53875a42192e9ee986addc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>gatherFields_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>abe01e4e70857d1f3b2f2f0819da237d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>indexerNames_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a6f81f067f7129128b7095f9a3e1985ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useTimeDerivativeSolutionVector_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a2dade7824dda7ede818e095743b283f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a33633a8d85c1797185afa24787f35f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1GatherTangent__Tpetra.html</anchorfile>
      <anchor>a7df95b2262d5f661f18183e0442b1373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GatherTangents</name>
    <filename>classpanzer_1_1GatherTangents.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>GatherTangents</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a96e4d3c3803c7e43be6157f0c2674bd5</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>af0d8d6802a895538b2616a17b4d44ec3</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a756804049e6e66130ee309c651783f32</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a4b155f6793e8cf655735a56832b50e4e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a81a7164b61492070dca25becc14a03e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>GatherTangents</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a1c1c66c486c2a9362ca669736de9e88b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dof_name</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a87ad76753a010d37ddb96e0c97f0bf41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE, Dim &gt;</type>
      <name>gatherFieldTangents</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>abf04d3e57505cdec877704ae463a3815</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, Cell, NODE &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a5b74e2549a804620da34e3cd121b851e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a8a04202e43e7fb3ce68c73547dfec6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PointRule &gt;</type>
      <name>pointRule</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>aa000b4591f334543ec2d020f98aca517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>edgeTan</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>ab94b66bfe5db1afa68d99ed875283653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refEdgeTan</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>ad2b5ba8b676fcf396499241e9279163f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PointValues2&lt; ScalarT, PHX::MDField &gt;</type>
      <name>pointValues</name>
      <anchorfile>classpanzer_1_1GatherTangents.html</anchorfile>
      <anchor>a13d774f96f7f1763b6f4f0fc072926f5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GenericEvaluatorFactory</name>
    <filename>classpanzer_1_1GenericEvaluatorFactory.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>registerEvaluators</name>
      <anchorfile>classpanzer_1_1GenericEvaluatorFactory.html</anchorfile>
      <anchor>a4e283f68acc4d18b62d3a924706396f6</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const WorksetDescriptor &amp;wd, const PhysicsBlock &amp;pb) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GeometricAggFieldPattern</name>
    <filename>classpanzer_1_1GeometricAggFieldPattern.html</filename>
    <base>panzer::FieldPattern</base>
    <member kind="function">
      <type></type>
      <name>GeometricAggFieldPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a52504813f716ec9cc22abbed36141190</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeometricAggFieldPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a4b0732fb4e0ada589b01107e87e60286</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; const FieldPattern &gt; &gt; &amp;patterns)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GeometricAggFieldPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>adcde27031fe036145a014c835c113473</anchor>
      <arglist>(const Teuchos::RCP&lt; const FieldPattern &gt; &amp;pattern)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GeometricAggFieldPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a2042aacabf8a94e5eb8094c355e5050b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>abf48584108dd7263b5c937df1f754575</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const FieldPattern &gt; &gt; &amp;patterns)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildPattern</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>af23c0a051da5db178afeb79e1ab95221</anchor>
      <arglist>(const Teuchos::RCP&lt; const FieldPattern &gt; &amp;patterns)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSubcellCount</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a0e8af93c8fd8fae29ae58cb608295f8f</anchor>
      <arglist>(int dim) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a8e5f0582629701d4de5540a1420cc5fa</anchor>
      <arglist>(int dim, int cellIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSubcellClosureIndices</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>af20cf72de6d9d8d9c3a399cb69350663</anchor>
      <arglist>(int dim, int cellIndex, std::vector&lt; int &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>ae5e6367c75e8ef4186b8751373b8e11d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual shards::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a67393fdd0ef487115a9b018ab4d709f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>patternBuilt_</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>adab03ae1b5e851f591b99998fe9bd59d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>dimension_</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a45385c7f1ed1b9cbd10e3f1177931475</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; std::vector&lt; int &gt; &gt; &gt;</type>
      <name>patternData_</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>a386996bb76d32a3de011c217b8d07757</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>shards::CellTopology</type>
      <name>cellTopo_</name>
      <anchorfile>classpanzer_1_1GeometricAggFieldPattern.html</anchorfile>
      <anchor>ab5a80806591fcc4a81ed7586b5bff196</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::GlobalData</name>
    <filename>structpanzer_1_1GlobalData.html</filename>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>structpanzer_1_1GlobalData.html</anchorfile>
      <anchor>a3bf58cb0971b48a08f7f9438a071d863</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>os</name>
      <anchorfile>structpanzer_1_1GlobalData.html</anchorfile>
      <anchor>a56d113ccf05dc59697707c107e53fbd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::ParamLib &gt;</type>
      <name>pl</name>
      <anchorfile>structpanzer_1_1GlobalData.html</anchorfile>
      <anchor>ae263fd9ca22c47db8b66015753084f90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>createGlobalData</name>
      <anchorfile>structpanzer_1_1GlobalData.html</anchorfile>
      <anchor>add39c5e67a87ba35647252c8d8501845</anchor>
      <arglist>(bool build_default_os=true, int print_process=0)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalDataAcceptor</name>
    <filename>classpanzer_1_1GlobalDataAcceptor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GlobalDataAcceptor</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptor.html</anchorfile>
      <anchor>a338e78033337950ae9754f2434bbb3ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setGlobalData</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptor.html</anchorfile>
      <anchor>aded0cbfe96b9ad71f115edd2095fbd72</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;gd)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>getGlobalData</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptor.html</anchorfile>
      <anchor>a303d19f38c736e68ba2970bc4befc7e9</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalDataAcceptorDefaultImpl</name>
    <filename>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</filename>
    <base>panzer::GlobalDataAcceptor</base>
    <member kind="function">
      <type></type>
      <name>GlobalDataAcceptorDefaultImpl</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>a1bfbe648fa1f3e4cab801de7de61864a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalDataAcceptorDefaultImpl</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>aa67615e3ff1e431621904bccc698080b</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;gd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GlobalDataAcceptorDefaultImpl</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>a775148c686d1d31c18c461c205b039a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalData</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>a8808e75bbedeb3db641cf46bcde50c98</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;gd)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>getGlobalData</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>a4926c7ce0db585aed03ca83a28761c86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>m_gd</name>
      <anchorfile>classpanzer_1_1GlobalDataAcceptorDefaultImpl.html</anchorfile>
      <anchor>aaafbae0bd71fc084781f5cc77d4c648b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalEvaluationData</name>
    <filename>classpanzer_1_1GlobalEvaluationData.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>a64ec03e2a8dccb2015f3d4a160af9b28</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>ac64fcce37c8ec01c30c649f97b533795</anchor>
      <arglist>(int mem)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>a6f76c90209f2393dc20c4cc8f321d8fd</anchor>
      <arglist>(int mem)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>a981de097e049605fcecf4440ca0631f2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>a899d8b88e738be40c533f547a7b3ed6f</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData.html</anchorfile>
      <anchor>ad46ea7b0c1ca4fa6e0eae689a48e1882</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalEvaluationData_BCAdjustment</name>
    <filename>classpanzer_1_1GlobalEvaluationData__BCAdjustment.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__BCAdjustment.html</anchorfile>
      <anchor>a942312e8c7b3aea9fbc0016d0c6611f8</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalEvaluationData_Default</name>
    <filename>classpanzer_1_1GlobalEvaluationData__Default.html</filename>
    <base>panzer::GlobalEvaluationData</base>
    <member kind="function">
      <type></type>
      <name>GlobalEvaluationData_Default</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>a7959bcc252670e55e0f65b3f8ed40dab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalEvaluationData_Default</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>a96a346dca0e9f3683e9213b3efa042fb</anchor>
      <arglist>(const GlobalEvaluationData_Default &amp;s)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>aec111174782423395ee0b1d46b449ccc</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>a3aa7fc75fb5556b2f5f477125a2e7303</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>adb42ec3c01036d62cb4d07cf1bc1e3f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRequiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>a034267a4200f3f5fa8baddf73c9753a6</anchor>
      <arglist>(bool b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>ae6e350d126e00414c3255f7874c08092</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>requiresDirichletAdjustment_</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationData__Default.html</anchorfile>
      <anchor>a867bea5ae3c65de79b6f8d4d82188370</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::GlobalEvaluationDataContainer</name>
    <filename>classpanzer_1_1GlobalEvaluationDataContainer.html</filename>
    <member kind="typedef">
      <type>std::unordered_map&lt; std::string, Teuchos::RCP&lt; GlobalEvaluationData &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a99a378ad344e1ac00489f6945a2baad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::unordered_map&lt; std::string, Teuchos::RCP&lt; GlobalEvaluationData &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a38ae4a9d1d89ecb4af7269871a802df2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDataObject</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a6260ec40f5376b15574e55f5b7658442</anchor>
      <arglist>(const std::string &amp;key, const Teuchos::RCP&lt; GlobalEvaluationData &gt; &amp;ged)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsDataObject</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a48e005c27c7c1b46c7736081ee6d2b75</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; GlobalEvaluationData &gt;</type>
      <name>getDataObject</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a532049571fb035cef1ba4a431b467d16</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a98d618060d98cac39d6ebfc1d03c5740</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a71cdd871185c1fcb9dfe635f735b2964</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a70b0922ad37da0de005d11243caca70d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a92941dbc0849aef40a3f9edde64780b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>adb1c109b5b1af23713b6dea912ea7f0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>a6efcb0d160a7d0f53ffb37f74b234cf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>ae8bd8b6da103ed78ffe0e8085ec726cd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, Teuchos::RCP&lt; GlobalEvaluationData &gt; &gt;</type>
      <name>lookupTable_</name>
      <anchorfile>classpanzer_1_1GlobalEvaluationDataContainer.html</anchorfile>
      <anchor>ac27a3771ab95706eb7cf1e086c7a9ba1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>std::hash&lt; panzer::WorksetDescriptor &gt;</name>
    <filename>structstd_1_1hash_3_01panzer_1_1WorksetDescriptor_01_4.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structstd_1_1hash_3_01panzer_1_1WorksetDescriptor_01_4.html</anchorfile>
      <anchor>a9ff792a8e1cfbe98fa95a3e7e9b078a3</anchor>
      <arglist>(const panzer::WorksetDescriptor &amp;wd) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ICFieldDescriptor</name>
    <filename>structpanzer_1_1ICFieldDescriptor.html</filename>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldName</name>
      <anchorfile>structpanzer_1_1ICFieldDescriptor.html</anchorfile>
      <anchor>a6d1ef726bfb419ced66de66ae965c229</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>basisName</name>
      <anchorfile>structpanzer_1_1ICFieldDescriptor.html</anchorfile>
      <anchor>a7d1983d389c22f6fef9c74ccf52b76f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>basisOrder</name>
      <anchorfile>structpanzer_1_1ICFieldDescriptor.html</anchorfile>
      <anchor>a9f7c0e35088bd15e41f191d832a831a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::IntegrationRule</name>
    <filename>classpanzer_1_1IntegrationRule.html</filename>
    <base>panzer::PointRule</base>
    <member kind="function">
      <type></type>
      <name>IntegrationRule</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a01fc50f1af553ae4cb6509589488bd85</anchor>
      <arglist>(int cubature_degree, const panzer::CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegrationRule</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a10805797efba1037f06b9ad9aa1648b8</anchor>
      <arglist>(const panzer::CellData &amp;cell_data, std::string cv_type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a5dea594fc38948f7844dacc8472f21ab</anchor>
      <arglist>(int cubature_degree, const panzer::CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup_cv</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a145e4e719fdcdae8cfb90b622e443661</anchor>
      <arglist>(const panzer::CellData &amp;cell_data, std::string cv_type)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>order</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>adb7c319457e1bf47273c4ac55b2cd065</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a2d59e5bc6d3b77d2f45ae7d7151bc306</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>referenceCoordinates</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a7d8af4faa94e4a5fd5cf4f501bc8a920</anchor>
      <arglist>(Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;container)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cubature_degree</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>a4852aa66f1eb0e842baab0276558fcf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>cv_type</name>
      <anchorfile>classpanzer_1_1IntegrationRule.html</anchorfile>
      <anchor>ae77e9732ea076bf8d29b729b7145d7ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::IntegrationValues2</name>
    <filename>classpanzer_1_1IntegrationValues2.html</filename>
    <templarg>Scalar</templarg>
    <member kind="typedef">
      <type>ArrayTraits&lt; Scalar, PHX::MDField&lt; Scalar &gt; &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a78a0110cf01f06d86d5e94cad4e5ed6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>ArrayDynamic</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>af5221c5d78460962555584e9159caa88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; double &gt;</type>
      <name>DblArrayDynamic</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a10a688af4b45a603d2c491c94111ccf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, IP &gt;</type>
      <name>Array_IP</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a587a0d875724578ec04e305a56f69531</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, IP, Dim &gt;</type>
      <name>Array_IPDim</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a2a610316ca83f4a5771a2b419f2e24d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, IP &gt;</type>
      <name>Array_CellIP</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a43bbbb2cd37f4f645aada222b04d5aa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, IP, Dim &gt;</type>
      <name>Array_CellIPDim</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>afad07062f12d87230359ca831bb5de65</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, IP, Dim, Dim &gt;</type>
      <name>Array_CellIPDimDim</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>aa99c75b2241c8e936999e1aaed5557de</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::MDField&lt; Scalar, Cell, BASIS, Dim &gt;</type>
      <name>Array_CellBASISDim</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>af94b4f0bbcbd77e43a42be52244ac2c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IntegrationValues2</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ad2903bd769c40b3cfd8fbf569457c35d</anchor>
      <arglist>(const std::string &amp;pre=&quot;&quot;, bool allocArrays=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArrays</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a71b9a22b08f6fc3b1ac06bd9360cb6c8</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::IntegrationRule &gt; &amp;ir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArraysForNodeRule</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>affaae573ddb0a42c713e10f20392b8f1</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::IntegrationRule &gt; &amp;ir)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a730cb28df8784327a58fd2fbcf5aa721</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>aef959f4989d4dcdb85028803e38a18b1</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;vertex_coordinates, const PHX::MDField&lt; Scalar, Cell, IP, Dim &gt; &amp;other_ip_coordinates)</arglist>
    </member>
    <member kind="variable">
      <type>Array_IPDim</type>
      <name>cub_points</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a0d01fdc447b22dd69b576a5d4b90adfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_IPDim</type>
      <name>side_cub_points</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a8ad114a3c6e055a85b9720e9c24a3acc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_IP</type>
      <name>cub_weights</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a03ada3549fd2c50e6d3a3960c06408cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellBASISDim</type>
      <name>node_coordinates</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a27b27da7f6048018710bfe557b238519</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDimDim</type>
      <name>jac</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a8b1f309084bf6a686aaad374b8381920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDimDim</type>
      <name>jac_inv</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a2a0d9cd672dd8bbe4d08435f7c68cc68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIP</type>
      <name>jac_det</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a8d6c5a19dcf76093a18468f8d00145be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIP</type>
      <name>weighted_measure</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ac9e2953cd075b083105fd267adb3796c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDim</type>
      <name>weighted_normals</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>affb5a4fc76735e8615f5493a60d84f30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::IntegrationRule &gt;</type>
      <name>int_rule</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a4ec657c1a12de05773ebd99d7469a032</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; Intrepid2::Cubature&lt; double, DblArrayDynamic &gt; &gt;</type>
      <name>intrepid_cubature</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a115fa5d9a126fef6af87db50efe675d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDimDim</type>
      <name>covarient</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ad36e6cc5f414b0f1b422dc765a4aaa42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDimDim</type>
      <name>contravarient</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a974f82199139867836b6cd253ee89900</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIP</type>
      <name>norm_contravarient</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a320ea00c4f62ab081f3852dd0968c6df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDim</type>
      <name>ip_coordinates</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a04a4037709cb0ec7e7fd4b6a08de1895</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array_CellIPDim</type>
      <name>ref_ip_coordinates</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a1ffefb8be748bb7d753bbcb4927fd1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_cub_points</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>add6d4e332710091ffc7b031d87894193</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_side_cub_points</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>acb42d7406e071a0717272fe2dbc8c007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_cub_weights</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ae1e697e08228f9891937884f0480b3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_phys_cub_points</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ab9d3061c4364e65d1b8ecba4648c6293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_phys_cub_weights</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ad9ac7cf11471c106cc9a0d802e086016</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_phys_cub_norms</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a8243e9b13e5f8de7e853a40a37b2cf66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>DblArrayDynamic</type>
      <name>dyn_node_coordinates</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a76c5f7940d2ff48e4d9f2c8ab4ad7c56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getCubature</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>af934bef98ac5f9426c34116ddca93dff</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;in_node_coordinates)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getCubatureCV</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>acd081682388de8d561d6d688e81a77fd</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;in_node_coordinates)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evaluateRemainingValues</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a84ac3e52c8c51888534334cb4091cfde</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;in_node_coordinates)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evaluateValuesCV</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>abce0c04b4f61f15fc5769cc82be76dfd</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, NODE, Dim &gt; &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>alloc_arrays</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a336bef1f351b98bf1c30bd49ad6cc456</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>prefix</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>a5dcb817c92181e3217e662f784f5ff49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::index_size_type &gt;</type>
      <name>ddims_</name>
      <anchorfile>classpanzer_1_1IntegrationValues2.html</anchorfile>
      <anchor>ab874cc1793b8c86033595f558140dffa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::PAPICounter::InternalCounter</name>
    <filename>structpanzer_1_1PAPICounter_1_1InternalCounter.html</filename>
    <member kind="function">
      <type></type>
      <name>InternalCounter</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>ae7b6bda934a3956ad005cd7e936be5bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>hw_counters</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a5b9d9cb272df4676344f20671137a933</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long int</type>
      <name>rcy</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>afc757713ff3bcafe0ff2f349e9c0f6c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long int</type>
      <name>rus</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>ab73119c934dacb5a3c89674d8bf8cde9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long int</type>
      <name>ucy</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a3a265704b3f15062c4ea705a98b0d978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long long int</type>
      <name>uus</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a65b44b01100f02d33cd76f7f02dbc588</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>rt_rus</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a1c8b696411c75e8bb86dfa95233fe4f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>rt_ins</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>ad98ab2a2123b72947c91476e93a13e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>rt_fp</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a695f7d7981ac4286484cd8ad92c35785</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>rt_dcm</name>
      <anchorfile>structpanzer_1_1PAPICounter_1_1InternalCounter.html</anchorfile>
      <anchor>a82b13e90e5ca70119139bda383ede664</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::PAPICounter2::InternalCounter2</name>
    <filename>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</filename>
    <member kind="variable">
      <type>long_long</type>
      <name>start_time</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>ad8921f3aa70b50420870f1be5a7d4ce5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long_long</type>
      <name>accumulated_time</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>a15a8c718fc839a22e9810196776bcedc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; long_long &gt;</type>
      <name>start_counters</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>a4eefb4f2239f81d1a9be4ee72f72ce34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; long_long &gt;</type>
      <name>stop_counters</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>a6d610389a697b32f5e0ff3efe04d814d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; long_long &gt;</type>
      <name>accumulated_counters</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>af3aae9d96844c0dc0fb915ffdd2647f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long_long</type>
      <name>num_calls</name>
      <anchorfile>structpanzer_1_1PAPICounter2_1_1InternalCounter2.html</anchorfile>
      <anchor>a2c5edad0b982d870bd38bbba09990256</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Intrepid2FieldContainerFactory</name>
    <filename>classpanzer_1_1Intrepid2FieldContainerFactory.html</filename>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; Scalar, PHX::Device &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldContainerFactory.html</anchorfile>
      <anchor>af48b5847c7e90547f3a211cb10013435</anchor>
      <arglist>(const std::string &amp;str, int d0) const </arglist>
    </member>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; Scalar, PHX::Device &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldContainerFactory.html</anchorfile>
      <anchor>a655918e191f62d310edfafcab7203882</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1) const </arglist>
    </member>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; Scalar, PHX::Device &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldContainerFactory.html</anchorfile>
      <anchor>abf34b13b1311fce5c2263278d3b5ea83</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2) const </arglist>
    </member>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; Scalar, PHX::Device &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldContainerFactory.html</anchorfile>
      <anchor>a7612f74fff2c842f0206c2bfbfbb3d0a</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3) const </arglist>
    </member>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; Scalar, PHX::Device &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldContainerFactory.html</anchorfile>
      <anchor>a8e45d0a7886a62c7d7858905691ece16</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3, int d4) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Intrepid2FieldPattern</name>
    <filename>classpanzer_1_1Intrepid2FieldPattern.html</filename>
    <base>panzer::FieldPattern</base>
    <member kind="function">
      <type></type>
      <name>Intrepid2FieldPattern</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>adf6e722e0fe6b4b4ec4e74440a22f9fc</anchor>
      <arglist>(const Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt; &amp;intrepidBasis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSubcellCount</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a82581c24b6b3502d3246760db1e30c44</anchor>
      <arglist>(int dim) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a3bdbfcc3dde9e9f497c94a47f0295241</anchor>
      <arglist>(int dim, int cellIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a5249f0ef0ef0e9278279e04f6b429332</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual shards::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>aea3cb875520d313e8eec3be3df3ed403</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSubcellClosureIndices</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a92b11ba46b364dd2ae93c25a1a616bf8</anchor>
      <arglist>(int dim, int cellIndex, std::vector&lt; int &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsInterpolatoryCoordinates</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a33447482a76da097bf8139fc5ebb6df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getInterpolatoryCoordinates</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>ab18ca70cae8bf4a404d2c9b8e63a4117</anchor>
      <arglist>(Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;coords) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getInterpolatoryCoordinates</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a16fb66012375acf60b8b462cc30d2705</anchor>
      <arglist>(const Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;cellVertices, Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;coords) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>buildSubcellClosure</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>af21368327cb8d14852e03adf126fb275</anchor>
      <arglist>(const shards::CellTopology &amp;cellTopo, unsigned dim, unsigned subCell, std::set&lt; std::pair&lt; unsigned, unsigned &gt; &gt; &amp;closure)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>findContainedSubcells</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>ad61900527144951102e51345c584e4cd</anchor>
      <arglist>(const shards::CellTopology &amp;cellTopo, unsigned dim, const std::vector&lt; unsigned &gt; &amp;nodes, std::set&lt; std::pair&lt; unsigned, unsigned &gt; &gt; &amp;subCells)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>getSubcellNodes</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a7657cd7571676437b0a4a124b914f402</anchor>
      <arglist>(const shards::CellTopology &amp;cellTopo, unsigned dim, unsigned subCell, std::vector&lt; unsigned &gt; &amp;nodes)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt;</type>
      <name>intrepidBasis_</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>aa8baaf8b7a3f4003f955cd07aa79adbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>empty_</name>
      <anchorfile>classpanzer_1_1Intrepid2FieldPattern.html</anchorfile>
      <anchor>a3e072a06a364585c9eca8329fa492654</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::IOClosureModelFactory</name>
    <filename>classpanzer__stk_1_1IOClosureModelFactory.html</filename>
    <templarg></templarg>
    <base>panzer::ClosureModelFactory</base>
    <member kind="function">
      <type></type>
      <name>IOClosureModelFactory</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a9fb281db4bb3396cf08a412de5bed508</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::ClosureModelFactory&lt; EvalT &gt; &gt; userCMF_, const Teuchos::RCP&lt; STK_Interface &gt; &amp;mesh, const Teuchos::ParameterList &amp;outputList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IOClosureModelFactory</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a9e91d5102273eb77556c83de58e6126c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::ClosureModelFactory&lt; EvalT &gt; &gt; userCMF_, const Teuchos::RCP&lt; STK_Interface &gt; &amp;mesh, const std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;nodalFields, const std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;cellFields)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>acd9c7e35ab6741e2954f0a23fa006e05</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;default_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>af3e958659d5a04be1dcd2ad00750e892</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;default_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Teuchos::RCP&lt; PHX::Evaluator&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>buildClosureModels</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>af3e958659d5a04be1dcd2ad00750e892</anchor>
      <arglist>(const std::string &amp;model_id, const Teuchos::ParameterList &amp;models, const panzer::FieldLayoutLibrary &amp;fl, const Teuchos::RCP&lt; panzer::IntegrationRule &gt; &amp;ir, const Teuchos::ParameterList &amp;default_params, const Teuchos::ParameterList &amp;user_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>parseOutputList</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a42765c199a2d02da6e3eed92aab2d95f</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl, std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;blockIdToFields) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a6db001bec96fe1e8a1a86120f3503978</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>blockIdToCellAvgFields_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a8ee254da6fd06afcf50fcc1cf89f8774</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>blockIdToCellAvgVectors_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>acc37697981090716174bc903fc551551</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>blockIdToCellFields_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a28a354323806f906b83d0b3bc3421cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>blockIdToNodalFields_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>aa3939e3a403da4e73f440bb1a75c6a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, bool &gt;</type>
      <name>blockIdEvaluated_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a85dccffc77a0b6e64e880e71c7aac5c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ClosureModelFactory&lt; EvalT &gt; &gt;</type>
      <name>userCMF_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory.html</anchorfile>
      <anchor>a132bc25fb3d7134cf7ea3a2d90a42697</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::IOClosureModelFactory_TemplateBuilder</name>
    <filename>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</filename>
    <templarg>TraitsT</templarg>
    <member kind="function">
      <type></type>
      <name>IOClosureModelFactory_TemplateBuilder</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a9c2e6dff988d87e3a1ba7cf0b32e0f39</anchor>
      <arglist>(const panzer::ClosureModelFactory_TemplateManager&lt; TraitsT &gt; &amp;cmf_tm, const Teuchos::RCP&lt; STK_Interface &gt; &amp;mesh, const Teuchos::ParameterList &amp;outputList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>IOClosureModelFactory_TemplateBuilder</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>aa8b65805d78c73c5fc37a6dbc25e9880</anchor>
      <arglist>(const panzer::ClosureModelFactory_TemplateManager&lt; TraitsT &gt; &amp;cmf_tm, const Teuchos::RCP&lt; STK_Interface &gt; &amp;mesh, const std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;nodalFields, const std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;cellFields)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ClosureModelFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a22eb481b70fe7bb9654057d5712d4cf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const panzer::ClosureModelFactory_TemplateManager&lt; TraitsT &gt; &amp;</type>
      <name>cmf_tm_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a7008d1bd38a0467727180f39a50ff7dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>aefdc7697590efc27707794641174e546</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList</type>
      <name>outputList_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a426f0ef28909ef68f1c9fffcca18e91b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>nodalFields_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a7ca9143ef7634146a70acf53f3db251a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>cellFields_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a0ce7e2e23d07dc0eb0fe0c41d73f905b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>plConstr_</name>
      <anchorfile>classpanzer__stk_1_1IOClosureModelFactory__TemplateBuilder.html</anchorfile>
      <anchor>a9b6ab63bb4e562bc1570a1f87ee0fe6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits::Jacobian</name>
    <filename>structpanzer_1_1Traits_1_1Jacobian.html</filename>
    <member kind="typedef">
      <type>FadType</type>
      <name>ScalarT</name>
      <anchorfile>structpanzer_1_1Traits_1_1Jacobian.html</anchorfile>
      <anchor>ac105a3e775f64b5684921d1c1a9efdde</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LessBC</name>
    <filename>structpanzer_1_1LessBC.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1LessBC.html</anchorfile>
      <anchor>a7613dd2d8af14cf1e6359532f7fdcfa7</anchor>
      <arglist>(const panzer::BC &amp;left, const panzer::BC &amp;right) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LessSide</name>
    <filename>structpanzer_1_1LessSide.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1LessSide.html</anchorfile>
      <anchor>a8256ad5d302a2d70d6cfd89e777c339c</anchor>
      <arglist>(const SideId &amp;left, const SideId right) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::FieldAggPattern::LessThan</name>
    <filename>structpanzer_1_1FieldAggPattern_1_1LessThan.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1FieldAggPattern_1_1LessThan.html</anchorfile>
      <anchor>a839aa8c527a08c345e55a1ef369b2fec</anchor>
      <arglist>(const Teuchos::Tuple&lt; int, 3 &gt; &amp;a, const Teuchos::Tuple&lt; int, 3 &gt; &amp;b) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::BlockedDOFManager::LessThan</name>
    <filename>structpanzer_1_1BlockedDOFManager_1_1LessThan.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1BlockedDOFManager_1_1LessThan.html</anchorfile>
      <anchor>a093b4af95350892855198efa6d863f89</anchor>
      <arglist>(const Teuchos::Tuple&lt; int, 3 &gt; &amp;a, const Teuchos::Tuple&lt; int, 3 &gt; &amp;b) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::LinearObjContainer</name>
    <filename>classpanzer_1_1LinearObjContainer.html</filename>
    <base>panzer::GlobalEvaluationData_Default</base>
    <member kind="enumeration">
      <type></type>
      <name>Members</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620ae9b59d14e8d22b808782829714afca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DxDt</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a2cae985953ec160a5c5550bf21a39fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a2f6e4c7846134a95dcbec2dcbc587837</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mat</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a3dc95d734492f26f1358ed7db944e163</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>X</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620ae9b59d14e8d22b808782829714afca69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DxDt</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a2cae985953ec160a5c5550bf21a39fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>F</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a2f6e4c7846134a95dcbec2dcbc587837</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Mat</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>a170960cb3593e4f53ee768a7f7421620a3dc95d734492f26f1358ed7db944e163</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearObjContainer</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>ac264fcc66f01c1727eef0e58619cdac0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1LinearObjContainer.html</anchorfile>
      <anchor>aa1858039657edc870fa701e0b3264358</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::LinearObjFactory</name>
    <filename>classpanzer_1_1LinearObjFactory.html</filename>
    <templarg>Traits</templarg>
    <class kind="struct">panzer::LinearObjFactory::Gather_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherDomain_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherOrientation_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::GatherTangent_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::Scatter_Builder</class>
    <class kind="struct">panzer::LinearObjFactory::ScatterDirichlet_Builder</class>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearObjFactory</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a816c8e5cb67c559333c132f44faeee88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGatherScatterEvaluators</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>acda608f4ccde751a39b5a19791533f00</anchor>
      <arglist>(const BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readVector</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>ac83d1b304f25105b9cc23ae8db819181</anchor>
      <arglist>(const std::string &amp;identifier, LinearObjContainer &amp;loc, int id) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>writeVector</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a0f13357d042d4b1af1f55d7f4fb597d4</anchor>
      <arglist>(const std::string &amp;identifier, const LinearObjContainer &amp;loc, int id) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildLinearObjContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a62a697b3467557b355b0533cc5b67151</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveLinearObjContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a377d9dc2859583df73cf95b9458b6c59</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>ad10bccdac2c906b16ef90c5a54269d7d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>af6e35d9368544ee63153141113639451</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>buildDomainContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>acdbe7594f2602e1f89a03b8b065ad973</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>globalToGhostContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>ac73091b1ad0d2632ff137bc13e9c0be1</anchor>
      <arglist>(const LinearObjContainer &amp;container, LinearObjContainer &amp;ghostContainer, int) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ghostToGlobalContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a76dd6ea240acb848c50db9b1b037e1ad</anchor>
      <arglist>(const LinearObjContainer &amp;ghostContainer, LinearObjContainer &amp;container, int) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>af8d8a2407d6e2518016eef3e482b97d0</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a6cdf63a1585b05a9607ea2ffa134148a</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a8ed9c760f820c86f51d555c7f19884da</anchor>
      <arglist>(const LinearObjContainer &amp;localBCRows, const LinearObjContainer &amp;globalBCRows, LinearObjContainer &amp;ghostedObjs, bool zeroVectorRows=false, bool adjustX=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>addd9a1fd61722c4109d3e99f217c1cdb</anchor>
      <arglist>(const LinearObjContainer &amp;counter, LinearObjContainer &amp;result) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::MpiComm&lt; int &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>aec543938b3668d8570e1fffaeeeb1f4a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildScatter</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a9e1411293dd63fc28250a9600cc454f1</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildGather</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>adcbac3ae9a58502b0f39a91a294f7b8e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildGatherTangent</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a5481c3ee1204f132f4c663254ebe9589</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildGatherDomain</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a0771ab4f920eb3920c5e3879ff89afb2</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildGatherOrientation</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a2f40566e0c27fbb6ad3d82cf88d18bec</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>buildScatterDirichlet</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>aed54184cd7f5c81eff9a5ea3f4040ef8</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>PANZER_DEPRECATED Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getUniqueGlobalIndexerBase</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a9a856c1a565c1833af476ee4b1f2df2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getDomainGlobalIndexer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>aae01064bcee50ea931d62d40add5b48e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getRangeGlobalIndexer</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>acb6c23276f80a9726a59c482cc29eff5</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginFill</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a40cf30b1de9b0e8e31116084d40bd099</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endFill</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>affb76605c35f31fa09d5b6852b9411d4</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>PHX::TemplateManager&lt; typename Traits::EvalTypes, panzer::CloneableEvaluator, PHX::EvaluatorDerived&lt; _, Traits &gt; &gt;</type>
      <name>Evaluator_TemplateManager</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a4ad2d552cba26dbc29be00e6cfff3315</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>scatterManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a35ebc4e20458d5ee9c85650f7c223d2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>scatterDirichletManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>aaa8207018dd53883d45f3f6e2e9a52e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>gatherManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a243a157721bf48154fa0a97f89ff7c62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>gatherTangentManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>ad5edb1a03c5b9fac49661710ffa8fa15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>gatherDomainManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a76549c32115b5125452911a6dec167d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Evaluator_TemplateManager &gt;</type>
      <name>gatherOrientManager_</name>
      <anchorfile>classpanzer_1_1LinearObjFactory.html</anchorfile>
      <anchor>a7b2326e62629548334b326e8c4334b31</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::LineMeshFactory</name>
    <filename>classpanzer__stk_1_1LineMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>LineMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a0739ea0d860ef93125fbf161e57c6c93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LineMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>aece73457959366413b62d49c7dd469ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>ac3668b75c48999790ed5a39a3bc5cdc5</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a474e70f721407e3e8e562ffb94c0cbc9</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a94d292b0038ad4b9d79b8bbf892ef8e1</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>af0db013359fa5f9f5effa9972defcd66</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>ada0c63a8861391eae1417748d41362c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>aa829967380c6dc070f85673a1dd98a78</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>acec080ae1bc60df5653a82ceb8ed664c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a21328267d6cd8d804571d00301db6372</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a1de38d393a5d2b38b6959ba9646113a3</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a3510e8cc302df04434923881a30f46c5</anchor>
      <arglist>(stk::ParallelMachine machRank, int xBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>ad647439dd088a483d9f66b1ae54f2d5c</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a967e3cf3b0a9442339307eff1cefc052</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x0_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>abed62060431a92291c936dc5e67a2ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xf_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>abe076639d0d7d5f00f564bb66b910e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xBlocks_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a10022b4eb667662c4d8c55eabbac3bca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a4a44b63aa05521036f74c9faeccec3c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a5be07ba94439758226af1db5530d491a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>a3c821150baa29e837eecef03773fd190</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1LineMeshFactory.html</anchorfile>
      <anchor>aecbcb439a36a6c5fc2a8cb0051375eea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::STK_Interface::LocalIdCompare</name>
    <filename>classpanzer__stk_1_1STK__Interface_1_1LocalIdCompare.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalIdCompare</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface_1_1LocalIdCompare.html</anchorfile>
      <anchor>ab9cfa5bd1450e9562129ce8cbb12b63e</anchor>
      <arglist>(const STK_Interface *mesh)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface_1_1LocalIdCompare.html</anchorfile>
      <anchor>a97f9e469611a026529492c991f9aeade</anchor>
      <arglist>(stk::mesh::Entity a, stk::mesh::Entity b)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const STK_Interface *</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface_1_1LocalIdCompare.html</anchorfile>
      <anchor>a1a3f47ef8bdcd6d760392f7b576938e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::LocalIdCompare</name>
    <filename>classpanzer__stk_1_1LocalIdCompare.html</filename>
    <member kind="function">
      <type></type>
      <name>LocalIdCompare</name>
      <anchorfile>classpanzer__stk_1_1LocalIdCompare.html</anchorfile>
      <anchor>a1e29145f7982fa2e306ecc1c6c3bf2ea</anchor>
      <arglist>(const RCP&lt; const STK_Interface &gt; &amp;mesh)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classpanzer__stk_1_1LocalIdCompare.html</anchorfile>
      <anchor>a889619d5328d380188fdc2c713c52a3d</anchor>
      <arglist>(stk::mesh::Entity a, stk::mesh::Entity b)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1LocalIdCompare.html</anchorfile>
      <anchor>ab9ce227665b028366fee7781f7ca7756</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::LOCPair_GlobalEvaluationData</name>
    <filename>classpanzer_1_1LOCPair__GlobalEvaluationData.html</filename>
    <base>panzer::GlobalEvaluationData</base>
    <member kind="function">
      <type></type>
      <name>LOCPair_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a13edbb732e44799413bcbfe32bfa4a50</anchor>
      <arglist>(Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt; lof, int initParam)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a37ed6195436ce63f9d785fced65fc836</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a755f4b9293087ed105040058a7f53aca</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>ac7c822aede5600befd5171c6788f0acb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>getGhostedLOC</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a41051d6a6ef755b91f0b5f43d5efc57a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>getGlobalLOC</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>afe5a48f43a37a1d4324fa5e1212c2a1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a38b93bf6e41757584c7e32afd3380ec1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedLOC_</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a6be2eafdece5352822820438848b495d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>globalLOC_</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a7a71ee36fdeea428360277f24e9bd818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>lof_</name>
      <anchorfile>classpanzer_1_1LOCPair__GlobalEvaluationData.html</anchorfile>
      <anchor>a44ed7ee9a3c481200a1eca40b81e9fb4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::MassMatrixModelEvaluator</name>
    <filename>classpanzer_1_1MassMatrixModelEvaluator.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>setApplyMassInverse</name>
      <anchorfile>classpanzer_1_1MassMatrixModelEvaluator.html</anchorfile>
      <anchor>ad04f1ebb6605348411b7934f9ca4853e</anchor>
      <arglist>(const bool applyMassInverse) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyMassMatrix</name>
      <anchorfile>classpanzer_1_1MassMatrixModelEvaluator.html</anchorfile>
      <anchor>a9bab1032140f0966a52974663d63ad3f</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; input, const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; output) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>applyInverseMassMatrix</name>
      <anchorfile>classpanzer_1_1MassMatrixModelEvaluator.html</anchorfile>
      <anchor>a2b4b3f67b96e7f3b5164823a7bbba82c</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; input, const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; Scalar &gt; &gt; output) const  =0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>applyMassInverse_</name>
      <anchorfile>classpanzer_1_1MassMatrixModelEvaluator.html</anchorfile>
      <anchor>a7d07aeeb38451674c260061446cbf622</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::MaterialModelEntry</name>
    <filename>classpanzer_1_1MaterialModelEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>MaterialModelEntry</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a592b7317f2e8db87d236104d568e014a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MaterialModelEntry</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>af5eb2be764dfe5c0a7c6815bf435d3ad</anchor>
      <arglist>(const std::string factory_name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MaterialModelEntry</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>ab0e95b9042ff5437074086e304eacc9e</anchor>
      <arglist>(const std::string factory_name, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>factoryName</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a6cc8e131dfa665d9a62a27be00b4f84a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>params</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>ad9931d593de35e43761e75f8cc2625ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator=</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a5bd04e07165686316c6569823dac5426</anchor>
      <arglist>(const MaterialModelEntry &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a1ec92e01b8b0674ec6e41aa0f5da9377</anchor>
      <arglist>(const MaterialModelEntry &amp;e) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>ad4631808fd59de7f069d21d5785b6ace</anchor>
      <arglist>(const MaterialModelEntry &amp;e) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a4ad8f4c6bb8926ec4108f00b41f66ea0</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_factory_name</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a4c996457fa82448544869532f5480caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>m_params</name>
      <anchorfile>classpanzer_1_1MaterialModelEntry.html</anchorfile>
      <anchor>a718665a222f5fd09a4a12f0603054cfe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::MDFieldArrayFactory</name>
    <filename>classpanzer_1_1MDFieldArrayFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>MDFieldArrayFactory</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a4c4de654943e9ea956f0dd901205f84f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MDFieldArrayFactory</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a2af2dfbbbb6d1f62ba3d2858cbf7d7f7</anchor>
      <arglist>(const std::string &amp;prefix, bool allocArray=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MDFieldArrayFactory</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>acc267be3a9cdd4bcd7e6985952b049f1</anchor>
      <arglist>(const std::string &amp;prefix, const std::vector&lt; PHX::index_size_type &gt; &amp;ddims, bool allocArray=false)</arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a7d122cf98740091941aa99bcf3451f4b</anchor>
      <arglist>(const std::string &amp;str, int d0) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>aec08e361fb76b9ec58d63dcc6e25fd32</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a11183163f7ce3554cd9b01ebb70cb299</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a4a3f2afee01acaf39dc9b9a0e4844ac6</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar &gt;</type>
      <name>buildArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>aa3b90a3965f3bad2d01e0577388ca90d</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3, int d4) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar, T0 &gt;</type>
      <name>buildStaticArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>ae18e97eec6a179f6a467f2d13fc6f6eb</anchor>
      <arglist>(const std::string &amp;str, int d0) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar, T0, T1 &gt;</type>
      <name>buildStaticArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a77527643f76b6a0e431587db2bec138c</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar, T0, T1, T2 &gt;</type>
      <name>buildStaticArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a25512314f5fde5d6e94a04b5affc2033</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar, T0, T1, T2, T3 &gt;</type>
      <name>buildStaticArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a411319721227993517e7c15b0f49e5c2</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3) const </arglist>
    </member>
    <member kind="function">
      <type>PHX::MDField&lt; Scalar, T0, T1, T2, T3, T4 &gt;</type>
      <name>buildStaticArray</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a745d1f96ddf63767f2eb4e965c07810c</anchor>
      <arglist>(const std::string &amp;str, int d0, int d1, int d2, int d3, int d4) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>prefix_</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>ab87f745dbe18d36be94194625f072332</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allocArray_</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a6908b0e75050e52e53997f65b5df7ca1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::index_size_type &gt;</type>
      <name>ddims_</name>
      <anchorfile>classpanzer_1_1MDFieldArrayFactory.html</anchorfile>
      <anchor>a28918f5f4c925a3b65dcb5ade07198d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::MemUsage</name>
    <filename>structpanzer_1_1MemUsage.html</filename>
    <member kind="function">
      <type></type>
      <name>MemUsage</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>adb6da362585a8a010b2d873da4ed26d0</anchor>
      <arglist>(size_t currMin=0, size_t currMax=0, size_t currTot=0, size_t peakMin=0, size_t peakMax=0, size_t peakTot=0)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>operator+</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a37f7855c5b32a9b58b21bf651d9792cb</anchor>
      <arglist>(const MemUsage &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>operator-</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a9f187cfe5cbc27c0a5f5d593322004b3</anchor>
      <arglist>(const MemUsage &amp;that) const </arglist>
    </member>
    <member kind="function">
      <type>MemUsage &amp;</type>
      <name>operator*=</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a19d2dc8e2d66ffd540e6f46a87a4534b</anchor>
      <arglist>(const size_t &amp;that)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage &amp;</type>
      <name>operator/=</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>aadd16240db462233416a6616a7dfcb7a</anchor>
      <arglist>(const size_t &amp;that)</arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currMin</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>aada4e75dbaf6b3f011fc3c7feb725664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currMax</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>aef07282d4f5d7982c29bf5b89e5908ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>currTot</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>aabdcab0920618a063795d327e63a05a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>peakMin</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a15c7abc7de71b81e11708c928fdddb38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>peakMax</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a9a1c564639207111cf35581fc87213ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>peakTot</name>
      <anchorfile>structpanzer_1_1MemUsage.html</anchorfile>
      <anchor>a739cdacbd8bb975e05446b0f08ecc0e1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ModelEvaluator</name>
    <filename>classpanzer_1_1ModelEvaluator.html</filename>
    <templarg></templarg>
    <class kind="struct">panzer::ModelEvaluator::ParameterObject</class>
    <class kind="struct">panzer::ModelEvaluator::ResponseObject</class>
    <member kind="function">
      <type>void</type>
      <name>setupModel</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a138470070adbfdd5c2807d9a28cb0247</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; panzer::BC &gt; &amp;bcs, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;volume_cm_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;bc_cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, bool writeGraph=false, const std::string &amp;graphPrefix=&quot;&quot;, const Teuchos::ParameterList &amp;me_params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a9b0b0b98b048e89fb8d61cc4074627bc</anchor>
      <arglist>(const std::string &amp;name, const Scalar &amp;initial)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a0f4c6fd78df2404af4494b06c41b9ba4</anchor>
      <arglist>(const Teuchos::Array&lt; std::string &gt; &amp;names, const Teuchos::Array&lt; Scalar &gt; &amp;initialValues)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addDistributedParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a9f96a3a2842a7c21a11d5357cb28b996</anchor>
      <arglist>(const std::string &amp;name, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt; &amp;vs, const Teuchos::RCP&lt; GlobalEvaluationData &gt; &amp;ged, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;initial, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNonParameterGlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>af9165dbfd4037474650f257c7b7ef6b8</anchor>
      <arglist>(const std::string &amp;name, const Teuchos::RCP&lt; GlobalEvaluationData &gt; &amp;ged)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addFlexibleResponse</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac0f73ce9228bc29f944a8c39db5dd704</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkst_desc, const Teuchos::RCP&lt; ResponseMESupportBuilderBase &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>af88373d37e7eb5ecf3c627ff36f68e2c</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkst_desc, const ResponseEvaluatorFactory_BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponses</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>acc18166f3f6ecfa28bc5b4b927d60c74</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponses</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ae0a1e863cec87c09af53f5da07c65053</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildDistroParamDfDp_RL</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a31fc8b99714158b1a004fc9b2138a92d</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; panzer::BC &gt; &amp;bcs, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildDistroParamDgDp_RL</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>aa479aa0bf4366a1368464c28772b74c4</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; panzer::BC &gt; &amp;bcs, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOneTimeDirichletBeta</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ada5a9c22921977fb2a4089d0afe99079</anchor>
      <arglist>(const Scalar &amp;beta) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a6ff4521b8520ec3f4698caade770f186</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupAssemblyInArgs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a0f99e855eedd460e1771d774b753cd8d</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, panzer::AssemblyEngineInArgs &amp;ae_inargs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>getResponseLibrary</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>aa4c7adc18bf094d64a9b5f111f2ea4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXTangentVectorIndex</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac4a4796040369eb899e2fddadc124e37</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getXDotTangentVectorIndex</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac01e678b49e10ce9e067b9b152ddba85</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt;</type>
      <name>get_parameter_vector</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ad31a5b205aef0b43b0c4363181fa7f52</anchor>
      <arglist>(int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2gDx2</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ad39fbe99b73eecfcdc1bec234ddc4327</anchor>
      <arglist>(int rIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;D2gDx2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2gDp2</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a861ae7cacbfc156ac1e885b8e1db51ab</anchor>
      <arglist>(int rIndex, int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;D2gDp2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2gDpDx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a3a2402ba152e8ce624623166044c1872</anchor>
      <arglist>(int rIndex, int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;D2gDpDx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2gDxDp</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a39c8f86dbc9059e8ede61c050aedbf74</anchor>
      <arglist>(int rIndex, int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_p, const Teuchos::RCP&lt; Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;D2gDxDp) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2fDx2</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a5457197e7fd197635751d2899a456486</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt; &amp;D2fDx2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2fDp2</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac3fb5aaf5866a66ab9053659cfb9cc2c</anchor>
      <arglist>(int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt; &amp;D2fDp2) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2fDpDx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>abc2508bfb4e96ef2b5bb24879ec7b1b8</anchor>
      <arglist>(int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_x, const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt; &amp;D2fDpDx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel_D2fDxDp</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac393342b1dac139849da6ac19d1eb54f</anchor>
      <arglist>(int pIndex, const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;delta_p, const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt; &amp;D2fDxDp) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a00fa4e9c4d65828d38b50d8ec61c5362</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_g</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>af65daf326c6d0220aa8e2028cbeb2919</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dgdx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>aee8a64fdfb97d20c7387e18b4741ed81</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dgdp_scalar</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a4f1debad552c1b457b8b3615ecf89e78</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dgdp_distro</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a7a6d80949a07840284b864290949b507</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dfdp_scalar</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a0a22adbff34284a9f57e3579e44c17e1</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dfdp_scalar_fd</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a7adf11e99ee565180fc2c41af52b0ab3</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl_basic_dfdp_distro</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a508d01cdb4abf29813e932d0d32ba628</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_g</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ad1f5c9ddfbe7ff523c63a5d5e02aebbf</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_dgdx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a23a418b54720b3fae3ba892d573227a7</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_dgdp_scalar</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a0ed0af86836c9dd07fa52003dea8e9c5</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_dgdp_distro</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ae75a400b6fc31581399e9b538f643aea</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_dfdp_scalar</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a172d9bbdd15a3257000bd5babd6f2e83</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>required_basic_dfdp_distro</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a92f0391af5d33a1703ada6bd8c01a753</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeNominalValues</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a91bfd0f29fd1248d5b0286ca4840289a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a6af8cabddb1d6df990f28cb2e0b86762</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetParameters</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a1a5fd26f88a40929265414f22e68165f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; ParameterObject &gt;</type>
      <name>createScalarParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>aed9f386c001a267b7346eb3b07e13446</anchor>
      <arglist>(const Teuchos::Array&lt; std::string &gt; &amp;names, const Teuchos::Array&lt; Scalar &gt; &amp;in_values) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; ParameterObject &gt;</type>
      <name>createDistributedParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ade2703b42163046d11c5da18f947a098</anchor>
      <arglist>(const std::string &amp;key, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt; &amp;vs, const Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt; &amp;initial, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>t_init_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a30821f3b159ff45da648c9a07e1ab177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>x_space_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a5dd9942349a347080249e6ff912314cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>f_space_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a31ab6fdbc6683060de919316df7dfd8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>prototypeInArgs_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a74f51a0ddc8498599764872b40dfc6c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt;</type>
      <name>prototypeOutArgs_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a76092c7c97623ca43ec4b6767bcc50d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>nominalValues_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a623f2248bcadf2cbc89602f7863d97b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>panzer::AssemblyEngine_TemplateManager&lt; panzer::Traits &gt;</type>
      <name>ae_tm_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a4b078b1f302b626836026a5d408203b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; ParameterObject &gt; &gt;</type>
      <name>parameters_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a35a2de3bbc06ffae9f60e71e01d5566d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Thyra::VectorSpaceBase&lt; double &gt; &gt; &gt;</type>
      <name>tangent_space_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a48743c55b328004154713776da8529f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_me_parameters_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a969310797ca4ebb0df7ad8489f2601dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>do_fd_dfdp_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a73ad706c6e4774c50c7e0aba72f5533d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>fd_perturb_size_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a11b69786450ad89a32ca50ac254ebf50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>require_in_args_refresh_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a54f088fb52ca752e129035e268feba3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>require_out_args_refresh_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ae5fbbad36d257db27efde5580d0b4195</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>responseLibrary_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ae35afbe373a99daef56016f59543e6fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; ResponseObject &gt; &gt;</type>
      <name>responses_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a3a1c388129d7756a2cb31af250b16f2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>global_data_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>aee5276ef1d4a7c6a825f40fbc8104141</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>build_transient_support_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a960c93b6d9c9762a6638dfa3fc84d2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>lof_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>acaa63bfb7bd8d4f1660460fe0c7b58cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a166b32fd61da94d23b5811e760594a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>xContainer_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a1860c97122b326fc206f985e2d6c0ce4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>xdotContainer_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ada91a03a1984c89c2970b70ee0bbbea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::LinearOpWithSolveFactoryBase&lt; Scalar &gt; &gt;</type>
      <name>solverFactory_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a55af9b22c872c9648557d9f0b3eee2b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GlobalEvaluationDataContainer</type>
      <name>nonParamGlobalEvaluationData_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a78cace2d0047de3dd8f51b31edebfa79</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>GlobalEvaluationDataContainer</type>
      <name>distrParamGlobalEvaluationData_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ac409d999d256f73a5ae37d163063e11c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>oneTimeDirichletBeta_on_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a3751976c5edda2b0588c7861a0e792c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scalar</type>
      <name>oneTimeDirichletBeta_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a9dc9014921c57a32db29f7d39ed88edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelEvaluator</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a7c9194bf28f552b4e42e89a4bc5dc9fa</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; const Thyra::LinearOpWithSolveFactoryBase&lt; Scalar &gt; &gt; &amp;solverFactory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support, double t_init)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelEvaluator</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a5d7955de10f3451ec8856c4bce0762fe</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::RCP&lt; const Thyra::LinearOpWithSolveFactoryBase&lt; Scalar &gt; &gt; &amp;solverFactory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support, double t_init)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelEvaluator</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ada73a5f8975e1f1a841d5b0f05f1b641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>get_x_space</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a1b1dfff92122ee5b31598e626432f10c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>get_f_space</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ab3579039e12925a839a78e78ec1b8a24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a5bc9aedfb8d7984532e4c1d090aea501</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>get_p_space</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a15bfaf40eeebd9fd8d329eb914297120</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ArrayView&lt; const std::string &gt;</type>
      <name>get_g_names</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ab585a31d326a55886da3b4e0ef28d449</anchor>
      <arglist>(int i) const  override</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>get_g_name</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>ae7e2682b97513cd3e369bdf70929a9f9</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>get_g_space</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a09d84d19b53c2391fc12669ea0a15f82</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt;</type>
      <name>create_W_op</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a94588bb6c346e19d808893565155ca98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::LinearOpWithSolveFactoryBase&lt; Scalar &gt; &gt;</type>
      <name>get_W_factory</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a2744cfb697c59b49b3cd78582cee12f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; Scalar &gt; &gt;</type>
      <name>create_DfDp_op</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a5620fca944c060f2787bcc14cfcc48ba</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>createInArgs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a80c816ed0e7b5fd1aef09218f7600131</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt;</type>
      <name>getNominalValues</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a47d278c9b90a0795a6100989232d1b52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt;</type>
      <name>createOutArgsImpl</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>a8ba2dcbb20f1f758e41dd8bfc7cf719d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>evalModelImpl</name>
      <anchorfile>classpanzer_1_1ModelEvaluator.html</anchorfile>
      <anchor>af2abb3a34deffc82757eb6306d977c75</anchor>
      <arglist>(const Thyra::ModelEvaluatorBase::InArgs&lt; Scalar &gt; &amp;inArgs, const Thyra::ModelEvaluatorBase::OutArgs&lt; Scalar &gt; &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ModelEvaluator_Epetra</name>
    <filename>classpanzer_1_1ModelEvaluator__Epetra.html</filename>
    <base>EpetraExt::ModelEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ModelEvaluator_Epetra</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ad652d48a80d07437f9e401143e1bba87</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ModelEvaluator_Epetra</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a5fa091ac8f1894a987d46eacdda4d709</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; panzer::EpetraLinearObjFactory&lt; panzer::Traits, int &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_t_init</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ab2206ff2b0106fb2cd831c9ae45fe89f</anchor>
      <arglist>(double t)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>getResponseLibrary</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a8e6267b425e2f1ea074885aa8cddf922</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOneTimeDirichletBeta</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a3354babe30116148fc8424d2715877a4</anchor>
      <arglist>(const double &amp;beta) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a8452c7c4bd605b2cdb4f7170a59a05cb</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;x, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;f) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeEpetraObjs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ad0a391d18c6f13fd205a83a7521f1958</anchor>
      <arglist>(panzer::EpetraLinearObjFactory&lt; panzer::Traits, int &gt; &amp;lof)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeParameterVector</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a99c09cabc9a24a189018aface0b7935d</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; panzer::ParamLib &gt; &amp;parameter_library)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalModel_basic</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a9b04f34fd79b7803c536557378c534da</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalModel_basic_g</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a59762e0e04e0d215e6977b5ab53aa51b</anchor>
      <arglist>(AssemblyEngineInArgs ae_inargs, const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalModel_basic_dgdx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a4437fc83aa7de1e3734062823211a7aa</anchor>
      <arglist>(AssemblyEngineInArgs ae_inargs, const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>evalModel_basic_dfdp</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>adb8ea400c709a311f70946093a0066c2</anchor>
      <arglist>(AssemblyEngineInArgs ae_inargs, const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>required_basic_g</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ac78a5b116eedc455f175df83fdc20793</anchor>
      <arglist>(const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>required_basic_dgdx</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a4e18a80f9c7cbac88a467077d0a9c857</anchor>
      <arglist>(const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>required_basic_dfdp</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a42a892058e68264c43dee84160d10020</anchor>
      <arglist>(const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copyEpetraIntoThyra</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a97f0fc77d4e909ac8ad61dcfe8ca3126</anchor>
      <arglist>(const Epetra_MultiVector &amp;x, const Teuchos::Ptr&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;thyraVec) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>copyThyraIntoEpetra</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>afaae9291f2d6192e99c45c02146844d9</anchor>
      <arglist>(const Thyra::VectorBase&lt; double &gt; &amp;thyraVec, Epetra_MultiVector &amp;x) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>map_x_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>ga098b9a4add348fb8305a44f6354ac13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x0_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gaa18150eeb14dc8a3b562a75956ca543e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_dot_init_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gad0302bc0e1e042f0ed56325e3f8fbb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>t_init_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gaffd7b66ba82375d71f79f07d94cfa998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dummy_f_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gab646823df3bcce79ba076075688ab079</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt;</type>
      <name>fmb_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a6ac1a01d743611c0e52f40694743cd93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>panzer::AssemblyEngine_TemplateManager&lt; panzer::Traits &gt;</type>
      <name>ae_tm_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>aae73cce16d17d58788c718b7b5164977</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>responseLibrary_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>af139595f995f9037714ef0d785ded9e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>g_map_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ac82beeb7ec4af20d348f02ff25cb062f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>g_names_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ac06404dcd6d4ff5895f0dca2bec2dc9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Map &gt; &gt;</type>
      <name>p_map_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a7cf778717d193dda2dc5e368706d0558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>p_init_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>abb673aa7a299ab3f9c947da2ed77eedf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt;</type>
      <name>p_names_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ae529b76968ba33c78ee32ef0a7a35994</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::Array&lt; panzer::ParamVec &gt;</type>
      <name>parameter_vector_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>afb4ffd716b6877651b56469f60e4fed4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>global_data_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>aab22227515b7787f08fbd436f9c14387</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>build_transient_support_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>add12b40557a17541f09ce47a0af3282b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; bool &gt;</type>
      <name>is_distributed_parameter_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ac1627bfa769c51ba89ecbed9bf76264c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::tuple&lt; std::string, int, Teuchos::RCP&lt; Epetra_Import &gt;, Teuchos::RCP&lt; Epetra_Vector &gt; &gt; &gt;</type>
      <name>distributed_parameter_container_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ab0cc46bbfb0c9a2a8a8e8246ca4c4a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>lof_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a443ecafdbe8f59a0c4ff8d5e23838a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a1c070b95782e959f1865029d50b1afe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::AbstractFactory&lt; Epetra_Operator &gt; &gt;</type>
      <name>epetraOperatorFactory_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a026bb887af03b55595c23180b8e43221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>oneTimeDirichletBeta_on_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>aa2d0d47f123dff237455091b5771c814</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>oneTimeDirichletBeta_</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a774e2ee65cde3e89ef6789438e4e6364</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a884ddf647f4f637b91792829d77133c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a958cce1bf4de7b7536a1c21fd823d184</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a46228cbaf7123a6326ec376dce5b2d5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_dot_init</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a7974cc61ac6ad43ead578c67e7e14e8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>get_t_init</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a9fa31a4afa0767bba983b7dc1930c0e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ad403c3d190e9f834120e8588c0f70af0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a8919b20b086d2b8d5eab1e8b25108c02</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a27549b6b1fbb8873090e9e1d8776258a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>abfb175e51453bb6511470a70f738e14c</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>aa41d2df6fe39208be382da2d3d54c04e</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ad9c1e3dfbac403e874b2da8fada8e19d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a4caa6c6f4643b8dd1b712b8a01bad602</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a10ec94cc68bc8ff1b670cafad1611c78</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addDistributedParameter</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a504d3b7012eac7832a7a92c4301ec873</anchor>
      <arglist>(const std::string name, const Teuchos::RCP&lt; Epetra_Map &gt; &amp;global_map, const Teuchos::RCP&lt; Epetra_Import &gt; &amp;importer, const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;ghosted_vector)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>a5bc4e8e278235d464b0926ecd734fd3c</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkst_desc, const ResponseEvaluatorFactory_BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponses</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>aa9ddd585477d2fa81e6995d9fb7e05db</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponses</name>
      <anchorfile>classpanzer_1_1ModelEvaluator__Epetra.html</anchorfile>
      <anchor>ad6c8bfc7212b3355cf73ddaf59a0426c</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::ModelEvaluatorFactory</name>
    <filename>classpanzer__stk_1_1ModelEvaluatorFactory.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>buildObjects</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a4e885b9ab5eb2f56d5f13824ec2c0d83</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; const panzer::EquationSetFactory &gt; &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, bool meConstructionOn=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>getPhysicsModelEvaluator</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ab9af337fe665e88ee5f6dbf2f2218f41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUserWorksetFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>aad098767e531ed89c98865466c51144d</anchor>
      <arglist>(Teuchos::RCP&lt; panzer_stk::WorksetFactory &gt; &amp;user_wkst_factory)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>getResponseLibrary</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a0fa2a216e00a4851efd66a527b511f01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;</type>
      <name>getPhysicsBlocks</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a5547ce2604af6741ed3bd47a308098d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer_stk::STK_Interface &gt;</type>
      <name>getMesh</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a83505a582dfa5a2e078870e2de88f6db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ad8e169f3c317e56ec79ca75e851d35fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt;</type>
      <name>getConnManager</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a3401fc76cc826246258c03306d281350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isBlockedAssembly</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a075d805055b7e8d0447ea3eed4e24512</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>getLinearObjFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a3d8c034b15bd19da0971e78461ab414b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTransient</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a145ae8a287b498c540796711186c03d2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; double &gt; &gt;</type>
      <name>cloneWithNewPhysicsBlocks</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a08d14f7346a2f78657bc47f5c2dd160e</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; ScalarT &gt; &gt; &amp;solverFactory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;physics_block_plist, const Teuchos::RCP&lt; const panzer::EquationSetFactory &gt; &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;user_cm_factory, bool is_transient, bool is_explicit, const Teuchos::Ptr&lt; const Teuchos::ParameterList &gt; &amp;bc_list=Teuchos::null, const Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt; &amp;physics_me=Teuchos::null) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupInitialConditions</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>adef3896f5979a9622670cccf1fe2875a</anchor>
      <arglist>(Thyra::ModelEvaluator&lt; ScalarT &gt; &amp;model, panzer::WorksetContainer &amp;wkstContainer, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;initial_cond_pl, const Teuchos::ParameterList &amp;user_data_pl, bool write_dot_files, const std::string &amp;dot_file_prefix) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeInitialConditions</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a8de2f97ef043def460196297f81da09f</anchor>
      <arglist>(const Thyra::ModelEvaluator&lt; ScalarT &gt; &amp;model, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;ugi, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::RCP&lt; panzer_stk::STK_Interface &gt; &amp;mesh, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_model_pl, const Teuchos::ParameterList &amp;user_data_pl, int workset_size) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluatorDefaultBase&lt; double &gt; &gt;</type>
      <name>buildPhysicsModelEvaluator</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ac42c84e346b4c749e6c5907c0248d8a9</anchor>
      <arglist>(bool buildThyraME, const Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; ScalarT &gt; &gt; &amp;solverFactory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool is_transient, double t_init) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useDynamicCoordinates</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a3fc4b1c85dffbeb8c5a6697ded6c96ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialTime</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a336866fe503abfae13519a5e48acdc77</anchor>
      <arglist>(Teuchos::ParameterList &amp;transient_ic_params, const panzer_stk::STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a043407f6c7b355677ea4589a5c1d3ed8</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt; &amp;conn_manager, const Teuchos::RCP&lt; panzer_stk::STK_Interface &gt; &amp;mesh, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::WorksetContainer &gt;</type>
      <name>getWorksetContainer</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>af74e1552ac3ea9b952b3ddf2e89440b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addUserFieldsToMesh</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ab69b47b3f20de6ff39632926fc5e72c6</anchor>
      <arglist>(panzer_stk::STK_Interface &amp;mesh, const Teuchos::ParameterList &amp;output_list) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_MeshFactory &gt;</type>
      <name>buildSTKMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>aee6e1941a9e9b11da7ce4e9926812947</anchor>
      <arglist>(const Teuchos::ParameterList &amp;mesh_params) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>finalizeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a32898dcba9842c56c5eb590e86addd96</anchor>
      <arglist>(const STK_MeshFactory &amp;mesh_factory, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::MpiComm&lt; int &gt; mpi_comm, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::FieldManagerBuilder &gt;</type>
      <name>buildFieldManagerBuilder</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>aebabb16eaa806da3319eeb5645b48e42</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; panzer::BC &gt; &amp;bcs, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;volume_cm_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;bc_cm_factory, const Teuchos::ParameterList &amp;closure_models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data, bool writeGraph, const std::string &amp;graphPrefix, bool write_field_managers, const std::string &amp;field_manager_prefix) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>initializeSolnWriterResponseLibrary</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a1b5e96bd9b3cfb1ec80a7268a8449449</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::WorksetContainer &gt; &amp;wc, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;ugi, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::RCP&lt; panzer_stk::STK_Interface &gt; &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>finalizeSolnWriterResponseLibrary</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a36bb8a6fb2b3cd1eb6a4414cd7f3ce7d</anchor>
      <arglist>(panzer::ResponseLibrary&lt; panzer::Traits &gt; &amp;rl, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, int workset_size, Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>m_physics_me</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>af70c53400f678bda86432d5ccc4712be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>m_rome_me</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ab965048b3222deb4d1eb59d4efdbec82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>m_response_library</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a660b07fe0524ac07d9b0263e5ce29bb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt;</type>
      <name>m_physics_blocks</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ab5fe83b94475c4984f5251f22d87b465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer_stk::STK_Interface &gt;</type>
      <name>m_mesh</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a399f475e3bb71987aac851605656377d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>m_global_indexer</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a11086ae6fa6345e2e2a7855b6fba997f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt;</type>
      <name>m_conn_manager</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>aa1a219f4500bee83f06c26ff0d70f1ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>m_lin_obj_factory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>acce25b70055c5e79ebd5773f4b7010c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>m_global_data</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ad590bcb30a1cdb26c64ddbfa945617cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDiscreteAdjoint</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>abda29574bb60e09c466df8d2ad19683f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_is_transient</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a4211304c20e308f66d605459cc3b2fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>m_blockedAssembly</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a04411149006b39845aece65673be533a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::EquationSetFactory &gt;</type>
      <name>m_eqset_factory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a642420089118306c44937c1611f96e19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer_stk::NOXObserverFactory &gt;</type>
      <name>m_nox_observer_factory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a37e7bcffce51e7a16b4dc2bbe00b5c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer_stk::RythmosObserverFactory &gt;</type>
      <name>m_rythmos_observer_factory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>ad3552984e6002bb5b94ba68d2f81ad09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer_stk::WorksetFactory &gt;</type>
      <name>m_user_wkst_factory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a28f8712152cc6d919fc65bb17dd42585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::WorksetContainer &gt;</type>
      <name>m_wkstContainer</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a992a65c71d3e6e258ec61b861358f5c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDynamicCoordinates_</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a7bac38effffd9ed06f7705f24ef2d188</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a8bfc78cb163c10b4dfacec59823c91b4</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a89828830da3b6759711a106d0fce3c2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setNOXObserverFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>addb163c8621b9759c3960031532d55bc</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer_stk::NOXObserverFactory &gt; &amp;nox_observer_factory)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRythmosObserverFactory</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a266e67f04fe0ae70c182cee4c082267b</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer_stk::RythmosObserverFactory &gt; &amp;rythmos_observer_factory)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>addResponse</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>aecd0bd5117ae8d5309821f20cf3d1ebd</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; panzer::WorksetDescriptor &gt; &amp;wkstDesc, const BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponses</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a7c3fd3483ee1ee80d8bdcebd56db4955</anchor>
      <arglist>(const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>getResponseOnlyModelEvaluator</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a45a54b785b754cd5a36784d49c21bf63</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>buildResponseOnlyModelEvaluator</name>
      <anchorfile>classpanzer__stk_1_1ModelEvaluatorFactory.html</anchorfile>
      <anchor>a3caf9a13ffccb7ab6fc0d4fa4916cd85</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt; &amp;thyra_me, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; Piro::RythmosSolver&lt; ScalarT &gt; &gt; rythmosSolver=Teuchos::null, const Teuchos::Ptr&lt; const panzer_stk::NOXObserverFactory &gt; &amp;in_nox_observer_factory=Teuchos::null, const Teuchos::Ptr&lt; const panzer_stk::RythmosObserverFactory &gt; &amp;in_rythmos_observer_factory=Teuchos::null)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::MultiBlockMeshFactory</name>
    <filename>classpanzer__stk_1_1MultiBlockMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>MultiBlockMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>ad355dc42e0576facacb3a88d891683f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiBlockMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a19969b91bf8eae4e98f515a48ca72d21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>af4944973b7644aaa84499390bf457d3a</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>aa06b15b7beef2287d0a53c1f950b1173</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>ab6543148d5c93367025adc6676c2956d</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a21eb52416728a13acf990240038af107</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>ab7555dfb88ee6e368ec196dcc7f22535</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a24e4d931dc1d88aa87efd927faae82f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a7dc65b73e9f958dca0520a9cc8d5d971</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a41937ce8aba85100a6449f008f8f4bfd</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a88cb6951da8df01253fdaf608837286a</anchor>
      <arglist>(stk::ParallelMachine parallelMach, int xBlock, int yBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a8f62c92906ba12b7bb6c89cf5307b7af</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineYElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>acc5149d230410264e5cb37fcbf59a38a</anchor>
      <arglist>(int yBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>aacfcd6ef1567a438e71e712273fcaa7e</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a473a0621644cb60a2229e3c053945dfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nYElems_</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a17f146e307479492243b01e452b6d293</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>a0b051b7fd5f785bb1573a0e8fc7f442c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1MultiBlockMeshFactory.html</anchorfile>
      <anchor>aab77c747e1fd4157527feaa6795e334c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::MultiVariateParameter</name>
    <filename>classpanzer_1_1MultiVariateParameter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>MultiVariateParameter</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>af97519c222346538dbae00fbb18ed132</anchor>
      <arglist>(const std::string parameter_name, const int num_param, const std::string field_name, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout, panzer::ParamLib &amp;param_lib)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>a41fac1749363c36836a5069ceb4146db</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>af4d6e52a3301507065d89168b983f3c0</anchor>
      <arglist>(typename TRAITS::EvalData ud)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>a8dd1e58f398989e106523173729d7563</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>target_field</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>add5443a21fb5b08fde994c84fda19b8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>cell_data_size</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>a5988ea08c22500511122455afa5c2d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvalT &gt; &gt; &gt;</type>
      <name>param</name>
      <anchorfile>classpanzer_1_1MultiVariateParameter.html</anchorfile>
      <anchor>a4f4c0642309432588f4a4499815b762f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::NodalFieldPattern</name>
    <filename>classpanzer_1_1NodalFieldPattern.html</filename>
    <base>panzer::FieldPattern</base>
    <member kind="function">
      <type></type>
      <name>NodalFieldPattern</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>ad4559991e781052d47b9f04d38e91c00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NodalFieldPattern</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a262f7b356f89e82beed9d3edfca58053</anchor>
      <arglist>(const shards::CellTopology &amp;ct)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NodalFieldPattern</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>ab33ccf2444631ee1c28dc7ae1825207a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCellTopology</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a1a0d7ec53955db2d8496b2054d983cc2</anchor>
      <arglist>(const shards::CellTopology &amp;ct)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSubcellCount</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a4bc652d6e94b90b86e8e9732e2b68689</anchor>
      <arglist>(int dim) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a676f33c8615571577982db2371ce38a5</anchor>
      <arglist>(int dim, int cellIndex) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSubcellClosureIndices</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a9dda9d4bee9b3c85f6c3f2d26533e05e</anchor>
      <arglist>(int dim, int cellIndex, std::vector&lt; int &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getDimension</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>ac8f8ef50b42932fd93ca3960f92f4b0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual shards::CellTopology</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a80bf8ca408ae61e120ea94980963af91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>shards::CellTopology</type>
      <name>cellTopo_</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a4bbb6b3a866e5cea4353862e1e6050f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::vector&lt; int &gt; &gt;</type>
      <name>nodeIndices_</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a08286556d9ee05d1493274754c0364bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>empty_</name>
      <anchorfile>classpanzer_1_1NodalFieldPattern.html</anchorfile>
      <anchor>a245e78d65a0e41f172303d11ece24fa5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::NoScalarsTag</name>
    <filename>structpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4_1_1NoScalarsTag.html</filename>
  </compound>
  <compound kind="struct">
    <name>panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;::NoSeed</name>
    <filename>structpanzer_1_1GatherSolution__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4_1_1NoSeed.html</filename>
  </compound>
  <compound kind="class">
    <name>panzer_stk::NOXObserverFactory</name>
    <filename>classpanzer__stk_1_1NOXObserverFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NOXObserverFactory</name>
      <anchorfile>classpanzer__stk_1_1NOXObserverFactory.html</anchorfile>
      <anchor>a32662724767a38b52f2208211333f14f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; NOX::Abstract::PrePostOperator &gt;</type>
      <name>buildNOXObserver</name>
      <anchorfile>classpanzer__stk_1_1NOXObserverFactory.html</anchorfile>
      <anchor>a5e81aa722b5d63a4a0291c304b464da4</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer_stk::STK_Interface &gt; &amp;mesh, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;dof_manager, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::OrientationContainer</name>
    <filename>classpanzer_1_1OrientationContainer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::OrientationContainerBase</base>
    <member kind="function">
      <type></type>
      <name>OrientationContainer</name>
      <anchorfile>classpanzer_1_1OrientationContainer.html</anchorfile>
      <anchor>a12de6cefb555fe84b0f977f5e1e13aef</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LocalOrdinal, GlobalOrdinal &gt; &gt; &amp;globalIndexer, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrientationContainer</name>
      <anchorfile>classpanzer_1_1OrientationContainer.html</anchorfile>
      <anchor>adb5da4a002d0d7eeb050ed1dd305ef9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOrientations</name>
      <anchorfile>classpanzer_1_1OrientationContainer.html</anchorfile>
      <anchor>aa8fe9c328aabffc7fe20128349f030c5</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; std::size_t &gt; &amp;cell_local_ids, Array &amp;orientations) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LocalOrdinal, GlobalOrdinal &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1OrientationContainer.html</anchorfile>
      <anchor>a3224f8e886c0d6358dcbbbcd52d84132</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>fieldName_</name>
      <anchorfile>classpanzer_1_1OrientationContainer.html</anchorfile>
      <anchor>a2a033a19983646ee6502348d522e9388</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::OrientationContainerBase</name>
    <filename>classpanzer_1_1OrientationContainerBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrientationContainerBase</name>
      <anchorfile>classpanzer_1_1OrientationContainerBase.html</anchorfile>
      <anchor>a72bb7bae629280b2414b7dbcb9984dbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getOrientations</name>
      <anchorfile>classpanzer_1_1OrientationContainerBase.html</anchorfile>
      <anchor>ae692e86483618fcbf7c832ff8be35318</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; std::size_t &gt; &amp;cell_local_ids, Array &amp;orientations) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::OutputStream</name>
    <filename>classpanzer_1_1OutputStream.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OutputStream</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a6582d1038a9d3b5475390838cbec966c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setOStream</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a1dd887b0eef85f60fec3db64e5c11c0c</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;os)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>getOStream</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a5c40509e8f308ecbcd737fe2882c3156</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::FancyOStream &amp;</type>
      <name>out</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>aa02bfa5efe3033360942f1adb8ac6557</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::FancyOStream &amp;</type>
      <name>pout</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a6a1f3737ce66f0d359c9877302e8c733</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVerbosityLevel</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a715f23066216ca69f0a611ba6f5af4d9</anchor>
      <arglist>(EVerbosityLevel vl)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual EVerbosityLevel</type>
      <name>getVerbosityLevel</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a761c83953635257d1433bd02da5ce37e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>doOutput</name>
      <anchorfile>classpanzer_1_1OutputStream.html</anchorfile>
      <anchor>a69c8aee0f59a4a9c61c2d2d014eda489</anchor>
      <arglist>(EVerbosityLevel vl, bool only_for_exact_level=false) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::OutputStreamDefaultImpl</name>
    <filename>classpanzer_1_1OutputStreamDefaultImpl.html</filename>
    <base>panzer::OutputStream</base>
    <member kind="function">
      <type></type>
      <name>OutputStreamDefaultImpl</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a9b89bfde640c880ec0ce0d5c2be70d7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OutputStreamDefaultImpl</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>aa75d91a8e27304ebf13d66a27af6305f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOStream</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a009db96cbbb004664e4727de86dc8fd2</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>getOStream</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>ac562f10d9ad69fd4e0226fa657427be4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::FancyOStream &amp;</type>
      <name>out</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a67a8725e6929da3102c4461fb5987d8f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::FancyOStream &amp;</type>
      <name>pout</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a3471ca83cd0696472cc28c01f3343df0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbosityLevel</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a9662f67cf2f84be823e8c92b6db0693e</anchor>
      <arglist>(EVerbosityLevel vl)</arglist>
    </member>
    <member kind="function">
      <type>EVerbosityLevel</type>
      <name>getVerbosityLevel</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>acdfa404e23b01a076bf71a97260fa5ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>doOutput</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a8892ecf290937cf43383472d6a67e2b6</anchor>
      <arglist>(EVerbosityLevel vl, bool only_for_exact_level=false) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>m_out</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a3c1e3bbdc29cd68cc8982bbd41ca453f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::FancyOStream &gt;</type>
      <name>m_pout</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a003c32961fd18a1b1887dcc93a6b9c8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>m_level</name>
      <anchorfile>classpanzer_1_1OutputStreamDefaultImpl.html</anchorfile>
      <anchor>a6bce7a99fbabdc6c9b74b5c1ff1a898a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ResponseLibrary::Overloader</name>
    <filename>structpanzer_1_1ResponseLibrary_1_1Overloader.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>panzer::pair_hash</name>
    <filename>structpanzer_1_1pair__hash.html</filename>
    <member kind="function">
      <type>std::size_t</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1pair__hash.html</anchorfile>
      <anchor>a9f3e4568996f652843453a74b65cd889</anchor>
      <arglist>(const std::pair&lt; T1, T2 &gt; &amp;v) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::PanzerSumTag</name>
    <filename>structpanzer_1_1PanzerSumTag.html</filename>
    <templarg>RANK</templarg>
  </compound>
  <compound kind="class">
    <name>panzer::PAPICounter</name>
    <filename>classpanzer_1_1PAPICounter.html</filename>
    <class kind="struct">panzer::PAPICounter::InternalCounter</class>
    <member kind="function">
      <type></type>
      <name>PAPICounter</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>a74b355acef1c1d3055d9fadcc8f8a406</anchor>
      <arglist>(const std::string, const int my_rank, MPI_Comm comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>abf119e40576c89fd774e17e019aa5450</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>stop</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>a39d7057f40d158c19a156eda74e6af92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>report</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>a3efe1233eb7f6cabed4705ecba6fa181</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>ac65ddd5134ce4d0ed71ee9a1eb18a216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>m_rank</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>a43171ed0800006b0e6015493840a4828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MPI_Comm</type>
      <name>m_comm</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>ada8f1a48bf4017e680e88637e086d8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, InternalCounter &gt;</type>
      <name>m_counters</name>
      <anchorfile>classpanzer_1_1PAPICounter.html</anchorfile>
      <anchor>a2eb83c5e73fa77c9199d60cf0962db87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::PAPICounter2</name>
    <filename>classpanzer_1_1PAPICounter2.html</filename>
    <class kind="struct">panzer::PAPICounter2::InternalCounter2</class>
    <member kind="function">
      <type></type>
      <name>PAPICounter2</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>a46bd5da05a57d9fd80c457f11ef38138</anchor>
      <arglist>(const std::string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~PAPICounter2</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>a3198c262fbee24c0792a4af044a0013a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addEventCounter</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>a074128465adca7391565a7908221f59a</anchor>
      <arglist>(const int event)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>report</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>ae4272c341c2e8b60c8d8b907e534f9d0</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>startCounters</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>a04465fd1de2e82361e29cfb2d94db39f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>stopCounters</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>add155d04fc8256f068d99f5edd13bdec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>m_name</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>ad907afadda43d73ac294595d101a6ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>m_event_set</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>ac05aa47ed987cba99d623e2fd1046069</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::vector&lt; int &gt;</type>
      <name>m_events</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>af113566c7f68c2d0d94a9ccb4bd175ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>m_is_initialized</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>a453544d41f55cdc69a20ce5c92593914</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, InternalCounter2 &gt;</type>
      <name>m_counters</name>
      <anchorfile>classpanzer_1_1PAPICounter2.html</anchorfile>
      <anchor>acaf9cccc85e9f4b41ad483f9d5496290</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Parameter</name>
    <filename>classpanzer_1_1Parameter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>Parameter</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a3e0ed30ea778fc70eac1ec657741fd0e</anchor>
      <arglist>(const std::string parameter_name, const std::string field_name, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout, panzer::ParamLib &amp;param_lib)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a92c2d2b77af1882cb3034e77c99fa0b5</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a590b6d1a5ca387d469d7bc9673d48f79</anchor>
      <arglist>(typename TRAITS::EvalData ud)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a771381e0e4ec4ef28aa1e8eeaf136fd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>target_field</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>af1ff9233d5daeaad7d7fec45a206da5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>cell_data_size</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a046ea9986b4853080b3c7c99b16f6037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ScalarT</type>
      <name>initial_value</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a5f2f8d347ad1c09bcf3c11db254b7c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvalT &gt; &gt;</type>
      <name>param</name>
      <anchorfile>classpanzer_1_1Parameter.html</anchorfile>
      <anchor>a198addb6038855f8168f7542045ab82b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ParameterLibraryAcceptor</name>
    <filename>classpanzer_1_1ParameterLibraryAcceptor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterLibraryAcceptor</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor.html</anchorfile>
      <anchor>a50bbd43de3bd3e8f54bec2ec28d10463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::ParamLib &gt;</type>
      <name>getParameterLibrary</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor.html</anchorfile>
      <anchor>abc09f9bd5d2110476e15d5373943389f</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>createAndRegisterScalarParameter</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor.html</anchorfile>
      <anchor>a4bffe4513933dbf0207a2d5443ee4382</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ParameterLibraryAcceptor_DefaultImpl</name>
    <filename>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</filename>
    <base>panzer::ParameterLibraryAcceptor</base>
    <member kind="function">
      <type></type>
      <name>ParameterLibraryAcceptor_DefaultImpl</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>a2153a9d226e1ec7b93a9500740ba295c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterLibraryAcceptor_DefaultImpl</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>aa399cff5f8bc72c530942420cea9c62a</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::ParamLib &gt; &amp;pl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterLibraryAcceptor_DefaultImpl</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>af8504e525182f5044bbdc42720b9c555</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setParameterLibrary</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>abcc5028f8a8f79b0546b4881af2b7d36</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer::ParamLib &gt; &amp;pl)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ParamLib &gt;</type>
      <name>getParameterLibrary</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>acb36bf46c347480a6a2efa2f12f6c4ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ParamLib &gt;</type>
      <name>m_param_lib</name>
      <anchorfile>classpanzer_1_1ParameterLibraryAcceptor__DefaultImpl.html</anchorfile>
      <anchor>a6a19a0361e151ade5dc506524b394c93</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ParameterList_GlobalEvaluationData</name>
    <filename>classpanzer_1_1ParameterList__GlobalEvaluationData.html</filename>
    <base>panzer::GlobalEvaluationData</base>
    <member kind="function">
      <type></type>
      <name>ParameterList_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>a76137f86e046c9ed9f7999a2cad54bd4</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;activeParameters)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterList_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>a65114e795e19e504399a1f6b0ac2f5b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>aff64719220d51f705fda6855956ee88f</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>a1c21ee43c0aa2ce5598317b6940c4b63</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>ad7498737dc269e7f38f5e1c15844b210</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>a0b37f77c4ec5baa02f0c40a176dc7256</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getActiveParameters</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>ac8508d75e416dd1f3771fb9d12f875ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>activeParameters_</name>
      <anchorfile>classpanzer_1_1ParameterList__GlobalEvaluationData.html</anchorfile>
      <anchor>a054c081a66d8fb127c8a73b697f3aef5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ModelEvaluator::ParameterObject</name>
    <filename>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</filename>
    <member kind="variable">
      <type>bool</type>
      <name>is_distributed</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>aff2077fb34d3485c9d7ae3886b19ad98</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>names</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a5aa1d58b36ff78f9efc62a38603f3d03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>space</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a2ed07b72ab0a9b68bf2344aba0bb9d5d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; Scalar &gt; &gt;</type>
      <name>initial_value</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a3a51b0de7a32defd77fa68c3da7ddcbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt;</type>
      <name>global_indexer</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a260b86cd9135962e9ed77eaf9b3c658b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>dfdp_rl</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a46b2fa3f5f3a2eccf3d14c5936ecb6ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::ResponseLibrary&lt; panzer::Traits &gt; &gt;</type>
      <name>dgdp_rl</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a5eada332970dad7133479c854530aecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>panzer::ParamVec</type>
      <name>scalar_value</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ParameterObject.html</anchorfile>
      <anchor>a69176c35482baf9d0e832c4a1b4dfc36</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::PeriodicBC_Matcher</name>
    <filename>classpanzer__stk_1_1PeriodicBC__Matcher.html</filename>
    <templarg></templarg>
    <base>panzer_stk::PeriodicBC_MatcherBase</base>
    <member kind="function">
      <type></type>
      <name>PeriodicBC_Matcher</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>abc0d8fe89e98f5d62207b04b31a00384</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const Matcher &amp;matcher, const std::string type=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PeriodicBC_Matcher</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a6eeaa84d988e2ec6cc61a2860f5a12e9</anchor>
      <arglist>(const PeriodicBC_Matcher &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getMatchedPair</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a89784d61a546eb6337f0356585f3f87d</anchor>
      <arglist>(const STK_Interface &amp;mesh, const Teuchos::RCP&lt; const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt; &amp;currentState=Teuchos::null) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a3d57f6c1ca6352a568bc8d9c46a9a4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getType</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a397fee2ca9926974fa4ca47805aa7399</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PeriodicBC_Matcher</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>ae44556c3596d7607bc4dd3ad456c80b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>left_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a82b17ebd23eee2afb244ad1c1cdf124c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>right_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>af5b2729af2d0477b8a673cb933be922e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Matcher</type>
      <name>matcher_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a67068eba464da9530dc4ff751abe1b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>type_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Matcher.html</anchorfile>
      <anchor>a097b4dc13e93c0a7568ddc8ce9a64bbb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::PeriodicBC_MatcherBase</name>
    <filename>classpanzer__stk_1_1PeriodicBC__MatcherBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PeriodicBC_MatcherBase</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__MatcherBase.html</anchorfile>
      <anchor>a904b3057130aa70735d17636b445c6a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getMatchedPair</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__MatcherBase.html</anchorfile>
      <anchor>a3bb78d76be05ec2b80bc51be706b80a0</anchor>
      <arglist>(const STK_Interface &amp;mesh, const Teuchos::RCP&lt; const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt; &amp;currentState=Teuchos::null) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__MatcherBase.html</anchorfile>
      <anchor>a0992a9a8ed2250730ad19c4a4770a3e6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getType</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__MatcherBase.html</anchorfile>
      <anchor>ac56f91518242a86c63590df2e2c4463d</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::PeriodicBC_Parser</name>
    <filename>classpanzer__stk_1_1PeriodicBC__Parser.html</filename>
    <member kind="function">
      <type></type>
      <name>PeriodicBC_Parser</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a3b0d685523806dc93e5caeb65be347ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt; &amp;</type>
      <name>getMatchers</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>ae8dae5dcd6dc3054370b424fef2075f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>adeb12540aa44ab184014a278600ec2e4</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>aae387d1ce81f610275dbe5ce11582ea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>ae9866cbecf1ddaf8c137bde548914f3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a8020667689276396a0459570f8249e04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a5f85ea345fea6032d65c57c72d4c466b</anchor>
      <arglist>(int count) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt;</type>
      <name>buildMatcher</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a13cacd28aae85ab1ba92b2c40247e656</anchor>
      <arglist>(const std::string &amp;buildStr) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildMatcher_Tokenize</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a494ffa8199876571eb0c5b06a57dda29</anchor>
      <arglist>(const std::string &amp;buildStr, std::string &amp;matcher, std::string &amp;bndry1, std::string &amp;bndry2) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>buildMatcher_Tokenize_withParams</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a6b6d4faba27cba7f052fc90f86e42c48</anchor>
      <arglist>(const std::string &amp;buildStr, std::string &amp;matcher, std::vector&lt; std::string &gt; &amp;params, std::string &amp;bndry1, std::string &amp;bndry2) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>storedPL_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>af1361bf905d90480af5932bc3362593a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt;</type>
      <name>matchers_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>a0c8091c18eab1df8aa198e1446361dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>countStr_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>ac8b0233501ed1e242cf05a88d6dab74a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const std::string</type>
      <name>condPrefix_</name>
      <anchorfile>classpanzer__stk_1_1PeriodicBC__Parser.html</anchorfile>
      <anchor>aac94a3e83e1fede97106068116f0e336</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::PermFunctor</name>
    <filename>structpanzer__stk_1_1PermFunctor.html</filename>
    <templarg>RAContainer</templarg>
    <templarg>Compare</templarg>
    <member kind="function">
      <type></type>
      <name>PermFunctor</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>aa4375888a35fb0dcee1ffb00ebe9a0fa</anchor>
      <arglist>(const RAContainer &amp;cont, const Compare &amp;comp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PermFunctor</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>a46a2f4a4785c61366e897845e9ed8dd8</anchor>
      <arglist>(const PermFunctor &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>a4efe31584ca0ae244ae6d7f35acc4d9b</anchor>
      <arglist>(std::size_t a, std::size_t b) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>PermFunctor</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>abaa96916f07b4288368904a8ce7603a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Compare &amp;</type>
      <name>compare</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>a26514bc738c1b4ece6bdfad80720daf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const RAContainer &amp;</type>
      <name>values</name>
      <anchorfile>structpanzer__stk_1_1PermFunctor.html</anchorfile>
      <anchor>a6797b201628de36dc912cd35c270ee30</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::PhysicsBlock</name>
    <filename>classpanzer_1_1PhysicsBlock.html</filename>
    <base>panzer::EvaluatorsRegistrar</base>
    <member kind="function">
      <type></type>
      <name>PhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a9e1260977bc72b2818aac415fd238de0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a5f33d97f8dfc23d6acbd09c71467634b</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;physics_block_plist, const std::string &amp;element_block_id, const int default_integration_order, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; const panzer::EquationSetFactory &gt; &amp;factory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const bool build_transient_support, const std::vector&lt; std::string &gt; &amp;tangent_param_names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a2f218177825e0ac890e68838ddf504cc</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;physics_block_plist, const std::string &amp;element_block_id)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a4899ab9cd6495db33c8ada027e0de062</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;pb, const panzer::CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a035eda3e8d03c21a7eb347c15b643eb7</anchor>
      <arglist>(const std::string &amp;element_block_id, const std::string &amp;physics_block_id, const int integration_order, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const Teuchos::RCP&lt; panzer::PureBasis &gt; &amp;fields)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a008e6122349ee2e1cb682f0a5487e522</anchor>
      <arglist>(const int default_integration_order, const bool build_transient_support, const panzer::CellData &amp;cell_data, const Teuchos::RCP&lt; const panzer::EquationSetFactory &gt; &amp;factory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const std::vector&lt; std::string &gt; &amp;tangent_param_names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterEquationSetEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a4b31d92e42ab69615ea382dbb6e8067c</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a48e0a762e4bd319302b6f791353d58f4</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterDOFProjectionsToIPEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a935ca1b207024bbd99af7f45b62b349f</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const Teuchos::Ptr&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ae5b87839504da5ee8ad397bb2f833362</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ab65b167412453dd08bfeada24f5f8d91</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterInitialConditionEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a6e95d7dbba7682e92786d0313fe31b06</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterClosureModelEvaluators</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a4ff934c41c1cc18c3af9aa3c3793f762</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterEquationSetEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ad4d197c1ef987bb51a999a0ca2b15444</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ab71e3e24f27bd7f9e0e4b6d28fac3453</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterDOFProjectionsToIPEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ad9bba9426d12539b7cb0e4b376f64a0e</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const Teuchos::Ptr&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterScatterEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a53062a853f1e2b5bae3e07a35210be5d</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterClosureModelEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a842fc31829bdf5aa60aac6bdb2ba6cda</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterInitialConditionEvaluatorsForType</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a7ef44f5a23967dfa0687bdc1bd2fb16b</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string &amp;model_name, const Teuchos::ParameterList &amp;models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>getDOFNames</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>af5d9943480d61a45d2af3dbd139d4852</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; StrPureBasisPair &gt; &amp;</type>
      <name>getProvidedDOFs</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a06bda44bc5fafabeff7e5fa86e1d90e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::vector&lt; std::string &gt; &gt; &amp;</type>
      <name>getCoordinateDOFs</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a07bba964ec8f3b264dffe048cf086c20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; StrPureBasisPair &gt; &amp;</type>
      <name>getTangentFields</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a23216305c406aaa705b349fc11d6d12c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt; &amp;</type>
      <name>getBases</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a8b508910acb5675bbdd33bdd4abdcd86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt; &amp;</type>
      <name>getIntegrationRules</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a53a570dca13039afcfab3b8ec2abb4d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const shards::CellTopology</type>
      <name>getBaseCellTopology</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ad3589cd80c24334079ff88ddab26a233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>physicsBlockID</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ae93729d5a6c13a109415522ccd398ed0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>elementBlockID</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>afa53db47549ff2b8a3055b28b0f9ee6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const panzer::CellData &amp;</type>
      <name>cellData</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a0ab3e8b9c095ce35800511723830596d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PhysicsBlock &gt;</type>
      <name>copyWithCellData</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>aefd839a1d193e21f4479aa7193882f9d</anchor>
      <arglist>(const panzer::CellData &amp;cell_data) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>globalData</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a8819dd51dbcc1d719ab7b12b2fab752e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldLibrary &gt;</type>
      <name>getFieldLibrary</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a4687e8e446c56d7b444100c3ce0bfb1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const FieldLibraryBase &gt;</type>
      <name>getFieldLibraryBase</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a7db7a8f3630ffa63b500e2b9188a6e1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a2c87a29229a7553679b411ddc3a01935</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>ac69aa71cf2100deaf3535aaffc5d4df1</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;input_parameters, const int &amp;default_integration_order, const std::string &amp;element_block_id, const panzer::CellData &amp;cell_data, const bool build_transient_support, const std::vector&lt; std::string &gt; &amp;tangent_param_names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_physics_id</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a37efade31939e7d772a46a7419518770</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>m_element_block_id</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a834d7ebc3fc9840be08d584753848d76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>m_default_integration_order</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a5669a1b279ec31132dfb243b09e8ec56</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>panzer::CellData</type>
      <name>m_cell_data</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a5af5a59fcb88ffc06306dabd2d8e84ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>m_input_parameters</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>aa9034d684da1ee27cf670313e6cc6ca4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>m_build_transient_support</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a2f816180862e3852fe85018a164c1f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>m_global_data</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a8886357d2b9e02e75be9a5aeeb318f87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>m_dof_names</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a6ba177f1bbab6875aed66a8f35518073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; StrPureBasisPair &gt;</type>
      <name>m_provided_dofs</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a2cd318a47f258003b1bee9eb1f0f9cc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; StrPureBasisPair &gt;</type>
      <name>m_tangent_fields</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a3a0d5c17f836d769b3ce09d196bb3434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>m_coordinate_dofs</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a6549e0a185b670670c00cff0ceabccd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt;</type>
      <name>m_bases</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>accb7df1db1461e676fb01c8f5ee83402</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, Teuchos::RCP&lt; panzer::IntegrationRule &gt; &gt;</type>
      <name>m_integration_rules</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>aedc0fa6b278a5d81003e5807b6c1cc60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::EquationSet_TemplateManager&lt; panzer::Traits &gt; &gt; &gt;</type>
      <name>m_equation_sets</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a726937333dfd23d5cc94027fc6026ccd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; FieldLibrary &gt;</type>
      <name>m_field_lib</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a0bdba207a240531100b091c42fe41d60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::EquationSetFactory &gt;</type>
      <name>m_eqset_factory</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>aff6cb4b14c9c27db252378e4a1886dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildPhysicsBlocks</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a7ecae36d8c23c0d7e18c39cbb342716a</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;block_ids_to_physics_ids, const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;physics_blocks_plist, const int default_integration_order, const std::size_t workset_size, const Teuchos::RCP&lt; const panzer::EquationSetFactory &gt; &amp;eqset_factory, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, const bool build_transient_support, std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const std::vector&lt; std::string &gt; &amp;tangent_param_names=std::vector&lt; std::string &gt;())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readPhysicsBlocks</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>abd6bf4e38f653afcf427017080a312eb</anchor>
      <arglist>(const std::map&lt; std::string, std::string &gt; &amp;block_ids_to_physics_ids, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;physics_blocks_plist, std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::PhysicsBlock &gt;</type>
      <name>findPhysicsBlock</name>
      <anchorfile>classpanzer_1_1PhysicsBlock.html</anchorfile>
      <anchor>a88effe113c0e5f716aefd70f693fac92</anchor>
      <arglist>(const std::string element_block_id, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physics_blocks, bool throw_on_failure=true)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::PlaneMatcher</name>
    <filename>classpanzer__stk_1_1PlaneMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>PlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a27e2a32c04696429cc8b53ba432be60d</anchor>
      <arglist>(int index0, int index1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a31fbb2961858b123cbaa8e4a3c05993c</anchor>
      <arglist>(int index0, int index1, double error)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a6b26eb65a7d713ca3aed1f41ca61fdd7</anchor>
      <arglist>(int index0, int index1, const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a872e2d2a5196d53d70ebb9e3490394b0</anchor>
      <arglist>(const PlaneMatcher &amp;cm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a8aecd09bc0dc373a55885bd8594cd209</anchor>
      <arglist>(const Teuchos::Tuple&lt; double, 3 &gt; &amp;a, const Teuchos::Tuple&lt; double, 3 &gt; &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>ae39c403c61d37dd9856ca3c4caa8ba15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildLabels</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a9fcf46726ffe254a493626046eab4f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>parseParams</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>ad5d742c7fc9b9bd5b9fa493749ed81dc</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>error_</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a71d7ddaf654ca1ca5a67e515b666ba63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index0_</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>ad1c8aae04b002d90bab029a4353ef8b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index1_</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a1123e8c0a84530bc35b42dee4b0f82b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>labels_</name>
      <anchorfile>classpanzer__stk_1_1PlaneMatcher.html</anchorfile>
      <anchor>a0ed02303649d6683a27b4c3f8031e93f</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::PointRule</name>
    <filename>classpanzer_1_1PointRule.html</filename>
    <member kind="function">
      <type></type>
      <name>PointRule</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a1cc3238815680a2d6b8c0117d7219505</anchor>
      <arglist>(const std::string &amp;ptName, int np, const panzer::CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PointRule</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>ac48881d7fcae8e83790c174611e7bdab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a94906be0d6d160265a5cf97829524d04</anchor>
      <arglist>(const std::string &amp;ptName, int np, const panzer::CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSide</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a0a82ad681e1e06ff052817f4e54e3915</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>aacd500d719ab62b567c9f34ed66e79f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a7bd6caecaba2fa35d8491afd295267ab</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>topology</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>ac5735e2351317dde5c9586a1bf2f15dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; shards::CellTopology &gt;</type>
      <name>side_topology</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a63b082677d2f690c7f35f011e672168f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>dl_scalar</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a4e361e5dbd8ac07de4ee7952e6040061</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>dl_vector</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a3988e0d8182a0b0c3d8ad6aa8dd0058f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>dl_tensor</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>ab99519fe4d3b4bf76094bd2bed773c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spatial_dimension</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a675abd9dd111ec5d45523eccd6a322c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>workset_size</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>aa2cdb33ab85f1fcf3025fe2adfaf871d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_points</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a7332d11a2dc8b73b50bee0ba05108dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>side</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a8304a2ad358a6d629563b905ca6adaa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PointRule</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a3cd6570f0681003965e4ad726e142095</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Teuchos::RCP&lt; shards::CellTopology &gt;</type>
      <name>getSideTopology</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>a545080b3386a0ed6debf621d85bd6169</anchor>
      <arglist>(const CellData &amp;cell_data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>point_name</name>
      <anchorfile>classpanzer_1_1PointRule.html</anchorfile>
      <anchor>abe865227b823191af274be03f4d1901f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::PointValues2</name>
    <filename>structpanzer_1_1PointValues2.html</filename>
    <templarg>Scalar</templarg>
    <templarg>Array</templarg>
    <member kind="typedef">
      <type>ArrayTraits&lt; Scalar, Array&lt; Scalar, void, void, void, void, void, void, void, void &gt; &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a37fe680788878c2e773b94a1158cb0d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArrays</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>aa4ddbe8e3c9064e93868818c5d067a70</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pr, const ArrayFactory &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a9fc8c43e441ab8310d383da946d16ecc</anchor>
      <arglist>(const NodeCoordinateArray &amp;node_coordinates, const PointCoordinateArray &amp;point_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyNodeCoords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a820b320d4f003b07b92705f0b6bb44f6</anchor>
      <arglist>(const CoordinateArray &amp;in_node_coords)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyPointCoords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a6532f30a65e840cc78f1cc754035686e</anchor>
      <arglist>(const CoordinateArray &amp;in_point_coords)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArrays</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>ab5565eaae306a11e15730adfff10a592</anchor>
      <arglist>(const Teuchos::RCP&lt; const PointRule &gt; &amp;pr, const ArrayFactory &amp;af)</arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, IP, Dim, void, void, void, void, void, void &gt;</type>
      <name>coords_ref</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a3d152dbe4fdc2423c8982d40fd72528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, Cell, NODE, Dim, void, void, void, void, void &gt;</type>
      <name>node_coordinates</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a3b70f6356b19b4e5f247c7af2891f78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt;</type>
      <name>jac</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a79f1f9f6afa4c28fdfd992ea898d806a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, Cell, IP, Dim, Dim, void, void, void, void &gt;</type>
      <name>jac_inv</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a9e3f7dcab569547a0878e6ad5f226dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, Cell, IP, void, void, void, void, void, void &gt;</type>
      <name>jac_det</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a65ba5949f8db7bf18647f1e35dd65bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Array&lt; Scalar, Cell, IP, Dim, void, void, void, void, void &gt;</type>
      <name>point_coords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a8f64e2132c1af927719de37c031b5df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PointRule &gt;</type>
      <name>point_rule</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a12e05e21d1893a2ebec44cb186c47ae6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PointValues2&lt; ScalarT, PHX::MDField &gt;</name>
    <filename>structpanzer_1_1PointValues2.html</filename>
    <member kind="typedef">
      <type>ArrayTraits&lt; ScalarT, PHX::MDField&lt; ScalarT, void, void, void, void, void, void, void, void &gt; &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a37fe680788878c2e773b94a1158cb0d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupArrays</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>aa4ddbe8e3c9064e93868818c5d067a70</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pr, const ArrayFactory &amp;af)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateValues</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a9fc8c43e441ab8310d383da946d16ecc</anchor>
      <arglist>(const NodeCoordinateArray &amp;node_coordinates, const PointCoordinateArray &amp;point_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyNodeCoords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a820b320d4f003b07b92705f0b6bb44f6</anchor>
      <arglist>(const CoordinateArray &amp;in_node_coords)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyPointCoords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a6532f30a65e840cc78f1cc754035686e</anchor>
      <arglist>(const CoordinateArray &amp;in_point_coords)</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, IP, Dim, void, void, void, void, void, void &gt;</type>
      <name>coords_ref</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a3d152dbe4fdc2423c8982d40fd72528c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE, Dim, void, void, void, void, void &gt;</type>
      <name>node_coordinates</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a3b70f6356b19b4e5f247c7af2891f78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim, Dim, void, void, void, void &gt;</type>
      <name>jac</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a79f1f9f6afa4c28fdfd992ea898d806a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim, Dim, void, void, void, void &gt;</type>
      <name>jac_inv</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a9e3f7dcab569547a0878e6ad5f226dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, void, void, void, void, void, void &gt;</type>
      <name>jac_det</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a65ba5949f8db7bf18647f1e35dd65bdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim, void, void, void, void, void &gt;</type>
      <name>point_coords</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a8f64e2132c1af927719de37c031b5df8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PointRule &gt;</type>
      <name>point_rule</name>
      <anchorfile>structpanzer_1_1PointValues2.html</anchorfile>
      <anchor>a12e05e21d1893a2ebec44cb186c47ae6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits::PreEvalData</name>
    <filename>structpanzer_1_1Traits_1_1PreEvalData.html</filename>
    <member kind="variable">
      <type>GlobalEvaluationDataContainer</type>
      <name>gedc</name>
      <anchorfile>structpanzer_1_1Traits_1_1PreEvalData.html</anchorfile>
      <anchor>a8858f0ea63ada37f4e4fd766633ae844</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>first_sensitivities_name</name>
      <anchorfile>structpanzer_1_1Traits_1_1PreEvalData.html</anchorfile>
      <anchor>a3010b232468ed0d9d6cfeedc100db306</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>second_sensitivities_name</name>
      <anchorfile>structpanzer_1_1Traits_1_1PreEvalData.html</anchorfile>
      <anchor>a15e76eb91850a6ab699487fa527165c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ResponseLibrary::Printer</name>
    <filename>structpanzer_1_1ResponseLibrary_1_1Printer.html</filename>
    <member kind="function">
      <type></type>
      <name>Printer</name>
      <anchorfile>structpanzer_1_1ResponseLibrary_1_1Printer.html</anchorfile>
      <anchor>a867cae14111cb3e4218b72a1301e30a9</anchor>
      <arglist>(const Response_TemplateManager &amp;tm, std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1ResponseLibrary_1_1Printer.html</anchorfile>
      <anchor>a3a9365bd9714a5eb9685f6e1f8d9645a</anchor>
      <arglist>(T) const </arglist>
    </member>
    <member kind="variable">
      <type>const Response_TemplateManager &amp;</type>
      <name>tm_</name>
      <anchorfile>structpanzer_1_1ResponseLibrary_1_1Printer.html</anchorfile>
      <anchor>abb3adb7f3f5085936dd35babeb4c2ddb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::ostream &amp;</type>
      <name>os_</name>
      <anchorfile>structpanzer_1_1ResponseLibrary_1_1Printer.html</anchorfile>
      <anchor>a99ea338e3af18d37535bdadd934b2859</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ProbeResponse_Builder</name>
    <filename>structpanzer_1_1ProbeResponse__Builder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseMESupportBuilderBase</base>
    <member kind="function">
      <type></type>
      <name>ProbeResponse_Builder</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>afdc58a82eb207b8d1dc4f5cc473a6007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProbeResponse_Builder</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ad587ac8b6fc1b2d0042c7037687cad5b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ab74f17c030069e6ec2a9b4dbb6719912</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;in_linearObjFactory, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;in_globalIndexer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ab7ec78fc03fe93127f85ef74ff7e85fb</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;in_linearObjFactory)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ac9f1d232ea441f140f110966dea844ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildValueFactory</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a312ea8c6407f9f1f8524cf755196f322</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildDerivativeFactory</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a90302dddabba50ee892bc7474557f67e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildTangentFactory</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>aad501e46d85400243dbfe5c568bdd888</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>MPI_Comm</type>
      <name>comm</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a8be84df918ffd329cb279bb0d5f5d895</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; double &gt;</type>
      <name>point</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a70c1d8ecd3f4c12dcd09f9af7e245675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>fieldComponent</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a92ba959e02c3b6ddd2daad67a14a162b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cubatureDegree</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>af472eeebe95b22a7615741aeaafcae4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldName</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>a78e41bb43f38ebb18518a3911c52cb54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>applyDirichletToDerivative</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>acf9a01b3b1f2d22342c706a996a19cf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ab305fd8ddb7ccc9e2aa09fe32c607b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer</name>
      <anchorfile>structpanzer_1_1ProbeResponse__Builder.html</anchorfile>
      <anchor>ae5579e7477787181f3dafd2ecf4dd6ca</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ProbeScatter</name>
    <filename>classpanzer_1_1ProbeScatter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ProbeScatterBase</base>
    <member kind="function">
      <type></type>
      <name>ProbeScatter</name>
      <anchorfile>classpanzer_1_1ProbeScatter.html</anchorfile>
      <anchor>a3241d11ca498b662e3417214aa810860</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;globalIndexer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1ProbeScatter.html</anchorfile>
      <anchor>a58d5fcd55d440d21d69c43e329427e8f</anchor>
      <arglist>(const panzer::Traits::Jacobian::ScalarT &amp;probeValue, const size_t cell_index, const bool has_probe, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, Teuchos::ArrayRCP&lt; double &gt; &amp;dgdx) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ProbeScatter.html</anchorfile>
      <anchor>a36578b2091509aeff00b71781f4dfd56</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ProbeScatterBase</name>
    <filename>classpanzer_1_1ProbeScatterBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProbeScatterBase</name>
      <anchorfile>classpanzer_1_1ProbeScatterBase.html</anchorfile>
      <anchor>ad7e76296839cd8087ae314e18e33fe7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scatterDerivative</name>
      <anchorfile>classpanzer_1_1ProbeScatterBase.html</anchorfile>
      <anchor>a697780d704506def6eae25bfc7ab9706</anchor>
      <arglist>(const panzer::Traits::Jacobian::ScalarT &amp;probeValue, const size_t cell_index, const bool has_probe, panzer::Traits::EvalData workset, WorksetDetailsAccessor &amp;wda, Teuchos::ArrayRCP&lt; double &gt; &amp;dgdx) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::ProductVectorBase</name>
    <filename>classThyra_1_1ProductVectorBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ProjectToEdges</name>
    <filename>classpanzer_1_1ProjectToEdges.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ProjectToEdges</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a18821a9e73924f7e51f7b34fc2bae90c</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>ab920422fe878c8af98d76e8e6e4b80b9</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>ab76bfa32dbe85e94e0e6c02a6a5912e9</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>af38f2dfce0f8018387e893cf66920d38</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a3110fa07e0c1b03d6b31f27a2b010a3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProjectToEdges</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>afbec8efa64d222b35fe9c2591a69a044</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dof_name</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a32fefa303bfcb0ad03abd543ab08e8db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a90053f408339cf9bc8ac65ea41ec9007</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_pts</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>abe62df5083ca775ed2c8b371acc05e53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_dim</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>afaea7419a822ba3693d1c48d215e9207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS, Dim &gt;</type>
      <name>tangents</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a37e90c837362518831debf91ddb2824b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS, Dim &gt;</type>
      <name>vector_values</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a16db9cf184646b6e2e1bf653401d05ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>result</name>
      <anchorfile>classpanzer_1_1ProjectToEdges.html</anchorfile>
      <anchor>a5cac802bbc94a6e7580c68e45f96bcce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ProjectToFaces</name>
    <filename>classpanzer_1_1ProjectToFaces.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ProjectToFaces</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>acc8e6248ceb44051133c534728791865</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>affd4fa51b8f75a175233b503dff0ec1e</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>aec2ddd7a010034cceeeff199cad587b7</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a7b5722ec14e6d9cae3640f52ddeb28d1</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a801311566969dab1e1360e4ee1958d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ProjectToFaces</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a67a3fb8ef15fe08fd09a28803643c2db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dof_name</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a558529c0fcc5860f8c6a0e52d76959a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a29f3c81b92c5632e2790c96311483e3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_pts</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a2444b601a62ee48235f3d3533540c5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_dim</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a5387ed658dba71b8709d787ff07621e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS, Dim &gt;</type>
      <name>normals</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a6c7ca4071222a10259934947ca73d0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS, Dim &gt;</type>
      <name>vector_values</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>ad15586f8376ae9110b307652cdc0b7c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>result</name>
      <anchorfile>classpanzer_1_1ProjectToFaces.html</anchorfile>
      <anchor>a91291d52a42524fb9059530f21a30044</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::PureBasis</name>
    <filename>classpanzer_1_1PureBasis.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>EElementSpace</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HGRAD</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a1ece55e22386220235519b451cd53727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HCURL</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84accac9248b8183ef56b912036300e95e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HDIV</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a864ffa40050ccfa6ad7cde5abe866dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a9c14c104f97e0e4f4ff994b813c2b965</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HGRAD</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a1ece55e22386220235519b451cd53727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HCURL</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84accac9248b8183ef56b912036300e95e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HDIV</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a864ffa40050ccfa6ad7cde5abe866dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONST</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac55a0357e981bba9d69348050a038a84a9c14c104f97e0e4f4ff994b813c2b965</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PureBasis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a80cdf427ed6144ef61e3c034bf1b91ca</anchor>
      <arglist>(const std::string &amp;basis_type, const int basis_order, const CellData &amp;cell_data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PureBasis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ada9190afd43bdcf7b3e280f402621368</anchor>
      <arglist>(const std::string &amp;basis_type, const int basis_order, const int num_cells, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;cell_topo)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>cardinality</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a1cbf8ce6d5d2470089cc8e9e72dd7284</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numCells</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a52883ec00b44085f9e9612ad95384e9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>aa4de47038da25231be5e22e69187b487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>type</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ad0a919ff98e8226ec26ce4bfd7251aba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>order</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a1e7fd4d37b8035cfd0e0c2c78374abf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a6b3850864eb3d662829eae359adcfba1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldName</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ab7811332d30cf2dda3bcceab1f1307c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldNameD1</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ab325799febf6f4ee1871f4e0778d39ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>fieldNameD2</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a4691c85be998bb4fbbb7d60cb45d94f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt;</type>
      <name>getIntrepid2Basis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a8464a0b530124359155d1707081ae4af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; ScalarT, ArrayT &gt; &gt;</type>
      <name>getIntrepid2Basis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a7c8a110e1f44a7c59fac0d6a66a09cd1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EElementSpace</type>
      <name>getElementSpace</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a67b8d2fef7ddaa595ac06c1d8b6c9a97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>requiresOrientations</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a7cdbe49dcdca976bd3b874b91ce9c07a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsGrad</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a4d0fd02cdaec4f338f8ce1997b511236</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsCurl</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>adbfcbda3020c7bf43ebbd1ace8ce466b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsDiv</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>adf39c4d2c44ef6c16f53193a3f589caa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isVectorBasis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a299f4a4441440305addf39661f41a9c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isScalarBasis</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a68c8773f941bcf6987e9eccb9dfd0ef0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getBasisRank</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a5b8e9b0cb6d2b10712fa152fea465c83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsBasisCoordinates</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>aea7575aef7487d9eafcfa3996bc56ff9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a0292f77e2eee8dbe848b3737e3788431</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>cell_data</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a4c2d4cffd345f7e68c64af6f9c51e2cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>aa4567e2147d2b2398a6fa905beb59203</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional_grad</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a5726e09da70e8c2175dfe6fd9d883726</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>functional_D2</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>affd42b62e917957319e7dc63dc2c4a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; PHX::DataLayout &gt;</type>
      <name>coordinates</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ac94cc4647d32d06b0e628922c85cae92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a09a0f7b2170e21fdb8f67eb55e640c6f</anchor>
      <arglist>(const std::string &amp;basis_type, const int basis_order)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>topology_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a77960418d0badf0d113b03157b306b96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; double, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &gt;</type>
      <name>intrepid_basis_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a0b9efd336afa6be7350ff6d2069521ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_type_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a6734358210e5103929f1a12185c6c095</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>basis_name_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>ab6d1d46c972d2ddef987e9ca18398c81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>field_basis_name_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a77530ab374a57815df96a28debbf30b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>field_basis_name_D1_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a272dff4f99b3b2f01162beccdd0656a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>field_basis_name_D2_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>af6abfa8f25259b91e4ba458df09a27f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_cells_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>a968b622f3e4327b4fece055c4c8d4633</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EElementSpace</type>
      <name>element_space_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>af6b5a2b5b87ba60416ab641ce8edead9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>basis_rank_</name>
      <anchorfile>classpanzer_1_1PureBasis.html</anchorfile>
      <anchor>aa4334b06ba547c6dfe586a51423774fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::QuarterPlaneMatcher</name>
    <filename>classpanzer__stk_1_1QuarterPlaneMatcher.html</filename>
    <member kind="function">
      <type></type>
      <name>QuarterPlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>a058649426cc938a549ea24d267fcc86e</anchor>
      <arglist>(int index0a, int index0b, int index1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuarterPlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>aa61bfa5e4b3352c5bae1eae23aff46c6</anchor>
      <arglist>(int index0a, int index0b, int index1, double error)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuarterPlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>a79959d4854d62e02b7a44f420bed6617</anchor>
      <arglist>(int index0a, int index0b, int index1, const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>QuarterPlaneMatcher</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>aaf298006b48a8140142ca7fdfda3fd3d</anchor>
      <arglist>(const QuarterPlaneMatcher &amp;cm)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>ac13f3f20efdf51e4f32fc51aa6def386</anchor>
      <arglist>(const Teuchos::Tuple&lt; double, 3 &gt; &amp;a, const Teuchos::Tuple&lt; double, 3 &gt; &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>a61e81f4dd46c57e3b0a8a48dc9fd63b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildLabels</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>aa8995f2e67d9aa5a0c6f532f47951217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>parseParams</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>ab5e84cbfbb433a88fabcf6c7fba96eb0</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;params)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>error_</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>a19ebadd04772aab85d768edaff1a11d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index0a_</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>a1ef418888b46d327e2ba8e8d3dc032ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index0b_</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>ae450e2006d4a94c08d7c358b55b42302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>index1_</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>aa52564fe67cbe3c9f0ba773e1e7dc61b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char</type>
      <name>labels_</name>
      <anchorfile>classpanzer__stk_1_1QuarterPlaneMatcher.html</anchorfile>
      <anchor>ae00a4a25047a1cd6848b5a583222a17d</anchor>
      <arglist>[3]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ReadOnlyVector_GlobalEvaluationData</name>
    <filename>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</filename>
    <base>panzer::GlobalEvaluationData</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReadOnlyVector_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>afb909c57c9ca14bac2127e97f80681fc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isInitialized</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>aaad739c7fa1d53c2b87fb071dae1b91b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>a0745cfe6f536a19515b850f5db16f022</anchor>
      <arglist>(int mem)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>a0a7c7cd8d993be0d10838666163fe470</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setUniqueVector</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>ade1eb524910421ad2d5a49670a8b9b8c</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;uniqueVector)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getUniqueVector</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>ab26e0f9dfa23473969360233337c1435</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1ReadOnlyVector__GlobalEvaluationData.html</anchorfile>
      <anchor>a1e581e555dbf05c10574ee52acc0c105</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::ResponseEvaluatorFactory_SolutionWriter::RemovedFieldsSearchUnaryFunctor</name>
    <filename>structpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter_1_1RemovedFieldsSearchUnaryFunctor.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter_1_1RemovedFieldsSearchUnaryFunctor.html</anchorfile>
      <anchor>a48bcc3230949a85f2df4d0bd4a188587</anchor>
      <arglist>(const std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &amp;field)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>removedFields_</name>
      <anchorfile>structpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter_1_1RemovedFieldsSearchUnaryFunctor.html</anchorfile>
      <anchor>a2959e8154c5da047bf0db117f8b60a03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ReorderADValues_Evaluator</name>
    <filename>classpanzer_1_1ReorderADValues__Evaluator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>ad9d32d87f7c9c82f70f246dfe7694a78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>ab426138fabf859f51cd3a53d18ea94e3</anchor>
      <arglist>(const std::string &amp;outPrefix, const std::vector&lt; std::string &gt; &amp;inFieldNames, const std::vector&lt; Teuchos::RCP&lt; PHX::DataLayout &gt; &gt; &amp;fieldLayouts, const std::string &amp;elementBlock, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>a3cd31485813166345d5ee84e41d1c60f</anchor>
      <arglist>(const std::string &amp;outPrefix, const std::vector&lt; std::string &gt; &amp;inFieldNames, const std::vector&lt; std::string &gt; &amp;inDOFs, const std::vector&lt; std::string &gt; &amp;outDOFs, const std::vector&lt; Teuchos::RCP&lt; PHX::DataLayout &gt; &gt; &amp;fieldLayouts, const std::string &amp;elementBlock, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>a4958df76eb2da982514f4cb74fd74807</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>ab680df8dbda4fdec9ee8641c10c4c35f</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT &gt; &gt;</type>
      <name>inFields_</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>a1bcdeff03b2d405da245195edbab8879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT &gt; &gt;</type>
      <name>outFields_</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator.html</anchorfile>
      <anchor>a3dbf39a6b31549f457f86709819ac3c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ReorderADValues_Evaluator&lt; typename TRAITS::Jacobian, TRAITS &gt;</name>
    <filename>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</filename>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a274e2770fdd00b5df4874817422997cf</anchor>
      <arglist>(const std::string &amp;outPrefix, const std::vector&lt; std::string &gt; &amp;inFieldNames, const std::vector&lt; Teuchos::RCP&lt; PHX::DataLayout &gt; &gt; &amp;fieldLayouts, const std::string &amp;elementBlock, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>acff523fd6304a626b8bb19206b9204ef</anchor>
      <arglist>(const std::string &amp;outPrefix, const std::vector&lt; std::string &gt; &amp;inFieldNames, const std::vector&lt; std::string &gt; &amp;inDOFs, const std::vector&lt; std::string &gt; &amp;outDOFs, const std::vector&lt; Teuchos::RCP&lt; PHX::DataLayout &gt; &gt; &amp;fieldLayouts, const std::string &amp;elementBlock, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>ad38550073df7fd4a582513411e1569dc</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>af73776e44ce0fcdcc446f5185b0899c7</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TRAITS::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a322a106db457723425e716f13ef4a1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildSrcToDestMap</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a8487d5f6df93744851bfcaa004569c8a</anchor>
      <arglist>(const std::string &amp;elementBlock, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildSrcToDestMap</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a97711312cfb74c9a13d38b1f00115859</anchor>
      <arglist>(const std::string &amp;elementBlock, const std::map&lt; int, int &gt; &amp;fieldNumberMaps, const UniqueGlobalIndexerBase &amp;indexerSrc, const UniqueGlobalIndexerBase &amp;indexerDest)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>aa11fc0189e3eb6b074144d8f43e832da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReorderADValues_Evaluator</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a4917ddf9186ad740e20e775890545391</anchor>
      <arglist>(const ReorderADValues_Evaluator &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT &gt; &gt;</type>
      <name>inFields_</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>a01f7caef1d28b46f28a2f3a5e018d40b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT &gt; &gt;</type>
      <name>outFields_</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>af93c0ea8c18860b893e1ac99e7aecd14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>dstFromSrcMap_</name>
      <anchorfile>classpanzer_1_1ReorderADValues__Evaluator_3_01typename_01TRAITS_1_1Jacobian_00_01TRAITS_01_4.html</anchorfile>
      <anchor>afea83269e3af62f3a4b82ed1186814d6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits::Residual</name>
    <filename>structpanzer_1_1Traits_1_1Residual.html</filename>
    <member kind="typedef">
      <type>RealType</type>
      <name>ScalarT</name>
      <anchorfile>structpanzer_1_1Traits_1_1Residual.html</anchorfile>
      <anchor>abbfe41033314c3bf2d3230dd8482cb8a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::RespFactorySolnWriter_Builder</name>
    <filename>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</filename>
    <member kind="function">
      <type></type>
      <name>RespFactorySolnWriter_Builder</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>ad002c881e5de2f4167c0cb07aee68957</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleField</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>ab41512e297146760b0710967907a79a8</anchor>
      <arglist>(const std::string &amp;fieldName, double fieldScalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAdditionalField</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a4151eb28ae6ca3952b5cef6458ef5cef</anchor>
      <arglist>(const std::string &amp;fieldName, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeField</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a5db96e8324cda287a5bc55fb5ecc6ed7</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a72ca51af15881c39eb3032c8ba591fd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddSolutionFields</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a4f434122b77dfa72376466f7c1be7c35</anchor>
      <arglist>(bool asf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddCoordinateFields</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>acec90d3c40cf0b72fd02d9e831bef30a</anchor>
      <arglist>(bool acf)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer_stk::STK_Interface &gt;</type>
      <name>mesh</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>afd8cb21e70e349e031f7aaccc3be5b92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, double &gt;</type>
      <name>fieldToScalar_</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a8695ca906f522258ef332bb438c1e27c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt;</type>
      <name>additionalFields_</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>ae2b5dfcbdc4a24c5cfe29656b6bb703f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>removedFields_</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a280f29a7c2dd3fee68f0e8ae59382179</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>addSolutionFields_</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a73df78c12b83e4cc1859f279c87cba42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>addCoordinateFields_</name>
      <anchorfile>structpanzer__stk_1_1RespFactorySolnWriter__Builder.html</anchorfile>
      <anchor>a65eee45782f693a159d0d2536de96360</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_ExtremeValue</name>
    <filename>classpanzer_1_1Response__ExtremeValue.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseMESupport_Default</base>
    <base>panzer::GlobalEvaluationData_BCAdjustment</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>aa203bb5fccaa0c291499dacfbf81e21c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response_ExtremeValue</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a91349219360aed432684412a55b4acd8</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm, bool useMax, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linObjFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a97b880a1ab6776f99e1f464b238f7ff4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>afb9767378b6ec40cece334a129a7eaec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a74f95640ec534939c459a9b163d29ddb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a59ebf2e885c4342171af3ccf80570139</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a03b8c7212aa8645eabca9c149a99ab3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a37e8a429f7c1fc6670c3953c4ee2ec82</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a20cbbfd33187fda84c28822067ca2509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>ace2211dfebec845f8ea92ba61530eba8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a8dc297cb2b52af54f8c168068c42cca9</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>value</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a169b8f20ef14332855790beeb7edcaa8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a0b34682e268c9cb22e97996bed9aaebe</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_ExtremeValue</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a800ee63106283536e85231f2cf5fef97</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_ExtremeValue</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a62627a95d5594b2063493836d9a8df3d</anchor>
      <arglist>(const Response_ExtremeValue &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a0952325944459e38ffe273f005739ef3</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>aee679e6e554ce04d79daecc68fb6afee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ThyraObjFactory&lt; double &gt; &gt;</type>
      <name>thyraObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>af32a6af6f9242dd275d236c0a9f71583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>uniqueContainer_</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>acdea27ebae8f4187737db8ae103e02ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>a2d576e250a45343c8431298107341561</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useMax_</name>
      <anchorfile>classpanzer_1_1Response__ExtremeValue.html</anchorfile>
      <anchor>ab59ad795d980e53c438464aec59a9288</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_Functional</name>
    <filename>classpanzer_1_1Response__Functional.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseMESupport_Default</base>
    <base>panzer::GlobalEvaluationData_BCAdjustment</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ac3b717db82ef1c4e8487601ea25b0bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response_Functional</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a793c0c8a54b5e6b62e51f3c8fcb9e48c</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linObjFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a6d805153afd66e6010d80657502adc58</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a074d4b4dc79ac461d00542c9fdd7e945</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ace2a114edd6a64d395a4c6cc6405a938</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a9dd58834cc0dc9c0ceec6000ce3fc3cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a240a74384c910ab3f5ab3e09bf57d85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ac7865785cbf0ce3ffb04fce2aac3bdab</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a119ca2635e202a3cf56ea057c19ccd1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ab85d5f06d42006bd3de3ba18b42def88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>acf29f0661a8c0bd2667913ab95fa8544</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>value</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>adb82134913347587884c852a0901f2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>af21f584c5d035440987c3a467713d29f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_Functional</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ae9d665c503420f0cd048c765062b275a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_Functional</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a1f018608ade8eb0b17d302b2468a671c</anchor>
      <arglist>(const Response_Functional &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a23ec3bad1389549f7e2bcc18847a0018</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a0165fd7393e2a8bf3ec8e47ebf164bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ThyraObjFactory&lt; double &gt; &gt;</type>
      <name>thyraObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>af72efb5ff34ba577a719f7b779142694</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>uniqueContainer_</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>ae0c6a60210f956aa5130f44197f61b60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1Response__Functional.html</anchorfile>
      <anchor>a37bb0c0f5bd551905209e8e961c40618</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_IPCoordinates</name>
    <filename>classpanzer_1_1Response__IPCoordinates.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseBase</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>ac01e0d5d7239a2c3c29fa00d912729de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response_IPCoordinates</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a41a031b4c3e191614fc110e6a4e92d9a</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>ae1135af44f3b49b8f5cca8da8046e622</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a9b46ad02d30318190695b909d377cb77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const std::vector&lt; panzer::Traits::Residual::ScalarT &gt; &gt;</type>
      <name>getCoords</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a6a725d80a5fd666b7476adcce19ad3bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Traits::Residual::ScalarT &gt; &gt;</type>
      <name>getNonconstCoords</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a72d1c6c9a818dd078e8da4f14ed93001</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_IPCoordinates</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a8c5651f14a6b5b5c891d51f8a38d81e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_IPCoordinates</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a49682f001e16843d258df7f892a11bc3</anchor>
      <arglist>(const Response_IPCoordinates &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Traits::Residual::ScalarT &gt; &gt;</type>
      <name>coords</name>
      <anchorfile>classpanzer_1_1Response__IPCoordinates.html</anchorfile>
      <anchor>a9041f4f8612223fe5bf2ef130c4e599b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_Probe</name>
    <filename>classpanzer_1_1Response__Probe.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseMESupport_Default</base>
    <base>panzer::GlobalEvaluationData_BCAdjustment</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>adb4372319f234ee539c1acee0a5e03a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Response_Probe</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a5f99bcdb43df24b75e221546cb7c677a</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linObjFact=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>adf03947a768ccbae080241674c727ac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a895bde176a76c97be5b4e53e0157f662</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a9048a82001581b619325a9875329863e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>ad042b346a3ce1f4ca12238fe8aaea509</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a4239fdae729d5d93514c1ff3fe491eee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>acd317045d708c3fb3bd9f4bbd1a9d2be</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>aa66cd9d7502f2a73e9111e031c4bbf31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>adc3fc6aeb76700cd4409b04c448311be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>aef37f77746fb127740b0adf793baec0b</anchor>
      <arglist>(const GlobalEvaluationData &amp;localBCRows, const GlobalEvaluationData &amp;globalBCRows)</arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>value</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>acfe5f6bbc14ff4ff53df36f96b8dde80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>have_probe</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a5f61572ea972c81e0ddb2ad35fe60cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a90f36e9c5aab148f5a1e96d3a28f423d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_Probe</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>ac6fddb41b419966e79ae399795531e85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Response_Probe</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a647d483ac5e60f4e748e36df11e70c52</anchor>
      <arglist>(const Response_Probe &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setSolnVectorSpace</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>aaa60ca73c50f88f608c85fe69a2c8e94</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;soln_vs)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a9a36fc7b5f6c58aa9241fddab85f0a45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::ThyraObjFactory&lt; double &gt; &gt;</type>
      <name>thyraObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a5237750c20532b1c3118b494cfaeb492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>uniqueContainer_</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a9c2676f8a82f83bf9e172f7e35a1c676</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1Response__Probe.html</anchorfile>
      <anchor>a69d31056c1c0590be242ee208fd488fb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_Residual</name>
    <filename>classpanzer_1_1Response__Residual.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual.html</anchorfile>
      <anchor>a4cc7eb0fdef9b4d7ffd1d99b831e19ad</anchor>
      <arglist>(const std::string &amp;responseName, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual.html</anchorfile>
      <anchor>aab587eca5d38a06a76b76f7058820489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual.html</anchorfile>
      <anchor>a8d6686369185e53bc9ea4f2eb0d08586</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual.html</anchorfile>
      <anchor>a1fea86280b897347ea99363bab0274a5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_Residual&lt; panzer::Traits::Jacobian &gt;</name>
    <filename>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</filename>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>aa4c62a6983596decdf233b56765a253f</anchor>
      <arglist>(const std::string &amp;responseName, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>abc4b231d2265099318dc023ff05b5896</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>getGhostedJacobian</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a08671d1964ed67ea31940d1fe5dc61a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>getJacobian</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a64fbb77f9f6a4dbf11f116b904e48aab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setJacobian</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a7065a7fa8ebd4cc3512dfe3f92fbe8d8</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt; &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>allocateJacobian</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a539302b35ceb95fd180e1d79a6be9ab8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a3f430d14b12c7d0bf7bab2d2ee0ec725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>afe0c84dc08112a829d3181dbd1509d18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a34753b7418682cb216f0eb86ed9c18e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>jacobian_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a0a07d6d8219eea6812d1d54e39415c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::LinearOpBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>ghostedJacobian_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a474ddb2d56c56e4451b1850d22712512</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::Response_Residual&lt; panzer::Traits::Residual &gt;</name>
    <filename>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</filename>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a615d1af425e7b3348f4511e0eba250ce</anchor>
      <arglist>(const std::string &amp;responseName, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Response_Residual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>adc94dadc01a15f7f169ba6c3a44c3dac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>getGhostedResidual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a94e95cbbfd08136ffe47ed24ee1c39ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>getResidual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a885ee27a5c8d6d0cde4bbf2dc13fd057</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setResidual</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>abfe4823929d79bcd2f76c1be4b6befe8</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt; &amp;res)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>allocateResidualVector</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a4be08ca16eedfed93ce8cf4780a45ebb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a4b15f8f78fcafaf98d4775af62736c77</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>aa55cab86606bf9c544ec86b78b8bae01</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a1c9fc7ed07b42aae060a567bbfb39f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>residual_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a93d3a2b7695f0aa8c48ec71ce48b5043</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; panzer::Traits::RealType &gt; &gt;</type>
      <name>ghostedResidual_</name>
      <anchorfile>classpanzer_1_1Response__Residual_3_01panzer_1_1Traits_1_1Residual_01_4.html</anchorfile>
      <anchor>a7075c351b3c0ca80c3ffd436c70f79c6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseBase</name>
    <filename>classpanzer_1_1ResponseBase.html</filename>
    <base>panzer::GlobalEvaluationData_Default</base>
    <member kind="function">
      <type></type>
      <name>ResponseBase</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>a3a678fcb73c3f237f5150936f98f4a82</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseBase</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>ac89714f8184b8b827758396e2b2f79b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getName</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>ab3590522fa7ff4557a2aae3fdf5753cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getLookupName</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>ae2fe8cdff119a9859f2012d4cbc05e33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>ac95f818809a45cca1e7fd039def13b4c</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>a36bf779d33b7215f0110288d3ac733b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scatterResponse</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>a2807bb1b47390520859fc0f9fc46237e</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeResponse</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>af091d2220a77c0a5d16ce36d2665d893</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>buildLookupName</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>a1b10cc1b74cfce32a3476cc23fa5b475</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseBase</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>a4f02948ebd79775e47642baaeab8da6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseBase</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>ad6ac1b2f93c6685e1671a4956731c7e7</anchor>
      <arglist>(const ResponseBase &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseBase.html</anchorfile>
      <anchor>affd89c573e18dfcd919a156b3ca1d883</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseContainer</name>
    <filename>classpanzer_1_1ResponseContainer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseContainerBase</name>
    <filename>classpanzer_1_1ResponseContainerBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory.html</anchorfile>
      <anchor>abd2975b5dba79842d680649c9373701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory.html</anchorfile>
      <anchor>a680b8c018764cf98bb8bf01c1322e462</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory.html</anchorfile>
      <anchor>ad50164947219587ccf408a99f91a6ddf</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstdescs) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory.html</anchorfile>
      <anchor>aac4e55719b71e1018d79125247ed0bf2</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory.html</anchorfile>
      <anchor>adfa59b68856f398b1c2ef34bc5f8960f</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory_ExtremeValue</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactory</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_ExtremeValue</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a2f946dfe9e683f71e0c0bea2bc00be50</anchor>
      <arglist>(MPI_Comm comm, int cubatureDegree=1, bool requiresCellReduction=true, bool useMax=true, const std::string &amp;quadPointField=&quot;&quot;, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linearObjFactory=Teuchos::null, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;globalIndexer=Teuchos::null, bool applyDirichletToDerivative=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory_ExtremeValue</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>ab97e72c7590ff2863322bbde1f06221f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a916c1aa008fb031834cc6a9144224b8a</anchor>
      <arglist>(const std::string &amp;responseName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a7a50338c1a415153818330322b6cfc07</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstDesc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>ab12e809caf70aec9df4566f978232558</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>afeb56e6bd3cd2ff087c987b26badd354</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getCubatureDegree</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>acfa026b2474d4e6cbefe406112c5a042</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MPI_Comm</type>
      <name>comm_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a7f5479a22cb3d5f9c0e5d2b94ac1807b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cubatureDegree_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>ae1afbdfd6a8c86fc39281fb56948126d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>requiresCellExtreme_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>ab31c49b7cbad3988138a3efbd11fef5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useMax_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a6c94c57ee8764ecd222d96b18a59bd8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>quadPointField_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>acf881a95ee7b05d77e7b5fdd40cd9761</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a2d08f0fd44e3c6f50cfda578b8f3a3d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a1d48ec184b02f20e3920f8ea241626da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applyDirichletToDerivative_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__ExtremeValue.html</anchorfile>
      <anchor>a3439ef6ba91aa76d19f3251cd666917c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory_Functional</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactory</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_Functional</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a7e385408ae65363b383c65f13284dc77</anchor>
      <arglist>(MPI_Comm comm, int cubatureDegree=1, bool requiresCellIntegral=true, const std::string &amp;quadPointField=&quot;&quot;, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linearObjFactory=Teuchos::null, bool applyDirichletToDerivative=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory_Functional</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a34a0bff780f7d4d50e71d87d28dc451c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a240794ee0e2a3cb5d7d6519976c96dc6</anchor>
      <arglist>(const std::string &amp;responseName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a1208fae04c1b59b822d47944111c739c</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstDesc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>acfc840b46c643a14bdbdbcc394992a79</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a7615b81c16cac0cbcc509d19e43f4f7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getCubatureDegree</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a5de4d983ff475ad912f8fa9e25f3723b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MPI_Comm</type>
      <name>comm_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a92e09dcdefd456319e418c40ef165280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cubatureDegree_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>ac0cbcafdaaf63d2a4aee994f3dbe5a49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>requiresCellIntegral_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a00232a58e152ec752edc7bf18e32f65c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>quadPointField_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a660105738cfca38f8b1ac267255513c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>a948e82baf13492e788d8465a6213a808</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applyDirichletToDerivative_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Functional.html</anchorfile>
      <anchor>aab5d83f2995352c10505593ebb304903</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory_IPCoordinates</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactory</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_IPCoordinates</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>aff0305763a458723ce63305fb0b3f812</anchor>
      <arglist>(int cubatureDegree)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory_IPCoordinates</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>a00dfdd067ab67194b902e3124ddb3ec7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>a6e88af9207d6054c6d8410263fae3692</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;eBlocks) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>aec8b4c3e239af7d2eb38d2e185df700a</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>af98d64a2c0e09469619b80062d4869ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>a7fd1368f97b1652b2d4ea2a5fe5b8fcc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getCubatureDegree</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>a0260e942974357fe0418542ec76ec4f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cubatureDegree_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__IPCoordinates.html</anchorfile>
      <anchor>ada5176e97f4f9a39247dd81709288d03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ResponseEvaluatorFactory_IPCoordinates_Builder</name>
    <filename>structpanzer_1_1ResponseEvaluatorFactory__IPCoordinates__Builder.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1ResponseEvaluatorFactory__IPCoordinates__Builder.html</anchorfile>
      <anchor>a7cc302321dee754c15e41d9f5d52a751</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>cubatureDegree</name>
      <anchorfile>structpanzer_1_1ResponseEvaluatorFactory__IPCoordinates__Builder.html</anchorfile>
      <anchor>a900cc86d627591a36009bf6106ed7771</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory_Probe</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactory</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_Probe</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>af4d4b7a94e4875b315030afc32c8b13c</anchor>
      <arglist>(MPI_Comm comm, const Teuchos::Array&lt; double &gt; &amp;point, int fieldComponent=0, int cubatureDegree=1, const std::string &amp;fieldName=&quot;&quot;, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linearObjFactory=Teuchos::null, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;globalIndexer=Teuchos::null, bool applyDirichletToDerivative=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory_Probe</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>ad05421aa6be592890f7c41f8ab981f20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a2aba5d50a173b0e891e70260e649401e</anchor>
      <arglist>(const std::string &amp;responseName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a8f0cb9b3b3bdf1512af2e2148cb56ecd</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstDesc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a10996d0814761d50a1eb13f641c8c9d1</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a43781f67f9b5a9986d58f24a0a01c37e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>getCubatureDegree</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a6c1a282cffff5e024000dd7891b921e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>MPI_Comm</type>
      <name>comm_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a7edfb0e8b43e691f492fa433b4eeda3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::Array&lt; double &gt;</type>
      <name>point_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a96201046e368500b7e1861bda0430140</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>fieldComponent_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>ac59ef9448e9668d6764a6d570e88642f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>cubatureDegree_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a7f9b974c7fb50055709f46f2b9e3e47f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>fieldName_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>a77e2643a2b2daba27299334f0d56c0c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>linearObjFactory_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>ac1d2d75dfd8e6f17c0d16996a7690e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>afda42055dd90a42b80e07d8a4d3ecf88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>applyDirichletToDerivative_</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__Probe.html</anchorfile>
      <anchor>ad5a87ed55fdcdd66f16521dab996af09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::ResponseEvaluatorFactory_SolutionWriter</name>
    <filename>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseEvaluatorFactory</base>
    <class kind="struct">panzer_stk::ResponseEvaluatorFactory_SolutionWriter::RemovedFieldsSearchUnaryFunctor</class>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_SolutionWriter</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a10b8015f781d945ceffb1be8e27296df</anchor>
      <arglist>(const Teuchos::RCP&lt; STK_Interface &gt; &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactory_SolutionWriter</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>aaf54e05499fa8b91a98189ef7a5f73be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>aba622a0dfa03c73805fd227e52428911</anchor>
      <arglist>(const std::string &amp;responseName) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a38e56d74ff85ce67324a7c23c81581ba</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; panzer::WorksetDescriptor &gt; &amp;wkstDesc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a9a0ab8c11febe785b6467592ec839017</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a3e30ef69da2115d3fa2615a2f42e99b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scaleField</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a68b94c76b55f821e58f38b17790c15b3</anchor>
      <arglist>(const std::string &amp;fieldName, double fieldScalar)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAdditionalField</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a4191fba6f1f0eaf05ae1c18feee3d849</anchor>
      <arglist>(const std::string &amp;fieldName, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddSolutionFields</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a8dea75e9653f5251efc2eea1a68577f0</anchor>
      <arglist>(bool asf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAddCoordinateFields</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>aee9468aa0e8c23e6e1fa6e7b213db45e</anchor>
      <arglist>(bool acf)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeField</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>af64c430afdbf8feb70eea99fd567191d</anchor>
      <arglist>(const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>bucketByBasisType</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>ac60629c091193e8ca59e922dfdea7dcd</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt; &amp;providedDofs, std::map&lt; std::string, std::vector&lt; std::string &gt; &gt; &amp;basisBucket)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>computeReferenceCentroid</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a0b90198ffc4e101a448826b9ffe03da2</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &amp;bases, int baseDimension, Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;centroid) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>deleteRemovedFields</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a90c1aeb7ea751a478500b6ecb272dfe7</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;removedFields, std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt; &amp;fields) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a03278ff2cfe9f7734b4b7a0e303443e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, double &gt;</type>
      <name>fieldToScalar_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a684f222697cab44a894a88be14471d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_set&lt; std::string &gt;</type>
      <name>scaledFieldsHash_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a299117748964bd1ffac8e032ce795e2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; const panzer::PureBasis &gt; &gt; &gt;</type>
      <name>additionalFields_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>acbf908fa5e7358b886a11f9a747fe721</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>removedFields_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a9adab15180088e9c3018bd7caa506367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>addSolutionFields_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a736a652895e377f2ecab427ce51da154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>addCoordinateFields_</name>
      <anchorfile>classpanzer__stk_1_1ResponseEvaluatorFactory__SolutionWriter.html</anchorfile>
      <anchor>a2961b1716b628a59293c2d8d4ab7e9ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactory_TemplateManager</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactory__TemplateManager.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__TemplateManager.html</anchorfile>
      <anchor>a090005888f35ce4ce3d8579bf599722a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ResponseEvaluatorFactory_TemplateManager</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactory__TemplateManager.html</anchorfile>
      <anchor>a054caa34a34ef2ac9e6f2f099809b8a0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseEvaluatorFactoryBase</name>
    <filename>classpanzer_1_1ResponseEvaluatorFactoryBase.html</filename>
    <base>panzer::EvaluatorsRegistrar</base>
    <member kind="function">
      <type></type>
      <name>ResponseEvaluatorFactoryBase</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactoryBase.html</anchorfile>
      <anchor>af93610986827b9cc5a39c620efafa325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseEvaluatorFactoryBase</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactoryBase.html</anchorfile>
      <anchor>abe40b9ce986218b684b8fe8c6df6b068</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>buildResponseObject</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactoryBase.html</anchorfile>
      <anchor>a570f816fc8c287a68358687059a2584f</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkstdescs) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactoryBase.html</anchorfile>
      <anchor>ab008584515678a6d123c0321c2a94ad9</anchor>
      <arglist>(const std::string &amp;responseName, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;physicsBlock, const Teuchos::ParameterList &amp;user_data) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>typeSupported</name>
      <anchorfile>classpanzer_1_1ResponseEvaluatorFactoryBase.html</anchorfile>
      <anchor>af963500f096727d7f1916550134bac10</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::response_bc_adapters::ResponseFactory_BCStrategyAdapter</name>
    <filename>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</filename>
    <templarg></templarg>
    <base>panzer::BCStrategy</base>
    <member kind="function">
      <type></type>
      <name>ResponseFactory_BCStrategyAdapter</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>a577bd3f0ea565870433d0f9f26d2b484</anchor>
      <arglist>(const panzer::BC &amp;bc, const std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt; &gt; &amp;refVec)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseFactory_BCStrategyAdapter</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>adf8938837e5214d33f2bd973dc714ada</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; panzer::Traits &gt; &gt; &gt; &gt;</type>
      <name>refVec_</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>adce7c46203479ae65d4368cdf7be8474</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>a33096ac0499190e97881ce61b1aed9aa</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;side_pb, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterEvaluators</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>a178ba635b27134196d2fae915bb7fcd6</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterScatterEvaluators</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>a989e4ba040001b19fbcbbdf09d6f44aa</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildAndRegisterGatherAndOrientationEvaluators</name>
      <anchorfile>classpanzer_1_1response__bc__adapters_1_1ResponseFactory__BCStrategyAdapter.html</anchorfile>
      <anchor>a8e7376d0e66cafd2f89582ed3ad39380</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;side_pb, const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::ParameterList &amp;user_data) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseLibrary</name>
    <filename>classpanzer_1_1ResponseLibrary.html</filename>
    <templarg>TraitsT</templarg>
    <class kind="struct">panzer::ResponseLibrary::Overloader</class>
    <class kind="struct">panzer::ResponseLibrary::Printer</class>
    <member kind="typedef">
      <type>TraitsT::EvalTypes</type>
      <name>TypeSeq</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a2763723dc19d7f453e9fb19e680fbc0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseLibrary</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ab0bae1a8644792444a37b0a6573e9b82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseLibrary</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ada2296b1c5056243cc3ba5c5c6bc66d6</anchor>
      <arglist>(const Teuchos::RCP&lt; WorksetContainer &gt; &amp;wc, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi, const Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt; &amp;lof, bool residualType=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseLibrary</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a3458bd88958e628dc1f8c309875c7b20</anchor>
      <arglist>(const ResponseLibrary &amp;rl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a387e220ae4636aac61270649be6bfd13</anchor>
      <arglist>(const Teuchos::RCP&lt; WorksetContainer &gt; &amp;wc, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi, const Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeResidualType</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ac3263dce003b34b48146ae2593fd43e7</anchor>
      <arglist>(const Teuchos::RCP&lt; WorksetContainer &gt; &amp;wc, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;ugi, const Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ad0b548c4f3a1a0eeaf5dd1aeda7ecb8b</anchor>
      <arglist>(const ResponseLibrary &amp;rl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyResponses</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a505c693b2c3161e1d466941426bceae5</anchor>
      <arglist>(const ResponseLibrary &amp;rl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; WorksetContainer &gt;</type>
      <name>getWorksetContainer</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a8bf4b4e7de1df9ed7fe83dffb723fbf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt;</type>
      <name>getGlobalIndexer</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a2d0bd438695c37cd8f3dd8268027b6df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt;</type>
      <name>getLinearObjFactory</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a1dc514f66be5bb95262050df94143c05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aaad79f5b336021588aaa2517dc3c193e</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; std::string &gt; &amp;blocks, const ResponseEvaluatorFactory_BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>af78544201fa9d1c36f13e758d985df4f</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; std::pair&lt; std::string, std::string &gt; &gt; &amp;sideset_blocks, const ResponseEvaluatorFactory_BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ae674e7068904b10095fb3281c6d760d9</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkst_desc, const ResponseEvaluatorFactory_BuilderT &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ResponseBase &gt;</type>
      <name>getResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ae4dcea9d64a8931642f02261cbba342f</anchor>
      <arglist>(const std::string &amp;responseName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getResponses</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a0fff232db86cff913eea39039316ccb0</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; ResponseBase &gt; &gt; &amp;responses) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponseEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a82fd3d54c81bd4065c8799bc34d3048a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResponseEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a1986a90f2d55cb0991abbe233b295311</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::EquationSetFactory &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildResidualResponseEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a4290026a7242d4727e0247014d068e7d</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::EquationSetFactory &amp;eqset_factory, const std::vector&lt; BC &gt; &amp;bcs, const panzer::BCStrategyFactory &amp;bc_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file=false, const std::string &amp;graphviz_file_prefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>responseEvaluatorsBuilt</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aa33be61467fc4f77bedc6b0e3c4dc50e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addResponsesToInArgs</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ac8f6f1a34c2376df00fd27b467356ac9</anchor>
      <arglist>(panzer::AssemblyEngineInArgs &amp;input_args) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ab32eec2e617a3b61ab27ebc3fb75f634</anchor>
      <arglist>(const panzer::AssemblyEngineInArgs &amp;input_args)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ae103c253c630b70fe5f0f2fecee70143</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useClosureModelByEBlockInResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>afe702353f085c4ca143ee16203a5338a</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableGather</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>abeec8bcf59e3f2c15846d083a6ad63e3</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disableScatter</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a1e00562f608578f861ad84fdfd7e38d2</anchor>
      <arglist>(bool value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isResidualType</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ad9e1d081d3c25bbaccc2b880d843e272</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildResponseEvaluators</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a63f892a24110f4ac2f86be4255a271b7</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::Ptr&lt; const panzer::EquationSetFactory &gt; &amp;eqset_factory, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;closure_models, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file, const std::string &amp;graphviz_file_prefix)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addResidualResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a03f1bdd37f8e9e955c9a4a6b9fbb9b70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addResidualResponsesToInArgs</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aeb907b77f43d07c28a172c78b1790578</anchor>
      <arglist>(Overloader&lt; typename TraitsT::Residual &gt;, panzer::AssemblyEngineInArgs &amp;input_args) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addResidualResponsesToInArgs</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a405a0ef6922179fa5b9eed437e5fa46d</anchor>
      <arglist>(Overloader&lt; typename TraitsT::Jacobian &gt;, panzer::AssemblyEngineInArgs &amp;input_args) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addResidualResponsesToInArgs</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a1302762b72aaaeaef24e0e29518861bb</anchor>
      <arglist>(Overloader&lt; typename TraitsT::Tangent &gt;, panzer::AssemblyEngineInArgs &amp;input_args) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addResponse</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aac644b92dcfc6856a926e4101a9d1e80</anchor>
      <arglist>(const std::string &amp;responseName, const std::vector&lt; WorksetDescriptor &gt; &amp;wkst_desc, const Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; TraitsT &gt; &gt; &amp;modelFact_tm)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TypeAssocMap&lt; panzer::Traits::EvalTypes, Teuchos::RCP&lt; ResponseBase &gt; &gt;</type>
      <name>Response_TemplateManager</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aaf4a07a69c7c57366467b37b17652647</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::unordered_map&lt; panzer::BC, Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; TraitsT &gt; &gt; &gt; &gt; &gt;, BC::BCHash, BC::BCEquality &gt;</type>
      <name>BCHashMap</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a4887f05a99a3e467db22fb9bae3dca2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; WorksetContainer &gt;</type>
      <name>wkstContainer_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>adf0678cfd137e9452733ac144de047a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>abc458c8b14dee66b05916d81a4c1b9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; TraitsT &gt; &gt;</type>
      <name>linObjFactory_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a8eebc46759b2255fe0be9715425f121d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; FieldManagerBuilder &gt;</type>
      <name>fmb2_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ae85307e2caf3402ef49d5bbdf94a8628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AssemblyEngine_TemplateManager&lt; panzer::Traits &gt;</type>
      <name>ae_tm2_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a50197b00e09fc1dfaa3246fa43c70321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; WorksetDescriptor, std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; TraitsT &gt; &gt; &gt; &gt; &gt;</type>
      <name>respFactories_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>afe714254fabf09fdb4ba7f2bae4528e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>BCHashMap</type>
      <name>respBCFactories_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ae3857f2c3ba23de60ac48274bf383790</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>nextBC_id</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a08a71161747348b26d84e8cd5fc6d06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::unordered_map&lt; std::string, Response_TemplateManager &gt;</type>
      <name>responseObjects_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ab836b3ec1d1bf2dd7b74f4346862bf13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>closureModelByEBlock_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a2a3b9f35acd82099c3a07c03ef907a7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableGather_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>aee7f98a1ea6e060236a365a7fd7b2ecc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableScatter_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>af7675a9e531e548321d5a09ad9104786</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>residualType_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a157d319bff235537a71c7ee727c62cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>responseEvaluatorsBuilt_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>a7ed18c752819f0e3d70a3718bc575c53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>ghostedContainer_</name>
      <anchorfile>classpanzer_1_1ResponseLibrary.html</anchorfile>
      <anchor>ac10059a979ed6f2168e82b302bc19898</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupport_Default</name>
    <filename>classpanzer_1_1ResponseMESupport__Default.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseMESupportBase</base>
    <member kind="function">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>af9119ada9b0d0fedf470f3de808d7734</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>af44f4d44e2f020569540abd3d55a38d0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a8cacab2ba2f1d620f9169eb1f7b998dd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a9cd59e9d859500b4b55eb2bdead60e36</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a7cf49a9aa382376dc55936e30b9106c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a4f51b27a24313c8174c3d9b8e1dc3267</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;destVec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a16593087c35106ee6d01c42bb925f1b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>aa0840aab0a84b276c4e2d1685bef8e8e</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;destVec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>acb5c2a6e6563584673261ff2d5351baa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>useEpetra</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>ac42adc0041d814b2974ffdd956a12d4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>useThyra</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a96e0783d617d718241dc5dc2ebeca62f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_Vector &amp;</type>
      <name>getEpetraVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a7311e645892b41a17988b853e7e89af0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Thyra::ArrayRCP&lt; double &gt;</type>
      <name>getThyraVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>af79cf2e3f43417fcb734e3ecb5c2d312</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a525469742e33f96f7011efdc923d4726</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a787388adda3ee4183f4f31cc1bddbc63</anchor>
      <arglist>(const ResponseMESupport_Default&lt; EvalT &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useEpetra_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a07cf3b6884a90675ccff905d3afa88eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MpiComm</type>
      <name>eComm_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a95863f48844e7b67bbadb6311849ef54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>map_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a72bd7da78feae6c197823ab0511680d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>eVector_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a169671a7074979edd93391390cbb7f60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useThyra_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a916c7a676b6e7b18e3ab0de60946d4e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>vSpace_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a75a25b96e1778de34b5899a4fb81fe90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>tVector_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a279ca24717295194d4eff711a0a0bc54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>tComm_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default.html</anchorfile>
      <anchor>a6989c5285a3368fcf599e55c94b01ed9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupport_Default&lt; panzer::Traits::Jacobian &gt;</name>
    <filename>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</filename>
    <base>panzer::ResponseMESupportBase&lt; panzer::Traits::Jacobian &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a8750133fa15c1db999f074c5c67b3278</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm, const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;derivVecSpace=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a893a04671290f6dc84bfbe1085bff570</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>aa2804ccedfa0d59a789b7588e55fba57</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>abf78660868b87a94cfd1a96676c91ca9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>supportsDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a3dfdab1bcd188977640544822c143578</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>getDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a823d3631fd25ea28bde6d36b940ebd7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>buildEpetraDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a2041c7de170aa720febb44d7253e74a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>ae88e9225671fc5841a87431100105674</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;derivative)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>buildDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a520313bb15facbc9a2653b3bcb0f42ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>af8352a5528e57f29fe01c6c910b5bc1f</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt; &amp;derivative)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a6e6f8c7f17046a3952a0f62633764e3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getDerivativeVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a3b6a43ce6537e22deb4f4abc537782ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDerivativeVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a6de56fa2bc48297c3179ec6b6c73ddbf</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt; &amp;vs)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a5b3891cc8276607b36d400c750c9b534</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a854022ff65d7f9b139a424f098215e2f</anchor>
      <arglist>(const ResponseMESupport_Default&lt; panzer::Traits::Jacobian &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>tComm_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a8c8d9294d9db482beff62026c048501a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>derivVecSpace_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>acbf034209d807cbfa716604cff2dda82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>eMap_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a616f151442e60fd27ddb4cfed809aa0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>derivative_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>ab3bdaa2e26633d39a0f4dbe0ccd87d77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupport_Default&lt; panzer::Traits::Tangent &gt;</name>
    <filename>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</filename>
    <base>panzer::ResponseMESupportBase&lt; panzer::Traits::Tangent &gt;</base>
    <member kind="typedef">
      <type>panzer::Traits::Tangent</type>
      <name>EvalT</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a9b8e2305a39c4b8a5814eec577647671</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ac273348ae0bc9c61f8efc0684937eafd</anchor>
      <arglist>(const std::string &amp;responseName, MPI_Comm comm)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a156d74bfcf64830aa35a6541656d112e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::size_t</type>
      <name>localSizeRequired</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a6f0f72241333acab2db5304128076f68</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>vectorIsDistributed</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ac7705811a1974a268b272fe91af50c82</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ab99c2f60f339ae2125806b646998337d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a96d1dd67e37a17f93784bccc376f86ba</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;destVec)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a84f4d8227c337a63cdec3b00eb41c1ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a1e6f5d4b9877c8b3e7077cb5067a7bc4</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt; &amp;destVec)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>af9b6467b8b30bc97b84db93b784ed4dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>useEpetra</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a2814732398ece2e11e17c0f9c0f83674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>useThyra</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ad6d3e3b5b4536401b1b18f02b0208262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Epetra_MultiVector &amp;</type>
      <name>getEpetraMultiVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a836c6dfbc784562fe4e0560964ef4ded</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Thyra::ArrayRCP&lt; Thyra::ArrayRCP&lt; double &gt; &gt;</type>
      <name>getThyraMultiVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a6261193bfbf2962a45966ec885ee8968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>numDeriv</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a27b4e0f08705fad6fb5cfcccf403d93f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a6b337c383385bbc51b3ba9a4a14c690d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupport_Default</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ad64bcdfa45f26dba2dad80c449e0e8c8</anchor>
      <arglist>(const ResponseMESupport_Default&lt; EvalT &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useEpetra_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a12e1ea0fb4a02bc7a1d41e659dab7bd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Epetra_MpiComm</type>
      <name>eComm_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a7baaa6a51a9fd344942a38bb8f4abb30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>map_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ac95fed52cbefd1c99f5ef774d0b1e18f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>eVector_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>aa64fe2868e93f6ac7292ae4debc63d5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useThyra_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a1cc3fd356846cd34cbbfad8278c2e43b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>vSpace_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>adebd7f8b56c2a26a87ca63d1ce546347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>tVector_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a2d0d03fece3e8cd9978c4cfe8be5a2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; Thyra::Ordinal &gt; &gt;</type>
      <name>tComm_</name>
      <anchorfile>classpanzer_1_1ResponseMESupport__Default_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a5e39bfacd5d6842e23d0ce7e32a3ea3e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupportBase</name>
    <filename>classpanzer_1_1ResponseMESupportBase.html</filename>
    <templarg></templarg>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a3d980d2de4e3f046836904a74a932bff</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a5d11a94e45ffbf10e71c08b57faf127a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a2a9ca614644b74096cfa912bd25fcfe2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>ae0bc9261ff01477b6f003291f8db9ac8</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;destVec)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a0c16aadcb70e9bb012a25bc9f980005a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a52058b911926f2f41415032b44554243</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;destVec)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a7149391acd03a9b34d5f9e209409ef8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase.html</anchorfile>
      <anchor>a24a5ec195b9e862b3162c2f31749b9f9</anchor>
      <arglist>(const ResponseMESupportBase&lt; EvalT &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupportBase&lt; panzer::Traits::Jacobian &gt;</name>
    <filename>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</filename>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a41650cf96c29d970ec152479bb9a0470</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>aaabe13587e0169964ed8773f23876c9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>supportsDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>aea65fcaf1088d0ecb8438f32ced2ccd6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>buildEpetraDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>ae0e01e366abe57e60d7d4ad8a22bbea9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a6294c0d749b77e1d90b0d3d90c504c86</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;derivative)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt;</type>
      <name>buildDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>ac5ccf144e129c880177e595d3984c5d0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDerivative</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>ae789d4c37e204e3bbbd8f9699dfa85b3</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt; &amp;derivative)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>a1d7bc26fece7069731f43f60dd48cc0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Jacobian_01_4.html</anchorfile>
      <anchor>abc4f1ab3061e06314ef8c769c443df36</anchor>
      <arglist>(const ResponseMESupportBase&lt; panzer::Traits::Jacobian &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupportBase&lt; panzer::Traits::Tangent &gt;</name>
    <filename>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</filename>
    <base>panzer::ResponseBase</base>
    <member kind="function">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a4802cefd2e3a0fef22838e6933e0e9ef</anchor>
      <arglist>(const std::string &amp;responseName)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>ad527a7af7aa710314589a18dc7a3a9f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>aabd880111c98fc5dc39d024ea2a12558</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a2b18a799043ebb891a8b13f9989aaa97</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;destVec)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getVectorSpace</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>aab32b32a37d26b9972391476df4380d6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setVector</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a6e894991a9eebb7db554e5405b717ae8</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::MultiVectorBase&lt; double &gt; &gt; &amp;destVec)=0</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>a741ecf1ad661c7ca8595884e228e3c33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ResponseMESupportBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBase_3_01panzer_1_1Traits_1_1Tangent_01_4.html</anchorfile>
      <anchor>afbb5df0fc77e23f66cb54a2109df7a55</anchor>
      <arglist>(const ResponseMESupportBase&lt; panzer::Traits::Tangent &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseMESupportBuilderBase</name>
    <filename>classpanzer_1_1ResponseMESupportBuilderBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ResponseMESupportBuilderBase</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>a26d2117728a0c871584dbaef0664781c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDerivativeInformation</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>ab2066e8f9fcf030dfeadecf78cf8cccd</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;linearObjFactory)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildValueFactory</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>ac06079583ec15200617febbe71d92c4a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildDerivativeFactory</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>ae8c47e4d395479a77eb12f0063a719e6</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>buildTangentFactory</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>a2ce4b2c5cad4cde03cd606d4621f7724</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>build</name>
      <anchorfile>classpanzer_1_1ResponseMESupportBuilderBase.html</anchorfile>
      <anchor>ae4ccd94fae9ba046ac2a974e1fd8e811</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ModelEvaluator::ResponseObject</name>
    <filename>structpanzer_1_1ModelEvaluator_1_1ResponseObject.html</filename>
    <class kind="struct">panzer::ModelEvaluator::ResponseObject::SearchName</class>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject.html</anchorfile>
      <anchor>a3d3e6890c3a17b37f9d99a14eea765ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; Scalar &gt; &gt;</type>
      <name>space</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject.html</anchorfile>
      <anchor>a1269a50a9baa384f1c9bb757c06cc483</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; ResponseMESupportBuilderBase &gt;</type>
      <name>builder</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject.html</anchorfile>
      <anchor>a5ad78548051e13a4f804a8f34aaa2caa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; WorksetDescriptor &gt;</type>
      <name>wkst_desc</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject.html</anchorfile>
      <anchor>a43113e041a28cc905d8f7397c1f935c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>aab85e06582454c526267ae6964453a1b</anchor>
      <arglist>(const std::string &amp;name, const Teuchos::RCP&lt; panzer::ResponseData&lt; Traits &gt; &gt; &amp;data, const Teuchos::RCP&lt; const AggregatorT &gt; &amp;aggregator, const std::vector&lt; std::string &gt; &amp;responseNames, int worksetSize)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a93af4573d42e7df72da83564bde518fd</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a175ff28eb5130c4b26b267b0a06058c6</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a98bf56a596ee79b019edce7cc27d9629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>responseDummyTag_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a44b207347f366ff4b7c1183a9ab37520</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; panzer::ResponseData&lt; Traits &gt; &gt;</type>
      <name>responseData_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a87bf81e58e72245f53a630e67e57f83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const AggregatorT &gt;</type>
      <name>responseAggregator_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>adf0f14663fcadb49bf13247c7bc2c181</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell &gt; &gt;</type>
      <name>responseFields_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator.html</anchorfile>
      <anchor>a9a2ed7e7ab680ef0750a257ab1272b02</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_ExtremeValue</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_ExtremeValue</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>ae13d1909804b30f8372360de5d8f1ced</anchor>
      <arglist>(const std::string &amp;name, const CellData &amp;cd, bool useMax, const Teuchos::RCP&lt; ExtremeValueScatterBase &gt; &amp;functionalScatter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_ExtremeValue</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a13e38ca7d9a7d0ba81376967cb13b4fa</anchor>
      <arglist>(const std::string &amp;extremeName, const std::string &amp;responseName, const CellData &amp;cd, bool useMax, const Teuchos::RCP&lt; ExtremeValueScatterBase &gt; &amp;functionalScatter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a5565cda96a08f03a2bbffe3847d764e0</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a880fa93cb5941bcf4c5c5ee7ae97cc83</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a1212c619ac162feff1d6b899d2ebca44</anchor>
      <arglist>(typename Traits::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a47cf9f14c6fa5845193021c5008301a0</anchor>
      <arglist>(panzer::Traits::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>afd1d063aa8be24388d96e313a8f229de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a0cb4b27d9c0f92d9185b2e3d210678c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Response_ExtremeValue&lt; EvalT &gt; &gt;</type>
      <name>responseObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a70397d897da096dda1fb3a33f09f6be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a8eab57c8212d63ae5e094d6be7e72138</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, panzer::Cell &gt;</type>
      <name>cellExtremeValue_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a453f365c7f87c7f511f67459bbfca320</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; ExtremeValueScatterBase &gt;</type>
      <name>scatterObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>a467d33de820ba40843df9c67f42f8ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useMax_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ExtremeValue.html</anchorfile>
      <anchor>ac12e06621d6ee9227a537c29ad89bac0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_Functional</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__Functional.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_Functional</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>ae372a2abe2c581af491432479162cbb6</anchor>
      <arglist>(const std::string &amp;name, const CellData &amp;cd, const Teuchos::RCP&lt; FunctionalScatterBase &gt; &amp;functionalScatter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_Functional</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>ade038f38078016ac4f4d6a027b1e5fd9</anchor>
      <arglist>(const std::string &amp;integrandName, const std::string &amp;responseName, const CellData &amp;cd, const Teuchos::RCP&lt; FunctionalScatterBase &gt; &amp;functionalScatter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>af5315c3fb0bef0893f9357700996fa0c</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a53d077348f50187f0caf9d2847c1ad1d</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a4d45b04dcab2320043131d49c8fe2222</anchor>
      <arglist>(typename Traits::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a5427769580bca46a56ec3f21c4c7abbf</anchor>
      <arglist>(panzer::Traits::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>acc1b28874b72c8c7babad7c09456fa39</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>acef464fb16755f809d92e25fe715fd6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Response_Functional&lt; EvalT &gt; &gt;</type>
      <name>responseObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a26f708ace1549b9f378a74fd21256348</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a2dcc2fdc4674570dace5cc28112e1040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, panzer::Cell &gt;</type>
      <name>cellIntegral_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a977950759754c09647d984dc9db946af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; FunctionalScatterBase &gt;</type>
      <name>scatterObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Functional.html</anchorfile>
      <anchor>a223b6a1e90f65ae701d13cbc69d0ec13</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_IPCoordinates</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_IPCoordinates</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>ab61b7ad4ca5a403f00a210660ce60da6</anchor>
      <arglist>(const std::string &amp;name, int ir_order)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a2c7385c19b5fda0f9f045e3dc1c38fe8</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a1015e653e400aa18b2b1602812de6069</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a561719f7178950e2927855423c1dbc6f</anchor>
      <arglist>(typename Traits::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a0dd31b4c6a4a1ccaafd8a1416c6f3285</anchor>
      <arglist>(typename Traits::PostEvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>aa440fb9c14420ed3620c9b99af46eb11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>afcbf607b664e96048a7c8c155d60d0ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ir_order_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a2dc616e848661036338255eb88e21b91</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>ir_index_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a73ad9d379405365b899d7df5e9bdceea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Response_IPCoordinates&lt; EvalT &gt; &gt;</type>
      <name>responseObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>ae0ee1f00d15547ab9fe6c53bc0f74d4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; ScalarT &gt; &gt;</type>
      <name>tmpCoords_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>a17610fa4b074427bd893d0d12b849832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__IPCoordinates.html</anchorfile>
      <anchor>aaea621e917076b72b7d2147fd1e058f7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_Probe</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__Probe.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ResponseScatterEvaluator_ProbeBase</base>
    <member kind="typedef">
      <type>ResponseScatterEvaluator_ProbeBase&lt; EvalT, Traits, LO, GO &gt;</type>
      <name>Base</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Probe.html</anchorfile>
      <anchor>a61068f718cab8475c1230495a5d65333</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_Probe</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Probe.html</anchorfile>
      <anchor>a38144121c8d0110be2900d2d1cff7380</anchor>
      <arglist>(const std::string &amp;responseName, const std::string &amp;fieldName, const int fieldComponent, const Teuchos::Array&lt; double &gt; &amp;point, const IntegrationRule &amp;ir, const Teuchos::RCP&lt; const PureBasis &gt; &amp;basis, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; ProbeScatterBase &gt; &amp;probeScatter)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_Probe&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__Probe_3_01panzer_1_1Traits_1_1Jacobian_00_01panzer_1_1Traits_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ResponseScatterEvaluator_ProbeBase&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</base>
    <member kind="typedef">
      <type>ResponseScatterEvaluator_ProbeBase&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</type>
      <name>Base</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Probe_3_01panzer_1_1Traits_1_1Jacobian_00_01panzer_1_1Traits_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aec1440b8a7bc637e6e8bc604c90f73d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_Probe</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Probe_3_01panzer_1_1Traits_1_1Jacobian_00_01panzer_1_1Traits_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abe33505ba56d294ca50108d66e88397a</anchor>
      <arglist>(const std::string &amp;responseName, const std::string &amp;fieldName, const int fieldComponent, const Teuchos::Array&lt; double &gt; &amp;point, const IntegrationRule &amp;ir, const Teuchos::RCP&lt; const PureBasis &gt; &amp;basis, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; ProbeScatterBase &gt; &amp;probeScatter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__Probe_3_01panzer_1_1Traits_1_1Jacobian_00_01panzer_1_1Traits_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad38cdac8f8b22442c9719e4d5c09358c</anchor>
      <arglist>(typename panzer::Traits::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ResponseScatterEvaluator_ProbeBase</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</filename>
    <templarg>EvalT</templarg>
    <templarg>Traits</templarg>
    <templarg>LO</templarg>
    <templarg>GO</templarg>
    <base>EvaluatorWithBaseImpl&lt; Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_ProbeBase</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a5cd2ddb609932adf5a0d10b797d8d4a3</anchor>
      <arglist>(const std::string &amp;responseName, const std::string &amp;fieldName, const int fieldComponent, const Teuchos::Array&lt; double &gt; &amp;point, const IntegrationRule &amp;ir, const Teuchos::RCP&lt; const PureBasis &gt; &amp;basis, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; ProbeScatterBase &gt; &amp;probeScatter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a581e5d409a296cf9e7453ba4bfdc0d93</anchor>
      <arglist>(typename Traits::SetupData d, PHX::FieldManager&lt; Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a28754d8a2cee11cee633b2f83c41f42f</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a8c2b9d69477418ff3185e27998e7b82b</anchor>
      <arglist>(typename Traits::PreEvalData d)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a0ee08ef5d65541fb0c6d5cc42940bf7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>computeBasisValues</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>afaecbdaaaa95c5cd61a3f512227a9260</anchor>
      <arglist>(typename Traits::EvalData d)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a6b968a699c801bb7745a9c0606ba94a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fieldName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a60edbc05d24f42d4e5cd3a6c03037174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fieldComponent_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a3985069533706562117fa53cacf61273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; double &gt;</type>
      <name>point_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a70f3a85848d8e7ae729efa3d19730b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>basis_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a222e4bab1dc00c9b9f496b3e3df55d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Response_Probe&lt; EvalT &gt; &gt;</type>
      <name>responseObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a10d645f5b6bb7e6b282aa7b0b021a8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>topology_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a46d3469a65ace7b8f21a7340545c50d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>ab7e408ecf47d876f9a81334266da5068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a1ccec50a61de0e320cd8a6fe1b9b37b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PHX::MDField&lt; const ScalarT, Cell, BASIS &gt;</type>
      <name>field_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a67291812107522912bc8a5f406e4db93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ProbeScatterBase &gt;</type>
      <name>scatterObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a07f5ae2a165022127a9d81d3ef3baafb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cellIndex_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>adc8bb27395d9eb175f1b071281107abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>num_basis</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a7c561bc3eae70250c38d7f79c7b80ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>num_dim</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a4122d1d7038df2af2e5936be43964616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>basis_values_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a769fda17fe04fd309f27137315232e18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ResponseScatterEvaluator_ProbeBase&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</name>
    <filename>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</filename>
    <base>EvaluatorWithBaseImpl&lt; panzer::Traits &gt;</base>
    <member kind="function">
      <type></type>
      <name>ResponseScatterEvaluator_ProbeBase</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a5cd2ddb609932adf5a0d10b797d8d4a3</anchor>
      <arglist>(const std::string &amp;responseName, const std::string &amp;fieldName, const int fieldComponent, const Teuchos::Array&lt; double &gt; &amp;point, const IntegrationRule &amp;ir, const Teuchos::RCP&lt; const PureBasis &gt; &amp;basis, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; ProbeScatterBase &gt; &amp;probeScatter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a581e5d409a296cf9e7453ba4bfdc0d93</anchor>
      <arglist>(typename panzer::Traits::SetupData d, PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a28754d8a2cee11cee633b2f83c41f42f</anchor>
      <arglist>(typename panzer::Traits::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a8c2b9d69477418ff3185e27998e7b82b</anchor>
      <arglist>(typename panzer::Traits::PreEvalData d)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a0ee08ef5d65541fb0c6d5cc42940bf7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>computeBasisValues</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>afaecbdaaaa95c5cd61a3f512227a9260</anchor>
      <arglist>(typename panzer::Traits::EvalData d)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>responseName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a6b968a699c801bb7745a9c0606ba94a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>fieldName_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a60edbc05d24f42d4e5cd3a6c03037174</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>fieldComponent_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a3985069533706562117fa53cacf61273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; double &gt;</type>
      <name>point_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a70f3a85848d8e7ae729efa3d19730b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>basis_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a222e4bab1dc00c9b9f496b3e3df55d7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Response_Probe&lt; panzer::Traits::Jacobian &gt; &gt;</type>
      <name>responseObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a10d645f5b6bb7e6b282aa7b0b021a8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>topology_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a46d3469a65ace7b8f21a7340545c50d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>ab7e408ecf47d876f9a81334266da5068</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a1ccec50a61de0e320cd8a6fe1b9b37b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>PHX::MDField&lt; const ScalarT, Cell, BASIS &gt;</type>
      <name>field_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a67291812107522912bc8a5f406e4db93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ProbeScatterBase &gt;</type>
      <name>scatterObj_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a07f5ae2a165022127a9d81d3ef3baafb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>cellIndex_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>adc8bb27395d9eb175f1b071281107abd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>num_basis</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a7c561bc3eae70250c38d7f79c7b80ac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>size_t</type>
      <name>num_dim</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a4122d1d7038df2af2e5936be43964616</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>basis_values_</name>
      <anchorfile>classpanzer_1_1ResponseScatterEvaluator__ProbeBase.html</anchorfile>
      <anchor>a769fda17fe04fd309f27137315232e18</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::RVEF2</name>
    <filename>classpanzer_1_1RVEF2.html</filename>
    <templarg>TraitsT</templarg>
    <base>panzer::GenericEvaluatorFactory</base>
    <member kind="typedef">
      <type>std::unordered_map&lt; WorksetDescriptor, std::vector&lt; std::pair&lt; std::string, Teuchos::RCP&lt; ResponseEvaluatorFactory_TemplateManager&lt; TraitsT &gt; &gt; &gt; &gt; &gt;</type>
      <name>RespFactoryTable</name>
      <anchorfile>classpanzer_1_1RVEF2.html</anchorfile>
      <anchor>a20bd147e2b6c50218417357a2c2aeeb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RVEF2</name>
      <anchorfile>classpanzer_1_1RVEF2.html</anchorfile>
      <anchor>abc48d773bfe2e7cec9c086eec41a40d4</anchor>
      <arglist>(const Teuchos::ParameterList &amp;userData, RespFactoryTable &amp;rft)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registerEvaluators</name>
      <anchorfile>classpanzer_1_1RVEF2.html</anchorfile>
      <anchor>acb7b0ae7a40b9c3b0bc58bc274275988</anchor>
      <arglist>(PHX::FieldManager&lt; TraitsT &gt; &amp;fm, const WorksetDescriptor &amp;wd, const PhysicsBlock &amp;pb) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>userData_</name>
      <anchorfile>classpanzer_1_1RVEF2.html</anchorfile>
      <anchor>a8e2339646131d06d61b77edac1265b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RespFactoryTable &amp;</type>
      <name>rft_</name>
      <anchorfile>classpanzer_1_1RVEF2.html</anchorfile>
      <anchor>a3ba0beb03fb480a94b06d764f48d27c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::RythmosObserverFactory</name>
    <filename>classpanzer__stk_1_1RythmosObserverFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RythmosObserverFactory</name>
      <anchorfile>classpanzer__stk_1_1RythmosObserverFactory.html</anchorfile>
      <anchor>a7657c8b96f443ddbd765a0a40115465d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>useNOXObserver</name>
      <anchorfile>classpanzer__stk_1_1RythmosObserverFactory.html</anchorfile>
      <anchor>afd92d86f37ab0d8f2d6af0c641ca4784</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Rythmos::IntegrationObserverBase&lt; double &gt; &gt;</type>
      <name>buildRythmosObserver</name>
      <anchorfile>classpanzer__stk_1_1RythmosObserverFactory.html</anchorfile>
      <anchor>a84a85db183c4d0ca9e6a6253cfa14f36</anchor>
      <arglist>(const Teuchos::RCP&lt; panzer_stk::STK_Interface &gt; &amp;mesh, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;dof_manager, const Teuchos::RCP&lt; const panzer::LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Piro::RythmosSolver</name>
    <filename>classPiro_1_1RythmosSolver.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ScalarParameterEntry</name>
    <filename>classpanzer_1_1ScalarParameterEntry.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Sacado::ScalarParameterEntry&lt; EvalType, panzer::EvaluationTraits &gt;::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScalarParameterEntry.html</anchorfile>
      <anchor>a6f43a14307368340268c5ade0d59b1dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRealValue</name>
      <anchorfile>classpanzer_1_1ScalarParameterEntry.html</anchorfile>
      <anchor>a3c05c724453bb469c731a06b085cbcfa</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classpanzer_1_1ScalarParameterEntry.html</anchorfile>
      <anchor>ae01689b499155e51514f9db8661df6ae</anchor>
      <arglist>(const ScalarT &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarT &amp;</type>
      <name>getValue</name>
      <anchorfile>classpanzer_1_1ScalarParameterEntry.html</anchorfile>
      <anchor>a73bc8729874a12e0beee895fac0cdaf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ScalarT</type>
      <name>m_parameter</name>
      <anchorfile>classpanzer_1_1ScalarParameterEntry.html</anchorfile>
      <anchor>af79b8865a1405ebbb659c8880ef4cb98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::ScalarsTag</name>
    <filename>structpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4_1_1ScalarsTag.html</filename>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::Scatter_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1Scatter__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Scatter_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Scatter__Builder.html</anchorfile>
      <anchor>aff67f16f64159e55a9968f35acbc7fbb</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Scatter__Builder.html</anchorfile>
      <anchor>a5b0c69dfc05d62f17037b39b05d40dcc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1Scatter__Builder.html</anchorfile>
      <anchor>a8fa6f931ba14e1aa3d3169d91e8a88e4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::LinearObjFactory::ScatterDirichlet_Builder</name>
    <filename>structpanzer_1_1LinearObjFactory_1_1ScatterDirichlet__Builder.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ScatterDirichlet_Builder</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1ScatterDirichlet__Builder.html</anchorfile>
      <anchor>a30a65eee2508cd3b7242168377e561b5</anchor>
      <arglist>(const Teuchos::RCP&lt; const BuilderT &gt; &amp;builder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>build</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1ScatterDirichlet__Builder.html</anchorfile>
      <anchor>acac5d1ed3fa2474717e8cb85c5b355ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const BuilderT &gt;</type>
      <name>builder_</name>
      <anchorfile>structpanzer_1_1LinearObjFactory_1_1ScatterDirichlet__Builder.html</anchorfile>
      <anchor>aea514809aac32bd9d822e20c737b41fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedEpetra</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</anchorfile>
      <anchor>a5721d51010eeab9e1949173dc78bba6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</anchorfile>
      <anchor>a0cadf756361280a30f8945db13d58499</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</anchorfile>
      <anchor>a7f9524995bfdb76b5e950474e9ae6a8d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</anchorfile>
      <anchor>aca5bd9450b969e0d0b052dbb2f68e461</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra.html</anchorfile>
      <anchor>a8f320f45ed467beffeb115d922d1e345</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac6ddb114da43e61d5d07877efe4b3255</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8af06047bc4642f287f60cb821286933</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af62838870025a746f0dc000174b236e2</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5e3c6c7475fbc7421d90081833060ada</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa1fba7c70b2aa421f5d4d4d8c691d48e</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adca9b32cee3f7029380aab06f3a9a5eb</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abc995256c4db5f91e679e5b827331b86</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa9099ef41ec801e3c6bf3f764b0f582b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7d6a37e596b92f5ac49e11440d661585</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abd5ea5f605b27fac8e2e2bf3e3604570</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a05415083684e8739a991446721089331</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9a6157eaf9f1c8b4f7d4ea6c2f81a210</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adcf2cb774a9d9bf85e1972edfcef513e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a54acc0dce59c9647ff21bc6e2a8aff14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6d5ff058e91bcdfc714397374cae837c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab1a4ed2947767357cca1560f49f5f4ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_eq</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac0dc3881da112b97bd3510be0dfc3f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aaa89fefb8b7e5aee21b97f2871495ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a823b10de9b92a5ac5ab93f6d405b3282</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab87fa42e6fc48a41f565433183e05d50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a54e993702541ab21a7dd2d3921619ae4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a93d8031a835fe98516f261e65f31c5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::BlockedLinearOpBase&lt; double &gt; &gt;</type>
      <name>Jac_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a00b0ee8ef37f9fa7ab72411b6312f159</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a05a89fc4de1d490b8c45124f0d4d78eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9dfb40cb8512a172dcde903a53633e98</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3d78ea87b07736b6877e05c6382d7ef8</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac666ce240662df89a00ef8c9c02f97e5</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afe099d182204b121c1c737137b46827c</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a46efc81e1b050d652c0459d1cb8818ab</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afe9874b89c2892451c96593fad94bf40</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad970711485cb0a17e83f362289f0f79d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a14f2328f9848a2aaed238f2b2dc8e822</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>acd9da0e258c1f7e3a5bc3cd0c3c7250b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af36fb71466496a636b68eaf4837e4b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0c967953ba745e5c30797b7b349068c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2c334579f35f46e9e64277fe305801a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afda29cbc968576e6b624139112ea82d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1d68f752911f8a042f72189896e1d473</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3dc0fb571169975603a5dc0b5b844769</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a78ee3e9b493b87bcbd770b614e3921c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4dfd45b91f79992cd7fe1f18bfa2e442</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a21d50294bbb07bb87d742d5b0909ae7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5eb12e778f48b15652c917aca2fe90b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a234a2f993306c6e9fb75c1d24d7498e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac625e2aca89a8bb6c88b1b655645ffbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a628dd945d65771878d37f4df494b3f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8c45d441f90c87bd15d3a488512ff304</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a09736bfd8000a83a8ea195af5e9efbe2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a355dcf9d9121cdc090c5add525f60621</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a917989154ac93a26eaf49762cd302738</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a26e47e8b3663efa0760f846f84ef541a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3bac88902aa994696372d50e17bc0221</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a649e21f38bb411c47586c52977d0785e</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af691c364e545ee7ee2b717b08cb1d63e</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a01ae3bf60beb68a5db8501b46231cb27</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae45b1bc1bea04d9acac8d04d84a033dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae7f2aa3e884f7b38b92762f0e407baa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a655bd3aa177944a3188d24641cfff215</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a63fbb0d68c7a9f597d350ef73f3db842</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a12d488cdd05ba3aabf036aa75eec01a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae651ab35dec003ece308abd8ba90e19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac9e4170aafcb2e3a7f5a78b599b9fb26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a012513918f3c80c554aca8efb7da38e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae0d3a3ffdf9d6777f5d6edd263d2268e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae188967d87f4080c0ad6e1a7d2b485a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad81aba2a4d795082b6bf488291297e30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af717ea418120c7271dfc04f00054f154</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa65e842cf9f2325e4e216069ea221a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac16e073fce202da7175e2681c3f6185e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac92832bdb9acc7d9132fff282c360000</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a331a0f3c19c4aa57691543d48f0458e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab81416f652dc71eff57b4519fc63752b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afc3693621997f4e543e0715ff9393c96</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedTpetra</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a9281e1c5aa15abc02d9b93b87a464414</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a7e43058dfdd64e2377c2324557d9782b</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a496b66f5e5a245dd1a4c78f72fbe9ce9</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;gidProviders, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a7080a519fc10d424a4dd976b20415756</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a1c22b258a41791b634edf5dde24dd0c1</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra.html</anchorfile>
      <anchor>a4db4d23dcc40476e23bb74c6c0379d80</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a6657b62dafbb79193eb04a0d579a0b4b</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a727cc61d7c48d6360fa38ae36e7eda83</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a85b4bed65eef3dcd4cd5236a9587890c</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>ac6f5b61dc0cec8e7a612cadc6844cf90</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a09389026927cdc328ab0eb6263466b4a</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a2b763287a9b4673e4277efe8e52e678e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a4956be685a5042732acaa4bbe43ec42e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TRAITS::RealType</type>
      <name>RealType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a7d8133c8f9c9551dd4b13aa7bf10bc32</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a805d0098c05cff6f949dead4ec88bb8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Operator&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>OperatorType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a8348ca5e4d5b128812d4b66afbec467b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a55f8250ef11454beb03752c64ef03d05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>aeb70937c18109168280ef05768e45058</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Thyra::TpetraLinearOp&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ThyraLinearOp</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>abe7c2727d4ae62d1b24ff4964647f1d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>afc8ae286272359c8be2fcb43f394b5d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>ae875185a0fda5c62e13de7c04e16961b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a176d1adc6c5bc268fba5a6d20c6a42e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>adb8110c55fb1b379eb4b9aec95940051</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>acd1acefcff793b6f595937e027b9e43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>ad6997115122e717a70d5cf4ef43a43bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>aa0335e5183dce592e943dc726604aa6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_eq</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>ac3f2b307fbf06ec196b7c3d2656f8de8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a5d878055440ac83efacdb62ab07aff10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a98f92e2b4ad0098af1c02b4c8902dd3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a97e3cfbfced6c5580855a21de438a878</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a5408b89d3a3de84107dcaf71852c7747</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a9f48c571a7457dc2b6910e83509768cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a908ed116067eca9a45c5e7ad79ff5762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRA96a11c31b1984e6e737ae0550d5a6ea0.html</anchorfile>
      <anchor>a4dc479f2c76b7c4920af0b26bd81a42e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a0150a803bc211bb499ce7e5e555ea33d</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ae9937428a649d55b7c54eb258c9bc529</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>aaf1eae4e616b3d1d596af30d988cfd8a</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a8cf47bd269ee56fa236c9a62701db026</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a9975501b98904109101baf0b7c018fab</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a455f2fd62ff6f46540e19f4104d14722</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a8f0d2eb464b7c4a94e94e9a512960b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TRAITS::RealType</type>
      <name>RealType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a9922811dd66321091ae3ec19bd4e4f88</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a604c80874d76748f6b72c6b4949f6ae8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a342e7ff08d522e64e0b52ed7fcde6be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a5cfcb847e9e44303ad1fb205238561dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ac408ba899d91d476fdb883f2081b6041</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a88182db5b1d9248e192c6349f7bc9421</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ada5f4973de3c9b95c28611bb6dfc7c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a0196600172bf21a995be3f8ead457eff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>aef17ca7e255dc9e0662bb4e162f0d25b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ad92791e70d59895602cd4373130ae894</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ada3bee162381d2783c4fad77d6a1ff2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a7b6697e4690422d4c4e3cf3de4370dad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ae6df06254f4f6c291ffd2a85eb429006</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a74bc1e656c165dd6b771178c9030011e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a7713402707587f1df664d8415ee92102</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a0e3865203b31b0fcbba24b2558bea75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ac5dc09ff9ac81a481d973d52bba8121a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a36c1049a05004f304ea076f158b6de5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>af2be5f4990f57d4e70181b428c602f36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>aa4140a4f84bfda063b5e6ac40e30fd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>a9711c5b67816fb61dc2f0043f38cd7fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ac4e41722a8c07049f77243351297e205</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRA0078d5af468b6e3a8a4d1bbf495fe61d.html</anchorfile>
      <anchor>ab64ac9f796bd06ec1de2be30290108fd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Epetra</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Epetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5dd44e3603e128df3a83bb66bfe39b84</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a24dd0e7d21c69bdd13fc0e65321f4895</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a08507e8fae82583eb8c4e117ffb40f51</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a20628da29fd339e883f8b5e1c12cd2bc</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abb8b3b2d1829c4cf248743630dc81433</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad0db68a1174c75758a38703c79ff5bda</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a346dde597f680a918652332d6e5c01c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2874bb29c1753fa42bf70c6da5ebb794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a987e675f2fd3a077b4fd81a54aa9d798</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab75d833bd9b4a1a7ebe10fbfeeed08b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae5bbb80ad4290ee7cb224cfc22364c43</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>colGlobalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adc91af977836eb2865c1dcbe3fd65c32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aee443e9a581e8a4011d617f912f7a3de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a847896457b211f5261b9c6c71ef6f367</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4db1dc32a997d9eaa016984bf0e94d13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_eq</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2382885f8030e8d756ca8eac27b4d55f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abd048ce6442428a24368cef65867de45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4f12b72b35db0a2b482a8e3d8ba490c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab7ce60d5935454469ba0420580a2dbe8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aaa7bf123a5569d56f0c172f3427c26c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const EpetraLinearObjContainer &gt;</type>
      <name>epetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afa439ff7204364ea2c32d8c08616b7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>preserveDiagonal_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa9369caf9e3415dd73c04541c347648a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0784f01b040ee00d326f19bf0c3c3a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7bf42118aa566f923e5e5c9550233028</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab02d3bf6955f018a2216cec586b8c06c</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a722d645475ef829c45d8eec9d20250ec</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad1f72441f46b1bdf0b20a8aeaef352f9</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab4d3fe7b2117a58e5d9df59600bdf773</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6feaf7ae9266a3fde33d21084d8e96a2</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5af530f16dd4cfee991af221238e45e1</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae83ccb540b673bc855aa2b601a01966d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5868c388a8fd3929cc49fd4e41d65217</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a24dbff417a23930ca630ac14786e140e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a265317cb96cabd367133520828db4036</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a75a80154faf60615ec15eace111eae66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab40f1286969a3b4657512eeb07f3f6f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a51254c4571d3b31e136a5df2fd6f805d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>addb070ce959648b11c9013d1f58827da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6ce979beca606da533d5596eb7b7fc76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a10a416dfe8b4a84b6b25740a174002d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a642e893dc5ff3e28c6c9ef9c02a6179d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adb54a0ca43da0cde8e2218351c52b4c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const EpetraLinearObjContainer &gt;</type>
      <name>epetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3396f953b5677184e51f2601aac922d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aac62de289048bbb8a8d56bccf88bc088</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4974e419e0b14928a4c06d93724a1522</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7a05d5b9fdbb37cba64508e354ada148</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af14e0e886edce10993d352a0f9684abb</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ace08e485589a376f221ac0eedca3a5ef</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a78c7798ee98ecba7569154dcdb2ccea4</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a98de29fccde4ba56bb358deb50b87e1e</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a108b8576ca8ce950ba6e9b2091825ca4</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9eb32ec4c5e27011e4a6840e8065579d</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab4e1f90617c62555ec8261bdc73fbeee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a35e92587bc83bf57a319d32d54faf861</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a922426f7bc98b3b6afb66fc5eab756c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4075a4b0547212eb21b03354d2984df6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a41e603890bf65921eddd335b85cebb63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a241b4687f36771f6d5baf3f56a2916f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abc730108cab9d5e9055e93b4d68f0664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>dfdp_vectors_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad72810eba795333674fd1338375cd3e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a605ed862cfc8c70ad18aace7f62f39d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2ccb5c8a5f21a01a4762da8e65a5ba6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8b4bb7d54d80b9548a9c4fd9a2df3f02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4fa563c7079889974ab98ff9531a441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a388983a6fa9e58bd0cc601aa670e9ab6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const EpetraLinearObjContainer &gt;</type>
      <name>epetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7bb88387bae8302e3245a9491c48aecb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac48b9bd4e085870fc0bcae863de35f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a59a24750f150a5aa5c1ec23438147f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aad98a1ad10d8cf8aa94e1a88a871c80d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Tpetra</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Tpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af5b1a5ad98ca5c100c71c439922a1b36</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a2aea1243c5d5835e384ac9ed684f7087</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab37dbe1852447d1c37c2224f64cda79c</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6a80146ca5d047ae8f10d486a6f0118d</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac3572660a0c914b0b01f71de6762bcb6</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa056aa21b226a9e885a6aff5d36e8bd7</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad24161b8193d08d136555ad3ab1fb465</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt;</type>
      <name>LOC</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a75b2e2e2dff62399f4516ed889bc502a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab4d3977d1f2cef86828ecebb2ce1d424</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1cf26239a402794b374af79267a127e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af3adc1420639c673a012c9adbc29cb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a04fe722ca248a54f3872f92f1285f009</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6d7599f0ce84471f3b00bfea0c98ad30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab0362fb9891cbe4bd3a109cf4c86c6b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a520c56377c63aa3ff9f0961700366920</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_eq</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab5a8f9fa3d01d36007b666095695055a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a65782a1878ace537279092ca1fc75bf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad59e1377db5b982315f0e160fff00859</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; typename LOC::VectorType &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>abe4fa31d60aae37003aea7da5a78cb0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a238eb971250edd7a5a0f552ce49b5d81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7aea686d4ed9175c135b75c0f07c8d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a68ef5e512a54cf94495915064d0a8b71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa60f68394a161ca35bb1d5c9cd5783e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a363fa4e18d4f25c3963e13180eb6c05e</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8606703bc1c7bc3403393c43caa285be</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0d52202d13da522a59fcdcff7e367e26</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae650f650de08d278cdc0410095f4253c</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a25257b6b9954078a9e37a4d7a2b84495</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ade064a93b63bf2aa6585e1a76caf28a3</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8e3a6983a1baad13f4b20f296bcac466</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt;</type>
      <name>LOC</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a101b7712a9a0fd279567a0aec5ac9e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a31e39c2206672304436940dd9e504820</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8d3c81ec7a55be0de7c06adaa6cdaa0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a924406f39b03f02de4666dae440a6889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3384187ff7eee0fea1adb190b0d3be54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a728e6788937858d645bcb1d3feec3ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a78f9b49dfb4ab79884740fca009dd1dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5e20cb304503dc5acb02e97ec439ed45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a22ca41059fd99bb94620f02a64968c7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a518a5a484a5b26620eb9dd04689fe446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; typename LOC::VectorType &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac7eb3159bb18e961aaf3cf866e1330bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab3da3f5dce2c4897533fb130b2c8d642</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const LOC &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa7e65c3c531722c8e561f778082c76dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad7509732b1716dc672e425186a73f2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1fefcd78eb689a0cf6356f749538afa3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a06836f5254e4479f16f36fa827e6baf0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af6ae7f8f0a0088e3f4f9464f20766c7d</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>abe9837860462fda859d470e1b3159fb9</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6339636307c03966ada0d2cf628e8774</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad7471820d5e85ae7eed72ce1f2ec68bc</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aaa29ba75c9d54b71a97f604dc388ac57</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0efb0d3ba34695694aa6f1b654e70bdd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab1927e29fa28be2f14bdec8312e48c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt;</type>
      <name>LOC</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a583be2cf5381921c435a09517b215ff9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterDirichletResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a76c90d53fda61381b0078cff70b01da3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a7893dcbacc40849b28edd07a394045b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae763149aec079781176d1436303e9d77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a144781d6695c51657a427c68716f3c20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a78b49f1c35903a6f31bc1d75ac441434</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad11e8043c48660efc962a71550ff59d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a54207df12ce18897898bd09e8ccec480</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>side_subcell_dim_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5c8ede8b62c568c0f1f05bd39da3288e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>local_side_id_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa18fef434c105e6629a328b2e7228c50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; typename LOC::VectorType &gt;</type>
      <name>dirichletCounter_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a91d625caae3901626f6a49d88747ef30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae617e5f43ec8e6103432a0720b85eece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const LOC &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a4da926ee31d55e88092c414edb8dc66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::ArrayRCP&lt; double &gt; &gt;</type>
      <name>dfdp_vectors_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afde8d655f489adfeee6412e578ab895a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>checkApplyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afd0461f9c66d5ce85b98f2f8f985b137</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>scatterIC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a4130023c4102822fb5a73b6090a81be7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const bool, Cell, NODE &gt; &gt;</type>
      <name>applyBC_</name>
      <anchorfile>classpanzer_1_1ScatterDirichletResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afca913b4627f9a793d5da3e241f697f3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::ScatterFields</name>
    <filename>classpanzer__stk_1_1ScatterFields.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>EvaluatorWithBaseImpl&lt; TraitsT &gt;</base>
    <member kind="function">
      <type></type>
      <name>ScatterFields</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a458c08fd7dd3c953103ecb4d7fc639f5</anchor>
      <arglist>(const std::string &amp;scatterName, const Teuchos::RCP&lt; STK_Interface &gt; mesh, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, const std::vector&lt; std::string &gt; &amp;names)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterFields</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a8e6d5a768f49ddb56e290158773b8d19</anchor>
      <arglist>(const std::string &amp;scatterName, const Teuchos::RCP&lt; STK_Interface &gt; mesh, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, const std::vector&lt; std::string &gt; &amp;names, const std::vector&lt; double &gt; &amp;scaling)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>aec5eb58b9ec7e6ece40d624084398ff3</anchor>
      <arglist>(typename TraitsT::SetupData d, PHX::FieldManager&lt; TraitsT &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a40c56d0478cd84be5244ceadf876c4f2</anchor>
      <arglist>(typename TraitsT::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a61eb34955be736e8a1381f100071756f</anchor>
      <arglist>(panzer::Traits::EvalData workset)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a4a0b3e7977ff8be7e702e4abe09f4c27</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer_stk::STK_Interface::SolutionFieldType</type>
      <name>VariableField</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>afb659f167a94fabca70ce49eb509f385</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a1b1339f980512aad08843b7587f7b273</anchor>
      <arglist>(const std::string &amp;scatterName, const Teuchos::RCP&lt; STK_Interface &gt; mesh, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, const std::vector&lt; std::string &gt; &amp;names, const std::vector&lt; double &gt; &amp;scaling)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a14e772de4e6f2c16137860d83501d23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>a74765dc4351078756e73c34593a0392d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; double &gt;</type>
      <name>scaling_</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>ae142af05cdecbb8c00ea5465efd16558</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>cellFields_</name>
      <anchorfile>classpanzer__stk_1_1ScatterFields.html</anchorfile>
      <anchor>ae1140f7922e19570abb832d3f312cc4c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedEpetra</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedEpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra.html</anchorfile>
      <anchor>a0243f9914d913df1ba4fd088a1bcdd87</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra.html</anchorfile>
      <anchor>a47542d10b6401b380fa0fddbbffa220e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra.html</anchorfile>
      <anchor>aeb6b5d40c8eecb25ccd8b8fbec599626</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra.html</anchorfile>
      <anchor>a5607dbea67e69ce8fdbeb2b720c973c1</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra.html</anchorfile>
      <anchor>af2862e528f771bdc12bd9d5eb310012f</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a58898df98aee9261074ee6e3ae5843f8</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9d61271212f928e99fa5f68b8ac9efe0</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aad5a8da63c88587aff54f1e605f17ee2</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afdf375066918b4f3bc01c302854b9fc0</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6554729d9d667b78ecf4b29fab20927a</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a58fcf4ffeb3fc63e3c5a6000645f60b2</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a89af35cef2f46101ed8e67b97b7a1746</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5da09e90f4d5cc93eadd897d6654c007</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a237d4ec971543e29674851d1732e5648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa11b4b7f4d166de2e03f24dc5906b263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6cffde65c41d45f920641671071aed59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a96487948c4425a8aacca091c7498aab9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a723204ae1b103ce0cab54020071f7f04</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aa9cc93595cf8d641d0d890b7a36239f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a42bdda2bfdcd3c7395e4e61dfd002856</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a58545e8ae1612d04cc63b82645ad08f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDiscreteAdjoint_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1c8f83bfb2268bd5b241f35b5218f8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a40e95e7b5da5948d3a41bcd408bd0d3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::BlockedLinearOpBase&lt; double &gt; &gt;</type>
      <name>Jac_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a80d4ea73c52f0cee958fddb83de32c71</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>acd4774499161a4980ca8a1524b5b3a4c</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab8e4edbd776415da5b2114c8909d23e8</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6e50b625edb5a941dd76f51a531cbb6c</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a51caaba42db44ef6bbbb46b95ef03071</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a987bd0c9cab0e689abc004fa70bed646</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae562d56e621ab9f8f915de2d54027a74</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a95d2d0127bbea916e811518785dad1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af22b7f48a596cfb282ce8f6967c08558</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a77a302c8a5c23f014433cd30200c450c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6c5ff5abc8d6e378ffc70f12b580c6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af40ef5308db7fdb6eb1761acbd57b768</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adfa7f1756dc97cd04b497c4a2a1db4c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a33ad446e3fab09ce32507635666d3cef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a91730a81e58292ab21412947d31b8dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2cce5507dc7c0f3c11308a749a83d421</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab153996aa24e02bea2abeff87b09b135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a34ad7b3fba42170ed71517fd3a8ffcd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a66ceb13569f6a6a6c580857251a77292</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a739e5070eadaf3434f5c09b79a97d2cb</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;rIndexers, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt; &amp;cIndexers, const Teuchos::ParameterList &amp;p, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a197bdac28c98533b8e9d6d115ba77243</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae918c9454ab9dbf6d9d4b60b14a2bb4e</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0d6cbff7d2105cc1d351a29d81b7c50f</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a16a79a0f97d49d45f25d0e0270416388</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af3819539b10ed2090e64bb86ebabf82f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_BlockedEpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a652d1bc663e4f6e61f36410926e92beb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a20efef8602f3d1ef41eb11848fe922f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a29f19480b3ec064d8e23ce3bd5f05458</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>rowIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8594304316e7252dcd4ead44d75910ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LO, int &gt; &gt; &gt;</type>
      <name>colIndexers_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>acbc547138adc9027fbd1a2028fa6d237</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>indexerIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ab5aef7f12094f42d724c548ec2de91b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>subFieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a93e7f10801442255cbd47d85f231cf4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2229cb134e94f44d1b1ab3c58e926d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9b60922bf27115811c75a3d188af9bfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Thyra::ProductVectorBase&lt; double &gt; &gt;</type>
      <name>r_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedEpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5db610178409c2d9265377e23e5d1d94</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedTpetra</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedTpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="typedef">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>a4cf057a6cdbad74c0bf14b11e2925123</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>ad4808edbaec9a1b309899e6540e1f5df</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>ae29cbc60e4fe95beed67188af7500604</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;gidProviders, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>aae622011745e40edafc79483f7b184ac</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>a6c956d90be3148d85fda47ca0c3191f2</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra.html</anchorfile>
      <anchor>a9e126d93a923ed990c00f59a14271488</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a2559f75a316e1f08bbc06b99c5aebbe2</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0c114a970a830bacca6ab4b1e4642542</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a704b3bb7fba331909de19530050256b6</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6ae7146efa7a43ff4f53914caa5e4cf4</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ade1d3505e029fb77fcef12255a6b6a06</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab511985f66fd94e200d8cde7a15fedb4</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8a3d94806c616ae145481c9a6e5d61bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TRAITS::RealType</type>
      <name>RealType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae425cc62dc4868df81389e22e017401c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab42dba2325ec412742f4c1d626033a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Operator&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>OperatorType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a13fd53be9ebff0c86830610d3b26c862</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad322380d366ffeb0660d82ef75aad431</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af0d2a151a9a39a37eb6d87b5cca6f6e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Thyra::TpetraLinearOp&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ThyraLinearOp</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad7f6a1db5f7d23435fc38d73bfaac78e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a2ec4b5dd87c4dc84f6cc2b4d7b328154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a09dfb2443b9e5f378e0bcd7806bdeaf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aae18b3a1612619a267b083f5b168d88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5781d81e66004c0f208615b90fef5cd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0f1337905011bef18dde01838fe14a60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aaae9cd2cfc8488d99e985f4c16df8ebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a550afdf07544174a8c1c48f03f8f3ce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a96dbebd31777d90772f124cd0fd8f0f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab472a2ecb63b9e2e6a959b75a10ba308</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa565f9065e407b443043c0ad1ff8d71e</anchor>
      <arglist>(const Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a6c422cc7fd5650bc90ba958ea3d6b2a6</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a716491f0adf4017126589a1fcb841654</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aca5f32f5910e6639e64ad7d3d4fa02df</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a521a15cb8b34d21e68562bd66660ec21</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ad08e8b3b6187421dd0c68becb0e9baf9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>TRAITS::RealType</type>
      <name>RealType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9fcd30d7dc5c0cc246a558b77799d982</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af0659ce08632f132ab7af9c7fb4571a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Vector&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af54ce458746c2a058ed9e4053459aee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsMatrix&lt; RealType, LO, GO, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a75969d523da5ef90c43a5617aa90af02</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::CrsGraph&lt; LO, GO, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af4f05ecd4e77525abb9358b42d18b0bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Map&lt; LO, GO, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae4531311e8829a486b6affdeb4b60b3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Import&lt; LO, GO, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a80d4ae98ed9c2056e454b2c20f1ca82a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Tpetra::Export&lt; LO, GO, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a328e7b4c9a58a7725cd9170abb8c99b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_BlockedTpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8233e6b7f8c1b0dc109a1b2eb27937ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1a8f538717d920060a13c988008319df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9a15926ab0301a4b850dca9fef629fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedDOFManager&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a319509f9f5d80021260b74bea175324d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0c7faf39e53a635c8680aa5bd3e686c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a493f70bd159cb164c80fc0d9a726df21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9361f6e271aa15effce511be71bdd6f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const BlockedTpetraLinearObjContainer&lt; RealType, LO, GO, NodeT &gt; &gt;</type>
      <name>blockedContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__BlockedTpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa474c079861609a053ba51473ef985af</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Epetra</name>
    <filename>classpanzer_1_1ScatterResidual__Epetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a7261c0419fc4b9c595472af998f4601f</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a03558ed143196b74adb04c3f321f7dc5</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;pl, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a22dc851ce200286241d46388ebcd4307</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8821aefb2d55c5e44db2a2ef96ab4ac3</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aee792add2a30e0e32165616d1c3e73c9</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0ac83deeff2e164ff0c3533c1b9f5a0a</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad8ff4d26f68db60bab6b2a3b3b7f9a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac3e402b9581ef14f938630cb0b9e9d3c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9dd4d08c3d734dc46b2de04fc29d2866</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a62af8b2771c9dc6d7582d71cc3baaa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5d14d3319d25b9d46110ed5b166f9b68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>colGlobalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae7560fe15f8bead34215e866d554f4e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2a8b005285c1d5140439f5d20b9f06de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a8d1d412bde81a7ffb9d3b13e11c10151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad199f3d3803c774512bfc35b471af5b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const EpetraLinearObjContainer &gt;</type>
      <name>epetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>abf6460e9fd6d081bb891843b4614bdba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDiscreteAdjoint_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3ab55a09833ab0875647b46c94a59cc8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5a475f8a709e8f3a43d36b06c80e847f</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a1ae271ef66d29a80331022443eda0f4c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;p, bool=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aabf7d0bff133ef1dcfc5cf0fe75bdf09</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a3ff964da3d2eb222214134c80901af1b</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a92990af7bb77951fdb5dd637088d66fa</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a5b94b18b983dfbb2022660a3836c824b</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af2e071a4d16b388ad4fed77ab0b63fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a2f06f015df535d8777833970a7736b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a72cb98ee6e303bb15ce46dbedc8ad927</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6c078d31994b9daff093ee170022fbd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a6ef6ade75321e9aea7374b2b017cf8e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ae487c2a498102b8df4747c565d59b3b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a9337f11e88b20f2098e1d8456800e0cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const EpetraLinearObjContainer &gt;</type>
      <name>epetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>af565a92bc3e9c171d0be7b1237dbbd66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDiscreteAdjoint_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0932b766b962259514726a7f49f4b1d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aee18adeecb13d88226aecff78d27d811</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer=Teuchos::null, bool useDiscreteAdjoint=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Epetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ac665974ff81d29cad1a750bafe2e3aee</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;cIndexer, const Teuchos::ParameterList &amp;p, bool=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>adef7c9cb65a1544e19493efab38f941a</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a77ff9f5e5f8de94738151b78195e64a0</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>aaa2eb131fbf9df9c51e4b18bee175a80</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afc283957b4fc45bd7d7c275a4c831bfd</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a50d4535df3ca04a8ead449b18846b6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>afb82dcbe11e263b67e1862f12cc67e77</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a0a1055479d4b47b7d07af896531fabbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>acb49c2243b4e4386012940a31b0cc9fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a821987903c4432315ffa4ebca9ed368c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a4902e8c2a91a3b22a2ddf66179f93d7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>dfdp_vectors_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>a06db8e022dac7d8d00fa81897d4c822b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useDiscreteAdjoint_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Epetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_01_4.html</anchorfile>
      <anchor>ad7828aca70b2dab3362a63638fec5bd9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Tpetra</name>
    <filename>classpanzer_1_1ScatterResidual__Tpetra.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5f8f8b2172fe678ea8573a2d84236583</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a03306f703c9ae454266801437954d066</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a08da3078a31f24fa0120d6cd363d7077</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac1a507f7723b2c96c398114a1fca8eee</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a52ba69fc4298a71900b72aaad04d8822</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>acce2fd7f3471f741ecd7144493847b86</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Jacobian::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a4f7c927d012bb510c520eeb8c0f7fe67</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a22caf74f8c308d7412475a85b98c6485</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9bdc2157302ca64e583aae5fb7c2c216</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ac36c425c2f1c585da0fc81a4eb8d8613</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a8aa901063eef5cecfd0aed1285e392ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>af34653fd7e36eea66d83ed9d24cb1196</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aae671e25e7361d069acb832d6bc36ee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a504553cc785162a579d9d7db49b2a0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1142f8adbd0bb630be060b61b17f887e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; int **, PHX::Device &gt;</type>
      <name>scratch_lids_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3f78f7d9bf3cf6a805804fb85c8ee888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Kokkos::View&lt; int *, PHX::Device &gt; &gt;</type>
      <name>scratch_offsets_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Jacobian_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab63c3c53bbf688f1e38f68986dc8a2b4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3b9ca4f63d72b073688c2344238631d3</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa48a29fbcf3b7dd1e11fe81c1afacba3</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a57a23189a952b89bf5430f4c831f09b6</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a41f22d926d9ebf45b299214d1ef44962</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa35af220c7d850bba696729b0b844f76</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>acc427653d7ad80e72a3cac6e217be850</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Residual::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a0cea8e258710a2f8c6f5714f752bc9ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a84e5bb3d7351629ab4b6608d3f2d432d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a9a0faa0ace3693f5f829ada9c45f61b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab21e59b5e4fe115308f4f8659ab296c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a37e1dfac73254581592700a92f929cac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>afd532f73d001359015fe2d7fd6ec6191</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a51d0a85ed3b31a13d1cca9b9af9bb557</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5ce8a9866c8c7f8fa677d73b6098346a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const TpetraLinearObjContainer&lt; double, LO, GO, NodeT &gt; &gt;</type>
      <name>tpetraContainer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Residual_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ae6761de673e945724dbf2b93cb007663</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</name>
    <filename>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <base>panzer::CloneableEvaluator</base>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a55db46404fd07832bf2035490c9e183f</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1f69583c8c71f8943c18431fd0140997</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt; &amp;indexer, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a3dc1200c43eec9aa0e2bc4ebcf89ef07</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;vm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>preEvaluate</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a5e1bd6dfe35adee1682b7fa23c6a3e8a</anchor>
      <arglist>(typename TRAITS::PreEvalData d)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>abb8ea89702d3787a60781afe1106a804</anchor>
      <arglist>(typename TRAITS::EvalData workset)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; CloneableEvaluator &gt;</type>
      <name>clone</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1969b3759d45a80c5c3a155c1ef53459</anchor>
      <arglist>(const Teuchos::ParameterList &amp;pl) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>panzer::Traits::Tangent::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1f8be75f72cb2ec9eb8fb651a87f18ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ScatterResidual_Tpetra</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aaf39b009ba811966449204b465900a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; PHX::FieldTag &gt;</type>
      <name>scatterHolder_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a06cf421bd69864803701b8468886e465</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, NODE &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a73155f6a9330049f8d4f4eeab405805c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a46fe1baebf923e095980dd1f8ffd6a51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>fieldIds_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a1c89bfba72e8116c6ffeb6656307f6d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const std::map&lt; std::string, std::string &gt; &gt;</type>
      <name>fieldMap_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>aa5cb938e212705b91c6e1a3f488ad18d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>globalDataKey_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>a91037a141da2f58cf9e1efd5ab76a144</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::ArrayRCP&lt; double &gt; &gt;</type>
      <name>dfdp_vectors_</name>
      <anchorfile>classpanzer_1_1ScatterResidual__Tpetra_3_01panzer_1_1Traits_1_1Tangent_00_01TRAITS_00_01LO_00_01GO_00_01NodeT_01_4.html</anchorfile>
      <anchor>ab9faeac4b968ea0b0a666fdae28575a1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::SculptMeshFactory</name>
    <filename>classpanzer__stk_1_1SculptMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>SculptMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>af21a978fd605087faa85948639a5e60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SculptMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>aafd154387e11a7c006a352315ffd2cc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>acc3456531e9bc511148da48fb9a1025d</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a1f746def46fe0b1cc2f446dc9020c0d8</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a5f24b5fba600f454f58452249c56e31a</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>af1551ce0c37f478814fcba6077291ecb</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a1c09ef4227ed78c3941cbee672d20550</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a81ba24f4a52c2063e5830c62803f379e</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a0b5894357bee1a90bb4b42e78edb61f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>callSculptor</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a22c006dfec37833598b62088fd32d657</anchor>
      <arglist>(stk::ParallelMachine parallelMach, char *diatom_file) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>writeDiatomFile</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a55267f905c8cbbfe090428ccfb1197b2</anchor>
      <arglist>(std::string stl_path, std::string stl_filename, char *diatom_file) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildNodes</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a85248dddad95461514f04981ad3b952d</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>ad8d411529242c349509de79f296d163d</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a6ce18801afe8c2d42ae10866a5415104</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a2581e60ebe04fbaac670fb5ae9459bc0</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh, int block_index, int *block_id, int elem_start, int *elements, int *nodes_per_elem, int *elem_attributes, int **elm_node_linkage) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a6c49330683dbd704300882f3999f86e9</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a75566157a54509a855f0e7ce595e9402</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNodeSets</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a0fd26d5406e7df3659d10aec03bf6c03</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const stk::mesh::Relation *</type>
      <name>getRelationByID</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a0ab198e7b1901c0f577da1d9194452d9</anchor>
      <arglist>(unsigned ID, stk::mesh::PairIterRelation edges) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>stlFileName_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a82155ec888384c17a5e964a7a9a1084c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>stlFileDir_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a172cca069c061467c9c1263c3af469fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xInterval_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>abd79ca21d3b7d3c091c7e6090a8b56b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yInterval_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>ac9d220a3dbefd3ef27c50e90f537e72c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>zInterval_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a95475fc3bd12c4ee0ffc6f671315cf2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xMin_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a0665a57b4f02218bf119be3829c4923b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yMin_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a7f960139d1b1997614bb6eee2ad41888</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>zMin_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a9f0a329535696969f9e155ecdf0722eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xMax_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a568a8c41e4acd12913ce9982ead46b09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yMax_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>ac7bb60aeb72feaadecd12c296fd811e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>zMax_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>abe80f037d0511b0dff1f1e15757a6f94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>ac04aabbfb1826a305d7b99bb938ff0e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a6adfeb4a3bcc4f8213aff1cd202a206e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1SculptMeshFactory.html</anchorfile>
      <anchor>a5e6161d8de1227b08a1e4f059a8c4fb5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits::SD</name>
    <filename>structpanzer_1_1Traits_1_1SD.html</filename>
    <member kind="variable">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>worksets_</name>
      <anchorfile>structpanzer_1_1Traits_1_1SD.html</anchorfile>
      <anchor>abda9d3d9776925fe4786308433585219</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::ModelEvaluator::ResponseObject::SearchName</name>
    <filename>structpanzer_1_1ModelEvaluator_1_1ResponseObject_1_1SearchName.html</filename>
    <member kind="function">
      <type></type>
      <name>SearchName</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject_1_1SearchName.html</anchorfile>
      <anchor>a5b834d29993be55f1c10e27ec3c58311</anchor>
      <arglist>(const std::string &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject_1_1SearchName.html</anchorfile>
      <anchor>ad7b1adad4ead1200bb180ec4f2b582f9</anchor>
      <arglist>(const Teuchos::RCP&lt; ResponseObject &gt; &amp;ro)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>structpanzer_1_1ModelEvaluator_1_1ResponseObject_1_1SearchName.html</anchorfile>
      <anchor>ae31c941006e7d8932c08734d6d829c97</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::SideId</name>
    <filename>structpanzer_1_1SideId.html</filename>
    <member kind="function">
      <type></type>
      <name>SideId</name>
      <anchorfile>structpanzer_1_1SideId.html</anchorfile>
      <anchor>ab5c82fa18320544be2fc72dd3f97b99b</anchor>
      <arglist>(const BC &amp;bc)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>ss_id</name>
      <anchorfile>structpanzer_1_1SideId.html</anchorfile>
      <anchor>afa5f8966ce4ba649361ef507bb8e23a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>eblk_id</name>
      <anchorfile>structpanzer_1_1SideId.html</anchorfile>
      <anchor>a04fea6968f0b78c227afd951d94a4baf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>is_interface</name>
      <anchorfile>structpanzer_1_1SideId.html</anchorfile>
      <anchor>a97511aa2442d8c799fe0b55df3ec586e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer_stk::STK_Interface::SidesetException</name>
    <filename>structpanzer__stk_1_1STK__Interface_1_1SidesetException.html</filename>
    <member kind="function">
      <type></type>
      <name>SidesetException</name>
      <anchorfile>structpanzer__stk_1_1STK__Interface_1_1SidesetException.html</anchorfile>
      <anchor>ae629f04c4dcc9a636760604fcf872f0b</anchor>
      <arglist>(const std::string &amp;what)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::SquareQuadMeshFactory</name>
    <filename>classpanzer__stk_1_1SquareQuadMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>SquareQuadMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a168c697774e2ab03224ff7597d0f86e6</anchor>
      <arglist>(bool enableRebalance=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SquareQuadMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a4d0fa60b47b82b830e7cf842b456dddb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a9544d7a28776ad2ac1ec072206d1bf22</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>adc5f7913b178ea36f33c443f7ba15271</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>ae3574cdf758686a90a151e127945de1a</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>ae24f6597d9000ed11751bb39016d27ab</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a72933de8ceef3364e8d9a72eeb1ad7c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a0db63b57a370f87738ff7e7f8f024c51</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a3575c1d82b0a99ec513b0d6230a42925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a3b20101e8d6dd117670d2188e5767e8c</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a64272b9c995bbd704724cd6390b8c8b2</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a3430b48d58943b263adb68ec1e5c7fa0</anchor>
      <arglist>(stk::ParallelMachine machRank, int xBlock, int yBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>aec1a759728adf57d0a202e908477d6e7</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineYElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a9e15bed18e7a6035a0954f11beaf8784</anchor>
      <arglist>(int yBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a66b86c5c6a69cfd51bd6175dbf367a00</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addNodeSets</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>af7d6e03b1f621740878b936f0d9ad95e</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x0_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a1e62d0f75312a44eb6a91d5508a363be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>y0_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a52f8481e1dc06e7824c76448db468378</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xf_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a56fc6d801f3ccf9a226523181d95435f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yf_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a68d9f306a7808663e1a7e9d142fc70fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xBlocks_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a0f0bd4340b883f9e2f9a78c4785bd33c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yBlocks_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>adc0e22eb531489840e43bdbc76fe8b72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a0b0416dca6515eb57d369764d19884b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nYElems_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a27b35c207b70424639f3064023673a62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xProcs_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>abd3745a324913fda1b6b761348dd0047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yProcs_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a9109edab42379314315952fc1a9568a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a4e78f324d2081386137f76bdb6a02ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a0a6570f68b505debd7abef603dcf8b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1SquareQuadMeshFactory.html</anchorfile>
      <anchor>a7af9d1cbb13241caae8821b12054c976</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::SquareTriMeshFactory</name>
    <filename>classpanzer__stk_1_1SquareTriMeshFactory.html</filename>
    <base>panzer_stk::STK_MeshFactory</base>
    <member kind="function">
      <type></type>
      <name>SquareTriMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a5dd275f5178e00e0fdc0fc0bc9117eb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SquareTriMeshFactory</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>ac233e7bb211f6e819ca53ff3e2788647</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a099dbabeecfcf509cee720465f6eeb06</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a37cf6ae9be7af98e4422528873781f9a</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a6494beca9d5a9a57dcadd559a1506089</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a06c32d8a5498f37bc8361df74f50f991</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>abd33aa54bfb131e650b6055581ca82e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procRankToProcTuple</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a1b937e7859bbde35da12194c7f4b9e7f</anchor>
      <arglist>(std::size_t procRank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeWithDefaults</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a3687cea69ed6500856a2b30711050f0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMetaData</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a363f5b6abe7c5c6729dfaa6415f3a540</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildElements</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>afa0839774e46934beabf4fe8c5a8a962</anchor>
      <arglist>(stk::ParallelMachine parallelMach, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildBlock</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a895fdcf3c7daf6970131c85e3b17ebae</anchor>
      <arglist>(stk::ParallelMachine machRank, int xBlock, int yBlock, STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineXElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a0713c1100746a06f307049cf2995f9b8</anchor>
      <arglist>(int xBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::pair&lt; int, int &gt;</type>
      <name>determineYElemSizeAndStart</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a94d80a2d034550e9ebda761af84fcf61</anchor>
      <arglist>(int yBlock, unsigned int size, unsigned int rank) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>addSideSets</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a0c5aa9c56a919eec4671ec38c5bb91c4</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>x0_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a283c56ea55f1092eb023361c93fa3347</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>y0_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a0a13ca7579db1b41ffb651a921eb7ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>xf_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a7325dbe2087762ca62fcd69f2274f307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>yf_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a8512c800fd43050965697222e555b8b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xBlocks_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a0f0247bad14bb82b32554f7358c7734b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yBlocks_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a6a9d7e3bb098314e41188ce454a7aa47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nXElems_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a9a92390da1f8f23d634f2689463609e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>nYElems_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a3dd506ece0acc85f148f888b205ee094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>xProcs_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a2282bd573f1ee969bb7e16a9016b3582</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>yProcs_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a32cf5e84bf1b301316e4e859e8295b0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machRank_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>ad1aeb5ad1f72fd27effaf38c950ff288</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>machSize_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>a555868e6a29780872548ca0a0e74f83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Tuple&lt; std::size_t, 2 &gt;</type>
      <name>procTuple_</name>
      <anchorfile>classpanzer__stk_1_1SquareTriMeshFactory.html</anchorfile>
      <anchor>acc5b8a0c461b583a6b6135d567ed74ec</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::STK_Interface</name>
    <filename>classpanzer__stk_1_1STK__Interface.html</filename>
    <class kind="struct">panzer_stk::STK_Interface::ElementBlockException</class>
    <class kind="class">panzer_stk::STK_Interface::LocalIdCompare</class>
    <class kind="struct">panzer_stk::STK_Interface::SidesetException</class>
    <member kind="typedef">
      <type>double</type>
      <name>ProcIdData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>abab18e0292a4e496a4228ffda5534828</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double &gt;</type>
      <name>SolutionFieldType</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a12c61761a75c4fda87fc9c5c40bc8c96</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; double, stk::mesh::Cartesian &gt;</type>
      <name>VectorFieldType</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a2a40d36a6c13ff11e684e02c037e35e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>stk::mesh::Field&lt; ProcIdData &gt;</type>
      <name>ProcIdFieldType</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>abdafa2bda97444cef80fa7ba2c520663</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>STK_Interface</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ad3785937e960bb6b55f502ae37a267eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>STK_Interface</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a2f742940f17422b4002ef688201bb072</anchor>
      <arglist>(unsigned dim)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>STK_Interface</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a309ef66d664ac0fd37621edab433d570</anchor>
      <arglist>(Teuchos::RCP&lt; stk::mesh::MetaData &gt; metaData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addElementBlock</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ad7b4fb190d0a000dd6e51bb9ba696a16</anchor>
      <arglist>(const std::string &amp;name, const CellTopologyData *ctData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSideset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8c2ac1a827876bcf8a0afd9a9b0dab9e</anchor>
      <arglist>(const std::string &amp;name, const CellTopologyData *ctData)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNodeset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8aa8d23f956937278dad5ca5fe5a9eb6</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSolutionField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac427c91942743c810c608dbe80ebc815</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCellField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a758d446c204b3fe0cedc702a3c963519</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addMeshCoordFields</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a819cf5a5c63b84c4767ab09cb392c61a</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; std::string &gt; &amp;coordField, const std::string &amp;dispPrefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab342fed97c7e1387018e503700c2b032</anchor>
      <arglist>(stk::ParallelMachine parallelMach, bool setupIO=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>instantiateBulkData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae9a501011e4705c63909460735912f49</anchor>
      <arglist>(stk::ParallelMachine parallelMach)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>beginModification</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a01927d034406c1c0241415eb03c8bfb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>endModification</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a977b2b4a9c00bdb27cb02b00a4c018ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addNode</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a714b197e8a4235b98c51da312c0b3f97</anchor>
      <arglist>(stk::mesh::EntityId gid, const std::vector&lt; double &gt; &amp;coord)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addElement</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a65dcdb04d0e5374523ecbe1990321a2d</anchor>
      <arglist>(const Teuchos::RCP&lt; ElementDescriptor &gt; &amp;ed, stk::mesh::Part *block)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEdges</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a02892b053a082aa92e5efe6cc1e9e9e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addFaces</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae15a0bf2fb983d4669d0fa5a817f9c43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntityToSideset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac8e90bbcb0a09c682cfc7db008820c78</anchor>
      <arglist>(stk::mesh::Entity entity, stk::mesh::Part *sideset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntityToNodeset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a63e17210a3168490fbfc0a693755cf77</anchor>
      <arglist>(stk::mesh::Entity entity, stk::mesh::Part *nodeset)</arglist>
    </member>
    <member kind="function">
      <type>const VectorFieldType &amp;</type>
      <name>getCoordinatesField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a882f03098c303d41105d3d04bb7495a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const VectorFieldType &amp;</type>
      <name>getEdgesField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a6be2a8f20bcbc6bc99cd73b713757315</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const VectorFieldType &amp;</type>
      <name>getFacesField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a090ae040f071ff28233fe073a03fe8c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getNodeCoordinates</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac2c19f74c094db3f44792433ead96385</anchor>
      <arglist>(stk::mesh::EntityId nodeId) const </arglist>
    </member>
    <member kind="function">
      <type>const double *</type>
      <name>getNodeCoordinates</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1604807b2511f04dea4fe61b9b611f40</anchor>
      <arglist>(stk::mesh::Entity node) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellIndices</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a37aeb976578309dacc0eee40c8945c00</anchor>
      <arglist>(unsigned entityRank, stk::mesh::EntityId elementId, std::vector&lt; stk::mesh::EntityId &gt; &amp;subcellIds) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMyElements</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8f7d5a20837765895dd5905f16b1c694</anchor>
      <arglist>(std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMyElements</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a713a78171585b815c812c10fe97a5e22</anchor>
      <arglist>(const std::string &amp;blockID, std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborElements</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ad6154ad554917354605a93889803fb13</anchor>
      <arglist>(std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNeighborElements</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8048156244fa8fada7a2b0dd552979ec</anchor>
      <arglist>(const std::string &amp;blockID, std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMySides</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af8a657635c7325941207b2d507498c09</anchor>
      <arglist>(const std::string &amp;sideName, std::vector&lt; stk::mesh::Entity &gt; &amp;sides) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMySides</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aec0ed24e30de13e08ee10230f0178c3a</anchor>
      <arglist>(const std::string &amp;sideName, const std::string &amp;blockName, std::vector&lt; stk::mesh::Entity &gt; &amp;sides) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllSides</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a4e6af34beccac8cd8ab646769a50eeea</anchor>
      <arglist>(const std::string &amp;sideName, std::vector&lt; stk::mesh::Entity &gt; &amp;sides) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getAllSides</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac13546b5f859463b3ba97f63753b9dd6</anchor>
      <arglist>(const std::string &amp;sideName, const std::string &amp;blockName, std::vector&lt; stk::mesh::Entity &gt; &amp;sides) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getMyNodes</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af2b065178abf2aacc307c50365101d11</anchor>
      <arglist>(const std::string &amp;sideName, const std::string &amp;blockName, std::vector&lt; stk::mesh::Entity &gt; &amp;nodes) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Entity</type>
      <name>findConnectivityById</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac815660ad86f5055e4737c6054895e13</anchor>
      <arglist>(stk::mesh::Entity src, stk::mesh::EntityRank tgt_rank, unsigned rel_id) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToExodus</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a84f6d785094f567b0e8e933528d00587</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupTransientExodusFile</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a012133d73e140ebcaca35d8bee90b055</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeToExodus</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>acb41faf853a5d7570c9a27d85ed407d4</anchor>
      <arglist>(double timestep)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; stk::mesh::BulkData &gt;</type>
      <name>getBulkData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac3d800b86842d04b1fb3c704cd8796c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; stk::mesh::MetaData &gt;</type>
      <name>getMetaData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a344e0792e03d6a95e54a83c68c6fa0b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isWritable</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a3d975dc1a5aa7f43b46348afe59609b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isModifiable</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>acfe6d979b2b60dba3ba3cd46c1ffc5fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getDimension</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab3b49f2f7de252011fd1d89b6f0024a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumElementBlocks</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a03bcca6db3a3c9b9ca9fa02ebdf3fd84</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementBlockNames</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8e95fbbbb30f26a6c44f2ab8b50213e8</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;names) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSidesetNames</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a661bdec1af2afcb450b6434ed23517d3</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNodesetNames</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a4e7defd1358914e92087f8401206f16a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Part *</type>
      <name>getOwnedPart</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a4423e6b8be4d6986336190d064d54a74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Part *</type>
      <name>getElementBlockPart</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>abe36739b6d826633aa5e4102375472f5</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumSidesets</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a36af6441b7284dcc9051fa7cb1620f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Part *</type>
      <name>getSideset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a72014c58848cbd0a76a326eb87e8f7fa</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getNumNodesets</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>addf3adbc7bd0fdaea8af6ea4774c2612</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Part *</type>
      <name>getNodeset</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aaa604f2b4c0356116fd373bde94cda5e</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getEntityCounts</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a76ab93d026d594a909ff0108e1f19480</anchor>
      <arglist>(unsigned entityRank) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>getMaxEntityId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae10f1375340503f10f375486ca721826</anchor>
      <arglist>(unsigned entityRank) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementsSharingNode</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a31f2346a9a1d5a574e62f909ccd43f6a</anchor>
      <arglist>(stk::mesh::EntityId nodeId, std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNodeIdsForElement</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab2ca15a5f022fa237522e2ac92b8108b</anchor>
      <arglist>(stk::mesh::Entity element, std::vector&lt; stk::mesh::EntityId &gt; &amp;nodeIds) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwnedElementsSharingNode</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a70331ee0f5ee88941c4e808e1c6b59f8</anchor>
      <arglist>(stk::mesh::Entity node, std::vector&lt; stk::mesh::Entity &gt; &amp;elements, std::vector&lt; int &gt; &amp;relIds) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getOwnedElementsSharingNode</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aa41934ccf01534a30cf174b9b6c16119</anchor>
      <arglist>(stk::mesh::EntityId nodeId, std::vector&lt; stk::mesh::Entity &gt; &amp;elements, std::vector&lt; int &gt; &amp;relIds, unsigned int matchType) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementsSharingNodes</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1ca22be7d367cdc5dc1ac1fd80bb9af8</anchor>
      <arglist>(const std::vector&lt; stk::mesh::EntityId &gt; nodeId, std::vector&lt; stk::mesh::Entity &gt; &amp;elements) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildSubcells</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a446045bdd85760ada82373965534d673</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementLocalId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af131e3242dac3df25361ec401d932d67</anchor>
      <arglist>(stk::mesh::Entity elmt) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>elementLocalId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a47be97c337ef690271d11664fef1101c</anchor>
      <arglist>(stk::mesh::EntityId gid) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>elementGlobalId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a267c0a136e56ebc920d479d4a9b87bf7</anchor>
      <arglist>(std::size_t lid) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityId</type>
      <name>elementGlobalId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8237b8decd7f3b0bc44bdbfe33649aed</anchor>
      <arglist>(stk::mesh::Entity elmt) const </arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>entityOwnerRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>afc35d69eb479ffda2183ad3ff5357d5a</anchor>
      <arglist>(stk::mesh::Entity entity) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isValid</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a475530b894603e4843c863bc080edead</anchor>
      <arglist>(stk::mesh::Entity entity) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>containingBlockId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ad3a4a3622cf3a3ba578bfaf1e21f99a3</anchor>
      <arglist>(stk::mesh::Entity elmt)</arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Field&lt; double &gt; *</type>
      <name>getSolutionField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae682d2698aae10444523043cac6de387</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::Field&lt; double &gt; *</type>
      <name>getCellField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ade6454d6ee40cd015dedd16078af4f56</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function">
      <type>ProcIdFieldType *</type>
      <name>getProcessorIdField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a06aabdf4e20af788274ac12ecad746ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a9072106c3864a1044c016e838bcd5604</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const std::vector&lt; stk::mesh::Entity &gt; &gt;</type>
      <name>getElementsOrderedByLID</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8095608065032944b2b22ca601b910d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSolutionFieldData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7387b0602b10e2e68e35819b67b942be</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId, const std::vector&lt; std::size_t &gt; &amp;localElementIds, const ArrayT &amp;solutionValues, double scaleValue=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSolutionFieldData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a996a0798571962a68c5800a8cb7be0e1</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId, const std::vector&lt; std::size_t &gt; &amp;localElementIds, ArrayT &amp;solutionValues) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCellFieldData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a45881127f3b9599f12048c07332dad77</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId, const std::vector&lt; std::size_t &gt; &amp;localElementIds, const ArrayT &amp;solutionValues, double scaleValue=1.0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a6d21cf57e5c28042a82293454fd4d017</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;localIds, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a54bef33c4c7fbc3b144034cc16d9ad48</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a60b5877f965a11dbbfa1c5131f5fc225</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;localIds, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>afdc334cbcaef81520333d09b865bc97e</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVerticesNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a95cfe6e52fef6a33185b54fe47a006c4</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;localIds, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVerticesNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae10dfe0411401bc0fdde4a348814d17c</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVerticesNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a475a00d4afbd3c7f5ace7c77868bbf2f</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;localIds, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVerticesNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aaa7a472a9e2538aa4e44f9e50a279d92</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityRank</type>
      <name>getElementRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a59dbc669e2061ae37c03c3a6479d72ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityRank</type>
      <name>getSideRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab5770675f1c6754d1df4fef46034240f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityRank</type>
      <name>getFaceRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a81a1a4556071105306d6a4ece6de488a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityRank</type>
      <name>getEdgeRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8a42f490c9e1a660e8df790b6360ece8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>stk::mesh::EntityRank</type>
      <name>getNodeRank</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7631ec6b63a1afa84790b53afcf8093c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeFromMetaData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a2d70acb94d9996bf53db2068b2170eaf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildLocalElementIDs</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a00888e03c364323a7aa2802735e06fca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt; &amp;</type>
      <name>getPeriodicBCVector</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae708e1e8b3da04f389c7414317080e4a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt; &amp;</type>
      <name>getPeriodicBCVector</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a59d895722e5c165c4008929cd1dd2f82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicBC</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a24359065917c6bead0bbdefd0c49a0a2</anchor>
      <arglist>(const Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &amp;bc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addPeriodicBCs</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a673ffb0aa85db84819215a1100061e99</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt; &amp;bc_vec)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; unsigned int &gt; &gt; &gt;</type>
      <name>getPeriodicNodePairing</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae953c6d99d93959af1daa5d8c5c234c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>validBlockId</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a08866cefcf3bcef58f2160b6a5b7be7f</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8a14caf20ca712f641d6dacbab13d9be</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMetaData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a12da7f72438a89e579d36ccab359c518</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const shards::CellTopology &gt;</type>
      <name>getCellTopology</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a0fc26cbc855930772fc9eea36ac5a7d7</anchor>
      <arglist>(const std::string &amp;eBlock) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getCurrentStateTime</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a00ba9500f4178df9fa97eab3b7364a10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getInitialStateTime</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae6554c555296453ee5efb891350628bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInitialStateTime</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7716f8fc59918cf173877601726f2f11</anchor>
      <arglist>(double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebalance</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a005d89ea60680c5ad2aa26d8f65e4090</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlockWeight</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a4f15cfaff9e26baf6e28697ee107432e</anchor>
      <arglist>(const std::string &amp;blockId, double weight)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseFieldCoordinates</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a9f3184e2198e7abe52e02bd0a3e83f84</anchor>
      <arglist>(bool useFieldCoordinates)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseFieldCoordinates</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a808c8b8d7b6eec2e87702bd820797071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUseLowerCaseForIO</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af394c10569f65b7b690242442680752c</anchor>
      <arglist>(bool useLowerCase)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getUseLowerCaseForIO</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aa16d9dc6bcfa32780b74ea367d3b6e6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices_FromField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1b250d32304cbf9299e09d1c43824d6f</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices_FromFieldNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8f95ac67f9953f8c4f823f518e446160</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, const std::string &amp;eBlock, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices_FromCoords</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a3ead7eedc9183e22d1967ced8e7fca72</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementVertices_FromCoordsNoResize</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1a00247b9d2e39878e3ebd8b80f06538</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, ArrayT &amp;vertices) const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>coordsString</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af0f1b4d155c282354672ef6190fd8bfa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>nodesString</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a9e7052ee77b52f9329545ca0ddd2be19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>edgesString</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1c197025af85cab08422b7cf36397286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const std::string</type>
      <name>facesString</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aa5cca5fc4dbc63c5d41d05a8aaeba3a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildEntityCounts</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aafd61f9e7d721ab8663e43ee41f18a83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildMaxEntityIds</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac9c3af0e570fb25b466f3d1d8bdc2d82</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeFieldsInSTK</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a9d6af35c3f466eb3b09146ed45120959</anchor>
      <arglist>(const std::map&lt; std::pair&lt; std::string, std::string &gt;, SolutionFieldType * &gt; &amp;nameToField, bool setupIO)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>getSafeCommunicator</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>affb6cb7cd57baefa69ae5a5bbfd2d8fd</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyElementLoadBalanceWeights</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a06226cab22c86df82d99585af15b78c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isMeshCoordField</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8efe061956ad22f6174f8d573047ee8a</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;fieldName, int &amp;axis) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setDispFieldData</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aca63b3dbccb83cf060e434f7dc34f570</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string &amp;blockId, int axis, const std::vector&lt; std::size_t &gt; &amp;localElementIds, const ArrayT &amp;solutionValues)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt;</type>
      <name>periodicBCs_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac7e4de3f2707656a856b5ec5ac83a637</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; stk::mesh::MetaData &gt;</type>
      <name>metaData_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a06f6d36da00e5af7db61d3e12286434b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; stk::mesh::BulkData &gt;</type>
      <name>bulkData_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a8674e8e1be2f231e6446846ed8ea6f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, stk::mesh::Part * &gt;</type>
      <name>elementBlocks_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af00e807f02d7e2865f91b5d3056bc965</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, stk::mesh::Part * &gt;</type>
      <name>sidesets_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a2355ffb0c911ae5749b2954383afbf9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, stk::mesh::Part * &gt;</type>
      <name>nodesets_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aac28077c1a90c0a56c6a122f4bb5d2b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; shards::CellTopology &gt; &gt;</type>
      <name>elementBlockCT_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>acc656d8c67e5c02ec9633a8a354aa525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>stk::mesh::Part *</type>
      <name>nodesPart_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a681257ba9af2e26e742c89b49dbb1f01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; stk::mesh::Part * &gt;</type>
      <name>nodesPartVec_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a98dd9a53a7987635ab0a99308f3cb687</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>stk::mesh::Part *</type>
      <name>edgesPart_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7f2586430f8d270c592c3aa743213255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; stk::mesh::Part * &gt;</type>
      <name>edgesPartVec_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a5b86b546632d2c7cdc61f4ff3a2ca336</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>stk::mesh::Part *</type>
      <name>facesPart_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a68441ac8eaff7bce93501915d7088cd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; stk::mesh::Part * &gt;</type>
      <name>facesPartVec_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae6ba689aa3e366dae199e14f0b731f8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VectorFieldType *</type>
      <name>coordinatesField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7ed5cdaeaea331502b4bfc90366544b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VectorFieldType *</type>
      <name>edgesField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac729c793059db1efe82dbeaa72e2c0f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>VectorFieldType *</type>
      <name>facesField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a076bf3c13a829cfefee709e44e592f75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ProcIdFieldType *</type>
      <name>processorIdField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aceccdf7c0bb0a7ccc3dc65676e1efc58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SolutionFieldType *</type>
      <name>loadBalField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab237338cad909e47a61539be1e8dfa03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, std::string &gt;, SolutionFieldType * &gt;</type>
      <name>fieldNameToSolution_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a7bc3125376081c0b7d7161d77417d3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, std::string &gt;, SolutionFieldType * &gt;</type>
      <name>fieldNameToCellField_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>aec3572e58d030edee6c7232712b9dfba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned</type>
      <name>dimension_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a1920ef8dde224bd061dba0e3d90bc38f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>initialized_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a37f4b5517150354352f836a9239f0e3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>entityCounts_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a3f9c771c1ff8c9418bb2f42057ba32e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; stk::mesh::EntityId &gt;</type>
      <name>maxEntityId_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a82bd8f3cee3797ceb002c031d0a9b65c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned</type>
      <name>procRank_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>af06dad0b366fdcfb04426772b118ba1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>currentLocalId_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a49753ad22a71082f33edee0bdeffb091</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::MpiComm&lt; int &gt; &gt;</type>
      <name>mpiComm_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>acdb64b22c0202acff293645691959cf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>initialStateTime_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a5fb22bfb0c6a2b470e56af09c527aa7b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>currentStateTime_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a42fbf6cc4b409904d4a93143c2388c21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; std::vector&lt; stk::mesh::Entity &gt; &gt;</type>
      <name>orderedElementVector_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a220083313c0ff4ac27a6685b4ddd389f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, double &gt;</type>
      <name>blockWeights_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>a69b8ecebcbcf130f20776a7afbfea18c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::unordered_map&lt; stk::mesh::EntityId, std::size_t &gt;</type>
      <name>localIDHash_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ac1ce8727945f6e4396e041601dd2e98f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>meshCoordFields_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ab23c6e59c8eb87cf8ca63386e9e6cc1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::vector&lt; std::string &gt; &gt;</type>
      <name>meshDispFields_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae4dddb3e75254ba718950dc882a02eb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useFieldCoordinates_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae84b2777f99ee4bd11b60cb100c3f1b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useLowerCase_</name>
      <anchorfile>classpanzer__stk_1_1STK__Interface.html</anchorfile>
      <anchor>ae9a63435249aaa13b7ed22c29c8b2142</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::STK_MeshFactory</name>
    <filename>classpanzer__stk_1_1STK__MeshFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>STK_MeshFactory</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a27c96305409e04e321cc37f25c56a68d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildMesh</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a481c33540554b7a72d3c84a546d30bd8</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>buildUncommitedMesh</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a9306b5bbc087aa1720ade83198cd87f5</anchor>
      <arglist>(stk::ParallelMachine parallelMach) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>completeMeshConstruction</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a8d81a4486f4cb8f5e15d2c8ad1b4b489</anchor>
      <arglist>(STK_Interface &amp;mesh, stk::ParallelMachine parallelMach) const  =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enableRebalance</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>ae9c586a1c454bbc18a828558345e4653</anchor>
      <arglist>(bool enable, const Teuchos::RCP&lt; const Teuchos::ParameterList &gt; &amp;rebalanceList=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebalance</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>adc85759765fa58feec4b507e2f1baf2a</anchor>
      <arglist>(STK_Interface &amp;mesh) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>parsePeriodicBCList</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a821d8fbf900068252678f1b6ca7eafb2</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;pl, std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt; &amp;periodicBC)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; const PeriodicBC_MatcherBase &gt; &gt;</type>
      <name>periodicBCVec_</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>ae1361a2b753191aafd47d355a68f8876</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>enableRebalance_</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>a1b65099dfc37c5b9f6f48a35a95c6b7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>rebalanceList_</name>
      <anchorfile>classpanzer__stk_1_1STK__MeshFactory.html</anchorfile>
      <anchor>ac832f93c85cadf66d229a39d8da3bad0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::STKConnManager</name>
    <filename>classpanzer__stk_1_1STKConnManager.html</filename>
    <templarg>GO</templarg>
    <base>ConnManager&lt; int, GO &gt;</base>
    <member kind="typedef">
      <type>panzer::ConnManager&lt; int, GO &gt;::LocalOrdinal</type>
      <name>LocalOrdinal</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a3dc2e00fae126c12c19c9884e8206626</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>panzer::ConnManager&lt; int, GO &gt;::GlobalOrdinal</type>
      <name>GlobalOrdinal</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a023f1ebabd33a140b67f5beb235393ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>STKConnManager</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ab3c3f6f6233565c37dbaef5de5e6b30d</anchor>
      <arglist>(const Teuchos::RCP&lt; STK_Interface &gt; &amp;stkMeshDB)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~STKConnManager</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ab8ff7dea89815b5d8212a0348214e8de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>buildConnectivity</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a4ab56f95001934df59254428504562d9</anchor>
      <arglist>(const panzer::FieldPattern &amp;fp)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt;</type>
      <name>noConnectivityClone</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a21f9fcc3e4618c6b30f2f101c0f4eede</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const GlobalOrdinal *</type>
      <name>getConnectivity</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>aea4c9a59226cd76c34f103a863a0ea03</anchor>
      <arglist>(LocalOrdinal localElmtId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual GlobalOrdinal *</type>
      <name>getConnectivity</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a2fe900b1cf0b2255ca1759c4d9f55a5a</anchor>
      <arglist>(LocalOrdinal localElmtId)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LocalOrdinal</type>
      <name>getConnectivitySize</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ae1245a61f1e2524c54f1ca09ad2e7d02</anchor>
      <arglist>(LocalOrdinal localElmtId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getBlockId</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a606d6a07d9bca05e52fa7b40fdd04dd5</anchor>
      <arglist>(LocalOrdinal localElmtId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::size_t</type>
      <name>numElementBlocks</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a2613e92b0cd88176ac2fb9feeff23968</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a2ee1c4d9130a0fb9e18be4242f55f64b</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>aeab63e3f98fa13320e3f6738e3e66064</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getNeighborElementBlock</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ae558c8be6aa9efa3dee7a8bb8f49f4a1</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getDofCoords</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>aa7bda7fad1fc51c3567c7de26dd81316</anchor>
      <arglist>(const std::string &amp;blockId, const panzer::Intrepid2FieldPattern &amp;coordProvider, std::vector&lt; std::size_t &gt; &amp;localCellIds, Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;points) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>getSTKInterface</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a2a0793f4d492364666595ce31f72ab2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getOwnedElementCount</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a18db29b7279ed205953fa48e00a264d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>associateElementsInSideset</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a46a75d4b1d3a68b6c157c85d4cca3a76</anchor>
      <arglist>(const std::string sideset_id)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>checkAssociateElementsInSidesets</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a41f1d029499640b7b13e9fd43578afc5</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getAssociatedNeighbors</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a4ae761f978ab55079fc6e9ceee2a52dd</anchor>
      <arglist>(const LocalOrdinal &amp;el) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>hasAssociatedNeighbors</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a977738572eeb81c899af3166358c577a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyPeriodicBCs</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>af8ecc2f4f1ddae9627623b74b995a58c</anchor>
      <arglist>(const panzer::FieldPattern &amp;fp, GlobalOrdinal nodeOffset, GlobalOrdinal edgeOffset, GlobalOrdinal faceOffset, GlobalOrdinal cellOffset)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>applyInterfaceConditions</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>abcc66230033e4cd2fc3d061fd8ce3a6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalElementMapping</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a94e33ae9eacfb201051d14428a4a37de</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>clearLocalElementMapping</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a15741e81f16807430a1d9020df4b78b3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildOffsetsAndIdCounts</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a8013272f54c2e7059d1102a6524ea5ee</anchor>
      <arglist>(const panzer::FieldPattern &amp;fp, LocalOrdinal &amp;nodeIdCnt, LocalOrdinal &amp;edgeIdCnt, LocalOrdinal &amp;faceIdCnt, LocalOrdinal &amp;cellIdCnt, GlobalOrdinal &amp;nodeOffset, GlobalOrdinal &amp;edgeOffset, GlobalOrdinal &amp;faceOffset, GlobalOrdinal &amp;cellOffset) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>LocalOrdinal</type>
      <name>addSubcellConnectivities</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a0146077fea5a504e07a3b6cb71c5c85b</anchor>
      <arglist>(stk::mesh::Entity element, unsigned subcellRank, LocalOrdinal idCnt, GlobalOrdinal offset)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>modifySubcellConnectivities</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a1132b0e6664b2ac1065e790594844476</anchor>
      <arglist>(const panzer::FieldPattern &amp;fp, stk::mesh::Entity element, unsigned subcellRank, unsigned subcellId, GlobalOrdinal newId, GlobalOrdinal offset)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>stkMeshDB_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a8a617b892892384cb3e4ca6a1422b0ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; std::vector&lt; stk::mesh::Entity &gt; &gt;</type>
      <name>elements_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ae1a2c8eefba400711c5035509f952a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; LocalOrdinal &gt; &gt; &gt;</type>
      <name>elementBlocks_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a49efea421f26a6a9441bfb19506a47b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; LocalOrdinal &gt; &gt; &gt;</type>
      <name>neighborElementBlocks_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a440488a8907ddcd57031458b289a2a89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, GlobalOrdinal &gt;</type>
      <name>blockIdToIndex_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ae77ed9ceca52ae9cd290f098da412f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; LocalOrdinal &gt;</type>
      <name>elmtLidToConn_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ac05019246ee52977e1332198049563a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; LocalOrdinal &gt;</type>
      <name>connSize_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a6e795723a3292513385c9ad7d6716201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; GlobalOrdinal &gt;</type>
      <name>connectivity_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a90a5c1a3b0556251178b3313a640750b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::size_t</type>
      <name>ownedElementCount_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>ad917fd31db69851e4af22902f3d0d6d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::string &gt;</type>
      <name>sidesetsToAssociate_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a74677d25f14bb62bab1f1bb3be63bb19</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; bool &gt;</type>
      <name>sidesetYieldedAssociations_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>aff15162a6d407c3c2e7911fd96c4d77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; std::vector&lt; LocalOrdinal &gt; &gt;</type>
      <name>elmtToAssociatedElmts_</name>
      <anchorfile>classpanzer__stk_1_1STKConnManager.html</anchorfile>
      <anchor>a7802f457dc265e0e1b73c527fc813962</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::StrBasisComp</name>
    <filename>structpanzer_1_1StrBasisComp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1StrBasisComp.html</anchorfile>
      <anchor>a96f60ae4729cdee2a0318cbe8830b0b8</anchor>
      <arglist>(const StrBasisPair &amp;lhs, const StrBasisPair &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::StrPureBasisComp</name>
    <filename>structpanzer_1_1StrPureBasisComp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1StrPureBasisComp.html</anchorfile>
      <anchor>acb8eaf020ef2dac5fa85eb0977fbc4ce</anchor>
      <arglist>(const StrPureBasisPair &amp;lhs, const StrPureBasisPair &amp;rhs) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::dof_functors::SumRank2</name>
    <filename>structpanzer_1_1dof__functors_1_1SumRank2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>GO</type>
      <name>value_type</name>
      <anchorfile>structpanzer_1_1dof__functors_1_1SumRank2.html</anchorfile>
      <anchor>afcbae9e4ac3a81e2341e5419317c6036</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PHX::Device</type>
      <name>execution_space</name>
      <anchorfile>structpanzer_1_1dof__functors_1_1SumRank2.html</anchorfile>
      <anchor>a10ccaa76b5a35a8358ad1e068e3436d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SumRank2</name>
      <anchorfile>structpanzer_1_1dof__functors_1_1SumRank2.html</anchorfile>
      <anchor>a1e70a402dd7deecd14122f8bcb126482</anchor>
      <arglist>(ArrayType a)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1dof__functors_1_1SumRank2.html</anchorfile>
      <anchor>aef32e3e2cde0a45f669d99e9b398bb35</anchor>
      <arglist>(const unsigned int i, GO &amp;lsum) const </arglist>
    </member>
    <member kind="variable">
      <type>ArrayType</type>
      <name>a_</name>
      <anchorfile>structpanzer_1_1dof__functors_1_1SumRank2.html</anchorfile>
      <anchor>aec9d2b72262510545030bca4e1fca5dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::SumStatic</name>
    <filename>classpanzer_1_1SumStatic.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>SumStatic</name>
      <anchorfile>classpanzer_1_1SumStatic.html</anchorfile>
      <anchor>aad11a68768df35cf78d1b0cf5ce08b77</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1SumStatic.html</anchorfile>
      <anchor>aeba3963ffade0874b39c5c3cc7391a7c</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1SumStatic.html</anchorfile>
      <anchor>add81009ba8acfd8cd38bbb0061d0f7a0</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1SumStatic.html</anchorfile>
      <anchor>aae923ecafd17f9cd71532d2bde609732</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;</name>
    <filename>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <class kind="struct">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::NoScalarsTag</class>
    <class kind="struct">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;::ScalarsTag</class>
    <member kind="function">
      <type></type>
      <name>SumStatic</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a7e5a40eb25ff3a3e5ff35062558d0414</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a1fafb15acaaa8c941c78e47ae9678d19</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a8dc46cd1dff901385245ba5cdee9b2cf</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>aba34687b0f99196d95baed37cad6d6e8</anchor>
      <arglist>(const ScalarsTag, const unsigned c) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a4ad70c08df24056a4bb88f3b59be1b28</anchor>
      <arglist>(const NoScalarsTag, const unsigned c) const </arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>MAX_VALUES</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>ac41e8363fb396c5a329b0cea48b086d7a9f9dae833c0591e289183bdb6ba6f305</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>ac3e3d92e2d78fdddc95d991ca3a9e6e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>MAX_VALUES</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>ac41e8363fb396c5a329b0cea48b086d7a9f9dae833c0591e289183bdb6ba6f305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Tag0, Tag1 &gt;</type>
      <name>sum</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a8560b55ac8716ef927cb9a19c7b3f661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Tag0, Tag1 &gt; &gt;</type>
      <name>values</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a535a515d69b7ab3b2e5ded32711bcde8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useScalars</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>aceb7dc6fbb3d7d03a05f639d7cdd09e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; const ScalarT, Tag0, Tag1 &gt;</type>
      <name>current_value</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a55f8b5ee2875c16e603bd66f9a804e62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const ScalarT **, PHX::Device &gt;</type>
      <name>value_views</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a5eb5e4bd36e66627450b24a1d268b422</anchor>
      <arglist>[MAX_VALUES]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const double *, PHX::Device &gt;</type>
      <name>scalars</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a62535f0380ea43a1f3e3336e311da66c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numValues</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01Tag1_00_01void_01_4.html</anchorfile>
      <anchor>a58950b5f05c5bd5f1d421f59e9bf5240</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::SumStatic&lt; EvalT, TRAITS, Tag0, void, void &gt;</name>
    <filename>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::EvaluatorWithBaseImpl</base>
    <member kind="function">
      <type></type>
      <name>SumStatic</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>ae89a15c20871a7f5f89d409c4a1ff56e</anchor>
      <arglist>(const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postRegistrationSetup</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>a36a9ec6d731e8e9634c058789a57a4e2</anchor>
      <arglist>(typename TRAITS::SetupData d, PHX::FieldManager&lt; TRAITS &gt; &amp;fm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateFields</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>a5ebb6f20adfbda27cc8f3633c2c3f2c3</anchor>
      <arglist>(typename TRAITS::EvalData d)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>EvalT::ScalarT</type>
      <name>ScalarT</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>a991d57f0c7a9a81dae51e83153ad7889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; ScalarT, Tag0 &gt;</type>
      <name>sum</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>ab2fd1891101c734f64ac94e41116ab93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Tag0 &gt; &gt;</type>
      <name>values</name>
      <anchorfile>classpanzer_1_1SumStatic_3_01EvalT_00_01TRAITS_00_01Tag0_00_01void_00_01void_01_4.html</anchorfile>
      <anchor>afa7a701b164937fbc4b28d64a1be54b5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits::Tangent</name>
    <filename>structpanzer_1_1Traits_1_1Tangent.html</filename>
    <member kind="typedef">
      <type>FadType</type>
      <name>ScalarT</name>
      <anchorfile>structpanzer_1_1Traits_1_1Tangent.html</anchorfile>
      <anchor>a863ce5ee211a467fb092a50a72bb4326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ThyraObjContainer</name>
    <filename>classpanzer_1_1ThyraObjContainer.html</filename>
    <templarg>ScalarT</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThyraObjContainer</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a14013707ebee97134000e80be3cd19bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a871c59b98fa4a759534c704497445e01</anchor>
      <arglist>(ScalarT value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a92c2449204184ca8359e0a510e3a531c</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a0a5c4b37b83e295f85469ecc67f0e6de</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a41ebc9cb44b9301b3ef27df3e3151124</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>ac8f9f5a3d50b1d8d105af7a0e65d8a32</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a0bc071877929dba02ccec6c7ab163852</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>ac75fa59b3f83d7ce6befe76a8f3f6cfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a1b0613ea931131b090e3182dc6bcc2ba</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a153adaae76762ec18a7350a15dc8edad</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a617b395dcf6b7b777c68bf7bcfd5cc46</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThyraObjContainer&lt; double &gt;</name>
    <filename>classpanzer_1_1ThyraObjContainer.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThyraObjContainer</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a14013707ebee97134000e80be3cd19bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a871c59b98fa4a759534c704497445e01</anchor>
      <arglist>(double value)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a92c2449204184ca8359e0a510e3a531c</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a0a5c4b37b83e295f85469ecc67f0e6de</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a41ebc9cb44b9301b3ef27df3e3151124</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>ac8f9f5a3d50b1d8d105af7a0e65d8a32</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a0bc071877929dba02ccec6c7ab163852</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>ac75fa59b3f83d7ce6befe76a8f3f6cfe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a1b0613ea931131b090e3182dc6bcc2ba</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt; &amp;in)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a153adaae76762ec18a7350a15dc8edad</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1ThyraObjContainer.html</anchorfile>
      <anchor>a617b395dcf6b7b777c68bf7bcfd5cc46</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::ThyraObjFactory</name>
    <filename>classpanzer_1_1ThyraObjFactory.html</filename>
    <templarg>ScalarT</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThyraObjFactory</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a15f4f27f3afacf3dce7b295e50c7e1be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a634d988d4678cb635a8387e021192cdb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>ae6aa79fc4733bebc5936f19d7cf83fad</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraMatrix</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a5b13ef3577f3ba0664b65bd4940265fe</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ThyraObjFactory&lt; double &gt;</name>
    <filename>classpanzer_1_1ThyraObjFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ThyraObjFactory</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a15f4f27f3afacf3dce7b295e50c7e1be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a634d988d4678cb635a8387e021192cdb</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>getThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>ae6aa79fc4733bebc5936f19d7cf83fad</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; double &gt; &gt;</type>
      <name>getThyraMatrix</name>
      <anchorfile>classpanzer_1_1ThyraObjFactory.html</anchorfile>
      <anchor>a5b13ef3577f3ba0664b65bd4940265fe</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::TpetraLinearObjContainer</name>
    <filename>classpanzer_1_1TpetraLinearObjContainer.html</filename>
    <templarg>ScalarT</templarg>
    <templarg>LocalOrdinalT</templarg>
    <templarg>GlobalOrdinalT</templarg>
    <templarg>NodeT</templarg>
    <base>panzer::LinearObjContainer</base>
    <base>panzer::ThyraObjContainer</base>
    <member kind="typedef">
      <type>LinearObjContainer::Members</type>
      <name>Members</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a1c7b645427716eb0f11b2b4690ccd513</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>afcc4237d9a02fbdd1bca124ef2856706</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>aab01f45d8114d31bc2377cbd3a7d3e52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a9076ff289c16a489c1cf1f342cc8441a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>abc9a7467db26d6b605a326da3fdd3504</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a2ddd8d62b8699eab03f73aea00ac2121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Export&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a5770b1af4ee481c0932d98ba52cf5828</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a8daea93ad31f372b122d8152112a84e9</anchor>
      <arglist>(const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt; &amp;domain, const Teuchos::RCP&lt; const Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt; &amp;range)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a3effe5b3fbe6ba3aed17009b9f89530e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a1bef290ca1effb9b34082c94c48185df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_x</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a339fe0c20a9003ce48b5d92094254f4e</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_x</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ad7936e809fde6bd539d673cf4ed2a08e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_dxdt</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a1939b802285d07590274f47b2851e160</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_dxdt</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>aa7eda3da7300b42b407a46f48e061b95</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_f</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ab0e568683df8f3515d146d7498871acd</anchor>
      <arglist>(const Teuchos::RCP&lt; VectorType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; VectorType &gt;</type>
      <name>get_f</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a5ecc85c259a84b2d7f72a11158942bd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a32c6fdfc78476fe99f4711fd106e9182</anchor>
      <arglist>(const Teuchos::RCP&lt; CrsMatrixType &gt; &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; CrsMatrixType &gt;</type>
      <name>get_A</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a81c1d4c32c3de88c5e185a3654f85d78</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeMatrix</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a25e1e65e9253f996e198f12c830bcc59</anchor>
      <arglist>(ScalarT value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_x_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a4cbc94a74954ab8589e045cec9c15549</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_x_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a1959ca066af4179f9526b5fbbf4b33a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_dxdt_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a5424a2a452ef7b4af979d6580d154ccd</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_dxdt_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ac2dbb3255cc459a5fd427846254f60ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_f_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>aa75cdacd67e8b877a05ae217df696600</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::VectorBase&lt; ScalarT &gt; &gt;</type>
      <name>get_f_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ab8de94809507df65a971c26ab32b6723</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>set_A_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a769273fc67beefb4e2210c67c2f1a44a</anchor>
      <arglist>(const Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt; &amp;in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>get_A_th</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a13eda8579c2617fda06e19d99172fc4b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Thyra::TpetraOperatorVectorExtraction&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>TOE</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a8c56702f8394670bdf3c5fbd7ba037bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TpetraLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ab5a0dd9833aa46d918b5a77d200988ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>domainSpace</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ae1181fdbfc8bed949edf036430c9a16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>rangeSpace</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a9d5c24d0666e4d51e3bfe7bd66cf0b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>x</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>ac037572c3d6ebc4fb4d27d13cc8672f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>dxdt</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a050e5a0ee69703dad1cd19ce9db8f33d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>f</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a1d0c440d5066902f639b6de167780c66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>A</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjContainer.html</anchorfile>
      <anchor>a0c23fd46786f2cfb6df3550e024d7545</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::TpetraLinearObjFactory</name>
    <filename>classpanzer_1_1TpetraLinearObjFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::LinearObjFactory</base>
    <base>panzer::ThyraObjFactory</base>
    <member kind="typedef">
      <type>TpetraLinearObjContainer&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ContainerType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a83fbcc619543dee37b5989ce71dca670</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aed28e931e6664bd9a6550477465ce046</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsMatrixType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ad2484fc37ffd82c3ca7bec891b9ebc51</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>CrsGraphType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a8ef3496b0cc13944511a5a873799cc30</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a5642c128370fde3dc2d2d508c06da23e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af97aebfe7caab266bfd1177e59e453f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Export&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ExportType</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a84e0a27c7f38d46e09f29f0c80f67960</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a4b6dd8aac6101b2f4b8a362f2caf253b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;gidProvider)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af18cf3a70db16318673a3ded896ffdf3</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt; &amp;comm, const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;rowProvider, const Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &amp;colProvider)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TpetraLinearObjFactory</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a723b12ae9395bba8ba3f06aa3d71d8e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a3974322154f3d97792d1339139a579f3</anchor>
      <arglist>(const std::string &amp;identifier, LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>writeVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a21c5f7448ab5738b63cfc47d1994e6cf</anchor>
      <arglist>(const std::string &amp;identifier, const LinearObjContainer &amp;loc, int id) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a6ae19463851ed99e4e59e818f1683e12</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a1861f74f7a190fcaf021bc492834b75c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a3aded778b13664b8b6714b9271ff4b53</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; LinearObjContainer &gt;</type>
      <name>buildPrimitiveGhostedLinearObjContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a3dffd67c150f21f233b4bdd822f5feea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhostContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>afcce584a58106647d2d670c8d4c23bdc</anchor>
      <arglist>(const LinearObjContainer &amp;container, LinearObjContainer &amp;ghostContainer, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobalContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aee929c7086ab311c8c7c58ed2ee014cf</anchor>
      <arglist>(const LinearObjContainer &amp;ghostContainer, LinearObjContainer &amp;container, int) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>adjustForDirichletConditions</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a9acf21540f290d92c9607fc43871a64f</anchor>
      <arglist>(const LinearObjContainer &amp;localBCRows, const LinearObjContainer &amp;globalBCRows, LinearObjContainer &amp;ghostedObjs, bool zeroVectorRows=false, bool adjustX=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>applyDirichletBCs</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a700b1371f11221da78573a7d10c2e3f8</anchor>
      <arglist>(const LinearObjContainer &amp;counter, LinearObjContainer &amp;result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; ReadOnlyVector_GlobalEvaluationData &gt;</type>
      <name>buildDomainContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aaf3c0a1bedb7d3502cc3978d9e5362cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::MpiComm&lt; int &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ae4f05d09c6872ce3128a3752db8b87eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatter</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aa7a31ba0754f8e3b2656e6f9900f9594</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGather</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af2fc2dea65786e1910f9dd5e370904ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherTangent</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a27a2139e7fe58c72496f8fc484bc2b71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherDomain</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a26f1db93c90315c16375a4bbc98eb671</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildGatherOrientation</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>abcfa3cf81f94cc73232fa88199f23aab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::CloneableEvaluator &gt;</type>
      <name>buildScatterDirichlet</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>afeecf1cb170d522a9e908a67159a5586</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraDomainSpace</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aa7c561d6322790533e19674e5705a2de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraRangeSpace</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aa7d5662910287124344b0c8904bfd5ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Thyra::LinearOpBase&lt; ScalarT &gt; &gt;</type>
      <name>getThyraMatrix</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a83cf718477fe836f65474aa20a15173f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedTpetraVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aaa6cde3c1a03fd2c36a09247c9fdd5e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedTpetraColVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a97648bda0720ca76e33a7fa789093e0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getTpetraVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>accc9cbdec6685b89c7ecc264d3787cc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getTpetraColVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a6d1d20d65f439645845b829b9162c8e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getTpetraMatrix</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a7517d1212fd3603f97ad63bfc46367d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedTpetraMatrix</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a1bbcab607ef39e574633bdafb73b0bf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af56c68b875f607f3035235845e65ade6</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a7babad6be06e10122e3d409d2e3fd343</anchor>
      <arglist>(int mem, TpetraLinearObjContainer&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aa3cb5f389a02d0904d45197f25822167</anchor>
      <arglist>(int, LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initializeGhostedContainer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ac2cf58600d1b0ad896a75873e5d6dfed</anchor>
      <arglist>(int mem, TpetraLinearObjContainer&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;loc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ad75f76ee39e8ecacd10df929a0415d34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getColMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ae35aad11b389717f3b43c7d0ec5fc99d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a87175b391570ce00298e5d28cef35ca9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedColMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a0a3a1d14568e4f019297c018a93cc9e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGraph</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aaa194f02a715dd96ac2d48a9d6cf526d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedGraph</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af6a6ec95f5d328672c8c558f37e2f76c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedImport</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a198021b650f74550a4f84bcde8cd245c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedColImport</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a86c5609ced994a987528078eb53f995c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Export&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedExport</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ae8eb68d07572426f2f4fbd2b288422de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Export&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>getGhostedColExport</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>af4dd4b827ecf625ac405e25abde5d542</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getTeuchosComm</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a98c14326264a660557aaf1316605578a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getDomainGlobalIndexer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a171bdc54ec70adf7e9d6ce142eedf8e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>getRangeGlobalIndexer</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a6f6e962f20089a66faf009be355b7b6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>beginFill</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a0fd76ba9adbf184bdd565e741a40ad9c</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>endFill</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>acee63ec130705a76a5453e14608cc351</anchor>
      <arglist>(LinearObjContainer &amp;loc) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalTpetraVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ac3582b540eeba7277894c03507057890</anchor>
      <arglist>(const Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;in, Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>ghostToGlobalTpetraMatrix</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ae44ab2453d7bc0b027751c7df2a06641</anchor>
      <arglist>(const Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;in, Tpetra::CrsMatrix&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>globalToGhostTpetraVector</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a15b6135d5939a8735d5b9ef6f0da4db5</anchor>
      <arglist>(const Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;in, Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &amp;out, bool col) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a5733f3fe44cc4ba49bc68f3f2f8578ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildColMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a4fc86eca19afa18b0f637715dbe4643d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildGhostedMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a98750a9569ae591823faaf97c6a92061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildGhostedColMap</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>abc8532bd612729ed74a6db8f902720fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildGraph</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a6dd47c0fc1d58dcab107641fb236e0f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>buildGhostedGraph</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a9d97e09528624836ec36a076d3d1e220</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>comm_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>adf2f9600bc08dd326ccff8edac38de0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>map_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aa6ccc476d4ef19cf7dd45a67f4f7cf4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>cMap_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a61dd1d262b38402f33795e1a050263b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>ghostedMap_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aaef089ffe512cdb190443fd231b2c20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>cGhostedMap_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a5c03f834343e3e85defb6e74dd0268af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>graph_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a68e16cb7a00db34efff0ae3ce383da50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Tpetra::CrsGraph&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt; &gt;</type>
      <name>ghostedGraph_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>aec6bef6970251e294096a4db624b238a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ImportType &gt;</type>
      <name>ghostedImporter_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a2c85e91741def44deef7fedb1f378ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ImportType &gt;</type>
      <name>ghostedColImporter_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>adaaee934a523bd7206b1a97b5a2b1f12</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ExportType &gt;</type>
      <name>ghostedExporter_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>ae199b43ad79b25524a20ebb63a1e603d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ExportType &gt;</type>
      <name>ghostedColExporter_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a248b153d69249cef11e8d8b8ef6543f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>gidProvider_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a1042b08988258b2767192029b5b34d62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt;</type>
      <name>colGidProvider_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a7fb4af5b5ab582d4ca32e43d3601e4a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>hasColProvider_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a9402e271c6bf2bf1196fe5fe05c36030</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>rangeSpace_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a91c407bfab64b6605c092990efe0462d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>domainSpace_</name>
      <anchorfile>classpanzer_1_1TpetraLinearObjFactory.html</anchorfile>
      <anchor>a042cd064f95099fba82b4c8557c0720f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::TpetraVector_ReadOnly_GlobalEvaluationData</name>
    <filename>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>panzer::ReadOnlyVector_GlobalEvaluationData</base>
    <member kind="typedef">
      <type>Tpetra::Vector&lt; ScalarT, LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>VectorType</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ac37e4633d3c82f71f167c893b6ffa524</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Map&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>MapType</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aad1a42cc7d7966f069c16d12e2927fbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Tpetra::Import&lt; LocalOrdinalT, GlobalOrdinalT, NodeT &gt;</type>
      <name>ImportType</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a9c6a4d37027b8af30d951eebd5d60532</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a4a6dea93c98b0be93466c28de6012c7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a01d5919997d1e16f907ec089bfbb1d55</anchor>
      <arglist>(const TpetraVector_ReadOnly_GlobalEvaluationData &amp;src)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TpetraVector_ReadOnly_GlobalEvaluationData</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ad6f11c157afe3d9fda057769fd05e9a8</anchor>
      <arglist>(const Teuchos::RCP&lt; const ImportType &gt; &amp;importer, const Teuchos::RCP&lt; const MapType &gt; &amp;ghostedMap, const Teuchos::RCP&lt; const MapType &gt; &amp;uniqueMap)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>useConstantValues</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a2c05888d0d31d7478622f10e8d3bed7c</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinalT &gt; &amp;indices, double value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ac4cf86f10afcadd6d9d760715e802c97</anchor>
      <arglist>(const Teuchos::RCP&lt; const ImportType &gt; &amp;importer, const Teuchos::RCP&lt; const MapType &gt; &amp;ghostedMap, const Teuchos::RCP&lt; const MapType &gt; &amp;uniqueMap)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>globalToGhost</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a5f5550b2ebbae1e30ab0a1a631757968</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>initializeData</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a9a5f07cd6ecf9ac67c41418da65a93f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ghostToGlobal</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a93b4c4f7cc028de8fb3b099fba179746</anchor>
      <arglist>(int mem)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>requiresDirichletAdjustment</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a0f8672f70bf1c86b789d2d6c89da58d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniqueVector_Tpetra</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a0097725c9b1ed5559a7254757f15be3f</anchor>
      <arglist>(const Teuchos::RCP&lt; const VectorType &gt; &amp;uniqueVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const VectorType &gt;</type>
      <name>getUniqueVector_Tpetra</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a7d68fdae5c7de718ccb740ef7fdecb77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>getGhostedVector_Tpetra</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a3c6777bd9ef9639ea9b9a6cce6273cff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUniqueVector</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ac24d9d440f4f6664f10b563779b4c8b5</anchor>
      <arglist>(const Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt; &amp;uniqueVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getUniqueVector</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aa2a76f2fce2e773c53f24989327537ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt;</type>
      <name>getGhostedVector</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a7f9cfaaf4c35660dcaa16097b0291766</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isInitialized</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ae1e393e5be8fa5c0ee9b993d58b1dab6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a1c674409018ac6763a287edf049074cd</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::vector&lt; GlobalOrdinalT &gt;, double &gt;</type>
      <name>FilteredGlobalPair</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>abd0432daf96d6115dcf2f407847436be</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::vector&lt; LocalOrdinalT &gt;, double &gt;</type>
      <name>FilteredLocalPair</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>ab80fd1858cc02103de9692282df148fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isInitialized_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a788394ae629885377c7199e52839d991</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const MapType &gt;</type>
      <name>ghostedMap_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aef388d8ec868b8dab16dc8c12b460189</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const MapType &gt;</type>
      <name>uniqueMap_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>aac7a88cdc10b469897e6a2c2e06ca2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>ghostedSpace_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a4ae079e1f6e761fe4fa3bf7833026f61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Thyra::VectorSpaceBase&lt; double &gt; &gt;</type>
      <name>uniqueSpace_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a9bfba95bc9a6b17d9b8d96de75556468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const ImportType &gt;</type>
      <name>importer_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>af0c4a7dfc906f1b3e7f4fb50ae1fe6b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; VectorType &gt;</type>
      <name>ghostedVector_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>acce29af182b3c4c917375a23f63ef468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const VectorType &gt;</type>
      <name>uniqueVector_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a4b1ed755a51e1b167c2aac51307651b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; FilteredGlobalPair &gt;</type>
      <name>globalFilteredPairs_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a458aa897b68939f442529d02e93c8310</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; FilteredLocalPair &gt;</type>
      <name>filteredPairs_</name>
      <anchorfile>classpanzer_1_1TpetraVector__ReadOnly__GlobalEvaluationData.html</anchorfile>
      <anchor>a5165e4d199e4878a69f0b81cab43b508</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Traits</name>
    <filename>structpanzer_1_1Traits.html</filename>
    <class kind="struct">panzer::Traits::Jacobian</class>
    <class kind="struct">panzer::Traits::PreEvalData</class>
    <class kind="struct">panzer::Traits::Residual</class>
    <class kind="struct">panzer::Traits::SD</class>
    <class kind="struct">panzer::Traits::Tangent</class>
    <member kind="typedef">
      <type>double</type>
      <name>RealType</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>a4a4e34e8fb45f7a569b79c187375e53b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>PANZER_FADTYPE</type>
      <name>FadType</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>a50965f7e4914b68d05e4292d4158e2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sacado::mpl::vector&lt; Residual, Jacobian, Tangent &gt;</type>
      <name>EvalTypes</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>a8c91cc054700b25c4cf1bb8f106548b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SD</type>
      <name>SetupData</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>a5a85fb5909a13316e26c4e709cdc0e69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>panzer::Workset &amp;</type>
      <name>EvalData</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>af0d7ac559eb259260cfa3a9f79424c3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>PostEvalData</name>
      <anchorfile>structpanzer_1_1Traits.html</anchorfile>
      <anchor>a90b4b2437bbfea9bfd672846eeed15cc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::TypeAssocMap</name>
    <filename>classpanzer_1_1TypeAssocMap.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="struct">panzer::TypeAssocMap::BuildObjects</class>
    <member kind="typedef">
      <type>TypesVector</type>
      <name>types_vector</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>a3a68541ecb9e76669b481a817ba59594</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TypeAssocMap</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>aa581ebbf23059ba6f50837e701f2dea0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>aeb1391296bf12c261e1e8a0190515418</anchor>
      <arglist>(ValueType v)</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>get</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>a4aeefd7e23acb18175b0d679e6231fdc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildObjects</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>aec8a2b0632abeab553016b4125e0c754</anchor>
      <arglist>(const BuilderOpT &amp;builder)</arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ValueType &gt;</type>
      <name>mapValues_</name>
      <anchorfile>classpanzer_1_1TypeAssocMap.html</anchorfile>
      <anchor>a22fb5d431b0fcead159559b069045387</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::UniqueGlobalIndexer</name>
    <filename>classpanzer_1_1UniqueGlobalIndexer.html</filename>
    <templarg>LocalOrdinalT</templarg>
    <templarg>GlobalOrdinalT</templarg>
    <base>panzer::UniqueGlobalIndexerBase</base>
    <class kind="class">panzer::UniqueGlobalIndexer::CopyCellLIDsFunctor</class>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~UniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a24f39ac4b087ff903dbfe688dcae361a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>acd5c2f9a68015ca17538c5fe371e6dd7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a55336583367af1af490d861450b855d9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getFieldNum</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a79364809cf0e0ddb37073001966944be</anchor>
      <arglist>(const std::string &amp;str) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2d71d51cd32b22ca086e0b019634e0ce</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a12140de55266e01faeb5d1d378f7b28a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>af351893999719df925737dbff4df6031</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a661ba496a3eb11cdb81c6a02926d50f7</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a831307c19838c42fd8cd43893b685f81</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a31a066d278d272fb054d4e8a42ad4d3f</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementOrientation</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a53315228ed9674d28e0a6fea36e4b81f</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a918596e0a937ab681fcab4f3886d8a6b</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementGIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a53abb3fc369019834ed26cffa4dc7b6c</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; GlobalOrdinalT &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getOwnedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>acb3520ebd9cf4bd841fbc7a5ecf8ee34</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a4a4192b1fc2ce0fdf9880859deed2f42</anchor>
      <arglist>(std::vector&lt; GlobalOrdinalT &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ownedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2d8f9a449aca7300bb7571a8af1fd4a9</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinalT &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const  =0</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementLIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>afe0948b6943ad0fc60171ee0610b0c70</anchor>
      <arglist>(LocalOrdinalT localElmtId) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementLIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>ae8f03d32d95ccac8154908e3d2cc05ea</anchor>
      <arglist>(Kokkos::View&lt; const int *, PHX::Device &gt; cellIds, Kokkos::View&lt; LocalOrdinalT **, PHX::Device &gt; lids) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>ad8798a69bf559c6d09d02c8298655c1e</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a5b925cdaa50b4cf01ba8775635cd3ef7</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>getConnManagerBase</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a127e84f763d83ee59ee41f1322b717a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a92579631ae3e24ff63014cbc22710fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalIdsFromOwnedElements</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0c354df8723a4da2262ca1dea13fee85</anchor>
      <arglist>(std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt; &amp;localIDs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLocalIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a17c29b34f421f884d6d2245f95ce2a4f</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt; &amp;localIDs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shareLocalIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>abf96d92d35ada6651f8cb719542021e9</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;src)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt;</type>
      <name>localIDs_</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a9d4577595eef41ad10850ab144eef0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const LocalOrdinalT **, PHX::Device &gt;</type>
      <name>localIDs_k_</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a4b018c1ffb0738e208950dbf44147bd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UniqueGlobalIndexer&lt; LocalOrdinalT, std::pair&lt; int, GlobalOrdinalT &gt; &gt;</name>
    <filename>classpanzer_1_1UniqueGlobalIndexer.html</filename>
    <base>panzer::UniqueGlobalIndexerBase</base>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~UniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a24f39ac4b087ff903dbfe688dcae361a</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>acd5c2f9a68015ca17538c5fe371e6dd7</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a55336583367af1af490d861450b855d9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getFieldNum</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a79364809cf0e0ddb37073001966944be</anchor>
      <arglist>(const std::string &amp;str) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2d71d51cd32b22ca086e0b019634e0ce</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a12140de55266e01faeb5d1d378f7b28a</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>af351893999719df925737dbff4df6031</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a661ba496a3eb11cdb81c6a02926d50f7</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a831307c19838c42fd8cd43893b685f81</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a31a066d278d272fb054d4e8a42ad4d3f</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementOrientation</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a53315228ed9674d28e0a6fea36e4b81f</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a918596e0a937ab681fcab4f3886d8a6b</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementGIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a53abb3fc369019834ed26cffa4dc7b6c</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; std::pair&lt; int, GlobalOrdinalT &gt; &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getOwnedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>acb3520ebd9cf4bd841fbc7a5ecf8ee34</anchor>
      <arglist>(std::vector&lt; std::pair&lt; int, GlobalOrdinalT &gt; &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a4a4192b1fc2ce0fdf9880859deed2f42</anchor>
      <arglist>(std::vector&lt; std::pair&lt; int, GlobalOrdinalT &gt; &gt; &amp;indices) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ownedIndices</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a2d8f9a449aca7300bb7571a8af1fd4a9</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, GlobalOrdinalT &gt; &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const  =0</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; LocalOrdinalT &gt; &amp;</type>
      <name>getElementLIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>afe0948b6943ad0fc60171ee0610b0c70</anchor>
      <arglist>(LocalOrdinalT localElmtId) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementLIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>ae8f03d32d95ccac8154908e3d2cc05ea</anchor>
      <arglist>(Kokkos::View&lt; const int *, PHX::Device &gt; cellIds, Kokkos::View&lt; LocalOrdinalT **, PHX::Device &gt; lids) const</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>ad8798a69bf559c6d09d02c8298655c1e</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a5b925cdaa50b4cf01ba8775635cd3ef7</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const ConnManagerBase&lt; LocalOrdinalT &gt; &gt;</type>
      <name>getConnManagerBase</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a127e84f763d83ee59ee41f1322b717a3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a92579631ae3e24ff63014cbc22710fb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>buildLocalIdsFromOwnedElements</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a0c354df8723a4da2262ca1dea13fee85</anchor>
      <arglist>(std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt; &amp;localIDs) const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setLocalIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a17c29b34f421f884d6d2245f95ce2a4f</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt; &amp;localIDs)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>shareLocalIDs</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>abf96d92d35ada6651f8cb719542021e9</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, std::pair&lt; int, GlobalOrdinalT &gt; &gt; &amp;src)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; LocalOrdinalT &gt; &gt;</type>
      <name>localIDs_</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a9d4577595eef41ad10850ab144eef0e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Kokkos::View&lt; const LocalOrdinalT **, PHX::Device &gt;</type>
      <name>localIDs_k_</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexer.html</anchorfile>
      <anchor>a4b018c1ffb0738e208950dbf44147bd7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::UniqueGlobalIndexerBase</name>
    <filename>classpanzer_1_1UniqueGlobalIndexerBase.html</filename>
    <member kind="function" virtualness="pure">
      <type>virtual</type>
      <name>~UniqueGlobalIndexerBase</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a79429ee3e9fff43eed66754ef9550d4c</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a7bb2962af6785052a5d716ad620ecd1d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getNumFields</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a65f2356e594ede4e494883891a8d872b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getFieldNum</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a0cec2783b6b53f84a8520402ee9f02fe</anchor>
      <arglist>(const std::string &amp;str) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getFieldOrder</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>afc32b89457feda12edc06b7d01115a2d</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;fieldOrder) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getFieldString</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a36bdef07fc7e95dd58203ea7de2fb0f7</anchor>
      <arglist>(int num) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a01c5778bb9eb2e2d69a38d6ccfc2e0e5</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>aef27d51b352c755e18634479deab7156</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>ad3dca01d2f52c722e711911a972b3386</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a06134ed8cdcf53db0edd59ea7722a550</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>a1ae78240a07fb129ccb12819d49fb836</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>ab33c95ff7bda97f66e91c37ffc138e81</anchor>
      <arglist>(const std::string &amp;blockId) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getElementBlockGIDCount</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerBase.html</anchorfile>
      <anchor>ad384babb44cc4645b9f6d26e5c826215</anchor>
      <arglist>(const std::size_t &amp;blockIndex) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::UniqueGlobalIndexerFactory</name>
    <filename>classpanzer_1_1UniqueGlobalIndexerFactory.html</filename>
    <templarg>LO</templarg>
    <templarg>GO</templarg>
    <templarg>CONN_LO</templarg>
    <templarg>CONN_GO</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueGlobalIndexerFactory</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>af41921ccc0bbe782ac2164fdb8795854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>a463d1a3537b1261d67cc0305b31922c1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; CONN_LO, CONN_GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder=&quot;&quot;) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UniqueGlobalIndexerFactory&lt; LO, GO, LO, GO &gt;</name>
    <filename>classpanzer_1_1UniqueGlobalIndexerFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueGlobalIndexerFactory</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>af41921ccc0bbe782ac2164fdb8795854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, GO &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>a463d1a3537b1261d67cc0305b31922c1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder=&quot;&quot;) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>UniqueGlobalIndexerFactory&lt; LO, std::pair&lt; int, GO &gt;, LO, GO &gt;</name>
    <filename>classpanzer_1_1UniqueGlobalIndexerFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UniqueGlobalIndexerFactory</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>af41921ccc0bbe782ac2164fdb8795854</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; panzer::UniqueGlobalIndexer&lt; LO, std::pair&lt; int, GO &gt; &gt; &gt;</type>
      <name>buildUniqueGlobalIndexer</name>
      <anchorfile>classpanzer_1_1UniqueGlobalIndexerFactory.html</anchorfile>
      <anchor>a463d1a3537b1261d67cc0305b31922c1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::OpaqueWrapper&lt; MPI_Comm &gt; &gt; &amp;mpiComm, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const Teuchos::RCP&lt; ConnManager&lt; LO, GO &gt; &gt; &amp;connMngr, const std::string &amp;fieldOrder=&quot;&quot;) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Thyra::VectorSpaceBase</name>
    <filename>classThyra_1_1VectorSpaceBase.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>panzer::VectorTemplateIterator</name>
    <filename>classpanzer_1_1VectorTemplateIterator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>VectorTemplateIterator</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a51a400fe095d49ccfebef3b7d322899e</anchor>
      <arglist>(panzer::VectorTemplateManager&lt; TypeSeq, BaseT, ObjectT &gt; &amp;m, typename std::vector&lt; std::vector&lt; Teuchos::RCP&lt; BaseT &gt; &gt; &gt;::iterator p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a57f6e194b0e418b747b7acd5b0c388af</anchor>
      <arglist>(const VectorTemplateIterator &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a9dbaa3abeb442ed117c2b4b88cd40b41</anchor>
      <arglist>(const VectorTemplateIterator &amp;t) const </arglist>
    </member>
    <member kind="function">
      <type>panzer::VectorTemplateIterator&lt; TypeSeq, BaseT, ObjectT &gt;::reference</type>
      <name>operator*</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a05c14235a410bb79cfd289b84277d279</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>panzer::VectorTemplateIterator&lt; TypeSeq, BaseT, ObjectT &gt;::pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>ad7057daf1d97d007790d555889f561c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>VectorTemplateIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>ab9948ebefd61a238c586664914f0758e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VectorTemplateIterator</type>
      <name>operator++</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>abd7a1069d387bf424a27cd5782e82dc1</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>panzer::VectorTemplateManager&lt; TypeSeq, BaseT, ObjectT &gt; *</type>
      <name>manager_</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a5540d09d35d98fcb7c688bf2533c92ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::vector&lt; Teuchos::RCP&lt; BaseT &gt; &gt; &gt;::iterator</type>
      <name>object_iterator_</name>
      <anchorfile>classpanzer_1_1VectorTemplateIterator.html</anchorfile>
      <anchor>a743f04d81de6316351fa1412faeb7d76</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::Workset</name>
    <filename>structpanzer_1_1Workset.html</filename>
    <base>panzer::WorksetDetails</base>
    <member kind="function">
      <type></type>
      <name>Workset</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a66bec1d9e0726f088325889cc9cf9e20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>WorksetDetails &amp;</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>ab250cd4270e5c3652c8dc346b60907ac</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const WorksetDetails &amp;</type>
      <name>operator()</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>abf9c58a47d8bdfbecb97f11a8b59ff4c</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>WorksetDetails &amp;</type>
      <name>details</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a5eb952ef823214c7438580c306a3b64f</anchor>
      <arglist>(const int i)</arglist>
    </member>
    <member kind="function">
      <type>const WorksetDetails &amp;</type>
      <name>details</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>ad892d0d826a4ed67059d03f6b8a01c29</anchor>
      <arglist>(const int i) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>numDetails</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a5128555914ecd6b0c384eb0376118d59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable">
      <type>index_t</type>
      <name>num_cells</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a905133710dc4d4f8cbd70d16cbe30418</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>subcell_dim</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>abaeacb531317d4b648d0f03c02734c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>alpha</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a49a5317e516eb4bd0942f0f86a05dc62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>beta</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>aea3fdab4121a0708541701c297569eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>time</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>acb63bee10130a977a9d0785dfd7d385c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>gather_seeds</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>aa8f494e4ce3fccafdb0ba06ada6569bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>evaluate_transient_terms</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>a3a8b8574bc5953cdcef6f45b61b721bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; WorksetDetails &gt;</type>
      <name>other</name>
      <anchorfile>structpanzer_1_1Workset.html</anchorfile>
      <anchor>ae319e1197ebdf82b1b97597b2f3246d9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::WorksetContainer</name>
    <filename>classpanzer_1_1WorksetContainer.html</filename>
    <member kind="function">
      <type></type>
      <name>WorksetContainer</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>aa738b45b493496341c0db00377a9b796</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetContainer</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a57d8c3ba540350e68853552ada3642f2</anchor>
      <arglist>(const Teuchos::RCP&lt; const WorksetFactoryBase &gt; &amp;factory, const std::vector&lt; Teuchos::RCP&lt; PhysicsBlock &gt; &gt; &amp;physicsBlocks, std::size_t wkstSz)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetContainer</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a600ab57c23662c0b7ec39bc78781d6f6</anchor>
      <arglist>(const Teuchos::RCP&lt; const WorksetFactoryBase &gt; &amp;factory, const std::map&lt; std::string, WorksetNeeds &gt; &amp;needs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetContainer</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ab3fe168904d75dbd8ae7bfb9d20426f0</anchor>
      <arglist>(const WorksetContainer &amp;wc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFactory</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ab9019d000231adf73e0498194427a4bf</anchor>
      <arglist>(const Teuchos::RCP&lt; const WorksetFactoryBase &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const WorksetFactoryBase &gt;</type>
      <name>getFactory</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a97d327f4abef9ab2d334db30852111c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPhysicsBlockVector</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ad998396f73a5987d98689e657b0c8802</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; PhysicsBlock &gt; &gt; &amp;physicsBlocks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setWorksetSize</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a3e94f08f0f9154c31d9687f1ed59db1f</anchor>
      <arglist>(std::size_t worksetSize)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getWorksetSize</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a88157834edcf95b53c11130614809557</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ae5d08002a67756b1887928de58eebb34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const PhysicsBlock &amp;</type>
      <name>lookupPhysicsBlock</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a8394c285c3e6470854bb62ae1f1bf9cc</anchor>
      <arglist>(const std::string &amp;eBlock) const </arglist>
    </member>
    <member kind="function">
      <type>const WorksetNeeds &amp;</type>
      <name>lookupNeeds</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ad035e593900fbd829098f985f651cb38</anchor>
      <arglist>(const std::string &amp;eBlock) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>getVolumeWorksets</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a71a67e5ccbfa9a64179b597d102fa36b</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>getWorksets</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a1432fdb0e62c8e29939bff90e54df502</anchor>
      <arglist>(const WorksetDescriptor &amp;wd)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>af0026c8f0f57f7b9d839613d75c074e0</anchor>
      <arglist>(const BC &amp;bc)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>begin</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a3e4959cb12c711fbda379f68e2f7fa3e</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>end</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a7f361d188723a47fdbb8a561aa93a991</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; unsigned, Workset &gt;::iterator</type>
      <name>begin</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a8738368e73e69db13fe464bebbddff44</anchor>
      <arglist>(const BC &amp;bc)</arglist>
    </member>
    <member kind="function">
      <type>std::map&lt; unsigned, Workset &gt;::iterator</type>
      <name>end</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a59a2ea3dbdc9cc3b35680cc3c67f56ec</anchor>
      <arglist>(const BC &amp;bc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateVolumeWorksets</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a97a2df6835b19ee4d424bb2aa65d1c2e</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;eBlocks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>allocateSideWorksets</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a6cd1d3e48178272611b81c29fcca6cdc</anchor>
      <arglist>(const std::vector&lt; BC &gt; &amp;bcs)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setGlobalIndexer</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a2c91f118cceafc1d386fc8251e9b7d47</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBasis</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a4a5fa3d790175f7f41a62b5915ca4bee</anchor>
      <arglist>(const std::string &amp;type, int order, const std::string &amp;rep_field)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::unordered_map&lt; WorksetDescriptor, Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt; &gt;</type>
      <name>VolumeMap</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ad39151b1d07964a77d5486ea7600640b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; SideId, Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;, LessSide &gt;</type>
      <name>SideMap</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a2f6b6b003eba053ebbd7c0b9a0fab7f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyOrientations</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ade16e031fdf1ac4125d56a5733b9de24</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyOrientations</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a0a7898bcd10ea13200e2b014852505e0</anchor>
      <arglist>(const std::string &amp;eBlock, std::vector&lt; Workset &gt; &amp;worksets) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>applyOrientations</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>aeac4e94e7644f774c8eafb06829fe67a</anchor>
      <arglist>(const SideId &amp;sideId, std::map&lt; unsigned, Workset &gt; &amp;worksets) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const WorksetFactoryBase &gt;</type>
      <name>wkstFactory_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>aae7b5a6e2989268adcdb5ac8decf761e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, Teuchos::RCP&lt; PhysicsBlock &gt; &gt;</type>
      <name>ebToPb_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a3accd8af38e242a267cdf26ae964b3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::map&lt; std::string, WorksetNeeds &gt;</type>
      <name>ebToNeeds_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>adde1e57e0ad1da9b1b672549c2717f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>VolumeMap</type>
      <name>volWorksets_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a1101062f6ea0b39f4047611af7d45239</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>SideMap</type>
      <name>sideWorksets_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a86389a22dc79cf6bfdd8a015e9f42e11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::size_t</type>
      <name>worksetSize_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>a0b0a946decd928f81fd7da44b67ba60f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt;</type>
      <name>globalIndexer_</name>
      <anchorfile>classpanzer_1_1WorksetContainer.html</anchorfile>
      <anchor>ab16d84c177cc925f12675c3f22d14db8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::WorksetDescriptor</name>
    <filename>classpanzer_1_1WorksetDescriptor.html</filename>
    <member kind="function">
      <type></type>
      <name>WorksetDescriptor</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a9797f8ed76e1fb241bcd3832276901b1</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetDescriptor</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a0b6614f321b34b5ecb76f68e263714d7</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;sideset, bool sideAssembly)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetDescriptor</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a78eee78d7e09774d9564b670d2885294</anchor>
      <arglist>(const WorksetDescriptor &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getElementBlock</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>ab7b5f2c39a656523a8ab1c06f86f0598</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getSideset</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a5acf766680f9044256526ae2264b0b3c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>sideAssembly</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>ae157a8d577d24718f755cb9b4082f7c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>useSideset</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>ae2b253a0d81767cd8326db5256259497</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>elementBlock_</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>ad46ddb3b6cd41c693ac45c7268a2628d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>useSideset_</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a498c15e94440fd908b927da9cfb462bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>sideset_</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a353e2d7b5217a04c7530b15684726669</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>sideAssembly_</name>
      <anchorfile>classpanzer_1_1WorksetDescriptor.html</anchorfile>
      <anchor>a89dcc7a7f0a0b0fa690fedf0a4f73c49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::WorksetDetails</name>
    <filename>structpanzer_1_1WorksetDetails.html</filename>
    <member kind="typedef">
      <type>PHX::MDField&lt; double, Cell, NODE, Dim &gt;</type>
      <name>CellCoordArray</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a6572740e51999893feedb17eca4d5400</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const int *, PHX::Device &gt;</type>
      <name>cell_local_ids_k</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a4d96ee00c9b933b9c3a9474248c9a1ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::size_t &gt;</type>
      <name>cell_local_ids</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a45430618f3fb38a4202eed42dbf901d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CellCoordArray</type>
      <name>cell_vertex_coordinates</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>afe9acf7d437cb1bfed53f6a5aa7768d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>block_id</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a2383e60556dd9b07df0437b220777a2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>subcell_index</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>aceca812a85b46718b10418abbcb2a4bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; std::vector&lt; int &gt; &gt;</type>
      <name>ir_degrees</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>aa1b84fe21213b3f043f126f7e98226fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::IntegrationValues2&lt; double &gt; &gt; &gt;</type>
      <name>int_rules</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a5afcf1c5a090e7541fbf1353cc40cbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; std::vector&lt; std::string &gt; &gt;</type>
      <name>basis_names</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a7cdac3d6e3f293f582a51444b4d602c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Teuchos::RCP&lt; panzer::BasisValues2&lt; double &gt; &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>structpanzer_1_1WorksetDetails.html</anchorfile>
      <anchor>a521d7995e15735282ca9a7ed2635d7ac</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::WorksetDetailsAccessor</name>
    <filename>classpanzer_1_1WorksetDetailsAccessor.html</filename>
    <member kind="function">
      <type></type>
      <name>WorksetDetailsAccessor</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>aeec0c44e248ba394bf92f98ccde854d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDetailsIndex</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>a2d85e307644912cfc7c21260c84c0aa6</anchor>
      <arglist>(const int di)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getDetailsIndex</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>a3a2edf3154a1689696d1bcde87ff0673</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>WorksetDetails &amp;</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>a53abae99ba8a70f08f247a092332c3c0</anchor>
      <arglist>(Workset &amp;workset) const </arglist>
    </member>
    <member kind="function">
      <type>const WorksetDetails &amp;</type>
      <name>operator()</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>a91ecd25ae71b1dafbc4d552857e0d49e</anchor>
      <arglist>(const Workset &amp;workset) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>details_index_</name>
      <anchorfile>classpanzer_1_1WorksetDetailsAccessor.html</anchorfile>
      <anchor>af263e5a5fa3eb59194d1f16fab1ed3be</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer_stk::WorksetFactory</name>
    <filename>classpanzer__stk_1_1WorksetFactory.html</filename>
    <base>panzer::WorksetFactoryBase</base>
    <member kind="function">
      <type></type>
      <name>WorksetFactory</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a8991520d851fac6658f5f750b63e15b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>WorksetFactory</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a491d420aec51c302a0df53649a6e009e</anchor>
      <arglist>(const Teuchos::RCP&lt; const STK_Interface &gt; &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WorksetFactory</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a7123f7892a71bb90fe976eb77561c57b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setMesh</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a757fa6ec7f10ac9d0a57e789678e371f</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a8c97ebe45ab240ac15318c99444c96e2</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::PhysicsBlock &amp;pb) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>ad3a707a8f75cab2aa5dde54206a615b4</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::WorksetNeeds &amp;needs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>adab2b33643049d995762948f3378c473</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::PhysicsBlock &amp;pb_a, const panzer::PhysicsBlock &amp;pb_b) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>getWorksets</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>a57047255f039ed9978c86c039acc9693</anchor>
      <arglist>(const panzer::WorksetDescriptor &amp;worksetDesc, const panzer::PhysicsBlock &amp;pb) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>getWorksets</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>acdd95ffcae93140f44019185c22c1cf1</anchor>
      <arglist>(const panzer::WorksetDescriptor &amp;worksetDesc, const panzer::WorksetNeeds &amp;needs) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>classpanzer__stk_1_1WorksetFactory.html</anchorfile>
      <anchor>af6a77b4862924d211c2844f73a2b7944</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>panzer::WorksetFactoryBase</name>
    <filename>classpanzer_1_1WorksetFactoryBase.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~WorksetFactoryBase</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>a19a294593a3d223643750c7211462da0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>a083acd97e71f9b57681f703cbf938b99</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::PhysicsBlock &amp;pb) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>a6dcd0fad854aff14be3949d08f244a82</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::PhysicsBlock &amp;pb_a, const panzer::PhysicsBlock &amp;pb_b) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>getWorksets</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>ab797ad30d29d5381a89f2640fb173041</anchor>
      <arglist>(const WorksetDescriptor &amp;worksetDesc, const panzer::PhysicsBlock &amp;pb) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>getSideWorksets</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>aa8195dd509226b070c6c628c95e5285a</anchor>
      <arglist>(const panzer::BC &amp;bc, const panzer::WorksetNeeds &amp;pb) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>getWorksets</name>
      <anchorfile>classpanzer_1_1WorksetFactoryBase.html</anchorfile>
      <anchor>a811fd2b80ec04a1def873393283f6d3c</anchor>
      <arglist>(const WorksetDescriptor &amp;worksetDesc, const panzer::WorksetNeeds &amp;pb) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>panzer::WorksetNeeds</name>
    <filename>structpanzer_1_1WorksetNeeds.html</filename>
    <member kind="variable">
      <type>CellData</type>
      <name>cellData</name>
      <anchorfile>structpanzer_1_1WorksetNeeds.html</anchorfile>
      <anchor>a9a3aa161706d997f92bfcc022a6b6518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Teuchos::RCP&lt; const IntegrationRule &gt; &gt;</type>
      <name>int_rules</name>
      <anchorfile>structpanzer_1_1WorksetNeeds.html</anchorfile>
      <anchor>a2140cea7df488b4e42e0b2d3f45bcd47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; Teuchos::RCP&lt; const PureBasis &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>structpanzer_1_1WorksetNeeds.html</anchorfile>
      <anchor>af37ef2dfd56c4869b21d00e88714e3c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>rep_field_name</name>
      <anchorfile>structpanzer_1_1WorksetNeeds.html</anchorfile>
      <anchor>a27d669aa902f760fe56d550be2682f42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>panzer</name>
    <filename>namespacepanzer.html</filename>
    <namespace>panzer::dof_functors</namespace>
    <namespace>panzer::orientation_helpers</namespace>
    <namespace>panzer::response_bc_adapters</namespace>
    <class kind="class">panzer::ArrayToFieldVector</class>
    <class kind="struct">panzer::ArrayTraits</class>
    <class kind="class">panzer::AssemblyEngine</class>
    <class kind="class">panzer::AssemblyEngine_TemplateBuilder</class>
    <class kind="class">panzer::AssemblyEngine_TemplateManager</class>
    <class kind="class">panzer::AssemblyEngineInArgs</class>
    <class kind="class">panzer::Base</class>
    <class kind="class">panzer::basic_ios_all_saver</class>
    <class kind="class">panzer::Basis_Constant</class>
    <class kind="class">panzer::BasisInformation</class>
    <class kind="class">panzer::BasisIRLayout</class>
    <class kind="class">panzer::BasisValues2</class>
    <class kind="class">panzer::BC</class>
    <class kind="struct">panzer::BCFactoryComposite</class>
    <class kind="class">panzer::BCStrategy</class>
    <class kind="class">panzer::BCStrategy_Dirichlet_DefaultImpl</class>
    <class kind="class">panzer::BCStrategy_Interface_DefaultImpl</class>
    <class kind="class">panzer::BCStrategy_Neumann_DefaultImpl</class>
    <class kind="class">panzer::BCStrategy_TemplateManager</class>
    <class kind="class">panzer::BCStrategy_WeakDirichlet_DefaultImpl</class>
    <class kind="class">panzer::BCStrategyBase</class>
    <class kind="struct">panzer::BCStrategyFactory</class>
    <class kind="class">panzer::BlockedDOFManager</class>
    <class kind="class">panzer::BlockedDOFManagerFactory</class>
    <class kind="class">panzer::BlockedEpetraLinearObjContainer</class>
    <class kind="class">panzer::BlockedEpetraLinearObjFactory</class>
    <class kind="class">panzer::BlockedTpetraLinearObjContainer</class>
    <class kind="class">panzer::BlockedTpetraLinearObjFactory</class>
    <class kind="class">panzer::BlockedVector_ReadOnly_GlobalEvaluationData</class>
    <class kind="class">panzer::CellData</class>
    <class kind="class">panzer::CellTopologyInfo</class>
    <class kind="class">panzer::CloneableEvaluator</class>
    <class kind="class">panzer::ClosureModelFactory</class>
    <class kind="class">panzer::ClosureModelFactory_TemplateManager</class>
    <class kind="class">panzer::ClosureModelFactoryBase</class>
    <class kind="class">panzer::ClosureModelFactoryComposite</class>
    <class kind="class">panzer::ClosureModelFactoryComposite_TemplateBuilder</class>
    <class kind="class">panzer::CommaSeparatedEntryValidator</class>
    <class kind="class">panzer::ConnManager</class>
    <class kind="class">panzer::ConnManagerBase</class>
    <class kind="class">panzer::ConstVectorTemplateIterator</class>
    <class kind="class">panzer::DOF</class>
    <class kind="class">panzer::DOF&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <class kind="class">panzer::DOF_BasisToBasis</class>
    <class kind="class">panzer::DOF_PointField</class>
    <class kind="class">panzer::DOF_PointValues</class>
    <class kind="class">panzer::DOF_PointValues&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <class kind="class">panzer::DOFCurl</class>
    <class kind="class">panzer::DOFCurl&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <class kind="class">panzer::DOFDiv</class>
    <class kind="class">panzer::DOFDiv&lt; panzer::Traits::Jacobian, TRAITS &gt;</class>
    <class kind="class">panzer::DOFManager</class>
    <class kind="class">panzer::DOFManagerFactory</class>
    <class kind="class">panzer::EmptyEvaluatorFactory</class>
    <class kind="class">panzer::EpetraLinearObjContainer</class>
    <class kind="class">panzer::EpetraVector_ReadOnly_GlobalEvaluationData</class>
    <class kind="class">panzer::EquationSet</class>
    <class kind="class">panzer::EquationSet_DefaultImpl</class>
    <class kind="class">panzer::EquationSet_FactoryComposite</class>
    <class kind="class">panzer::EquationSet_TemplateManager</class>
    <class kind="class">panzer::EquationSetBase</class>
    <class kind="struct">panzer::EquationSetFactory</class>
    <class kind="struct">panzer::EvaluationTraits</class>
    <class kind="class">panzer::EvaluatorsRegistrar</class>
    <class kind="class">panzer::EvaluatorWithBaseImpl</class>
    <class kind="class">panzer::ExplicitModelEvaluator</class>
    <class kind="struct">panzer::ExtremeValueResponse_Builder</class>
    <class kind="class">panzer::ExtremeValueScatter</class>
    <class kind="class">panzer::ExtremeValueScatterBase</class>
    <class kind="class">panzer::FieldAggPattern</class>
    <class kind="class">panzer::FieldLayoutLibrary</class>
    <class kind="class">panzer::FieldLibrary</class>
    <class kind="class">panzer::FieldLibraryBase</class>
    <class kind="class">panzer::FieldManagerBuilder</class>
    <class kind="struct">panzer::FieldMultTag</class>
    <class kind="class">panzer::FieldPattern</class>
    <class kind="class">panzer::FieldSpy</class>
    <class kind="class">panzer::Filtered_UniqueGlobalIndexer</class>
    <class kind="struct">panzer::FunctionalResponse_Builder</class>
    <class kind="class">panzer::FunctionalScatter</class>
    <class kind="class">panzer::FunctionalScatterBase</class>
    <class kind="class">panzer::GatherBasisCoordinates</class>
    <class kind="class">panzer::GatherIntegrationCoordinates</class>
    <class kind="class">panzer::GatherNormals</class>
    <class kind="class">panzer::GatherOrientation</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, S, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, S, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_BlockedTpetra&lt; panzer::Traits::Tangent, TRAITS, S, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_Epetra</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::GatherSolution_Input</class>
    <class kind="class">panzer::GatherSolution_Tpetra</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherSolution_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::GatherTangent_BlockedEpetra</class>
    <class kind="class">panzer::GatherTangent_BlockedTpetra</class>
    <class kind="class">panzer::GatherTangent_Epetra</class>
    <class kind="class">panzer::GatherTangent_Tpetra</class>
    <class kind="class">panzer::GatherTangents</class>
    <class kind="class">panzer::GenericEvaluatorFactory</class>
    <class kind="class">panzer::GeometricAggFieldPattern</class>
    <class kind="struct">panzer::GlobalData</class>
    <class kind="class">panzer::GlobalDataAcceptor</class>
    <class kind="class">panzer::GlobalDataAcceptorDefaultImpl</class>
    <class kind="class">panzer::GlobalEvaluationData</class>
    <class kind="class">panzer::GlobalEvaluationData_BCAdjustment</class>
    <class kind="class">panzer::GlobalEvaluationData_Default</class>
    <class kind="class">panzer::GlobalEvaluationDataContainer</class>
    <class kind="struct">panzer::ICFieldDescriptor</class>
    <class kind="class">panzer::IntegrationRule</class>
    <class kind="class">panzer::IntegrationValues2</class>
    <class kind="class">panzer::Intrepid2FieldContainerFactory</class>
    <class kind="class">panzer::Intrepid2FieldPattern</class>
    <class kind="struct">panzer::LessBC</class>
    <class kind="struct">panzer::LessSide</class>
    <class kind="class">panzer::LinearObjContainer</class>
    <class kind="class">panzer::LinearObjFactory</class>
    <class kind="class">panzer::LOCPair_GlobalEvaluationData</class>
    <class kind="class">panzer::MassMatrixModelEvaluator</class>
    <class kind="class">panzer::MaterialModelEntry</class>
    <class kind="class">panzer::MDFieldArrayFactory</class>
    <class kind="struct">panzer::MemUsage</class>
    <class kind="class">panzer::ModelEvaluator</class>
    <class kind="class">panzer::ModelEvaluator_Epetra</class>
    <class kind="class">panzer::MultiVariateParameter</class>
    <class kind="class">panzer::NodalFieldPattern</class>
    <class kind="class">panzer::OrientationContainer</class>
    <class kind="class">panzer::OrientationContainerBase</class>
    <class kind="class">panzer::OutputStream</class>
    <class kind="class">panzer::OutputStreamDefaultImpl</class>
    <class kind="struct">panzer::pair_hash</class>
    <class kind="struct">panzer::PanzerSumTag</class>
    <class kind="class">panzer::PAPICounter</class>
    <class kind="class">panzer::PAPICounter2</class>
    <class kind="class">panzer::Parameter</class>
    <class kind="class">panzer::ParameterLibraryAcceptor</class>
    <class kind="class">panzer::ParameterLibraryAcceptor_DefaultImpl</class>
    <class kind="class">panzer::ParameterList_GlobalEvaluationData</class>
    <class kind="class">panzer::PhysicsBlock</class>
    <class kind="class">panzer::PointRule</class>
    <class kind="struct">panzer::PointValues2</class>
    <class kind="struct">panzer::ProbeResponse_Builder</class>
    <class kind="class">panzer::ProbeScatter</class>
    <class kind="class">panzer::ProbeScatterBase</class>
    <class kind="class">panzer::ProjectToEdges</class>
    <class kind="class">panzer::ProjectToFaces</class>
    <class kind="class">panzer::PureBasis</class>
    <class kind="class">panzer::ReadOnlyVector_GlobalEvaluationData</class>
    <class kind="class">panzer::ReorderADValues_Evaluator</class>
    <class kind="class">panzer::ReorderADValues_Evaluator&lt; typename TRAITS::Jacobian, TRAITS &gt;</class>
    <class kind="class">panzer::Response_ExtremeValue</class>
    <class kind="class">panzer::Response_Functional</class>
    <class kind="class">panzer::Response_IPCoordinates</class>
    <class kind="class">panzer::Response_Probe</class>
    <class kind="class">panzer::Response_Residual</class>
    <class kind="class">panzer::Response_Residual&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="class">panzer::Response_Residual&lt; panzer::Traits::Residual &gt;</class>
    <class kind="class">panzer::ResponseBase</class>
    <class kind="class">panzer::ResponseContainer</class>
    <class kind="class">panzer::ResponseContainerBase</class>
    <class kind="class">panzer::ResponseEvaluatorFactory</class>
    <class kind="class">panzer::ResponseEvaluatorFactory_ExtremeValue</class>
    <class kind="class">panzer::ResponseEvaluatorFactory_Functional</class>
    <class kind="class">panzer::ResponseEvaluatorFactory_IPCoordinates</class>
    <class kind="struct">panzer::ResponseEvaluatorFactory_IPCoordinates_Builder</class>
    <class kind="class">panzer::ResponseEvaluatorFactory_Probe</class>
    <class kind="class">panzer::ResponseEvaluatorFactory_TemplateManager</class>
    <class kind="class">panzer::ResponseEvaluatorFactoryBase</class>
    <class kind="class">panzer::ResponseLibrary</class>
    <class kind="class">panzer::ResponseMESupport_Default</class>
    <class kind="class">panzer::ResponseMESupport_Default&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="class">panzer::ResponseMESupport_Default&lt; panzer::Traits::Tangent &gt;</class>
    <class kind="class">panzer::ResponseMESupportBase</class>
    <class kind="class">panzer::ResponseMESupportBase&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="class">panzer::ResponseMESupportBase&lt; panzer::Traits::Tangent &gt;</class>
    <class kind="class">panzer::ResponseMESupportBuilderBase</class>
    <class kind="class">panzer::ResponseScatterEvaluator</class>
    <class kind="class">panzer::ResponseScatterEvaluator_ExtremeValue</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Functional</class>
    <class kind="class">panzer::ResponseScatterEvaluator_IPCoordinates</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Probe</class>
    <class kind="class">panzer::ResponseScatterEvaluator_Probe&lt; panzer::Traits::Jacobian, panzer::Traits, LO, GO &gt;</class>
    <class kind="class">panzer::ResponseScatterEvaluator_ProbeBase</class>
    <class kind="class">panzer::RVEF2</class>
    <class kind="class">panzer::ScalarParameterEntry</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterDirichletResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedEpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_BlockedTpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_Epetra</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Residual, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_Epetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO &gt;</class>
    <class kind="class">panzer::ScatterResidual_Tpetra</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Jacobian, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Residual, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="class">panzer::ScatterResidual_Tpetra&lt; panzer::Traits::Tangent, TRAITS, LO, GO, NodeT &gt;</class>
    <class kind="struct">panzer::SideId</class>
    <class kind="struct">panzer::StrBasisComp</class>
    <class kind="struct">panzer::StrPureBasisComp</class>
    <class kind="class">panzer::SumStatic</class>
    <class kind="class">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, Tag1, void &gt;</class>
    <class kind="class">panzer::SumStatic&lt; EvalT, TRAITS, Tag0, void, void &gt;</class>
    <class kind="class">panzer::ThyraObjContainer</class>
    <class kind="class">panzer::ThyraObjFactory</class>
    <class kind="class">panzer::TpetraLinearObjContainer</class>
    <class kind="class">panzer::TpetraLinearObjFactory</class>
    <class kind="class">panzer::TpetraVector_ReadOnly_GlobalEvaluationData</class>
    <class kind="struct">panzer::Traits</class>
    <class kind="class">panzer::TypeAssocMap</class>
    <class kind="class">panzer::UniqueGlobalIndexer</class>
    <class kind="class">panzer::UniqueGlobalIndexerBase</class>
    <class kind="class">panzer::UniqueGlobalIndexerFactory</class>
    <class kind="class">panzer::VectorTemplateIterator</class>
    <class kind="struct">panzer::Workset</class>
    <class kind="class">panzer::WorksetContainer</class>
    <class kind="class">panzer::WorksetDescriptor</class>
    <class kind="struct">panzer::WorksetDetails</class>
    <class kind="class">panzer::WorksetDetailsAccessor</class>
    <class kind="class">panzer::WorksetFactoryBase</class>
    <class kind="struct">panzer::WorksetNeeds</class>
    <member kind="typedef">
      <type>PHX::Device::scratch_memory_space</type>
      <name>shmem_space</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a81d3a1cd2ebb20fc421d4d9f82e9c1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Kokkos::View&lt; ScalarT ** &gt;</type>
      <name>KokkosScalarFields_t</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a88f9e414f7fa31a96a67c2cd6d9115bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>BlockedEpetraLinearObjFactory&lt; Traits, LocalOrdinalT &gt;</type>
      <name>EpetraLinearObjFactory</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5ec7ea87f5a2b2a630c4dce4d83c9fe0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::string, Teuchos::RCP&lt; panzer::BasisIRLayout &gt; &gt;</type>
      <name>StrBasisPair</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3e4a4900a1b606375831198d96df718</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_ios_all_saver&lt; char &gt;</type>
      <name>ios_all_saver</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4b1625b8ed39f2fc993d620137a064b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_ios_all_saver&lt; wchar_t &gt;</type>
      <name>wios_all_saver</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad9442439d0b287db5b9147101f7ecf3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sacado::ScalarParameterLibrary&lt; panzer::EvaluationTraits &gt;</type>
      <name>ParamLib</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeb4f6068664e1d39e43c1574de099f25</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Sacado::ScalarParameterVector&lt; panzer::EvaluationTraits &gt;</type>
      <name>ParamVec</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaa54d8ad3ec6aafbdc08cf1ea705b7ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::string, Teuchos::RCP&lt; panzer::PureBasis &gt; &gt;</type>
      <name>StrPureBasisPair</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa21a2913d458cd65171b772ce9bd5204</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Kokkos::Compat::KokkosDeviceWrapperNode&lt; PHX::Device &gt;</type>
      <name>TpetraNodeType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abccccd000ea6cf0ac6427576e791bb42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>BCType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Dirichlet</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92a1ce69cf18c7131f0f5c835263e468666</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Neumann</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92ad69368e278318d57855f5fc011a054e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BCT_Interface</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5fdc63de1ba4703b6be8355fcae5f92afa99f7d8e09568db62d21630c2d63a86</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EVerbosityLevel</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_NONE</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efaf4c78c85b117918fec2107ce441c2c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_LOW</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efa4858c5cbe8e1cdce53cf9f45f0e657a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_MEDIUM</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efaf3f265cbdf3ae50a4e0180675ccb3825</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_HIGH</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efac2ffbd662f5ca81c8dce40cdec7cd141</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_EXTREME</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa7c34b79091e1370861b47a7353d71efa0d314ec6e80dddea7bf929c52c4bfd3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>MemUsageType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEM_USAGE_CURRENT</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12afe4f427739a20989826b71d41eede8e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MEM_USAGE_PEAK</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae94bb904bbf31f586b35c74bb1d28c12a2cba3d75e069a65c429d80357fcd56ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1b68636d31df4ce02fee941b981410d2</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, bool derivativesRequired)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a766e96be63f69485e0ea14ec5f2d663c</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BasisValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af14447dd292122d8c63cf8e8fb8102cf</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;basis, bool derivativesRequired)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a23d9bd570ede709f770e01d8dc6ecdda</anchor>
      <arglist>(BasisValues_Evaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae1cc4795b806154707b9db73cf42cf15</anchor>
      <arglist>(BasisValues_Evaluator, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1b0c088e32a11547704769b420a1f713</anchor>
      <arglist>(BasisValues_Evaluator, workset)</arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9ac5569d602de502b1aee333faea849a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a87a02a099f2077cd3d427794010ee053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>PANZER_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>cellAverageEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0905667c1699677eb227e52c598b3378</anchor>
      <arglist>(const std::string &amp;averageName, const std::string &amp;fieldName, const Teuchos::RCP&lt; const panzer::IntegrationRule &gt; &amp;ir)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5c54cdeb906d43c7a06378a81506ef94</anchor>
      <arglist>(CellAverage, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a899e07a093d8da619e5f3c4247a87c3a</anchor>
      <arglist>(CellAverage, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac6ffc8eef441127c124ef0c3faf0a857</anchor>
      <arglist>(CellAverage, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8595235ed5c5187ce9675ce60fb3eff8</anchor>
      <arglist>(CellExtreme, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3cd374f38994c412234a0d2d81bf7dc5</anchor>
      <arglist>(CellExtreme, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aff71f640dc1b125e12be8af6029830a7</anchor>
      <arglist>(CellExtreme, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e265e2e515be32bb8ba3c2b455d74fb</anchor>
      <arglist>(Constant, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a35d896cfeb07ee45047677eab1f5b635</anchor>
      <arglist>(Constant, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a85cfd35a60c871c6a01d0cc053cef4c3</anchor>
      <arglist>(Constant, d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67bba48ca1dd503f96420e28dcc59e08</anchor>
      <arglist>(ConstantFlux, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa4ef2e0fab6d311ab487715f4aff2915</anchor>
      <arglist>(ConstantFlux, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3665ad7af5a2f7413f2e68d31048d0f</anchor>
      <arglist>(ConstantFlux, d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1510ceeaeaf7b5ec678a2ea5ae0f9ade</anchor>
      <arglist>(ConstantVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3559c473f73a3ccb5bbc4388c3535203</anchor>
      <arglist>(ConstantVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a276ca264d93112fd1b0246915e9f8686</anchor>
      <arglist>(ConstantVector, d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6bf3e1e78483cda6ea49acdf33966754</anchor>
      <arglist>(CoordinatesEvaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70a8de4e6fc385ed81044a6104e3bb03</anchor>
      <arglist>(CoordinatesEvaluator, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6520d78170b79c406dc7382aaafe41d0</anchor>
      <arglist>(CoordinatesEvaluator, d)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>add51dfde5beddd5b169eb8aba51ba6f3</anchor>
      <arglist>(Copy, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a449ad25abff70d4b30d2ad43ec718b54</anchor>
      <arglist>(Copy, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a06b799fc86325d59f527e24b2e8f2b65</anchor>
      <arglist>(Copy, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a614ce533ab2c2b06af4315a4d0385655</anchor>
      <arglist>(CrossProduct, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a110fb895e2aa437b658275e9bb391a21</anchor>
      <arglist>(CrossProduct, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9c3073700315bd921ca6ae4cafd3b7cb</anchor>
      <arglist>(CrossProduct, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a99eb1dd6ea62ebf931e74b0276e43640</anchor>
      <arglist>(DirichletResidual_EdgeBasis, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6842914c049af3f20ad7eb9c2d696027</anchor>
      <arglist>(DirichletResidual_EdgeBasis, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad2199a50ec1b7b1307ed724aaece7b43</anchor>
      <arglist>(DirichletResidual_EdgeBasis, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a418d440dd0b21521ba78dead318c1804</anchor>
      <arglist>(DirichletResidual_FaceBasis, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa83acdc8c4d709b2b81bb9e243e3c20f</anchor>
      <arglist>(DirichletResidual_FaceBasis, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a046b11192f17c5d943cace0f6aa9644f</anchor>
      <arglist>(DirichletResidual_FaceBasis, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a19dbef205492f4d40ab03503ef795fea</anchor>
      <arglist>(DirichletResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e650fc93dc98042a5979453782c6785</anchor>
      <arglist>(DirichletResidual, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0a8660ecea3290661721dfc313364e47</anchor>
      <arglist>(DirichletResidual, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a368d50b5934ab1518864240fa9c871be</anchor>
      <arglist>(DOFGradient, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a77a3e1a2174621b1b843a94790309f7a</anchor>
      <arglist>(DOFGradient, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a955b84d08dacda68eda5a814e6b13680</anchor>
      <arglist>(DOFGradient, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aab8b4411d2f4c9c94f583c288c580c6b</anchor>
      <arglist>(DotProduct, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2888e0c90240b8a88b166bfcbe7bff9d</anchor>
      <arglist>(DotProduct, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af4baf3cde0bd1b4e82c8d7c1840c6e67</anchor>
      <arglist>(DotProduct, workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>postprocess</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af33a04ce5413703d4ef503f4ee9221ae</anchor>
      <arglist>(std::ostream &amp;os)</arglist>
    </member>
    <member kind="function">
      <type>const PHX::FieldTag &amp;</type>
      <name>getRequiredFieldTag</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaaf7e02109ccea89ed1f71775a7225a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afe57771713d4f546e924058a7f92b33a</anchor>
      <arglist>(GlobalStatistics, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8187bb6a5ac3260cad739daff0ad8064</anchor>
      <arglist>(GlobalStatistics, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac455879b29a1b4cd66efc07ecf265f1c</anchor>
      <arglist>(GlobalStatistics, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_PRE_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a55afa925ad99c2168722a8a0744e315e</anchor>
      <arglist>(GlobalStatistics, data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a510e1d5a36a94a131171e7923a4f9848</anchor>
      <arglist>(GlobalStatistics, data)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abd9ea472d461b5711e5d7ced6dc52fb7</anchor>
      <arglist>(Integrator_BasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad74dadd21a618f68de611fc4da7b5879</anchor>
      <arglist>(Integrator_BasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a739bd105615cd429f58e583244a7c6fa</anchor>
      <arglist>(Integrator_BasisTimesScalar, workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae4f14a11f93f95aad6181596c7760fe8</anchor>
      <arglist>(const FieldMultTag&lt; NUM_FIELD_MULT &gt; &amp;, const std::size_t &amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaa54d8ef94d88f4def4b0d7409e7465c</anchor>
      <arglist>(Integrator_BasisTimesVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1bd88b9744807c5094a23bfb33cd6f13</anchor>
      <arglist>(Integrator_BasisTimesVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a10f339bd59aadb07989dabdf0f15b060</anchor>
      <arglist>(Integrator_BasisTimesVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad31c8108c8183995da78294ab737bca6</anchor>
      <arglist>(Integrator_CurlBasisDotVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a495a3f5c7e6143a9e612c0c6f02a9ea3</anchor>
      <arglist>(Integrator_CurlBasisDotVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67f094e6f3462af816e0df4ee5505cbd</anchor>
      <arglist>(Integrator_CurlBasisDotVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5189c92558522d60fcb0a3bddbbabca9</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a65ad68cc292706317db3a47e5205d5fd</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5485e18cb4432a2e6aabd91ad2a8340e</anchor>
      <arglist>(Integrator_DivBasisTimesScalar, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2ba4f1c2290bfd1843436e69d1ef526</anchor>
      <arglist>(Integrator_GradBasisDotVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af772abda86dc03b2116103f022546a13</anchor>
      <arglist>(Integrator_GradBasisDotVector, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e6b33e5dac5b55c42a81fb2a08a9943</anchor>
      <arglist>(Integrator_GradBasisDotVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad8255cd58d247a69917c5671ef5a2d50</anchor>
      <arglist>(Integrator_Scalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8f8ed7083705166b80dccad7ba23aa0c</anchor>
      <arglist>(Integrator_Scalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a85dda135cf7a857dd5b94a361c3b450a</anchor>
      <arglist>(Integrator_Scalar, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aae86f243bdd94c8f91351e5b1b84bf42</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a719e3840a7cdc2299eec66d44590fdf2</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a886ced449768b26ad11dcd57ad715b12</anchor>
      <arglist>(Integrator_TransientBasisTimesScalar, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a811f4e74eca8931762a50f1d4d7e6cbe</anchor>
      <arglist>(InterfaceResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac2afac21d4d9d0d3b32b711e0dd8d5e6</anchor>
      <arglist>(InterfaceResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab355dd92c7938c05456436d80fbd1db1</anchor>
      <arglist>(InterfaceResidual, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad8d523d2e00ec9b419e0d37fd0489bcb</anchor>
      <arglist>(NeumannResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a997cf391c66ad54ae9b87557a42aed4a</anchor>
      <arglist>(NeumannResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a148230506ce3d1c858e4c35d12aa4db2</anchor>
      <arglist>(NeumannResidual, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a07fa60da48176c561d68004ce4335f06</anchor>
      <arglist>(Normals, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a575ada5856d98421b9d85308bf604e4d</anchor>
      <arglist>(Normals, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abf62f93294f24cfdf32e68b82a4799e9</anchor>
      <arglist>(Normals, workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a76f9ee8d022711e4f06cb99aa707e51a</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::Ptr&lt; const ArrayT &gt; &amp;userArray, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;pureBasis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8f593288c669674012caf702da974687</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Kokkos::DynRankView&lt; double, PHX::Device &gt; &amp;userArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a388e77043ea0ed04436d05269d6d79d4</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const PHX::MDField&lt; double, panzer::IP, panzer::Dim &gt; &amp;userArray)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PointValues_Evaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8e1ec3b308c486f4c22aaf5de6edda0</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const Teuchos::RCP&lt; const panzer::PureBasis &gt; &amp;pureBasis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>accd6727c6f9b8edcd04bd0cc350a7993</anchor>
      <arglist>(PointValues_Evaluator, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7a9e444b73aa9f4290568353fcbdf2b7</anchor>
      <arglist>(PointValues_Evaluator, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8a8b815a2c44d6e2de72d1b06940fefe</anchor>
      <arglist>(PointValues_Evaluator, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8eb7292848b44d5e3d03c4ada84b25e7</anchor>
      <arglist>(Product, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a53291f36dc93f65a66de18c2a64ac45c</anchor>
      <arglist>(Product, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3dcf50304701858c684028184dcdcd28</anchor>
      <arglist>(Product, workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb14dab8c4182cb9ac0cbd0c6ad8e151</anchor>
      <arglist>(const size_t &amp;cell) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa5b6801e52f1e5b4aaec691625bf0fcb</anchor>
      <arglist>(ScalarToVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae4983eea9d6aa600518ba47e3a05dad2</anchor>
      <arglist>(ScalarToVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6982706c915e06e1e99ea96d2f79f3f3</anchor>
      <arglist>(ScalarToVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac3473795fdeedb1dce72a807946b780f</anchor>
      <arglist>(SubcellSum, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3b1b05f729f99b2c2369f14d7308bcd</anchor>
      <arglist>(SubcellSum, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac13830dd2d66453a6a5534e6ba1c88a0</anchor>
      <arglist>(SubcellSum, workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb1cf1edf2e7d3249fab2b677e3e7fc9</anchor>
      <arglist>(PanzerSumTag&lt; RANK &gt;, const int &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; TRAITS &gt; &gt;</type>
      <name>buildStaticSumEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa000590e2ec788d6d926aa1f375812b8</anchor>
      <arglist>(const std::string &amp;sum_name, const std::vector&lt; std::string &gt; &amp;value_names, const Teuchos::RCP&lt; PHX::DataLayout &gt; &amp;data_layout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aebf247c3dfd4b070fde5b83a20a27037</anchor>
      <arglist>(Sum, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a677c25532be0472c0a362e38670a00be</anchor>
      <arglist>(Sum, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab56c6bc9cd75fd1aa43eb6008a110c5b</anchor>
      <arglist>(Sum, workset)</arglist>
    </member>
    <member kind="function">
      <type>PHX_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>tensorToStdVectorEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1ff6d7f5ccfb4656136615304204bce8</anchor>
      <arglist>(const std::string &amp;tensorName, const std::string &amp;vectorPrefix, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;tensorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>tensorToStdVectorEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab082b1ee253dea321193299955ffa915</anchor>
      <arglist>(const std::string &amp;tensorName, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;tensorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a958f3ee423f7b4b6488ccb5a41eb3f7d</anchor>
      <arglist>(TensorToStdVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a16052654a78380f1994653c97b1ca000</anchor>
      <arglist>(TensorToStdVector, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9f8713ff7fed17541efd5635442cce45</anchor>
      <arglist>(TensorToStdVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac6a6d05cba9c29e25aaa0ca02f45687c</anchor>
      <arglist>(TestScatter, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a17bbefeaa5d23ae61120e7e7623d3dca</anchor>
      <arglist>(TestScatter, setupData, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9953f00a3755e0174f7fbaf6ca8f9dcd</anchor>
      <arglist>(TestScatter, workset)</arglist>
    </member>
    <member kind="function">
      <type>PANZER_EVALUATOR_CLASS_END Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>vectorToScalarEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>affd1c2b30b242d887745d88905374daa</anchor>
      <arglist>(const std::string &amp;vectorName, const std::string &amp;scalarPrefix, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;scalarLayout)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PHX::Evaluator&lt; Traits &gt; &gt;</type>
      <name>vectorToScalarEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a973d429f7d39556bcb7cadf7eccbe8fe</anchor>
      <arglist>(const std::string &amp;vectorName, const std::vector&lt; std::string &gt; &amp;postfix, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;vectorLayout, const Teuchos::RCP&lt; const PHX::DataLayout &gt; &amp;scalarLayout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af4eda7b9695d0481f71b21908b90d83c</anchor>
      <arglist>(VectorToScalar, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad1e302aa06d513d9635776136f068561</anchor>
      <arglist>(VectorToScalar, worksets, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a65bb263c812e72e1b24e53f265371434</anchor>
      <arglist>(VectorToScalar, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3552d24b937b0590254f5fd56a3ef9ce</anchor>
      <arglist>(WeakDirichletResidual, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4c23dd09e601427446105cf9b03f4b98</anchor>
      <arglist>(WeakDirichletResidual, sd, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4048a79524e209575197be7699665e74</anchor>
      <arglist>(WeakDirichletResidual, workset)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4e8ea2c6f17c750568c75bb6b394a1e5</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRange</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e633d65ad6997a762e565270135207b</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const LinearObjFactory&lt; panzer::Traits &gt; &gt;</type>
      <name>cloneWithNewRangeAndDomain</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a37a81f034951d350cf87a2a8b5c8026f</anchor>
      <arglist>(const LinearObjFactory&lt; panzer::Traits &gt; &amp;lof, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;rUgi, const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;dUgi)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae690119ae0a65e27dcbde6e290f1b205</anchor>
      <arglist>(std::ostream &amp;os, const AssemblyEngineInArgs &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>basisIRLayout</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4f2ad42bd8453f6cb3157487a8eba961</anchor>
      <arglist>(std::string basis_type, const int basis_order, const PointRule &amp;pt_rule)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::BasisIRLayout &gt;</type>
      <name>basisIRLayout</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5f28e1dbb28fd985f7c6c3ea89b38420</anchor>
      <arglist>(const Teuchos::RCP&lt; const PureBasis &gt; &amp;b, const PointRule &amp;pt_rule)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afeb586087a868a2170e96ad3f5c7f6ab</anchor>
      <arglist>(std::ostream &amp;os, const panzer::BC &amp;bc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildAndRegisterSubsetOfClosureModelEvaluatorsForType</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a227d0c67177b7409efd8cddb393ca8de</anchor>
      <arglist>(PHX::FieldManager&lt; panzer::Traits &gt; &amp;fm, const panzer::PhysicsBlock &amp;pb, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;factory, const std::string comma_sep_closure_model_list, const Teuchos::ParameterList &amp;models, const Teuchos::ParameterList &amp;user_data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildBlockIdToPhysicsIdMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae10c99e4e7d3bae8fe8c7d558edbf93c</anchor>
      <arglist>(std::map&lt; std::string, std::string &gt; &amp;b_to_p, const Teuchos::ParameterList &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a00f8bb3e1404e052fa5905156b019c6d</anchor>
      <arglist>(std::ostream &amp;os, const FieldLibraryBase &amp;flb)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afd2f7d670a56de83b48d9db54169b432</anchor>
      <arglist>(std::ostream &amp;os, const panzer::FieldManagerBuilder &amp;rfd)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>createGlobalData</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8bc3f7c0990ac4d2501c5e3fcda4dd46</anchor>
      <arglist>(bool build_default_os, int print_process)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupInitialConditionFieldManagers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeedb67b7bd3ce4053e7dbf15b1713e47</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physicsBlocks, const panzer::ClosureModelFactory_TemplateManager&lt; panzer::Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_block_closure_models, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const Teuchos::ParameterList &amp;user_data, const bool write_graphviz_file, const std::string &amp;graphviz_file_prefix, std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluateInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5f373a1a9e051466dc9f50332a0eb034</anchor>
      <arglist>(WorksetContainer &amp;wkstContainer, const std::map&lt; std::string, Teuchos::RCP&lt; PHX::FieldManager&lt; panzer::Traits &gt; &gt; &gt; &amp;phx_ic_field_managers, Teuchos::RCP&lt; panzer::LinearObjContainer &gt; loc, const panzer::LinearObjFactory&lt; panzer::Traits &gt; &amp;lo_factory, const double time_stamp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupControlInitialCondition</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af43a3d15fe42293802ac9aba44202fd6</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, WorksetContainer &amp;wkstContainer, const LinearObjFactory&lt; Traits &gt; &amp;lof, const ClosureModelFactory_TemplateManager&lt; Traits &gt; &amp;cm_factory, const Teuchos::ParameterList &amp;ic_closure_models, const Teuchos::ParameterList &amp;user_data, int workset_size, double t0, const Teuchos::RCP&lt; Thyra::VectorBase&lt; double &gt; &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildICPhysicsBlocks</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8c91355078f0beb66192aa3dff5114ae</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, int workset_size, std::vector&lt; Teuchos::RCP&lt; PhysicsBlock &gt; &gt; &amp;physics_blocks)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildICPhysicsBlocks</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aac9da94291810f4562b2e42169a59355</anchor>
      <arglist>(const std::map&lt; std::string, Teuchos::RCP&lt; const shards::CellTopology &gt; &gt; &amp;block_ids_to_cell_topo, const std::map&lt; std::string, std::vector&lt; ICFieldDescriptor &gt; &gt; &amp;block_ids_to_fields, int workset_size, std::vector&lt; Teuchos::RCP&lt; panzer::PhysicsBlock &gt; &gt; &amp;physics_blocks)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>permuteToOther</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8a1c61422d907e8a8b8db1d0c38d290b</anchor>
      <arglist>(const PHX::MDField&lt; Scalar, Cell, IP, Dim &gt; &amp;coords, const PHX::MDField&lt; Scalar, Cell, IP, Dim &gt; &amp;other_coords, std::vector&lt; typename ArrayTraits&lt; Scalar, PHX::MDField&lt; Scalar &gt; &gt;::size_type &gt; &amp;permutation)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; ScalarT, ArrayT &gt; &gt;</type>
      <name>createIntrepid2Basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8efed85e12542eebb654284cb2451070</anchor>
      <arglist>(const std::string basis_type, int basis_order, const shards::CellTopology &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Intrepid2::Basis&lt; ScalarT, ArrayT &gt; &gt;</type>
      <name>createIntrepid2Basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6cdaea25e4559e4f517f4aec14983bfc</anchor>
      <arglist>(const std::string basis_type, int basis_order, const Teuchos::RCP&lt; const shards::CellTopology &gt; &amp;cell_topology)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaeea923ab6997c7c91493c21e1d35eb0</anchor>
      <arglist>(std::ostream &amp;os, panzer::MaterialModelEntry &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ModelEvaluator_Epetra &gt;</type>
      <name>buildEpetraME</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3079e39cf12f73242b888a4b0f8b5392</anchor>
      <arglist>(const Teuchos::RCP&lt; FieldManagerBuilder &gt; &amp;fmb, const Teuchos::RCP&lt; ResponseLibrary&lt; panzer::Traits &gt; &gt; &amp;rLibrary, const Teuchos::RCP&lt; LinearObjFactory&lt; panzer::Traits &gt; &gt; &amp;lof, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt; &amp;p_names, const std::vector&lt; Teuchos::RCP&lt; Teuchos::Array&lt; double &gt; &gt; &gt; &amp;p_values, const Teuchos::RCP&lt; panzer::GlobalData &gt; &amp;global_data, bool build_transient_support)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::ModelEvaluator&lt; ScalarT &gt; &gt;</type>
      <name>buildModelEvaluator</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a670964f24540a00e53cd383f1fa9e9ae</anchor>
      <arglist>(const RCP&lt; panzer::FieldManagerBuilder &amp;fmb, const RCP&lt; panzer::EpetraLinearObjFactory&lt; panzer::Traits, int &gt; &gt; &amp;lof)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const panzer::OrientationContainerBase&lt; Scalar, Array &gt; &gt;</type>
      <name>buildOrientationContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a28457eebb6e2092cba945e1f956a231a</anchor>
      <arglist>(const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrientationContainerBase&lt; Scalar, Array &gt; &gt;</type>
      <name>buildOrientationContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab86efc87bd69dfa690f2f380ce87509c</anchor>
      <arglist>(const Teuchos::RCP&lt; const UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>acc3c5a54466e2c398598656bcb3451c0</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl, double realValue)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>accessScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a904de281f4ec82341c82ede44b4e247a</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ScalarParameterEntry&lt; EvaluationType &gt; &gt;</type>
      <name>createAndRegisterScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a15a7ed4d85aea088be12058a22ef3db3</anchor>
      <arglist>(const std::string name, panzer::ParamLib &amp;pl)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseToAttach</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a61db1a49606c4c12072deb0a91c94c44</anchor>
      <arglist>(MPI_Comm mpicomm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pauseToAttach</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a35abc1824bd0f6ac5b60bbf0291ec37d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>ptrFromStlVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af1dc018e835f182a012430c46f9b6cf9</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getLocalSideIndexFromGlobalNodeList</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae9d1b374844b5202a3b87a8546824c52</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const ArraySideGIDs &amp;sideGIDs, const shards::CellTopology &amp;cell)</arglist>
    </member>
    <member kind="function">
      <type>unsigned</type>
      <name>getLocalSubcellIndexFromGlobalNodeList</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad435fc53a16a61f7828dc40cb80c2494</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const ArraySideGIDs &amp;subcellGIDs, const shards::CellTopology &amp;cell, unsigned subcell_dim)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getLocalSubcellMapFromGlobalNodeLists</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8b363eb895661064a0518c72330a12a</anchor>
      <arglist>(const ArrayCellGIDs &amp;cellGIDs, const std::vector&lt; ArraySubcellGIDs &gt; &amp;subcellGIDs, const shards::CellTopology &amp;cell, unsigned subcell_dim, std::vector&lt; unsigned &gt; &amp;subcellMap)</arglist>
    </member>
    <member kind="function">
      <type>const MapT::mapped_type &amp;</type>
      <name>getEntry</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a51817f7bd46a72b0c3af5c1f16c2ea78</anchor>
      <arglist>(const MapT &amp;in_map, const typename MapT::key_type &amp;in_key)</arglist>
    </member>
    <member kind="function">
      <type>Kokkos::DynRankView&lt; typename InputArray::value_type, PHX::Device &gt;</type>
      <name>createDynRankView</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afb7745c01c211a7362486f75deb90153</anchor>
      <arglist>(const InputArray &amp;a, const std::string &amp;name, const DimensionPack...dims)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1e8ef581b944adf8cf230680b5d3450b</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2841fbf44e56395245319688494df309</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const WorksetNeeds &amp;needs, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>populateValueArrays</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab4c071742a2f0e7fc566892c288bb1fe</anchor>
      <arglist>(std::size_t num_cells, bool isSide, const panzer::PhysicsBlock &amp;pb, WorksetDetails &amp;details, const Teuchos::RCP&lt; WorksetDetails &gt; other_details)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a77adfd8fc65323cb1d39e282e8820e5a</anchor>
      <arglist>(const PhysicsBlock &amp;pb, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a04890c88be98faba54b53e0412964648</anchor>
      <arglist>(const WorksetNeeds &amp;needs, const std::string &amp;elementBlock, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a37e4cd8b381dcb72386f35d5e8804fe9</anchor>
      <arglist>(const PhysicsBlock &amp;volume_pb, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const std::vector&lt; std::size_t &gt; &amp;local_side_ids, const ArrayT &amp;vertex_coordinates)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afcc4f28b9fa01b3fa159ea06bdb5ef3e</anchor>
      <arglist>(const WorksetNeeds &amp;needs, const std::string &amp;elementBlock, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids, const std::vector&lt; std::size_t &gt; &amp;local_side_ids, const ArrayT &amp;vertex_coordinates, const bool populate_value_arrays=true)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaeb7569fc10e21fc20efb0c30107e0ca</anchor>
      <arglist>(const PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt;</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a02376091ae219171c005889c3eaf33be</anchor>
      <arglist>(const WorksetNeeds &amp;needs_a, const std::string &amp;eblock_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const WorksetNeeds &amp;needs_b, const std::string &amp;eblock_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a036191542be3d49d4c6e82f3d135f572</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;cell_indices, const PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b, std::vector&lt; Workset &gt;::iterator beg)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Workset &gt;::iterator</type>
      <name>buildEdgeWorksets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac605c62c4421e71c17c4331c6f49c876</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;cell_indices, const WorksetNeeds &amp;needs_a, const std::string &amp;eblock_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const WorksetNeeds &amp;needs_b, const std::string &amp;eblock_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b, std::vector&lt; Workset &gt;::iterator beg)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;</type>
      <name>buildBCWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a151eb5ce831d7e7a813f82536623c14d</anchor>
      <arglist>(const panzer::PhysicsBlock &amp;pb_a, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_a, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_a, const ArrayT &amp;vertex_coordinates_a, const panzer::PhysicsBlock &amp;pb_b, const std::vector&lt; std::size_t &gt; &amp;local_cell_ids_b, const std::vector&lt; std::size_t &gt; &amp;local_side_ids_b, const ArrayT &amp;vertex_coordinates_b)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a27b634399e452f901b8aba0a924e09c6</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a733b48c590c3d0fcd1851e67d833eee0</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0eb8931ae5334bfa3ed3289270f1968c</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac4cd4fd8693317b82fade8ae072afcad</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset, WorksetDetailsAccessor &amp;wda)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getPureBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c18d0d2e129a1d3523c2d75bb0bfcf8</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;::size_type</type>
      <name>getBasisIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac62b72b6a6cc7211a3e0bda5064b8b1b</anchor>
      <arglist>(std::string basis_name, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;::size_type</type>
      <name>getIntegrationRuleIndex</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2681bff3fa0058fbc45d4906ab05211f</anchor>
      <arglist>(int ir_degree, panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printWorkset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a46902b74e622862181ee02702c40f6c3</anchor>
      <arglist>(std::ostream &amp;os, const panzer::Workset &amp;workset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getVolumeWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3f0535c4e17999b37851887da3f1e9d4</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; std::string &gt; &amp;elementBlockNames, std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; Workset &gt; &gt; &gt; &amp;volumeWksts)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideWorksetsFromContainer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2450947561e1174d7c49596bc17cb32</anchor>
      <arglist>(WorksetContainer &amp;wc, const std::vector&lt; BC &gt; &amp;bcs, std::map&lt; BC, Teuchos::RCP&lt; std::map&lt; unsigned, Workset &gt; &gt;, LessBC &gt; &amp;sideWksts)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a672d266e70379c66d9e44384e5aed2aa</anchor>
      <arglist>(const WorksetDescriptor &amp;a, const WorksetDescriptor &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>hash_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af7b431c41ab59fb9f6a8ef80fd211c41</anchor>
      <arglist>(const WorksetDescriptor &amp;wd)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad6b82b00da5547055cf3e5cb0ec28a1b</anchor>
      <arglist>(std::ostream &amp;os, const WorksetDescriptor &amp;wd)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>blockDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a29b04d474c0c4642b93a374f0db8c9fc</anchor>
      <arglist>(const std::string &amp;eBlock)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>sidesetDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a144ae9eb47047dafb40a9de2af4b0210</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>WorksetDescriptor</type>
      <name>sidesetVolumeDescriptor</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abd714f937e9cfb8f92afefe492286aee</anchor>
      <arglist>(const std::string &amp;eBlock, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9aad3dd36cb716a48d72b37bd03448ae</anchor>
      <arglist>(panzer::Traits::RealType &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ada3d6c7ea22eb1aebd345cf107721eeb</anchor>
      <arglist>(panzer::Traits::FadType &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>Sacado::mpl::enable_if&lt; Sacado::IsView&lt; T &gt; &gt;::type</type>
      <name>zeroSensitivities</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa72885901440b7927dad42d7045b584f</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Residual &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac4b78d2f1420b0ec7c41d2ab89ff5e46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Jacobian &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a944a1e7d5acbde0cd2938736abf536b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; panzer::ResponseEvaluatorFactoryBase &gt;</type>
      <name>ResponseMESupportBuilderBase::build&lt; panzer::Traits::Tangent &gt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a51abeea67ae9967a88568c1022c497c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>hash_combine</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa201508a4313c362c8eed869ce3a8ef0</anchor>
      <arglist>(std::size_t &amp;seed, const T &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aab80176f6de2f010f3fd9b5b0100a602</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7615f84135d16703af8cd9eae2707766</anchor>
      <arglist>(std::ostream &amp;s, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsage &amp;mem)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pretty</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa3295fff1215db8294647c65d512cb0e</anchor>
      <arglist>(std::ostream &amp;s, size_t num)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getMemoryUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae8fd224b79bcba7bbe4cd3b7911a7b19</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getPeakRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aefb1e640b6a5c9a36e70c713f0ccd356</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>getCurrentRSS</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2195802fa96a4c6e8bff44328abf01b0</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>MemUsage</type>
      <name>reduceMemUsage</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac7fdb65f4f2f1ef6b49294aa1bdfcd26</anchor>
      <arglist>(size_t &amp;mem, const Teuchos::Comm&lt; int &gt; &amp;comm, const MemUsageType &amp;type)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>trim</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9d8a9465baa32d718826ade891f83f4c</anchor>
      <arglist>(std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>StringTokenizer</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a545e94c068b2693a7ba7a79e6fa154a4</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;tokens, const std::string &amp;str, const std::string delimiter=&quot;,&quot;, bool trim=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToDoubles</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aad370e4fd4df0c30cc8d15b177030a91</anchor>
      <arglist>(std::vector&lt; double &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TokensToInts</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a02de53e134ffacb2aaf09a93c78d331a</anchor>
      <arglist>(std::vector&lt; int &gt; &amp;values, const std::vector&lt; std::string &gt; &amp;tokens)</arglist>
    </member>
    <member kind="function">
      <type>ScalarT</type>
      <name>getScalarParameter</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a42c7d3947db8a440e1d82c87aea8aaa2</anchor>
      <arglist>(const std::string &amp;field, const Teuchos::ParameterList &amp;plist)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a66520ec1579a2b12f519ea0230ae393f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac95ed5ca7d39c6c243ea049f1598ef15</anchor>
      <arglist>(std::ostream &amp;os, const FieldPattern &amp;fp)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt;</type>
      <name>nc2c_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a841cc4eb5a5f14c5c5b145d0f6f8814a</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a238a06ee1790909c87de91b3dbd5851a</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldBlock</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a744f1aa451d2b344e1412783d6104239</anchor>
      <arglist>(const std::string &amp;fieldName, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa99a78d084186133f0d784a445358f70</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeBlockOffsets</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab0fc4fdfed1ac46319ba66b5df5cf6e9</anchor>
      <arglist>(const std::string &amp;blockId, const std::vector&lt; Teuchos::RCP&lt; const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &gt; &gt; &amp;ugis, std::vector&lt; int &gt; &amp;blockOffsets)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>printUGILoadBalancingInformation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0a6cd5f56502f6ce100439414d883c8</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printMeshTopology</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a67289bcc3b963776985d6fff4b524b81</anchor>
      <arglist>(std::ostream &amp;os, const panzer::UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4c4029a5a078d1e05c964b8a9fc68204</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7c3dcd2112e2bd1ae8d3e16dfbb67bd2</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt;</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1e0ccf591c3c6729027473fc6f12c485</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa1a40e6c6a6bdb5d0da7d071b23a3af0</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, std::vector&lt; int &gt; &amp;fieldNumbers, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>buildGhostedFieldVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a43114e55e7dae567c3088572ed31d63e</anchor>
      <arglist>(const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, std::vector&lt; int &gt; &amp;fieldNumbers, const Teuchos::RCP&lt; const Tpetra::Vector&lt; int, int, GlobalOrdinalT, panzer::TpetraNodeType &gt; &gt; &amp;reducedVec=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateGhostedDataReducedVector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1d4d54689b94bba62f5b71b4a7097b5f</anchor>
      <arglist>(const std::string &amp;fieldName, const std::string blockId, const UniqueGlobalIndexer&lt; LocalOrdinalT, GlobalOrdinalT &gt; &amp;ugi, const ArrayT &amp;data, Tpetra::MultiVector&lt; ScalarT, int, GlobalOrdinalT, Node &gt; &amp;dataVector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Tpetra::Map&lt; int, GlobalOrdinalT, Node &gt; &gt;</type>
      <name>getFieldMap</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a30a3c282f67e143bca95827d0968c0a2</anchor>
      <arglist>(int fieldNum, const Tpetra::Vector&lt; int, int, GlobalOrdinalT, Node &gt; &amp;fieldVector)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PureBasis &gt;</type>
      <name>basis</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a504b0810ba92be4aa464cdeb63714fb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; BasisValues2&lt; ScalarT &gt; &gt;</type>
      <name>basisValues</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae038ab41a7ce84171c3a99bdc3d91518</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PointValues2&lt; ScalarT, PHX::MDField &gt;</type>
      <name>pointValues</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a74c8ad82522e0468f605beb2c3f612ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, panzer::Cell, panzer::BASIS &gt;</type>
      <name>orientation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9c791c1ccfb59a4e55760dfb24290412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>derivativesRequired_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab4757a5ae9957d8b98abf6f1f7269133</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>average</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2ca625d13bd3cd44a66855d1ac8998f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP &gt;</type>
      <name>scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a40ee7721732f96bc063d79dc8e7e9d55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, Cell, IP &gt; &gt;</type>
      <name>field_multipliers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7b1e7ff7a21a64ae4e97db2d085ebaf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>multiplier</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0e2a35b959497085a5615b09de0f39ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_qp</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0cf437734090657593df771286fee42b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>quad_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad7a8eaa002034b9cb58a9e010aa88c9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>quad_order</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a30b9d16b52b0d538122479da99cb38b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>extreme</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>adc4b3fa788fe6ce92ba7b05e80249018</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_max</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aae1c64e33525ab18d03a866584c8d5cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aac9af2b46db8173586984e79ec28f5d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>constant</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abe74de75cfda37e3971041643e3f5dea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>values</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aeebd6fac774354809eb79401d93c7401</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>flux</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5e989a0cd0e7d9e219370fd61116d61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>vals</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a1ac04d70e5cf785c282eab6f5607a4f7</anchor>
      <arglist>[3]</arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2bb818139231ce56eb7b7b0adfd6d826</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>dimension</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5e66a27a13a0fd13ce3d1c905ba63d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>coordinate</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8e88b70c140196d8a1ee7f2a01eca2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT &gt;</type>
      <name>input</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a11414c9c84fd095a962bbd8d580a2556</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>output</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab0ab2a4cb2f8d59525d9ad9bb22acc5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a_cross_vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a492481909fb6bbcfe0adfdf46a909cbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aabeca1c8405197a2606928394360f8ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a40de870454d1c70d060f202dad6c1698</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useScalarField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a05f34e15fab0e93ed47b7f6092a68d88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_pts</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ade7dc5655dc6fbd2c62ffb158aec3498</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_dim</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4ab73f7cf68853c2ed62956d840cf1e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>residual</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a80304a141e6fa4cf4dabc4b07d36a89d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT &gt;</type>
      <name>dof</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a4f3f10db7e6f709d07ce5d4c9746fb62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>cell_data_size</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aff596a82e7983053f440c275e08d85df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, BASIS &gt;</type>
      <name>dof_orientation</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a52f8689ee10c7447928398a9043a3ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const panzer::PointRule &gt;</type>
      <name>pointRule</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a12380e80a26873b39cf4d8df2761a201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>edgeTan</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a73fa1a192db514e47c43ebc0159284bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refEdgeTan</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa6aee1bc87f6e88c8b5af68cded1ee8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>faceNormal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad82b94c72877ff68959a930352638a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; ScalarT, PHX::Device &gt;</type>
      <name>refFaceNormal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70e296dee674db5a3ffdd265c115ba6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point &gt;</type>
      <name>dof_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3958b2112eff81e64c68e669232c7f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>dof_gradient</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7648b61cf32802a192ed1d70541b93d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>basis_name</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a93f17aef1fb419cbbd8807343ca700bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>basis_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac425629e2a9b08cb0bb636129811b47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>vec_a_dot_vec_b</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab248785ef794652f418107ba75c4c247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>volumes</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab62d46baa087f24514800975eb53040b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>tmp</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac68c9b0d38aba64521ad46f58ff6b2d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>ones</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad1c493dc712fbb731cf11df772827b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, IP &gt; &gt;</type>
      <name>field_values</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa194523e405ef62130acfe7faa6b3286</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>total_volume</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a64d8bd868324041a2a9d328b9c9ba469</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>averages</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3e61ebb28fa83217790e1b029c72b7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>maxs</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aaab007eaed60e33ebc34ea0fb6fa9cda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>mins</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ade1e5ba16cdd17ff5135467ecec15ede</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ScalarT</type>
      <name>global_total_volume</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aa5511eb28fa10d70eaf7bf65dd17055e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_averages</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af3c59849154086d6294202284c93726f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_maxs</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af2d24dd65f5437908fedf95a8e8976e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; ScalarT &gt;</type>
      <name>global_mins</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70527b1fef2e8b464f0fac629f597199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>ir_order</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0be9d5e152de83d91821d21fd3b6b02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>ir_index</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af22d48dc757dea4ec4a8ec60552dde00</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>comm</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a84f62496ffbc900e577ad2450e097af9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; panzer::GlobalData &gt;</type>
      <name>global_data</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a49394c0f84ea91db9c4546cfaf9b9f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_nodes</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0ef14e95b85d45927d6a85e73eee1f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim &gt;</type>
      <name>vectorField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6e1fc75de5c5fe65fe094abb4ca5ccb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; Kokkos::View&lt; ScalarT ** &gt; * &gt;</type>
      <name>kokkos_field_multipliers</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a6b303f2aabf81963c97bad5c2fcc914e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>basis_card</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac5a98d4053db0e40494361551c3d2664</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>PHX::MDField&lt; double, Cell, BASIS, IP, Dim &gt;</type>
      <name>weighted_basis_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0f356a3db4f99538b12f82ebcfabb3fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP &gt;</type>
      <name>flux_scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>aba65d492c98c59ef5306ee38a78f2ea4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, Cell, IP, Dim &gt;</type>
      <name>flux_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a93ee0c81e0a3ab06059f151a9833420c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP &gt;</type>
      <name>scratch_scalar</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab1b7018f0dea2df9b58a3c97051eaf69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, IP, Dim &gt;</type>
      <name>scratch_vector</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab3e705174dd1ffb3600a9545a3fa5f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>integral</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ac40a1f5daafdafa5860080fc2a16a4e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal_dot_flux</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a3ec17be059e60941fc58bd485737b233</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a8de2a99cd6c704ae809b11640dbdab14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>num_ip</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a70dc26db82b6238591ac46512b1089f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>side_id</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abbf7d47ecc9e4f4b51c2db59b3d83168</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>normals</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>af1b6ebbb435615e13d148f6162ac73ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>normalize</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5da91ca34bae41d4c05fc13ee68e1c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::DynRankView&lt; double, PHX::Device &gt;</type>
      <name>refPointArray</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad3326a24ece850a3e527ac88a64cd15b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>useBasisValuesRefArray</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>afc4c97a08a2d303de017ba7e65d76c92</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>scaling</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2bd2217e985d1c5a5e6cb371d3775513</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>product</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ae021c221a0de086d57ac8eb5e1228373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, Point &gt; &gt;</type>
      <name>scalar_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a74b8ffb5f37f75a68ea9ab2f60e1d2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt;</type>
      <name>vector_field</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a2d4d185bd6131bcba52dce93bf3c8ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Kokkos::View&lt; KokkosScalarFields_t * &gt;</type>
      <name>internal_scalar_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>abb01549d579afc3b3c76924643f4569d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell &gt;</type>
      <name>outField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad0360a8c98ffd8221e36bb7c6a9f6311</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, BASIS &gt;</type>
      <name>inField</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a9f20b4a52b71ee5be357b6d20f9f67aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const panzer::FieldPattern &gt;</type>
      <name>fieldPattern_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ab611046e85d8b2dd68cc42d8d9e16afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>evaluateOnClosure_</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a0e362717e0b9d02f90619d6e55bf3307</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>MAX_VALUES</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>ad08e5c95c81255c1551000c57aa59591</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>sum</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5c05e75ac665b9ebcb4f9e4257fa7b0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Kokkos::View&lt; const double *, PHX::Device &gt;</type>
      <name>scalars</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a28c209b0b6b4cf325d657b9cbaeac05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, Point, Dim, Dim &gt;</type>
      <name>tensor_field</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a5d3ee62a9a5f712932f513eb56315800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; ScalarT, Cell, Point, Dim &gt; &gt;</type>
      <name>vector_fields</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a86ef29124d1964a0dd0803c48fe40ff7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT, Cell, NODE &gt;</type>
      <name>scatter_value</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a858753b34e60df2075a80f523a317dc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>localOffset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7663f7dc4645cb1637311cd0a63b77d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>offset</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a26d3f8d14d2d02595d3bd3d5ea3e1355</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>normal_dot_flux_plus_pen</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>a7b091602f04e78a4cb77ccee6c8a5d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; ScalarT &gt;</type>
      <name>sigma</name>
      <anchorfile>namespacepanzer.html</anchorfile>
      <anchor>acd408b0ee54f4087feb1ff62086e9fe5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>panzer::dof_functors</name>
    <filename>namespacepanzer_1_1dof__functors.html</filename>
    <class kind="class">panzer::dof_functors::EvaluateDOFFastSens_Scalar</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFFastSens_Vector</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFWithSens_Scalar</class>
    <class kind="class">panzer::dof_functors::EvaluateDOFWithSens_Vector</class>
    <class kind="struct">panzer::dof_functors::SumRank2</class>
  </compound>
  <compound kind="namespace">
    <name>panzer::orientation_helpers</name>
    <filename>namespacepanzer_1_1orientation__helpers.html</filename>
    <member kind="function">
      <type>void</type>
      <name>computePatternEdgeIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a616432e3e6465a679ee1ea50bc71b192</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;edgeIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computePatternFaceIndices</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a95afecb0f810f05738a36e5a97139347</anchor>
      <arglist>(const FieldPattern &amp;pattern, std::vector&lt; std::vector&lt; int &gt; &gt; &amp;faceIndices)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellEdgeOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a518619986b512a24e649a958676cd164</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;topEdgeIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellFaceOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>a35ba3abff49b1bdf8a1face67005bea3</anchor>
      <arglist>(const std::vector&lt; std::pair&lt; int, int &gt; &gt; &amp;topEdgeIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeCellFaceOrientations</name>
      <anchorfile>namespacepanzer_1_1orientation__helpers.html</anchorfile>
      <anchor>aefeab611c0d8a939c088b35e73d1b177</anchor>
      <arglist>(const std::vector&lt; std::vector&lt; int &gt; &gt; &amp;topFaceIndices, const std::vector&lt; GlobalOrdinalT &gt; &amp;topology, const FieldPattern &amp;fieldPattern, std::vector&lt; char &gt; &amp;orientation)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>panzer::response_bc_adapters</name>
    <filename>namespacepanzer_1_1response__bc__adapters.html</filename>
    <class kind="class">panzer::response_bc_adapters::BCFactoryResponse</class>
    <class kind="class">panzer::response_bc_adapters::BCStrategy_TM_ResponseAdapterBuilder</class>
    <class kind="class">panzer::response_bc_adapters::ResponseFactory_BCStrategyAdapter</class>
  </compound>
  <compound kind="namespace">
    <name>panzer_stk</name>
    <filename>namespacepanzer__stk.html</filename>
    <namespace>panzer_stk::periodic_helpers</namespace>
    <namespace>panzer_stk::workset_utils</namespace>
    <class kind="class">panzer_stk::CoordMatcher</class>
    <class kind="class">panzer_stk::CubeHexMeshFactory</class>
    <class kind="class">panzer_stk::CubeTetMeshFactory</class>
    <class kind="class">panzer_stk::CustomMeshFactory</class>
    <class kind="class">panzer_stk::ElementDescriptor</class>
    <class kind="class">panzer_stk::GatherFields</class>
    <class kind="class">panzer_stk::GatherRefCoords</class>
    <class kind="class">panzer_stk::IOClosureModelFactory</class>
    <class kind="class">panzer_stk::IOClosureModelFactory_TemplateBuilder</class>
    <class kind="class">panzer_stk::LineMeshFactory</class>
    <class kind="class">panzer_stk::LocalIdCompare</class>
    <class kind="class">panzer_stk::ModelEvaluatorFactory</class>
    <class kind="class">panzer_stk::MultiBlockMeshFactory</class>
    <class kind="class">panzer_stk::NOXObserverFactory</class>
    <class kind="class">panzer_stk::PeriodicBC_Matcher</class>
    <class kind="class">panzer_stk::PeriodicBC_MatcherBase</class>
    <class kind="class">panzer_stk::PeriodicBC_Parser</class>
    <class kind="struct">panzer_stk::PermFunctor</class>
    <class kind="class">panzer_stk::PlaneMatcher</class>
    <class kind="class">panzer_stk::QuarterPlaneMatcher</class>
    <class kind="struct">panzer_stk::RespFactorySolnWriter_Builder</class>
    <class kind="class">panzer_stk::ResponseEvaluatorFactory_SolutionWriter</class>
    <class kind="class">panzer_stk::RythmosObserverFactory</class>
    <class kind="class">panzer_stk::ScatterFields</class>
    <class kind="class">panzer_stk::SculptMeshFactory</class>
    <class kind="class">panzer_stk::SquareQuadMeshFactory</class>
    <class kind="class">panzer_stk::SquareTriMeshFactory</class>
    <class kind="class">panzer_stk::STK_Interface</class>
    <class kind="class">panzer_stk::STK_MeshFactory</class>
    <class kind="class">panzer_stk::STKConnManager</class>
    <class kind="class">panzer_stk::WorksetFactory</class>
    <member kind="typedef">
      <type>panzer_stk::STK_Interface::SolutionFieldType</type>
      <name>VariableField</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a9b381fa1493114bbc1179c7d767fb6cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>acf6f7f2265e04e13c78b21e4439d5d37</anchor>
      <arglist>(ScatterCellAvgQuantity, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a957ac26bf086b0aa332350a888411864</anchor>
      <arglist>(ScatterCellAvgQuantity, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ac4ab6481cf1329a39176b053e8926da2</anchor>
      <arglist>(ScatterCellAvgQuantity, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ab93a07d3c434b5d477aa33bc27440e9d</anchor>
      <arglist>(ScatterCellAvgVector, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a04de2dfac2aeb79856cbbc4cf4b196b0</anchor>
      <arglist>(ScatterCellAvgVector, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a15cd73628119ed9a93ad10426ebf18e1</anchor>
      <arglist>(ScatterCellAvgVector, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ad2881129e0c00d479d9e1276725b5969</anchor>
      <arglist>(ScatterCellQuantity, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a9dd1d9d4d96538a2640609dae52736ae</anchor>
      <arglist>(ScatterCellQuantity, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a6a9ef9042994dcd484094c710372cc9d</anchor>
      <arglist>(ScatterCellQuantity, workset)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ScatterVectorFields</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a33c28625d118fac419e1ebda441cecef</anchor>
      <arglist>(const std::string &amp;scatterName, const Teuchos::RCP&lt; STK_Interface &gt; mesh, const Teuchos::RCP&lt; const panzer::PointRule &gt; &amp;pointRule, const std::vector&lt; std::string &gt; &amp;names, const std::vector&lt; double &gt; &amp;scaling=std::vector&lt; double &gt;())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATOR_CTOR</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a05a6cccb02c514a7230c7e19ddde88fd</anchor>
      <arglist>(ScatterVectorFields, p)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_POST_REGISTRATION_SETUP</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a53d9e108e4d5d1866388a51f4084a6c7</anchor>
      <arglist>(ScatterVectorFields, d, fm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PHX_EVALUATE_FIELDS</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a49c4f69187d3fbdcef0861ead93fcc12</anchor>
      <arglist>(ScatterVectorFields, workset)</arglist>
    </member>
    <member kind="function">
      <type>template Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a957d1eac7c8f78041c99cb6b635b45bb</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; int &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>template Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory&lt; panzer::Ordinal64 &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aa75be7a3cc9e5f52d7c56f20be5ce4b1</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; panzer::Ordinal64 &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af0c5185eb89d337eb7158ebfd197ce90</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer::ConnManagerBase&lt; int &gt; &gt; &amp;conn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates, bool writeTopo)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Thyra::LinearOpWithSolveFactoryBase&lt; double &gt; &gt;</type>
      <name>buildLOWSFactory</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a93df7a192e15c09b2d25ac2f32a14646</anchor>
      <arglist>(bool blockedAssembly, const Teuchos::RCP&lt; const panzer::UniqueGlobalIndexerBase &gt; &amp;globalIndexer, const Teuchos::RCP&lt; panzer_stk::STKConnManager&lt; GO &gt; &gt; &amp;stkConn_manager, int spatialDim, const Teuchos::RCP&lt; const Teuchos::MpiComm&lt; int &gt; &gt; &amp;mpi_comm, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;strat_params, bool writeCoordinates=false, bool writeTopo=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeTopology</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a621350d669355eea5157ef7ede33390c</anchor>
      <arglist>(const panzer::BlockedDOFManager&lt; int, GO &gt; &amp;blkDofs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a056183a0ae3e447f22977c1aa100f0b1</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a2713e661c9bd1590b3ad7fa636dbf642</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;eBlock, const panzer::WorksetNeeds &amp;needs)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aabde2cdfb751585e267cf9bef7198497</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sideset, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; panzer::Workset &gt; &gt;</type>
      <name>buildWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a70312a6502beb5d1ae9a830307b450ca</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;sideset, const std::string &amp;eBlock, bool useCascade)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a6667ddd017cecd77eb0a49db26a50bc8</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb_a, const panzer::PhysicsBlock &amp;pb_b, const std::string &amp;sideset)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a78defc95b33f96cc096e700a854fda4e</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::PhysicsBlock &amp;pb, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::map&lt; unsigned, panzer::Workset &gt; &gt;</type>
      <name>buildBCWorksets</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a87d79574bdfb3b974974e7de141770cb</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const panzer::WorksetNeeds &amp;needs, const std::string &amp;eblockID, const std::string &amp;sidesetID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>af5abae32447a393b453a30bee8b09231</anchor>
      <arglist>(std::unordered_map&lt; unsigned, std::vector&lt; double &gt; &gt; &amp;normals, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeSidesetNodeNormals</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a406442f7223aebb34951cbb52f1718cd</anchor>
      <arglist>(std::unordered_map&lt; std::size_t, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;elementToNormalMap, const Teuchos::RCP&lt; const panzer_stk::STK_Interface &gt; &amp;mesh, const std::string &amp;sidesetName, const std::string &amp;elementBlockName, std::ostream *out=NULL, std::ostream *pout=NULL)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gather_in_block</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a23bc119d899d96e620f0c7a96a17f127</anchor>
      <arglist>(const std::string &amp;blockId, const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, const Epetra_Vector &amp;x, const std::vector&lt; std::size_t &gt; &amp;localCellIds, std::map&lt; std::string, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;fc)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>build_local_ids</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a03336aa66bf4403d4e02f77ad181eff8</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, std::map&lt; std::string, Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt; &gt; &amp;localIds)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_cell_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ae83e57ff624d239961ffe6b8a9fed19d</anchor>
      <arglist>(panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; double &gt; &amp;data, const std::string &amp;fieldName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ab6bdae17788b409059c9866059e26c94</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_MultiVector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>write_solution_data&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a7a9562813f84765174854b408d19e310</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, int &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_MultiVector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write_solution_data</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a5bd38f7d60b58e3e218bfd2f9cf7d3c4</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_Vector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>template void</type>
      <name>write_solution_data&lt; int &gt;</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aea2c3be9aa14973478085287df30a03b</anchor>
      <arglist>(const panzer::UniqueGlobalIndexer&lt; int, int &gt; &amp;dofMngr, panzer_stk::STK_Interface &amp;mesh, const Epetra_Vector &amp;x, const std::string &amp;prefix, const std::string &amp;postfix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather_in_block</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a1c75792e2c1ad97450128634c37b4c45</anchor>
      <arglist>(const std::string &amp;blockId, const panzer::UniqueGlobalIndexer&lt; int, GlobalOrdinal &gt; &amp;dofMngr, const Epetra_Vector &amp;x, const std::vector&lt; std::size_t &gt; &amp;localCellIds, std::map&lt; std::string, Kokkos::DynRankView&lt; double, PHX::Device &gt; &gt; &amp;fc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sorted_permutation</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a744227a1a545c5f8bc735cf3f76000f3</anchor>
      <arglist>(const RAContainer &amp;cont, std::vector&lt; std::size_t &gt; &amp;permutation, const Compare &amp;comp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sorted_permutation</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a2b6e3e2e8f25d576ad0239893c4e17a5</anchor>
      <arglist>(const RAContainer &amp;cont, std::vector&lt; std::size_t &gt; &amp;permutation)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>version</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a91b44689021f957b06321ee80c26dd60</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>getElementIdx</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a8a449868fb7af9c3c6ed172d6e169b80</anchor>
      <arglist>(const std::vector&lt; stk::mesh::Entity &gt; &amp;elements, stk::mesh::Entity const e)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ElementDescriptor &gt;</type>
      <name>buildElementDescriptor</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ace397f2edb3360f6559a49a3c67522b5</anchor>
      <arglist>(stk::mesh::EntityId elmtId, std::vector&lt; stk::mesh::EntityId &gt; &amp;nodes)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; PeriodicBC_MatcherBase &gt;</type>
      <name>buildPeriodicBC_Matcher</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a7ea987cbad7e4c78a95238e4260987e3</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const Matcher &amp;matcher, const std::string type=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim_left</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a17e7bfc0854f27e670482176355a7c32</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim_right</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>acf9956c58e926ca58a362a8e25fd573d</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trim</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a322a6d4491f92fc8e6ada7d9a66d9674</anchor>
      <arglist>(const std::string &amp;s)</arglist>
    </member>
    <member kind="variable">
      <type>std::size_t</type>
      <name>numValues_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a635df0e9e1e9b29bf87346f568d15622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::Point &gt; &gt;</type>
      <name>scatterFields_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a59147c16f3462f89ee5bce429fc9c897</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::RCP&lt; STK_Interface &gt;</type>
      <name>mesh_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a3ded3f8b5b772def0795f501cd7caadd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; VariableField * &gt;</type>
      <name>stkFields_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a25c457c66570265b00b2ce20a3f0f247</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>names_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>aeed11100b06cb2bf44f7358b3fa44b22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>PHX::MDField&lt; const ScalarT, panzer::Cell, panzer::IP, panzer::Dim &gt;</type>
      <name>pointField_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>ae2a588fc6876159b7e513c979a1136f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; double &gt;</type>
      <name>scaling_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a8bb14f0637404eb984f31e47423502bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>spatialDimension_</name>
      <anchorfile>namespacepanzer__stk.html</anchorfile>
      <anchor>a01a77d812abec699e84d98867af00da0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>panzer_stk::periodic_helpers</name>
    <filename>namespacepanzer__stk_1_1periodic__helpers.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getGlobalPairing</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a203d18c67b652191702cab790c011431</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;locallyRequiredIds, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;locallyMatchedIds, const STK_Interface &amp;mesh, bool failure)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;</type>
      <name>getLocalSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ad92d2fea9e32db3162e55d2e44ef2659</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getLocalSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a572b7f471842472c0c2a5484e6503dea</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::RCP&lt; std::vector&lt; std::size_t &gt; &gt;, Teuchos::RCP&lt; std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &gt; &gt;</type>
      <name>getSideIdsAndCoords</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a3f44ffd2a912bcec743698736275b729</anchor>
      <arglist>(const STK_Interface &amp;mesh, const std::string &amp;sideName, const std::string type_)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a7e7841a47d766e87970209b13cc03245</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>matchPeriodicSides</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>ab284455c0b8ad48b2168d93b0fe3837a</anchor>
      <arglist>(const std::string &amp;left, const std::string &amp;right, const STK_Interface &amp;mesh, const Matcher &amp;matcher, const std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &amp;current, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; std::vector&lt; std::pair&lt; std::size_t, std::size_t &gt; &gt; &gt;</type>
      <name>getLocallyMatchedSideIds</name>
      <anchorfile>namespacepanzer__stk_1_1periodic__helpers.html</anchorfile>
      <anchor>a644be49d847a031bd78c634d71ccff5c</anchor>
      <arglist>(const std::vector&lt; std::size_t &gt; &amp;side_ids, const std::vector&lt; Teuchos::Tuple&lt; double, 3 &gt; &gt; &amp;side_coords, const STK_Interface &amp;mesh, const std::string &amp;sideName, const Matcher &amp;matcher, const std::string type_=&quot;coord&quot;)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>panzer_stk::workset_utils</name>
    <filename>namespacepanzer__stk_1_1workset__utils.html</filename>
    <member kind="function">
      <type>void</type>
      <name>getSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>afc5a100b667415f1253ed2782d27025f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getUniversalSubcellElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a7de9dea74839e0b887ae174201e3908f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::size_t &gt; &amp;localEntityIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElementCascade</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae844494dc5aabd253a71ba71f7ec5324</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSubcellDim, std::vector&lt; std::size_t &gt; &amp;localSubcellIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a641d6a4e35d6958de816809285bbac8f</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSideElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ade9314ade8687ee1a31f80a9c0784f1d</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId_a, const std::string &amp;blockId_b, const std::vector&lt; stk::mesh::Entity &gt; &amp;sides, std::vector&lt; std::size_t &gt; &amp;localSideIds_a, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_a, std::vector&lt; std::size_t &gt; &amp;localSideIds_b, std::vector&lt; stk::mesh::Entity &gt; &amp;elements_b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getNodeElements</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>ae64c9cc823a82c49f489c66ee3351dfe</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::string &amp;blockId, const std::vector&lt; stk::mesh::Entity &gt; &amp;nodes, std::vector&lt; std::size_t &gt; &amp;localNodeIds, std::vector&lt; stk::mesh::Entity &gt; &amp;elements)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getSubcellEntities</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>abe54d141aea41a52787a5a285fbcf0df</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, const std::vector&lt; stk::mesh::Entity &gt; &amp;entities, std::vector&lt; std::vector&lt; stk::mesh::Entity &gt; &gt; &amp;subcells)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getIdsAndVertices</name>
      <anchorfile>namespacepanzer__stk_1_1workset__utils.html</anchorfile>
      <anchor>a61533531e2c9c9c6c7506a3cf0a579b3</anchor>
      <arglist>(const panzer_stk::STK_Interface &amp;mesh, std::string blockId, std::vector&lt; std::size_t &gt; &amp;localIds, ArrayT &amp;vertices)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>PHX</name>
    <filename>namespacePHX.html</filename>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Jacobian &gt;</class>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Residual &gt;</class>
    <class kind="struct">PHX::eval_scalar_types&lt; panzer::Traits::Tangent &gt;</class>
    <class kind="class">PHX::FieldManager</class>
  </compound>
  <compound kind="namespace">
    <name>Piro</name>
    <filename>namespacePiro.html</filename>
    <class kind="class">Piro::RythmosSolver</class>
  </compound>
  <compound kind="namespace">
    <name>shards</name>
    <filename>namespaceshards.html</filename>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <class kind="struct">std::hash&lt; panzer::WorksetDescriptor &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>Teuchos</name>
    <filename>namespaceTeuchos.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Thyra</name>
    <filename>namespaceThyra.html</filename>
    <class kind="class">Thyra::BlockedLinearOpBase</class>
    <class kind="class">Thyra::DefaultProductVectorSpace</class>
    <class kind="class">Thyra::ProductVectorBase</class>
    <class kind="class">Thyra::VectorSpaceBase</class>
  </compound>
  <compound kind="group">
    <name>EpetraObjs</name>
    <title>Underlying epetra types</title>
    <filename>group__EpetraObjs.html</filename>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>map_x_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>ga098b9a4add348fb8305a44f6354ac13e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x0_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gaa18150eeb14dc8a3b562a75956ca543e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_dot_init_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gad0302bc0e1e042f0ed56325e3f8fbb4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>t_init_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gaffd7b66ba82375d71f79f07d94cfa998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>dummy_f_</name>
      <anchorfile>group__EpetraObjs.html</anchorfile>
      <anchor>gab646823df3bcce79ba076075688ab079</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>UniqueGlobalIndexer_methods</name>
    <title>Methods required by the &lt;code&gt;UniqueGlobalIndexer&lt;/code&gt; interface</title>
    <filename>group__UniqueGlobalIndexer__methods.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga24c0f1854034109d12d2253f90332708</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getFieldNum</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>gace441456624d863c096c77756356bd4e</anchor>
      <arglist>(const std::string &amp;str) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getFieldString</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga49b09e7380345521bdde18f09d9f199f</anchor>
      <arglist>(int num) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementBlockIds</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga22af41cb31d6400bf7cc33e2aa8e7833</anchor>
      <arglist>(std::vector&lt; std::string &gt; &amp;elementBlockIds) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>fieldInBlock</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>gabb7a5ffee685e44013e18db96cc8f226</anchor>
      <arglist>(const std::string &amp;field, const std::string &amp;block) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; LocalOrdinal &gt; &amp;</type>
      <name>getElementBlock</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga980b8c9a38ed50f0e1c46f7601e77c3d</anchor>
      <arglist>(const std::string &amp;blockId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getBlockFieldNumbers</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga4aa15d87b8840502311f999d6db42af9</anchor>
      <arglist>(const std::string &amp;block) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>getElementGIDs</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga2d112f110f353e51b1f9a45e47533bee</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; GlobalOrdinal &gt; &amp;gids, const std::string &amp;blockIdHint=&quot;&quot;) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getElementOrientation</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga456c816ce4f1a65b7109f57e63dfaeb5</anchor>
      <arglist>(LocalOrdinalT localElmtId, std::vector&lt; double &gt; &amp;gidsOrientation) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::vector&lt; int &gt; &amp;</type>
      <name>getGIDFieldOffsets</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga12893598ca2d4f7bebddf344131de280</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>getGIDFieldOffsets_closure</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga58ca4767a2fef44eee501096832afb02</anchor>
      <arglist>(const std::string &amp;blockId, int fieldNum, int subcellDim, int subcellId) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga75ac5db5a226b7bccd591e6af7fb4730</anchor>
      <arglist>(std::vector&lt; GlobalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getOwnedAndSharedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga11ea7f6172eb8d854604d99239f672cb</anchor>
      <arglist>(std::vector&lt; GlobalOrdinal &gt; &amp;indices) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ownedIndices</name>
      <anchorfile>group__UniqueGlobalIndexer__methods.html</anchorfile>
      <anchor>ga06144b6e4ded98792419dfb246b313db</anchor>
      <arglist>(const std::vector&lt; GlobalOrdinal &gt; &amp;indices, std::vector&lt; bool &gt; &amp;isOwned) const </arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>MapFunctions</name>
    <title>Mapping objects</title>
    <filename>group__MapFunctions.html</filename>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>fieldStrToNum_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga083cfc062ec80bb6432a67056424208f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, std::string &gt;</type>
      <name>fieldNumToStr_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga5ada5e0a1c04700f9a5349b78b1bed72</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; int, int &gt;</type>
      <name>fieldNumToFieldBlk_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>gaf98941dd1f35b6efdb78c0ebf00ee4dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, std::string &gt;, Teuchos::RCP&lt; const FieldPattern &gt; &gt;</type>
      <name>fieldStringToPattern_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga93bb50e1cbc4f0d1f03eeb64123af206</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::set&lt; std::string &gt; &gt;</type>
      <name>blockIdToFieldStrings_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga256a47b6600ee2e3ff7bc8215be5012b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::string, std::vector&lt; int &gt; &gt;</type>
      <name>blockIdToFieldNumbers_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga11feca4bcb43f7aff5c9f839f01b1b5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::map&lt; std::pair&lt; std::string, int &gt;, int &gt;</type>
      <name>blockGIDOffset_</name>
      <anchorfile>group__MapFunctions.html</anchorfile>
      <anchor>ga5f3305e57cfde4213f22fe78a63f8f4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>FEISupport</name>
    <title>Support functions for building FEI patterns</title>
    <filename>group__FEISupport.html</filename>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>numFieldsPerId</name>
      <anchorfile>group__FEISupport.html</anchorfile>
      <anchor>ga3e574fc6e922a66d174d345f5663b38c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>fieldIds</name>
      <anchorfile>group__FEISupport.html</anchorfile>
      <anchor>ga0a82938058234a499c3b8770435b2a70</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LOCALOFFSET</name>
    <title>Functions for indexing into a GID array ordered according to this pattern</title>
    <filename>group__LOCALOFFSET.html</filename>
    <member kind="function">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>localOffsets</name>
      <anchorfile>group__LOCALOFFSET.html</anchorfile>
      <anchor>gab66b80a5a5b68cab1a1f5a9c4df6f84e</anchor>
      <arglist>(int fieldId) const </arglist>
    </member>
    <member kind="function">
      <type>const std::pair&lt; std::vector&lt; int &gt;, std::vector&lt; int &gt; &gt; &amp;</type>
      <name>localOffsets_closure</name>
      <anchorfile>group__LOCALOFFSET.html</anchorfile>
      <anchor>ga92634a0dca409ddbe1c3c3ae301657ea</anchor>
      <arglist>(int fieldId, int subcellDim, int subcellId) const </arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>user_guide</name>
    <title>Users Guide</title>
    <filename>user_guide</filename>
    <docanchor file="user_guide" title="Index">user_guide_index</docanchor>
    <docanchor file="user_guide" title="Getting Started">user_guide_getting_started</docanchor>
  </compound>
  <compound kind="page">
    <name>todo</name>
    <title>ToDo List</title>
    <filename>todo</filename>
  </compound>
  <compound kind="page">
    <name>faq</name>
    <title>Frequently Asked Questions</title>
    <filename>faq</filename>
    <docanchor file="faq">Questions</docanchor>
    <docanchor file="faq" title="1. Why name the code Panzer?">faq1</docanchor>
    <docanchor file="faq" title="2. Put your question here?">faq2</docanchor>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title></title>
    <filename>index</filename>
    <docanchor file="index" title="Index">main_index</docanchor>
    <docanchor file="index" title="News">news</docanchor>
    <docanchor file="index" title="History">history</docanchor>
    <docanchor file="index" title="Authors and Contributors">authors</docanchor>
    <docanchor file="index" title="Copyright">copyright</docanchor>
    <docanchor file="index" title="Outline">Epetra_outline</docanchor>
    <docanchor file="index" title="Introduction">Epetra_intro</docanchor>
    <docanchor file="index" title="Overview of Epetra.">Epetra_startup</docanchor>
    <docanchor file="index" title="Epetra Classes">Epetra_formulations</docanchor>
    <docanchor file="index" title="Fortran and C Support">Epetra_wrappers</docanchor>
    <docanchor file="index" title="Trilinos and Epetra">Epetra_trilinos</docanchor>
    <docanchor file="index" title="Transition support for current Aztec users">Epetra_aztec2trilinos</docanchor>
    <docanchor file="index" title="Extending Epetra functionality">Epetra_extending</docanchor>
    <docanchor file="index" title="Why not abstract multivector and vector classes?">why_not_abstract_vector</docanchor>
    <docanchor file="index" title="Tutorial lessons">Epetra_example</docanchor>
    <docanchor file="index" title="Epetra adapters for Thyra and PyTrilinos">Epetra_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetra as a single doxygen collection">Epetra_browser</docanchor>
    <docanchor file="index" title="Introduction">EpetraExt_intro</docanchor>
    <docanchor file="index" title="Overview of EpetraExt">EpetraExt_startup</docanchor>
    <docanchor file="index" title="EpetraExt Classes">EpetraExt_formulations</docanchor>
    <docanchor file="index" title="EpetraExt Functions">EpetraExt_functions</docanchor>
    <docanchor file="index" title="EpetraExt adapters">EpetraExt_adapters</docanchor>
    <docanchor file="index" title="Browse all of Epetraext as a single doxygen collection">EpetraExt_browser</docanchor>
    <docanchor file="index" title="Table of Contents">am_toc</docanchor>
    <docanchor file="index" title="Introduction">am_intro</docanchor>
    <docanchor file="index" title="Copyright and licensing of the third party codes">am_copyright</docanchor>
    <docanchor file="index" title="Quick comparison of the Amesos classes">am_comparison</docanchor>
    <docanchor file="index" title="Supported Matrix Formats.">am_matrix</docanchor>
    <docanchor file="index" title="Installing Amesos">am_install</docanchor>
    <docanchor file="index" title="Example of Use of Amesos Classes">am_example</docanchor>
    <docanchor file="index" title="Browse all of Amesos as a single doxygen collection">am_browser</docanchor>
    <docanchor file="index" title="Python support">am_python</docanchor>
    <docanchor file="index" title="Thyra support">am_thyra</docanchor>
    <docanchor file="index" title="Known bugs and future developments">am_future</docanchor>
    <docanchor file="index" title="Incompatibility between old versions of SuperLU">old_incompatibilities</docanchor>
    <docanchor file="index" title="bugs">known_bugs</docanchor>
    <docanchor file="index" title="Final Remarks">am_final</docanchor>
    <docanchor file="index" title="Introduction">aztecoo_intro</docanchor>
    <docanchor file="index" title="Overview of AztecOO.">aztecoo_startup</docanchor>
    <docanchor file="index" title="AztecOO and Matrix Free usage.">aztecoo_matrixfree</docanchor>
    <docanchor file="index" title="Thyra support">aztecoo_thyra</docanchor>
    <docanchor file="index" title="Browse all of AztecOO as a single doxygen collection">AztecOO_browser</docanchor>
    <docanchor file="index" title="Current Linear Solvers">solvers</docanchor>
    <docanchor file="index" title="Belos Contributors">contributors</docanchor>
    <docanchor file="index" title="Where to start">starting_place</docanchor>
    <docanchor file="index" title="Browse all of Belos as a single doxygen collection">belos_browser</docanchor>
    <docanchor file="index" title="Thyra support">belos_thyra</docanchor>
    <docanchor file="index" title="Frequently Asked Questions">belos_faq</docanchor>
    <docanchor file="index" title="Table of Contents">ifp_table</docanchor>
    <docanchor file="index" title="Introduction">ifp_intro</docanchor>
    <docanchor file="index" title="Download IFPACK">ifp_download</docanchor>
    <docanchor file="index" title="Configuring IFPACK">ifp_configure</docanchor>
    <docanchor file="index" title="Examples of Usage">ifp_example</docanchor>
    <docanchor file="index" title="List of Supported Parameters">ifp_params</docanchor>
    <docanchor file="index" title="Brief Description IFPACK Classes">ifp_tools</docanchor>
    <docanchor file="index" title="Error Table">ifp_error</docanchor>
    <docanchor file="index" title="Known Bugs and Future Developments">ifp_bugs</docanchor>
    <docanchor file="index" title="Copyright">ifp_copyright</docanchor>
    <docanchor file="index" title="Browse all of Ifpack as a single doxygen collection">ifp_browser</docanchor>
    <docanchor file="index" title="Table of Contents">ml_table</docanchor>
    <docanchor file="index" title="Where to find documentation">ml_doc</docanchor>
    <docanchor file="index" title="Examples source code">ml_examples</docanchor>
    <docanchor file="index" title="Quick introduction to the ML/Epetra interface">ml_minitutorial</docanchor>
    <docanchor file="index" title="The ML_Epetra::MultiLevelPreconditioner class">ml_MLP</docanchor>
    <docanchor file="index" title="Main Structures of ML">ml_mainstruct</docanchor>
    <docanchor file="index" title="Conversion utilities from/to Epetra matrices.">ml_conversion</docanchor>
    <docanchor file="index" title="ML interface to Amesos">ml_amesos</docanchor>
    <docanchor file="index" title="ML interface to IFPACK">ml_ifpack</docanchor>
    <docanchor file="index" title="ML interface to Anasazi">ml_anasazi</docanchor>
    <docanchor file="index" title="Overview of MLAPI">ml_mlapi_intro</docanchor>
    <docanchor file="index" title="ML for Python Applications">ml_python</docanchor>
    <docanchor file="index" title="ML/Thyra adapters">ml_thyra</docanchor>
    <docanchor file="index" title="Debugging Utilities">ml_debug</docanchor>
    <docanchor file="index" title="(Incomplete) History of visible changes">ml_changes</docanchor>
    <docanchor file="index" title="Copyright">ml_copyright</docanchor>
    <docanchor file="index" title="Introduction">introduction</docanchor>
    <docanchor file="index" title="Announcements">announcements</docanchor>
    <docanchor file="index" title="Technical Information">technical_information</docanchor>
    <docanchor file="index" title="License">license</docanchor>
    <docanchor file="index" title="Downloads">downloads</docanchor>
    <docanchor file="index" title="Reporting Bugs and Making Enhancement Requests">bugs</docanchor>
    <docanchor file="index" title="Mailing Lists">email</docanchor>
    <docanchor file="index" title="For All Other Questions and Comments...">questions</docanchor>
  </compound>
</tagfile>
