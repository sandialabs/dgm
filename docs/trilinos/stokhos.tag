<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>Belos_StatusTest_GenResNorm_MP_Vector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/stokhos/src/sacado/kokkos/vector/belos/</path>
    <filename>Belos__StatusTest__GenResNorm__MP__Vector_8hpp</filename>
    <class kind="class">Belos::StatusTestGenResNorm&lt; Sacado::MP::Vector&lt; Storage &gt;, MV, OP &gt;</class>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::AbsOp</name>
    <filename>classSacado_1_1MP_1_1AbsOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; AbsOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::AbsOp</name>
    <filename>classSacado_1_1ETPCE_1_1AbsOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::AbstractPreconditionerFactory</name>
    <filename>classStokhos_1_1AbstractPreconditionerFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>AbstractPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1AbstractPreconditionerFactory.html</anchorfile>
      <anchor>a261e9d7320df9253c9256f593ac8c32a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1AbstractPreconditionerFactory.html</anchorfile>
      <anchor>a80bc401d1462622e470c1b939072152b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>compute</name>
      <anchorfile>classStokhos_1_1AbstractPreconditionerFactory.html</anchorfile>
      <anchor>ae2a8558314a1dfe7462a31014036042b</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;mat, bool compute_prec=true)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>recompute</name>
      <anchorfile>classStokhos_1_1AbstractPreconditionerFactory.html</anchorfile>
      <anchor>a0b6a490d90d92d3d5bc7c92b242f4aa8</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;mat, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;prec)=0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::acos_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1acos__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::acos_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1acos__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::acos_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1acos__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::acosh_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1acosh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::acosh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1acosh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::acosh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1acosh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ACoshOp</name>
    <filename>classSacado_1_1ETPCE_1_1ACoshOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ACoshOp</name>
    <filename>classSacado_1_1MP_1_1ACoshOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ACoshOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ACosOp</name>
    <filename>classSacado_1_1ETPCE_1_1ACosOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ACosOp</name>
    <filename>classSacado_1_1MP_1_1ACosOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ACosOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::AdaptivityManager</name>
    <filename>classStokhos_1_1AdaptivityManager.html</filename>
    <member kind="function">
      <type>int</type>
      <name>getGlobalColId</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a57f8c7ec708e23e8fa58c9a97562de9e</anchor>
      <arglist>(int determLid, int basisIndex) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getGlobalRowId</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>aa1efb29ae34c5a8ab0e6413b45863041</anchor>
      <arglist>(int determLid, int basisIndex) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>buildMatrixFromGraph</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a7182e449f54942934738026052b07fd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupWithGraph</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>ace7d14615693ca1f1307cc63e0dc306b</anchor>
      <arglist>(const Epetra_CrsGraph &amp;graph, bool onlyUseLinear, int kExpOrder)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>getAdaptedMap</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a6ecd454d8ef9ba1600638998fff06ff9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>ab6c7f6323dd49e4d5c6d403712016718</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A, const Sparse3Tensor&lt; int, double &gt; &amp;Cijk, Stokhos::EpetraOperatorOrthogPoly &amp;poly, bool onlyUseLinear=false, bool includeMean=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumInOperator</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>ab330d2375e13c3fb60a5775aafcc2a59</anchor>
      <arglist>(Epetra_CrsMatrix &amp;A, const Stokhos::Sparse3Tensor&lt; int, double &gt; &amp;Cijk, int k, const Epetra_CrsMatrix &amp;J_k) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyToAdaptiveVector</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>aea7266d9a20fcdcd17e52db93f6121fc</anchor>
      <arglist>(const Stokhos::EpetraVectorOrthogPoly &amp;x_sg, Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyFromAdaptiveVector</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>addc6287aa323cb803fafc8b2366deb47</anchor>
      <arglist>(const Epetra_Vector &amp;x, Stokhos::EpetraVectorOrthogPoly &amp;x_sg) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRowStochasticBasisSize</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a5505fc5c43cbdfaef5386689f3022a20</anchor>
      <arglist>(int determLid) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getColStochasticBasisSize</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a5c9f8486b90f9ef4f9aa910697b9b569</anchor>
      <arglist>(int determLid) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::ProductBasis&lt; int, double &gt; &gt;</type>
      <name>getMasterStochasticBasis</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a0fcda6dc756ba711d8a1443638bec47a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::ProductBasis&lt; int, double &gt; &gt;</type>
      <name>getRowStochasticBasis</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>ab1e4d67a8fca8b7276389f8ffcec4b0d</anchor>
      <arglist>(int determLid) const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; Teuchos::RCP&lt; const Stokhos::ProductBasis&lt; int, double &gt; &gt; &gt; &amp;</type>
      <name>getRowStochasticBasis</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a5f8f35c64503be5356d9138045d99882</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::ProductBasis&lt; int, double &gt; &gt;</type>
      <name>getColStochasticBasis</name>
      <anchorfile>classStokhos_1_1AdaptivityManager.html</anchorfile>
      <anchor>a9fa9924096cbc0868af52e295f16e52a</anchor>
      <arglist>(int determLid) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::AdditionOp</name>
    <filename>classSacado_1_1ETPCE_1_1AdditionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::AdditionOp</name>
    <filename>classSacado_1_1MP_1_1AdditionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; AdditionOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::AdditionOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1AdditionOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; AdditionOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::AdditionOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1AdditionOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; AdditionOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::AlgebraicOrthogPolyExpansion</name>
    <filename>classStokhos_1_1AlgebraicOrthogPolyExpansion.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>OrthogPolyExpansionBase&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>AlgebraicOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1AlgebraicOrthogPolyExpansion.html</anchorfile>
      <anchor>ac78a532bacc561af8c9b5b4353cd5a23</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AlgebraicOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1AlgebraicOrthogPolyExpansion.html</anchorfile>
      <anchor>a97715bf351b41480b0db3ecaf348fbca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>OrthogPolyExpansionBase&lt; ordinal_type, value_type, node_type &gt;::Cijk_type</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1AlgebraicOrthogPolyExpansion.html</anchorfile>
      <anchor>ab6d4f8d34ccbebf52713841ab00c7fc3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::aligned_allocator</name>
    <filename>classStokhos_1_1aligned__allocator.html</filename>
    <templarg></templarg>
    <class kind="struct">Stokhos::aligned_allocator::rebind</class>
  </compound>
  <compound kind="class">
    <name>Stokhos::aligned_allocator&lt; const T &gt;</name>
    <filename>classStokhos_1_1aligned__allocator_3_01const_01T_01_4.html</filename>
    <templarg></templarg>
    <class kind="struct">Stokhos::aligned_allocator&lt; const T &gt;::rebind</class>
  </compound>
  <compound kind="struct">
    <name>cusp::precond::aggregation::amg_container</name>
    <filename>structcusp_1_1precond_1_1aggregation_1_1amg__container.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>cusp::precond::aggregation::amg_container&lt; IndexType, ValueType, cusp::device_memory &gt;</name>
    <filename>structcusp_1_1precond_1_1aggregation_1_1amg__container_3_01IndexType_00_01ValueType_00_01cusp_1_1device__memory_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>cusp::precond::aggregation::amg_container&lt; IndexType, ValueType, cusp::host_memory &gt;</name>
    <filename>structcusp_1_1precond_1_1aggregation_1_1amg__container_3_01IndexType_00_01ValueType_00_01cusp_1_1host__memory_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeShape&lt; Sacado::MP::Vector&lt; StorageType &gt; &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeShape_3_01Sacado_1_1MP_1_1Vector_3_01StorageType_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeShape&lt; Sacado::UQ::PCE&lt; StorageType &gt; &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeShape_3_01Sacado_1_1UQ_1_1PCE_3_01StorageType_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape.html</filename>
    <templarg>T</templarg>
    <templarg>Layout</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; const T, Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01const_01T_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; const T[], Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01const_01T[]_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; const T[N], Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01const_01T[N]_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>N</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; Sacado::MP::Vector&lt; StorageType &gt;, Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01Sacado_1_1MP_1_1Vector_3_01StorageType_01_4_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; Sacado::UQ::PCE&lt; StorageType &gt;, Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01Sacado_1_1UQ_1_1PCE_3_01StorageType_01_4_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; T *, Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01T_01_5_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; T[], Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01T[]_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; T[N], Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01T[N]_00_01Layout_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>N</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::AnalyzeStokhosShape&lt; void, Layout &gt;</name>
    <filename>structKokkos_1_1Impl_1_1AnalyzeStokhosShape_3_01void_00_01Layout_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::AnisoSparseGridQuadrature</name>
    <filename>classStokhos_1_1AnisoSparseGridQuadrature.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Quadrature</base>
    <member kind="function">
      <type></type>
      <name>AnisoSparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>aceb4f81043be5f8728609d465a7dd2bb</anchor>
      <arglist>(const Teuchos::RCP&lt; const ProductBasis&lt; ordinal_type, value_type &gt; &gt; &amp;product_basis, ordinal_type sparse_grid_level, value_type dim_weights[], value_type duplicate_tol=1.0e-12, ordinal_type growth_rate=Pecos::MODERATE_RESTRICTED_GROWTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AnisoSparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>a4d4ec1da589ba8c4d67ccf055a3701be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>acdd6b07c9db7597cf4fdccd577038478</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>aaf2381bc0b44d22899839cb361a6dee7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>a23d6f0fd04d262c58183fe78b2fede0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>coordinate_bases</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>a99124bb859c6a22c2b3cdc1e17ea9e8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>a409e77f657594c1ee13dbb833733895d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>a37178726462b2d42f216b680c986edcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>afc717bf163d1363da6549b6aadbfb871</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static AnisoSparseGridQuadrature *</type>
      <name>sgq</name>
      <anchorfile>classStokhos_1_1AnisoSparseGridQuadrature.html</anchorfile>
      <anchor>ae48f4d308af0b0e9d141311b7f90b66c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::AnisotropicTotalOrderIndexSet</name>
    <filename>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</filename>
    <templarg></templarg>
    <class kind="class">Stokhos::AnisotropicTotalOrderIndexSet::Iterator</class>
    <member kind="function">
      <type></type>
      <name>AnisotropicTotalOrderIndexSet</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a96bd0d07d110ff8cfe203b3c00b62803</anchor>
      <arglist>(ordinal_type upper_order_, const multiindex_type &amp;lower_, const multiindex_type &amp;upper_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnisotropicTotalOrderIndexSet</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a9d25f3469fac1061dcfe2a7eb7c25910</anchor>
      <arglist>(ordinal_type upper_order_, const multiindex_type &amp;upper_)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a0734abf476b7fe486b8dbabfe6d8d583</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>multiindex_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>aa6752ac1115da051faf5f3a47826f9d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a94d3ab9412eda062c05f2916f9516a7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a8c351aac637be0e55a0ae88b8e148a3f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a74ccdd7011f4e74c23899c0bc737f488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>lower_order</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a62226e5115814cd581e9c9ac1aca186f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>upper_order</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>aed2f50eb96c9fb158821386296ebba08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>lower</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>a6f964d2936252f20a10cfd85372d11a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>upper</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet.html</anchorfile>
      <anchor>ab85152eceb3cb5809be450867706b53b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DynamicStorage::apply</name>
    <filename>structStokhos_1_1DynamicStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DynamicStridedStorage::apply</name>
    <filename>structStokhos_1_1DynamicStridedStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticFixedStorage::apply</name>
    <filename>structStokhos_1_1StaticFixedStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticStorage::apply</name>
    <filename>structStokhos_1_1StaticStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ViewStorage::apply</name>
    <filename>structStokhos_1_1ViewStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StandardStorage::apply</name>
    <filename>structStokhos_1_1StandardStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticFixedStandardStorage::apply</name>
    <filename>structStokhos_1_1StaticFixedStandardStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticStandardStorage::apply</name>
    <filename>structStokhos_1_1StaticStandardStorage_1_1apply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DynamicStorage::apply_N</name>
    <filename>structStokhos_1_1DynamicStorage_1_1apply__N.html</filename>
    <templarg>N</templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticFixedStorage::apply_N</name>
    <filename>structStokhos_1_1StaticFixedStorage_1_1apply__N.html</filename>
    <templarg>N</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ApplyKernelAsymmetric</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01LinearSparse3Tensor_3_01TensorScalar_00_01Kok9c0661e4738d3340e2aab4cbfde82fc3.html</filename>
    <templarg>MAX_COL</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ApplyKernelSymmetric</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01LinearSparse3Tensor_3_01TensorScalar_00_01Kok402af023ec26e83f4252af9949606978.html</filename>
    <templarg>MAX_COL</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ApproxGaussSeidelPreconditioner</name>
    <filename>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>ApproxGaussSeidelPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a61708e59574bb7a13dfc6449364e0ae7</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ApproxGaussSeidelPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a48677f65f52809c659b2890471b1e1f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a3fd15a40d6de1d9e516830f999b07822</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a2dc9593393c6b798e992c0beb535cee1</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a5bc463dc2879bbb1bff4951b5a840d38</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aa799b0abb8756347e11e2d5c69ddcf7b</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a37cdd8e00fa7cf5687ea0a4b8a4cdd89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a8d6ad335918ecff6878e7ab59665adc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a33f7351cf9c6b186ac2ec927d7968950</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aaf58baba6d41c610a0dc0467d3bdd670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aa7083205ea51dd86567864b0b6937e3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>af941d50c5ef345af56c5078af0d887e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a8564608e949d72a5321b5a0639f826a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aad991df1cc115012ecd800f5a017d207</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a781b29e2f24b41254cf997b2c230d7a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a84937bc347936c4711cd9e7ac1ec055a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a41f8899aba35edda766202ccdd0f6bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a16a199a47502e0d30d6f8a9fdb0dd7c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>ae57f11e947ba38e397a4db3aea7e29bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_map</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a816caee056a830a7322c2cbfe0cfd881</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a6dfd2e0d1b32ac7838c7c87b6587ce64</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a04d9251444310fc9277d0d0bd648d1de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a3704e5be3fa090ff23c536039685eeb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>sg_op</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a45f36770c6f95c1682046e67db1eade5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>sg_poly</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>addb919ce8d80e4cb92a4a4d9d8f73e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a115bcdce787509e9a245478211d29146</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>adc268e3b03cbb913a9a5faf42f413e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>symmetric</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a6a9abc47cd99e2af76a867dcc31452c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a27bbff4f00ebca42d5cabede316c563e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>mat_vec_tmp</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a1fc771175a9855c279090ce2d1a4a833</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt;</type>
      <name>rhs_block</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aa44a533d1b89fd67ca4b93a2d5af84f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a3fd15a40d6de1d9e516830f999b07822</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a2dc9593393c6b798e992c0beb535cee1</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a5bc463dc2879bbb1bff4951b5a840d38</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aa799b0abb8756347e11e2d5c69ddcf7b</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a37cdd8e00fa7cf5687ea0a4b8a4cdd89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a8d6ad335918ecff6878e7ab59665adc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a33f7351cf9c6b186ac2ec927d7968950</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aaf58baba6d41c610a0dc0467d3bdd670</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>aa7083205ea51dd86567864b0b6937e3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>af941d50c5ef345af56c5078af0d887e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxGaussSeidelPreconditioner.html</anchorfile>
      <anchor>a8564608e949d72a5321b5a0639f826a5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ApproxJacobiPreconditioner</name>
    <filename>classStokhos_1_1ApproxJacobiPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>ApproxJacobiPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>ae8cd0253cbf85c913558d5c4de4c68c6</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ApproxJacobiPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a0f587193eaa3bdafe11c0bda49fc8e07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a2008e944754119afd76f1d3691ea9e86</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a781a36f027a5a3bc0c6cc64bee584cb7</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a87d62db9f7d116297be050ae3b5da484</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>ab69c728826efdb9895da7b71e3094868</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a102c612651bde8ca2c9f0ada5bc56a03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a635d6cfdbf71924d2a7be081344f4557</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a8aeb501d9d7ec5bcc2a7abe6c8edc6c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>afbf04ed0c589ba98748b1b6c2d2c5842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a54e87c9bf786091e67fd642187369e2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a9205de8c8f6e1b50ce5073f5893ef8aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>aed8e51cbd1e2c0f1a16ab2c6b2d953d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>ab105b31cf32ca96a44672225e9fb1e7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a0ae2424cc6ae17b9cc1b5b8b1be989f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a688f0928f3bb1b7e8480da7ff7554fd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>abbfdbd785c39be63e46f25672b78327f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>aa5acb3d4bf2b2b3968b75b9c8ec671eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_map</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>af070f4df7a72de1eb19dac9e3a04cd5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a692b6d0f190626f7e382d86a2289844d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>ab70c3df3e82f63cbfa110489964b8aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>aab867840cb6def5e8d3257728fecb625</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_iter</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>acce790e1e08f238de392d2835081a874</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>sg_op</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a4c35091dc4e41f16cf472a1303c4d9af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>sg_poly</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a7ab10175fb704dfc1f4af21734bd516d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>mat_free_op</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a1f6322f4087a50da2f74890955878001</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt;</type>
      <name>rhs_block</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>af5f4a9a671dc92d75866075334778dbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a2008e944754119afd76f1d3691ea9e86</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a781a36f027a5a3bc0c6cc64bee584cb7</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a87d62db9f7d116297be050ae3b5da484</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>ab69c728826efdb9895da7b71e3094868</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a102c612651bde8ca2c9f0ada5bc56a03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a635d6cfdbf71924d2a7be081344f4557</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a8aeb501d9d7ec5bcc2a7abe6c8edc6c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>afbf04ed0c589ba98748b1b6c2d2c5842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a54e87c9bf786091e67fd642187369e2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>a9205de8c8f6e1b50ce5073f5893ef8aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxJacobiPreconditioner.html</anchorfile>
      <anchor>aed8e51cbd1e2c0f1a16ab2c6b2d953d4</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ApproxSchurComplementPreconditioner</name>
    <filename>classStokhos_1_1ApproxSchurComplementPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>ApproxSchurComplementPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ab1843efa40c35641ae9c4dfc2d39fa4d</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ApproxSchurComplementPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a727f0b039e5f460f2388c16e473c6bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a82fcf45ef2e72323322ae474e66b244c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ae63a3d92231afac6da998a9e394fb658</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ad7215b8370bb48cf29d1c23029681a61</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a12b3ebb1b19017062fac1b286ed6bb62</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a77e5cd006e5dd643f77856fc2b4ac7b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a60745fdcc84201f57c2ceb61189fe179</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a87b51b21674c465d19414068e73479d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a0bdf889840575cf85bd585ad7c251e0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>abe1324871e4d2281b6294772c7d28002</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a28c5344bc5d62ef633921d735fc48d2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a5f4829d10cd57ea04833793d549c7d79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ae92280f6500d3538d6eefb09249a3754</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a7fc43012acc8d8819213bce7271c8094</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ae55bee1d8c9785459f7552a11c9a1696</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a7f4eaa6d7ef8d69c74bcdd160c84c76f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a6308fbd618de3b15e91d19968e845d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>aca52000471b13d57932a3e34337c9c6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_map</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>aacd239354b1270f9ee4e0d5fd2c2a323</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a93b814629b6b8f412c12c7f1389be3c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>adcb9d03aca83c9514de630d7eced73c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>acf4f335ea706e1e35e41f791b6e8c1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>sg_op</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>aa4e4d2f793e8e4198d36dc7210c4cbf7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>sg_poly</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a659b277ed9b1f1a1e328898fb35ef573</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a87be4cc5e5104e0bb0549c107bceef0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>P</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a44fc5ff20462401b9bc060831fa2982e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>block_indices</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a736311d4c9b7165c85e6ba814691f818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Cijk_type &gt; &gt;</type>
      <name>upper_block_Cijk</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ac457dce438afb56d6fed797b25f93eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a7628f660c65ae3e1c9737f08fddb729e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>symmetric</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a98445cf5069a84863cb6c2d3dc6c829f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a12ce8b0e141aa088f53f113fda43f1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>max_num_mat_vec</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>aa7a824aed872eb6dc3780e368e83413e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a99f85ee1d5abcfa3685ece6efd84d736</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt;</type>
      <name>rhs_block</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>aa2b3d4f8dd3a7fa05166d809170d0954</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a82fcf45ef2e72323322ae474e66b244c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ae63a3d92231afac6da998a9e394fb658</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>ad7215b8370bb48cf29d1c23029681a61</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a12b3ebb1b19017062fac1b286ed6bb62</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a77e5cd006e5dd643f77856fc2b4ac7b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a60745fdcc84201f57c2ceb61189fe179</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a87b51b21674c465d19414068e73479d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a0bdf889840575cf85bd585ad7c251e0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>abe1324871e4d2281b6294772c7d28002</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a28c5344bc5d62ef633921d735fc48d2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ApproxSchurComplementPreconditioner.html</anchorfile>
      <anchor>a5f4829d10cd57ea04833793d549c7d79</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kokkos::Details::ArithTraits&lt; Sacado::MP::Vector&lt; S &gt; &gt;</name>
    <filename>classKokkos_1_1Details_1_1ArithTraits_3_01Sacado_1_1MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Kokkos::Details::ArithTraits&lt; Sacado::UQ::PCE&lt; S &gt; &gt;</name>
    <filename>classKokkos_1_1Details_1_1ArithTraits_3_01Sacado_1_1UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::asin_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1asin__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::asin_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1asin__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::asin_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1asin__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::asinh_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1asinh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::asinh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1asinh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::asinh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1asinh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ASinhOp</name>
    <filename>classSacado_1_1ETPCE_1_1ASinhOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ASinhOp</name>
    <filename>classSacado_1_1MP_1_1ASinhOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ASinhOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ASinOp</name>
    <filename>classSacado_1_1ETPCE_1_1ASinOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ASinOp</name>
    <filename>classSacado_1_1MP_1_1ASinOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ASinOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::atan2_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1atan2__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::atan2_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1atan2__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Atan2Op</name>
    <filename>classSacado_1_1ETPCE_1_1Atan2Op.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Atan2Op</name>
    <filename>classSacado_1_1MP_1_1Atan2Op.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; Atan2Op&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Atan2Op&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1Atan2Op_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; Atan2Op&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Atan2Op&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1Atan2Op_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; Atan2Op&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::atan_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1atan__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::atan_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1atan__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::atan_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1atan__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DerivOrthogPolyExpansion::atanh_quad_func</name>
    <filename>structStokhos_1_1DerivOrthogPolyExpansion_1_1atanh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::atanh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1atanh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::atanh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1atanh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ATanhOp</name>
    <filename>classSacado_1_1ETPCE_1_1ATanhOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ATanhOp</name>
    <filename>classSacado_1_1MP_1_1ATanhOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ATanhOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ATanOp</name>
    <filename>classSacado_1_1ETPCE_1_1ATanOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ATanOp</name>
    <filename>classSacado_1_1MP_1_1ATanOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ATanOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::AbsOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1AbsOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ACoshOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ACoshOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ACosOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ACosOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::AdditionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1AdditionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ASinhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ASinhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ASinOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ASinOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::Atan2Op&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1Atan2Op_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ATanhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ATanhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ATanOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ATanOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::CbrtOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1CbrtOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::CoshOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1CoshOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::CosOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1CosOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::DivisionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1DivisionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::ExpOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1ExpOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::FAbsOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1FAbsOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::Log10Op&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1Log10Op_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::LogOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1LogOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::MaxOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1MaxOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::MinOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1MinOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::MultiplicationOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1MultiplicationOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::PowerOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1PowerOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::SinhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1SinhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::SinOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1SinOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::SqrtOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1SqrtOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::SubtractionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1SubtractionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::TanhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1TanhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::TanOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1TanOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::UnaryMinusOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1UnaryMinusOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::BaseExprType&lt; MP::UnaryPlusOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1BaseExprType_3_01MP_1_1UnaryPlusOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BasisFactory</name>
    <filename>classStokhos_1_1BasisFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>BasisFactory</name>
      <anchorfile>classStokhos_1_1BasisFactory.html</anchorfile>
      <anchor>adf7c6caaad88f44b4e0b8ab1dc4353cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BasisFactory</name>
      <anchorfile>classStokhos_1_1BasisFactory.html</anchorfile>
      <anchor>ad0fa85001518c1b5a13336160328a9f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classStokhos_1_1BasisFactory.html</anchorfile>
      <anchor>a7370fdb7f9e874ffd46651d4463049f9</anchor>
      <arglist>(Teuchos::ParameterList &amp;sgParams)</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static Teuchos::RCP&lt; const Stokhos::OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>create1DBasis</name>
      <anchorfile>classStokhos_1_1BasisFactory.html</anchorfile>
      <anchor>a2e07d8bd6978c26926be563d65fe4f04</anchor>
      <arglist>(Teuchos::ParameterList &amp;params)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::BasisInteractionGraph</name>
    <filename>classStokhos_1_1BasisInteractionGraph.html</filename>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>a0985d49849a21a7eeef5eb03d5da1108</anchor>
      <arglist>(const Stokhos::OrthogPolyBasis&lt; int, double &gt; &amp;max_basis, const Stokhos::Sparse3Tensor&lt; int, double &gt; &amp;Cijk, int porder=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>a571dad5dafdcb4251895d9dd33389f17</anchor>
      <arglist>(const Stokhos::ProductBasis&lt; int, double &gt; &amp;max_basis, const Stokhos::Sparse3Tensor&lt; int, double &gt; &amp;Cijk, const Stokhos::ProductBasis&lt; int, double &gt; &amp;rowBasis, const Stokhos::ProductBasis&lt; int, double &gt; &amp;colBasis, int porder=-1)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; std::size_t &gt; &amp;</type>
      <name>activeIndices</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>acface5e637ce93940bf34ad9e0c6728e</anchor>
      <arglist>(std::size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>a213b076514b820c9878565d2d1c3c972</anchor>
      <arglist>(std::size_t i, std::size_t j) const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>numNonZeros</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>a2806a9a1354862b99b12f30d12ef2a27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>rowCount</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>a6d6276ec58f9d19e28c3710232f4d0ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::size_t</type>
      <name>colCount</name>
      <anchorfile>classStokhos_1_1BasisInteractionGraph.html</anchorfile>
      <anchor>aec3c6ccd56e6fc3ee3576a9db82a5764</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::BelosScalarType&lt; Sacado::PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structIfpack2_1_1BelosScalarType_3_01Sacado_1_1PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>cusp::relaxation::block_jacobi</name>
    <filename>classcusp_1_1relaxation_1_1block__jacobi.html</filename>
    <templarg>ValueType</templarg>
    <templarg>MemorySpace</templarg>
  </compound>
  <compound kind="struct">
    <name>cusp::relaxation::detail::block_jacobi_postsmooth_functor</name>
    <filename>structcusp_1_1relaxation_1_1detail_1_1block__jacobi__postsmooth__functor.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>cusp::relaxation::detail::block_jacobi_presmooth_functor</name>
    <filename>structcusp_1_1relaxation_1_1detail_1_1block__jacobi__presmooth__functor.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>cusp::detail::block_lu_solver</name>
    <filename>classcusp_1_1detail_1_1block__lu__solver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>cusp::block_multilevel</name>
    <filename>classcusp_1_1block__multilevel.html</filename>
    <templarg>MatrixType</templarg>
    <templarg>SmootherType</templarg>
    <templarg>SolverType</templarg>
    <class kind="struct">cusp::block_multilevel::level</class>
  </compound>
  <compound kind="class">
    <name>block_multilevel&lt; amg_container&lt; IndexType, ValueType, MemorySpace &gt;::solve_type, SmootherType, SolverType &gt;</name>
    <filename>classcusp_1_1block__multilevel.html</filename>
  </compound>
  <compound kind="class">
    <name>cusp::relaxation::block_polynomial</name>
    <filename>classcusp_1_1relaxation_1_1block__polynomial.html</filename>
    <templarg>ValueType</templarg>
    <templarg>MemorySpace</templarg>
    <templarg>Orientation</templarg>
  </compound>
  <compound kind="class">
    <name>cusp::precond::aggregation::block_smoothed_aggregation</name>
    <filename>classcusp_1_1precond_1_1aggregation_1_1block__smoothed__aggregation.html</filename>
    <templarg>IndexType</templarg>
    <templarg>ValueType</templarg>
    <templarg>MemorySpace</templarg>
    <templarg>SmootherType</templarg>
    <templarg>SolverType</templarg>
    <base>block_multilevel&lt; amg_container&lt; IndexType, ValueType, MemorySpace &gt;::solve_type, SmootherType, SolverType &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockCrsMatrix</name>
    <filename>classStokhos_1_1BlockCrsMatrix.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockDiagonalOperator</name>
    <filename>classStokhos_1_1BlockDiagonalOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>BlockDiagonalOperator</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a155cdcffee4bdc086c4a3e40a24dfad8</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;mp_comm, int num_mp_blocks, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_mp_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_mp_map)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockDiagonalOperator</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>af883e237baac232c27fe0d905de6ecd6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ab232164f675fa7afba2f2f079f0c742e</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt; &amp;ops)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt;</type>
      <name>getMPOps</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a277918c84abfb4303a90b86158a5805b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::ProductEpetraOperator &gt;</type>
      <name>getMPOps</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a3df599c97b399aedff8cd094bf84b061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ad3df3534679867fce54d47e2e4ceb5af</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a2cfbb5d3b6d786499521ba799b65dca4</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a0bc25a14e818f72bd26ea004ac73d3f8</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a44061e6f49ed6e5aa4013ba6d0145485</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>aa985a86cb2cdbe78116df2f9a4e68814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a52adf549e93caa3a1582ac672e04ff5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a767fd754301a2670ad7164e651367f52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a944f4fdbfc045654d70866314ee085a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ae32e6995c3fc0891dca06a0c83c1f37f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a5bde9a145112b2a62516382ad8e76039</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a43916910248fa093da3e9a5c77d31107</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>mp_comm</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a05bacc37f333cc4b18b18810cf37faf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_mp_blocks</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>aa8cbfd75edc59c6cb487820f4deb3c65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>af672eed0889b40c3f03d0d715b3ec655</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a179b44c9bb79c952adb19f823cf839e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_mp_map</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a69873f48904a4c6f7431e43e405e3523</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_mp_map</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ab6d1a7613177dc2845b9aa1f9264b1a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a9cf2be7db51bce214043cf55f9a8aff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a157ae3ca09b77670144d70d3b50a7387</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ab232164f675fa7afba2f2f079f0c742e</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt; &amp;ops)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt;</type>
      <name>getMPOps</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a277918c84abfb4303a90b86158a5805b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::ProductEpetraOperator &gt;</type>
      <name>getMPOps</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a3df599c97b399aedff8cd094bf84b061</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ad3df3534679867fce54d47e2e4ceb5af</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a2cfbb5d3b6d786499521ba799b65dca4</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a0bc25a14e818f72bd26ea004ac73d3f8</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a44061e6f49ed6e5aa4013ba6d0145485</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>aa985a86cb2cdbe78116df2f9a4e68814</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a52adf549e93caa3a1582ac672e04ff5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a767fd754301a2670ad7164e651367f52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a944f4fdbfc045654d70866314ee085a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>ae32e6995c3fc0891dca06a0c83c1f37f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1BlockDiagonalOperator.html</anchorfile>
      <anchor>a5bde9a145112b2a62516382ad8e76039</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;::BlockKernel</name>
    <filename>structStokhos_1_1MeanMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixSt72657d42eb01ea33e6207cc02dfdc814.html</filename>
    <templarg>BlockSize</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply</name>
    <filename>classStokhos_1_1BlockMultiply.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; CooProductTensor&lt; ValueType, Device, Pack &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01CooProductTensor_3_01ValueType_00_01Device_00_01Pack_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Pack</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; CrsProductTensor&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01CrsProductTensor_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; FlatSparse3Tensor&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01FlatSparse3Tensor_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; FlatSparse3Tensor_kji&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01FlatSparse3Tensor__kji_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; LexicographicBlockSparse3Tensor&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01LexicographicBlockSparse3Tensor_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; LinearSparse3Tensor&lt; ValueType, Device, BlockSize &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01LinearSparse3Tensor_3_01ValueType_00_01Device_00_01BlockSize_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>BlockSize</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; SimpleTiledCrsProductTensor&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01SimpleTiledCrsProductTensor_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; StochasticProductTensor&lt; ValueType, TensorType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01StochasticProductTensor_3_01ValueType_00_01TensorType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; SymmetricDiagonalSpec&lt; Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01SymmetricDiagonalSpec_3_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; SymmetricDiagonalSpec&lt; Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01SymmetricDiagonalSpec_3_01Kokkos_1_1Cuda_01_4_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockMultiply&lt; TiledCrsProductTensor&lt; ValueType, Device &gt; &gt;</name>
    <filename>classStokhos_1_1BlockMultiply_3_01TiledCrsProductTensor_3_01ValueType_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::BlockPreconditioner</name>
    <filename>classStokhos_1_1BlockPreconditioner.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::Operator</base>
    <member kind="function">
      <type></type>
      <name>BlockPreconditioner</name>
      <anchorfile>classStokhos_1_1BlockPreconditioner.html</anchorfile>
      <anchor>ada648b80f30783a06e119ee308d40091</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;K, const ordinal_type p, const ordinal_type m)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BlockPreconditioner</name>
      <anchorfile>classStokhos_1_1BlockPreconditioner.html</anchorfile>
      <anchor>ae3ed424d792ac65f0505c1b5fb12778d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1BlockPreconditioner.html</anchorfile>
      <anchor>a2aa7ecace451994321aea6ec36b3925d</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type m) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::RCB::Box</name>
    <filename>structStokhos_1_1RCB_1_1Box.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::cbrt_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1cbrt__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::cbrt_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1cbrt__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::CbrtOp</name>
    <filename>classSacado_1_1ETPCE_1_1CbrtOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::CbrtOp</name>
    <filename>classSacado_1_1MP_1_1CbrtOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; CbrtOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::CGDivisionExpansionStrategy</name>
    <filename>classStokhos_1_1CGDivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DivisionExpansionStrategy</base>
    <member kind="function">
      <type></type>
      <name>CGDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>a8a145b269616544c62b3c33567024944</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis_, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk_, const ordinal_type prec_iter_, const value_type tol_, const ordinal_type PrecNum_, const ordinal_type max_it_, const ordinal_type linear_, const ordinal_type diag_, const ordinal_type equil_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CGDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>a663766ff782d463b7719613f81e10091</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>a54f131c9f5bf0d6695ba5154163a78bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>aa235195420eed67b72b337ea1533aeed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>a2710cfb3ca1f0de8ad7a618c12ef1fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>addb988f76f962b4694d9ae7ea79b7b20</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>prec_iter</name>
      <anchorfile>classStokhos_1_1CGDivisionExpansionStrategy.html</anchorfile>
      <anchor>a71078d2d9be029aa0ea3ba98366836e3</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ProductBasisUtils::Cijk_1D_Iterator</name>
    <filename>structStokhos_1_1ProductBasisUtils_1_1Cijk__1D__Iterator.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::CijkData</name>
    <filename>structStokhos_1_1CijkData.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::LTBSparse3Tensor::CijkNode</name>
    <filename>structStokhos_1_1LTBSparse3Tensor_1_1CijkNode.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::CijkType</name>
    <filename>structKokkos_1_1CijkType.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::CijkType&lt; View&lt; T, L, D, M, Impl::ViewPCEContiguous &gt; &gt;</name>
    <filename>structKokkos_1_1CijkType_3_01View_3_01T_00_01L_00_01D_00_01M_00_01Impl_1_1ViewPCEContiguous_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ClenshawCurtisExponentialGrowthRule</name>
    <filename>classStokhos_1_1ClenshawCurtisExponentialGrowthRule.html</filename>
    <templarg></templarg>
    <base>Stokhos::GrowthRule</base>
    <member kind="function">
      <type></type>
      <name>ClenshawCurtisExponentialGrowthRule</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisExponentialGrowthRule.html</anchorfile>
      <anchor>aff4670aa43e338c35b34a826f2cc6a25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ClenshawCurtisExponentialGrowthRule</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisExponentialGrowthRule.html</anchorfile>
      <anchor>ad9a2a4f3f657ba9515fe7e548a12608c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisExponentialGrowthRule.html</anchorfile>
      <anchor>aea2a33236fb019898589f46bbd8f3b22</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ClenshawCurtisLegendreBasis</name>
    <filename>classStokhos_1_1ClenshawCurtisLegendreBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::LegendreBasis</base>
    <member kind="function">
      <type></type>
      <name>ClenshawCurtisLegendreBasis</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a80ebbc0cd4a213ba4880f9db5bdee821</anchor>
      <arglist>(ordinal_type p, bool normalize=false, bool isotropic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ClenshawCurtisLegendreBasis</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a2555d04222d9495e724304cbb777f7ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>adc72a37c397f09c1b63d9b21f431003f</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a1c1ed551f607881f7332ec4ee56e420f</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a96503ed19e4813e64bca701305d8b82c</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>ad2270a7096b97db8c53f3f4a65bd2355</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>aae0c43a5b9781163c7c827c1cf3e93f2</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ClenshawCurtisLegendreBasis</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>aabf148122affae900b862a64e61ee245</anchor>
      <arglist>(ordinal_type p, const ClenshawCurtisLegendreBasis &amp;basis)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isotropic</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>afb2a3eb5d2931e3cd3a6195208d421c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>adc72a37c397f09c1b63d9b21f431003f</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a1c1ed551f607881f7332ec4ee56e420f</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>a96503ed19e4813e64bca701305d8b82c</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>ad2270a7096b97db8c53f3f4a65bd2355</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1ClenshawCurtisLegendreBasis.html</anchorfile>
      <anchor>aae0c43a5b9781163c7c827c1cf3e93f2</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::CompletePolynomialBasis</name>
    <filename>classStokhos_1_1CompletePolynomialBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ProductBasis</base>
    <base>Stokhos::DerivBasis</base>
    <member kind="function">
      <type></type>
      <name>CompletePolynomialBasis</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a76d2aca07f93ce0a57ae1f6a4954df28</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt; &amp;bases, const value_type &amp;sparse_tol=1.0e-12, bool use_old_cijk_alg=false, const Teuchos::RCP&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;deriv_coeffs=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompletePolynomialBasis</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a1954e008c378e860ec39c2e9f2d37d76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aaae7aa8e7e749a69db260e37c695366b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a7f7108d637e05b2f82450d2beca63e3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a6add710838dd1306ab72fc4252d3f2dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a57c74e47ff1af2b21204bc55b204c6dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ad848a66e16389cac9ddc8e5da93b253f</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a5befbde14ed258b663bb96f31515834c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a29b1c54d71967b701e04090fafbd0905</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ae91453ff746700b588f9069297226652</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a2db87f848201d3ea64fe57ae3786e695</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a2ed99c16722755a72ef02e0cc2e5aec6</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a54bcfad116d8ce1f36924db5593d91c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ad0f4918e22595bc17b07f1f219e27219</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aff9d3c6be45b0ba848d4106f761caf73</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>acfab233f994fd957dca12508f45ad6e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a778daddfb7d32d218ea3f7e33ed84db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aec50c551fbcc47888e83e6b4c1a382b8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt; &amp;Bij, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a3b5b1c765901e7efe804c2085cbe503d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aab781c35ccf1e5e68f91c91c29f4ae41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensorOld</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ac456959d54be938629a7d38be91505f1</anchor>
      <arglist>(ordinal_type order) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensorNew</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>acd8f2c1023cdfc7c975f0d06175c514f</anchor>
      <arglist>(ordinal_type order) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a308c77d70c28a21201111e95a2485d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>af87f6d97dd1e586655c2ca447f5b5640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>afde2a50a04e9eed231a1df45a1fcedf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a36f07523516f204ce929eeb740327e2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a5f3669f848390a496e8779436815d943</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>basis_orders</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>af875366f9a4f126ec26c26f2795abade</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>sparse_tol</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a1efdba2af2e41a950eccbb633741c899</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_old_cijk_alg</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a7b8a75dfcfb6911defc69928619a5567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>deriv_coeffs</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aad65c3a82512449d61a3d2d6d4bd20fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ab6a37e661564b59698b82ce2fd7994d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; MultiIndex&lt; ordinal_type &gt; &gt;</type>
      <name>terms</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a6f26efb0a66c99c70068f2d1aeb0b966</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>num_terms</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a477305dd9c6060b56b59482eae785b81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>basis_eval_tmp</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>af6fe9533a1a6058e35bc8d685a018b14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aaae7aa8e7e749a69db260e37c695366b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a7f7108d637e05b2f82450d2beca63e3b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a6add710838dd1306ab72fc4252d3f2dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a57c74e47ff1af2b21204bc55b204c6dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ad848a66e16389cac9ddc8e5da93b253f</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a5befbde14ed258b663bb96f31515834c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a29b1c54d71967b701e04090fafbd0905</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ae91453ff746700b588f9069297226652</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a2db87f848201d3ea64fe57ae3786e695</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a2ed99c16722755a72ef02e0cc2e5aec6</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a54bcfad116d8ce1f36924db5593d91c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>ad0f4918e22595bc17b07f1f219e27219</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aff9d3c6be45b0ba848d4106f761caf73</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>acfab233f994fd957dca12508f45ad6e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a778daddfb7d32d218ea3f7e33ed84db4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivTripleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>aec50c551fbcc47888e83e6b4c1a382b8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt; &amp;Bij, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasis.html</anchorfile>
      <anchor>a3b5b1c765901e7efe804c2085cbe503d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::CompletePolynomialBasisUtils</name>
    <filename>classStokhos_1_1CompletePolynomialBasisUtils.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static ordinal_type</type>
      <name>compute_terms</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasisUtils.html</anchorfile>
      <anchor>a129a4e242ae69ae9ea60721331ddae5f</anchor>
      <arglist>(ordinal_type p, ordinal_type d, ordinal_type &amp;sz, Teuchos::Array&lt; MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ordinal_type</type>
      <name>compute_terms</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasisUtils.html</anchorfile>
      <anchor>a37d1d585b2b5e777d2ce7b483c8ad974</anchor>
      <arglist>(const Teuchos::Array&lt; ordinal_type &gt; &amp;basis_orders, ordinal_type &amp;sz, Teuchos::Array&lt; MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ordinal_type</type>
      <name>compute_index</name>
      <anchorfile>classStokhos_1_1CompletePolynomialBasisUtils.html</anchorfile>
      <anchor>affbd3b3666890fa6903a6340caa715a6</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term, const Teuchos::Array&lt; MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms, const Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms, ordinal_type max_p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ConstantOrthogPolyExpansion</name>
    <filename>classStokhos_1_1ConstantOrthogPolyExpansion.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>OrthogPolyExpansion&lt; ordinal_type, value_type &gt;</base>
    <member kind="function">
      <type></type>
      <name>ConstantOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1ConstantOrthogPolyExpansion.html</anchorfile>
      <anchor>a039909f2ceaa079a7733e59a2988edd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstantOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1ConstantOrthogPolyExpansion.html</anchorfile>
      <anchor>af1bb2c2cc95e3612c82bbe45e43bae15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ConstantOrthogPolyExpansion.html</anchorfile>
      <anchor>a45b6633b6d105ea60f1213a4cec21697</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1ConstantOrthogPolyExpansion.html</anchorfile>
      <anchor>a1d3c085d0bb8ed57b38bf7072cd84e16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1ConstantOrthogPolyExpansion.html</anchorfile>
      <anchor>a41eef23e069f6c03ccc17b1aebe04971</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ConstExpr</name>
    <filename>classSacado_1_1ETPCE_1_1ConstExpr.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::ConstExpr&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt; &gt;</name>
    <filename>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>ConstT</type>
      <name>value_type</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>a2fcf30556f2746cf7b3f637883bf2da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType&lt; value_type &gt;::type</type>
      <name>scalar_type</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>a004198b8f301ec144756eca22215f68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstT</type>
      <name>base_expr_type</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>ad25d4ec8cd91c3a3693190340c173be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ConstExpr</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>aecea976c81096a08856f4390388e657c</anchor>
      <arglist>(const ConstT &amp;constant)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const ConstT &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>a09e1d62dccdb5c4e396d33213a7432b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>ae3fe136b5c70783cd56bbe5e77e47d6a</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const ConstT &amp;</type>
      <name>constant_</name>
      <anchorfile>classSacado_1_1Fad_1_1ConstExpr_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_0843f08facf7d8ee8d7165a4fd6db1223.html</anchorfile>
      <anchor>afbd446b5a5f4e14dc08253fabdc4e2dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CooProductTensor&lt; TensorScalar, Kokkos::Cuda, Pack &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::CooKernel</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01CooProductTensor_3_01TensorScalar_00_01Kokkosbe08752b52fb958325923e30aaa5cf8c.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::CooProductTensor</name>
    <filename>classStokhos_1_1CooProductTensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>PackIndex</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::CooProductTensor&lt; ValueType, ExecutionSpace, false &gt;</name>
    <filename>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>ad1897a33aa9a5e6451ed3099118f01fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>a354a5f3e43b6200c1f549f1a0cdf0d7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>ad1750b3629edf57b595d02f8ab568f2e</anchor>
      <arglist>(const size_type entry, size_type &amp;i, size_type &amp;j, size_type &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>a23d9b412d82b85555e144c53d8a5a927</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>a4b234e36e6cf3b346698e3135797f12a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01false_01_4.html</anchorfile>
      <anchor>a9a53e7dc02c615b194360691d1b94fc8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::CooProductTensor&lt; ValueType, ExecutionSpace, true &gt;</name>
    <filename>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>ac3a824a05c68ac921ea6586cc7414cb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>ab5231ab7d40d0ca01b6f4edfeeeb18f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>a945377bbba166d11f97dda013227b2f7</anchor>
      <arglist>(const size_type entry, size_type &amp;i, size_type &amp;j, size_type &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>a5fec87ed58109ebea51d99e503ebf907</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>ae7dc768e80570b7c8b4fb8e6acdcb1ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>acd1b8f84ab4a7924aeaaebc0675fd437</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const size_type</type>
      <name>max_index</name>
      <anchorfile>classStokhos_1_1CooProductTensor_3_01ValueType_00_01ExecutionSpace_00_01true_01_4.html</anchorfile>
      <anchor>aef26ad79e8bf80cb0435c8e46530b9da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::RCB::CoordCompare</name>
    <filename>structStokhos_1_1RCB_1_1CoordCompare.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::cos_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1cos__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::cos_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1cos__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::cosh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1cosh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::cosh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1cosh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::CoshOp</name>
    <filename>classSacado_1_1ETPCE_1_1CoshOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::CoshOp</name>
    <filename>classSacado_1_1MP_1_1CoshOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; CoshOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::CosOp</name>
    <filename>classSacado_1_1ETPCE_1_1CosOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::CosOp</name>
    <filename>classSacado_1_1MP_1_1CosOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; CosOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Amesos2::create_mp_vector_solver_impl</name>
    <filename>structAmesos2_1_1create__mp__vector__solver__impl.html</filename>
    <templarg>ConcreteSolver</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Amesos2::create_solver_with_supported_type&lt;                  ConcreteSolver,           Tpetra::CrsMatrix&lt; Sacado::MP::Vector&lt; ST &gt;, LO, GO, NO &gt;,           Tpetra::MultiVector&lt; Sacado::MP::Vector&lt; ST &gt;, LO, GO, NO &gt; &gt;</name>
    <filename>structAmesos2_1_1create__solver__with__supported__type_3_01_01_01_01_01_01_01_01_01_01_01_01_01_faa0db91b93cd8534eb686c917f728a7.html</filename>
    <templarg>ConcreteSolver</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Amesos2::create_mp_vector_solver_impl</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::CrsMatrix</name>
    <filename>classStokhos_1_1CrsMatrix.html</filename>
    <templarg>ValueType</templarg>
    <templarg>Device</templarg>
    <templarg>Layout</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::CrsProductTensor</name>
    <filename>classStokhos_1_1CrsProductTensor.html</filename>
    <templarg>ValueType</templarg>
    <templarg>ExecutionSpace</templarg>
    <templarg>Memory</templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a19e71fe3f0f56f09544f4e81382c9d9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>is_empty</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>ade941d9c9140b4b39594b38ea3f6caba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a118b4f5acce6e6b0d8f7767bd1a300c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_maximum</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>adb6b82ef8c07d6f7bbbf1fdfde797735</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_begin</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>ab18b524939520d032df68b5c02fcbf00</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_end</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a0e131001962b54c95a29ed7f26d5fe26</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_entry</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a5f60e2611ba0ef1647459a04eef61b49</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>aac898163d776ebbd8641abc139f469d5</anchor>
      <arglist>(const size_type entry, const size_type c) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a8303f5c92099c9c43add75cbb9aeeed2</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>aa880722d0202e4d18d8a89790ac19857</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a9a21e934bb196f2dc042af65c7628ce1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>aa8fbc1d833c1a9a213c858a91105ad7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>avg_entries_per_row</name>
      <anchorfile>classStokhos_1_1CrsProductTensor.html</anchorfile>
      <anchor>a9aecfbe45e9416ccb80bd3509a5a1718</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::DeepCopyNonContiguous</name>
    <filename>structKokkos_1_1Impl_1_1DeepCopyNonContiguous.html</filename>
    <templarg>OutputView</templarg>
    <templarg>InputView</templarg>
  </compound>
  <compound kind="class">
    <name>cusp::default_block_monitor</name>
    <filename>classcusp_1_1default__block__monitor.html</filename>
    <templarg>ValueType</templarg>
    <member kind="function">
      <type></type>
      <name>default_block_monitor</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>a2db25f9d2eac163721a788e2e3732120</anchor>
      <arglist>(const MV &amp;b, size_t iteration_limit=500, Real absolute_tolerance=1e-6, Real relative_tolerance=1e-6, bool verbose=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator++</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>a1494b9c880654fab8534f97b63655145</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>finished</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>ae12495974160a6b013ba0370be102466</anchor>
      <arglist>(const MV &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>converged</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>aaa8056563861f976f638bbf865b888d6</anchor>
      <arglist>(MV &amp;r) const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>iteration_count</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>af65f7f22ccfc4214a7074361548745b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>iteration_limit</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>a1368e636166c9699527ee49d5aa2cda7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>relative_tolerance</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>aec5230e432f6e72a8ad1681b89417bf9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>absolute_tolerance</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>a7e4dbf466a8a92035b79ba833ed24972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Real</type>
      <name>tolerance</name>
      <anchorfile>classcusp_1_1default__block__monitor.html</anchorfile>
      <anchor>a9be826f5228a3fce9c987174a0c38d3d</anchor>
      <arglist>(int i) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DefaultMultiply</name>
    <filename>classStokhos_1_1DefaultMultiply.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DefaultPointCompare</name>
    <filename>structStokhos_1_1DefaultPointCompare.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Dense3Tensor</name>
    <filename>classStokhos_1_1Dense3Tensor.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="function">
      <type></type>
      <name>Dense3Tensor</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a26908f86b18f7fb723278d032622417e</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Dense3Tensor</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>ae218f2c86c46d44a54718026e6799f87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>accac7ae0af7d3fe69ed275159f4e3c69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const value_type &amp;</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a30b9d4c847fb71969b0d9450296fb78b</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>value_type &amp;</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a74f92d32a6630936a02f04709157aea5</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_values</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a0f1f48065d3019fbc4b1ad53c501b8f0</anchor>
      <arglist>(ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a8b667f9503e2cbb91e2124565bace3ab</anchor>
      <arglist>(ordinal_type k, ordinal_type l, ordinal_type &amp;i, ordinal_type &amp;j, value_type &amp;c) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>a72a451550d96de935060dfd264c23875</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>l</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>aba16e61d898cedc7576413b485c091ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>Cijk_values</name>
      <anchorfile>classStokhos_1_1Dense3Tensor.html</anchorfile>
      <anchor>abd473e6be5304948af85a21f75901527</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DenseDirectDivisionExpansionStrategy</name>
    <filename>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DivisionExpansionStrategy</base>
    <member kind="function">
      <type></type>
      <name>DenseDirectDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>af2280e3a857aca7cbc283422d43db444</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis_, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DenseDirectDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>ab3be3ddb4dd3c95e315185212074bc33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a9a0de2e763a416631e5c4a4941e9a2b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a0050599af431eab2c31206ea52364008</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a42e7a6520786afa19cb7bb1ca49ffd97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a0584ce169a8c853dd86ddc34590b2ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseSolver&lt; ordinal_type, value_type &gt;</type>
      <name>solver</name>
      <anchorfile>classStokhos_1_1DenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a76d5b60a8460b62b288f59eba0654724</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DenseOperator</name>
    <filename>classStokhos_1_1DenseOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::DerivBasis</name>
    <filename>classStokhos_1_1DerivBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Stokhos::OrthogPolyBasis</base>
    <member kind="function">
      <type></type>
      <name>DerivBasis</name>
      <anchorfile>classStokhos_1_1DerivBasis.html</anchorfile>
      <anchor>a955be68a1bd7bb85835d5a895a27a852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DerivBasis</name>
      <anchorfile>classStokhos_1_1DerivBasis.html</anchorfile>
      <anchor>a0e7ffcb0ae2d0281e05c64813df91770</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivTripleProductTensor</name>
      <anchorfile>classStokhos_1_1DerivBasis.html</anchorfile>
      <anchor>ae82fedcdde1565b93d131359f056e64e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt; &amp;Bij, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1DerivBasis.html</anchorfile>
      <anchor>aacb3505e5c12659ef5f027a81308f050</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DerivOrthogPolyExpansion</name>
    <filename>classStokhos_1_1DerivOrthogPolyExpansion.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>OrthogPolyExpansion&lt; ordinal_type, value_type &gt;</base>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::acos_quad_func</class>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::acosh_quad_func</class>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::asin_quad_func</class>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::asinh_quad_func</class>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::atan_quad_func</class>
    <class kind="struct">Stokhos::DerivOrthogPolyExpansion::atanh_quad_func</class>
    <member kind="function">
      <type></type>
      <name>DerivOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>aa11651e038349a4f2f6f42bd9a7e6bd0</anchor>
      <arglist>(const Teuchos::RCP&lt; const DerivBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt; &amp;Bij, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Dijk)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DerivOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>afb07fe0c675283fb48407cf73dd9a9bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>acc5cd02b7685f8ed73b94a8a62201f56</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a0a09dee0b3266fb4bb9a9b22a4ecf843</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a81837c3d4e9458cc12d0a3a35cc9fd07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ordinal_type</type>
      <name>solve</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a994a63589ac1d3aab00e2b0b3eff25aa</anchor>
      <arglist>(ordinal_type s, ordinal_type nrhs)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::DerivBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a34d2cc783381d939c777f9649f38ff71</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>Bij</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>ae2a58c54e35b732392c1fa341b171600</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a6ae99d0d7e919fa853a080ef5a66c056</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>Dijk</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a416a15fd6bba039334c65fada2049452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a87ec2418e724020c4f7af2d2049494df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a297d367690a2d35dff86a406efe60e81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>B</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>a101e9e5110eaea4530d0d89e24f7ff8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>piv</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>ad2abd2ad2ad4e03c29b032f336e76764</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; ordinal_type, value_type &gt;</type>
      <name>lapack</name>
      <anchorfile>classStokhos_1_1DerivOrthogPolyExpansion.html</anchorfile>
      <anchor>aec76988e9c56072e1acfddfe6bd200c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::device_is_cuda</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1device__is__cuda.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DeviceConfig</name>
    <filename>structStokhos_1_1DeviceConfig.html</filename>
    <class kind="struct">Stokhos::DeviceConfig::Dim3</class>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DeviceForNode</name>
    <filename>structStokhos_1_1DeviceForNode.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DeviceForNode2</name>
    <filename>structStokhos_1_1DeviceForNode2.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DeviceForNode2&lt; Kokkos::Compat::KokkosDeviceWrapperNode&lt; Device &gt; &gt;</name>
    <filename>structStokhos_1_1DeviceForNode2_3_01Kokkos_1_1Compat_1_1KokkosDeviceWrapperNode_3_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::DeviceProp</name>
    <filename>classStokhos_1_1DeviceProp.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::DiagEpetraOp</name>
    <filename>classStokhos_1_1DiagEpetraOp.html</filename>
    <member kind="function">
      <type></type>
      <name>DiagEpetraOp</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a5ade5bd272d24297c9f8235d44c74463</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map_, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map_, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map_, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map_, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;ops)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DiagEpetraOp</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>aa0eef5bb7f4d1d4e03d56833da8a0a20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a03ce71fa5e849f7dab8e2369476cd02c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;ops)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getOperatorBlocks</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a9cfebf32e2f1c024428e624c7978c250</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getOperatorBlocks</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a9721da8cd17836259d3b061c4b8d1e48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a7651480371894903ec6d1adba1318133</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a6b625da0648cc4b1374c7d47c5fed6f1</anchor>
      <arglist>(std::vector&lt; Teuchos::RCP&lt; const Epetra_CrsMatrix &gt; &gt; &amp;sg_J_all, std::vector&lt; Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &gt; &amp;sg_Kkk_all) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a04ed79643dace227df0dbb69e9a0c017</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a35f105d4c3756eeff8345c754085614e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a7cdd4d459f8eb345dc8f44f4b055668d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a04b44bfde920751614c5dd874f887a50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a0d9ccb983d323836afe09af19c3df6c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a3aa927bef6d373a24292287c31f8480c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ae464484e10862d45dcb2e1ae746861db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>af6e78a708340618b8d89f09805c6dc5c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const double</type>
      <name>ApplyTime</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a3484132a2235954040569a7dfd7165a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a699dfad6741bc8b4efff5d1206d7b4d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ab1e4f6096fac4ac02a0cbe38ea12b1ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a46d4cf7942e1d786df4631f1f4e491b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_sg_map</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ac7820ba225e745d038e4259b89e24db4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_sg_map</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ad91e1a669b73778d6752c2ab703052d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a6a2d338b53a482a293c6346f6c8168eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>afdace728b39236c1219d295d4be020b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a60ac044462f97eab3ac6c5dd5dfa745a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ad7c4b6d2ba38287f352cabc09336a481</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>expansion_size</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a69883273d2df65a6b46fd9ad3a13abe6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_blocks</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a87d63ec769f411ef662aad36d8ae41fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_MultiVector &gt; &gt;</type>
      <name>input_block</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>ac896d6a6a24fe9bf0e5484c1420e5c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt;</type>
      <name>result_block</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a3ca20df01a2a2aa5eb7cdc54012f0969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a02e57ec81b419cbc5c17fec1e5a7b6eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp_trans</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a3733e16074f7a9a9b1968df090759883</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::Time &gt;</type>
      <name>ApplyTimer</name>
      <anchorfile>classStokhos_1_1DiagEpetraOp.html</anchorfile>
      <anchor>a815e124c0115013ec20762e364827667</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DiagonalOperator</name>
    <filename>classStokhos_1_1DiagonalOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::DiagPreconditioner</name>
    <filename>classStokhos_1_1DiagPreconditioner.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Operator</base>
    <member kind="function">
      <type></type>
      <name>DiagPreconditioner</name>
      <anchorfile>classStokhos_1_1DiagPreconditioner.html</anchorfile>
      <anchor>a296a277318d49807d4f36822b0ba32bf</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DiagPreconditioner</name>
      <anchorfile>classStokhos_1_1DiagPreconditioner.html</anchorfile>
      <anchor>a3949b48ba06aba559687e8bbe010b94d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1DiagPreconditioner.html</anchorfile>
      <anchor>a24123d97b8c084f501ed5cbeca939174</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type m) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DeviceConfig::Dim3</name>
    <filename>structStokhos_1_1DeviceConfig_1_1Dim3.html</filename>
  </compound>
  <compound kind="struct">
    <name>cusp::precond::aggregation::detail::Dinv_A</name>
    <filename>structcusp_1_1precond_1_1aggregation_1_1detail_1_1Dinv__A.html</filename>
    <templarg>MatrixType</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::DiscretizedStieltjesBasis</name>
    <filename>classStokhos_1_1DiscretizedStieltjesBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>DiscretizedStieltjesBasis</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a3d74fbfda6f412210af4cf6dc9385477</anchor>
      <arglist>(const std::string &amp;name, const ordinal_type &amp;p, value_type(*weightFn)(const value_type &amp;), const value_type &amp;leftEndPt, const value_type &amp;rightEndPt, bool normalize, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~DiscretizedStieltjesBasis</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a186b1e711d22a2edd586b5bc88f8d467</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>eval_inner_product</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a07a8558fb6c940741510593dc8e701d6</anchor>
      <arglist>(const ordinal_type &amp;order1, const ordinal_type &amp;order2) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a40c3033b39a3a07ee1c034353ed73217</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>evaluateRecurrence</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a68efbe0b198f8bb7c1ec8edb9042a382</anchor>
      <arglist>(const value_type &amp;point, ordinal_type order, const Teuchos::Array&lt; value_type &gt; &amp;alpha, const Teuchos::Array&lt; value_type &gt; &amp;beta) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>evaluateWeight</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>ae1aad910a1f2551157a83007161511c6</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>expectedValue_tJ_nsquared</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a11ec6a55a24e794c51dd0d172c138477</anchor>
      <arglist>(const ordinal_type &amp;order, const Teuchos::Array&lt; value_type &gt; &amp;alpha, const Teuchos::Array&lt; value_type &gt; &amp;beta) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>expectedValue_J_nsquared</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a0807527460c764a41bd4d20bf38f371f</anchor>
      <arglist>(const ordinal_type &amp;order, const Teuchos::Array&lt; value_type &gt; &amp;alpha, const Teuchos::Array&lt; value_type &gt; &amp;beta) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>DiscretizedStieltjesBasis</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a1b07bf9ca6f60c27ea9bd4f410f3e5a8</anchor>
      <arglist>(const ordinal_type &amp;p, const DiscretizedStieltjesBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>ae6cc626d0ed1c1c77a55a3cfd683b015</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>scaleFactor</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>ad7b56968776e431696722025760a0183</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const value_type</type>
      <name>leftEndPt_</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a0a040dce75a882a7f3ed649917f82a18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const value_type</type>
      <name>rightEndPt_</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>ad6878c85ffa5c10b58e922732cc1562a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type(*</type>
      <name>weightFn_</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>aa038d5ee482247cd2d15405733088c10</anchor>
      <arglist>)(const value_type &amp;)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a2c4242c4d8b01a3832daf941ffbca3fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a0dbbf020e7cba65892ec9cfee7530ae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>a1c84a7e83d27e9e728200892d1502c41</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1DiscretizedStieltjesBasis.html</anchorfile>
      <anchor>ae6cc626d0ed1c1c77a55a3cfd683b015</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::div_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1div__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::div_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1div__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::DivisionExpansionStrategy</name>
    <filename>classStokhos_1_1DivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>DivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1DivisionExpansionStrategy.html</anchorfile>
      <anchor>a3908c97591f2fad51023de87b7929b67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1DivisionExpansionStrategy.html</anchorfile>
      <anchor>a5481d91d85476dd4ea31941324e60025</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::DivisionOp</name>
    <filename>classSacado_1_1ETPCE_1_1DivisionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::DivisionOp</name>
    <filename>classSacado_1_1MP_1_1DivisionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; DivisionOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::DivisionOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1DivisionOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; DivisionOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::DivisionOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1DivisionOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; DivisionOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>KokkosClassic::DotOp1&lt; Sacado::PCE::OrthogPoly&lt; ScalarType, StorageType &gt; &gt;</name>
    <filename>structKokkosClassic_1_1DotOp1_3_01Sacado_1_1PCE_1_1OrthogPoly_3_01ScalarType_00_01StorageType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosClassic::DotOp2&lt; Sacado::PCE::OrthogPoly&lt; ScalarType, StorageType &gt; &gt;</name>
    <filename>structKokkosClassic_1_1DotOp2_3_01Sacado_1_1PCE_1_1OrthogPoly_3_01ScalarType_00_01StorageType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ds_array</name>
    <filename>structStokhos_1_1ds__array.html</filename>
    <templarg></templarg>
    <templarg>isScalar</templarg>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1ds__array.html</anchorfile>
      <anchor>a16efc3a782b21b9059a5ba1ae0d19239</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1ds__array.html</anchorfile>
      <anchor>a52c43b68c31f3bce944ac511b7d4847e</anchor>
      <arglist>(const T *src, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1ds__array.html</anchorfile>
      <anchor>a79e04ee2a63d403acf20fc1ef9b749ed</anchor>
      <arglist>(const T *src, T *dest, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1ds__array.html</anchorfile>
      <anchor>a6cb3d8df2b778b987722f23e3a413bdd</anchor>
      <arglist>(T *dest, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1ds__array.html</anchorfile>
      <anchor>a6f24e306cd394db83396dbb8d4b89078</anchor>
      <arglist>(T *m, int sz)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ds_array&lt; T, true &gt;</name>
    <filename>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</anchorfile>
      <anchor>a541ef1a025d71abba122662aa19a8a5f</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</anchorfile>
      <anchor>a9c059e0b25908ebdafb17c04f8ee6bd9</anchor>
      <arglist>(const T *src, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</anchorfile>
      <anchor>a0fd74c15580f9e94b30119472b4830b3</anchor>
      <arglist>(const T *src, T *dest, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</anchorfile>
      <anchor>a90ac3badaa472be593ef5270209deb19</anchor>
      <arglist>(T *dest, int sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1ds__array_3_01T_00_01true_01_4.html</anchorfile>
      <anchor>a33deb2987395b84a48b8a4ec4cea9010</anchor>
      <arglist>(T *m, int sz)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DynamicStorage</name>
    <filename>classStokhos_1_1DynamicStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::DynamicStorage::apply</class>
    <class kind="struct">Stokhos::DynamicStorage::apply_N</class>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a04b97959b74dbb6c7f220cbd22795d17</anchor>
      <arglist>(const ordinal_type &amp;sz=1, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>adce1c02bc59c04631163d25c9d2a08b6</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type *x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a3205550f4aabb7144f1db8f8c947c28e</anchor>
      <arglist>(const ordinal_type &amp;sz, pointer v, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a1f8258e031622fab17cb3ad831ead659</anchor>
      <arglist>(const DynamicStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>abbc6a3653c7c773f3f3479ab85adbaae</anchor>
      <arglist>(const volatile DynamicStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~DynamicStorage</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ab323f7baab21f14283ae036bcdae18bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a8edcd84dfe693cadb02b757c394eba30</anchor>
      <arglist>(const DynamicStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>af46743626a1936daa5b505ceda034558</anchor>
      <arglist>(const volatile DynamicStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a41e0e80f86ff11df06f36b7757b8476c</anchor>
      <arglist>(const DynamicStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a8e82b2047e92caa476aad9c0c5e095ae</anchor>
      <arglist>(const volatile DynamicStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a4c1a4a8758dbce84c571d24617b39a19</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a7b243f1a982b63225ad999d234c4a93e</anchor>
      <arglist>(const_reference v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a580e60329e88f215ea8b253165871825</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ac68ad72a4eed6b1e23782ede2d9a6e1e</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>adc53ef77b98a5ebe19015a1a5cdce8e7</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a11b7347572fd901f0366dd499fe061ed</anchor>
      <arglist>(pointer v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ab486725a54148f70d6165958a5d083e2</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ad537888ba157d783be51b6afdb379d8b</anchor>
      <arglist>(const ordinal_type &amp;sz) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a751c03c3af63d21cd5d8bb2a46232c3b</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a69dad62afd17c356ca94e834116dc93d</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a8ca1b0177a2b9faf6a19723db3aa99ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>adb2a5861c2e5579afcf4a3bf2b3a0a8c</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>is_view</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a04d9497e5626608db04fd88bcef0fce1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>is_view</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a9b117aeeeffd835e6010fb6af20ae247</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ab2986666b4e6bdecd7a4d95e214eb745</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a84361794a4c4c5ab7ec12bd38aab5586</anchor>
      <arglist>(const ordinal_type &amp;i) const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>afa17e94aa2a51030c155f298e582910f</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a15c35d0bb2638955a61c70017b3b6f1f</anchor>
      <arglist>(const ordinal_type &amp;i) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a3ab329aee44475dc46d5182e7a20500c</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>af28760a1b1be050bbbd2c3a32403840e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>ad8144d0926de895ffa84603208c08465</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStorage.html</anchorfile>
      <anchor>a4e7a51941097443350c05bfb0cd402bc</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DynamicStridedStorage</name>
    <filename>classStokhos_1_1DynamicStridedStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::DynamicStridedStorage::apply</class>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>abd90d336e5ce2bbddd9f111e709a191f</anchor>
      <arglist>(const ordinal_type &amp;sz=1, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>aeb8cda9cc0f01ed4c82d77773b3fa333</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type *x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a36a4a2b3ec47219162dd9c86029f064d</anchor>
      <arglist>(const ordinal_type &amp;sz, pointer v, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a6dc1a4a8e4cd8921907b45fa489f0da9</anchor>
      <arglist>(const DynamicStridedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>adb3fbe3c74da47a3d89a0f0570a99742</anchor>
      <arglist>(const volatile DynamicStridedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~DynamicStridedStorage</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a86419c2bdeac76e8a22e46474d779875</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStridedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a883d54918e35e0241e05ddf94edbfd9b</anchor>
      <arglist>(const DynamicStridedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION DynamicStridedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a6bb1ac3389935dad4f5c1b3d831a3b2e</anchor>
      <arglist>(const volatile DynamicStridedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile DynamicStridedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a3ee12723f7dbbb22a82b963600199de5</anchor>
      <arglist>(const DynamicStridedStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile DynamicStridedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>acddf84d621b4769b0d7c12745bf64ec7</anchor>
      <arglist>(const volatile DynamicStridedStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a72f500d38cf5b9ab20815bbf3d7c7545</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a8ffc299520c9948a7553ff92a2de43f6</anchor>
      <arglist>(const_reference v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a87c8d758eda42ec0098c499d85d7f656</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a0a435f2abf32cd80a26302e33d377ee2</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>ad6528b6ef8d236ae4ea3bd58dd696595</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>ad27d067251eefc5698380ae8aa666f0e</anchor>
      <arglist>(pointer v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>abd3212266659c106b8b260585ea7345d</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a45c50d1bdd5f18202578d6fa4ec45883</anchor>
      <arglist>(const ordinal_type &amp;sz) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a536aa538d938887a1ec6553efe18ce2a</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a8a3442d3989020c9ad490cbcbccf2a31</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a257f4124d755f31e9fca45282c7581a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a000e49c0c516a50949a23515a0023eae</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a7c9d495151be9308a90d0afbac292188</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>ad1cd1ce61d2c7866f2684cb9dbd7a622</anchor>
      <arglist>(const ordinal_type &amp;i) const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>af474c2b0117f4ed632dfc20978e0e1a0</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a9252d78567c7ee91e88dee001d08e406</anchor>
      <arglist>(const ordinal_type &amp;i) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a6bcbf93b87ae64817d33a340e0ddf070</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>afbc894b12444556c3e97c572be11c2ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>a2a16053a802ecfc73df7f843d9a25819</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1DynamicStridedStorage.html</anchorfile>
      <anchor>af11cdad2da22160ac9e0fb1f1dbfcce1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::DynamicThreadedStorage</name>
    <filename>classStokhos_1_1DynamicThreadedStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DynArrayTraits</name>
    <filename>structStokhos_1_1DynArrayTraits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>isScalar</templarg>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>af80c554d46d87b1e5e435dace722b80a</anchor>
      <arglist>(const volatile T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a7599510842e003ae0b47eddb868598e7</anchor>
      <arglist>(const volatile T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>ae735758bbc077f3995d9b79f3b54a793</anchor>
      <arglist>(const T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a134944f41dc342a63de6fdf6ea89ca13</anchor>
      <arglist>(const T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>ab56df6161e6bba59ae3859d3d55b126f</anchor>
      <arglist>(T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>ab57180212ee9a9b8d6eda8ca4e3ed2f9</anchor>
      <arglist>(volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a4afc0495c5dc4ffa08d719c261bd2dbd</anchor>
      <arglist>(T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>aaa1a59a2061befaea58e580d83e0244a</anchor>
      <arglist>(volatile T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a876f4a836321587a7471b5b7a4f97db1</anchor>
      <arglist>(std::size_t sz, const T &amp;x=T(0.0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a712a719b33085b2b97d694a78015c66d</anchor>
      <arglist>(const T *src, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a6ffc92dead8f6fc81c95793d692a0c0d</anchor>
      <arglist>(const volatile T *src, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a404fc70ce25023ee1907b76b74d268c6</anchor>
      <arglist>(T *m, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1DynArrayTraits.html</anchorfile>
      <anchor>a9cf159fdb0c853445adca0b413013f0e</anchor>
      <arglist>(volatile T *m, std::size_t sz)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::DynArrayTraits&lt; T, device_t, false &gt;</name>
    <filename>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a0aced52f426bfed1f002d77c1b948380</anchor>
      <arglist>(T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>abdf21cd7a2a6fb7630868c1018ce9c71</anchor>
      <arglist>(volatile T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a16fd30e6472a647c66353564c6b31ce8</anchor>
      <arglist>(const volatile T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>abbcc29b405f5e02095efac06d273666b</anchor>
      <arglist>(const volatile T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a38cf931e722afe497a48a84a950d60b6</anchor>
      <arglist>(const T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a4fad26cab21b547eb6a3b58eb915236e</anchor>
      <arglist>(const T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a45d50c1a701dff9f1a7732289c78945e</anchor>
      <arglist>(T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a8f7dccbda979f5bcce7d426c39e35f13</anchor>
      <arglist>(volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a8d685b277c0e52796c6033358e2b5a46</anchor>
      <arglist>(std::size_t sz, const T &amp;x=T(0.0))</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>ab637ea0326ada04240d240bb1b7682f2</anchor>
      <arglist>(const T *src, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION T *</type>
      <name>get_and_fill</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>aa41d64ebec913695301750e33e37ba11</anchor>
      <arglist>(const volatile T *src, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>af9adbbd4cf1718705c0fabac6f6fe9d9</anchor>
      <arglist>(T *m, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>destroy_and_release</name>
      <anchorfile>structStokhos_1_1DynArrayTraits_3_01T_00_01device__t_00_01false_01_4.html</anchorfile>
      <anchor>a028b6a3002582298cdaa33d759627e5f</anchor>
      <arglist>(volatile T *m, std::size_t sz)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::KL::OneDExponentialCovarianceFunction::EigFuncCos</name>
    <filename>structStokhos_1_1KL_1_1OneDExponentialCovarianceFunction_1_1EigFuncCos.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::KL::OneDExponentialCovarianceFunction::EigFuncSin</name>
    <filename>structStokhos_1_1KL_1_1OneDExponentialCovarianceFunction_1_1EigFuncSin.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraCrsMatrixCloner</name>
    <filename>classStokhos_1_1EpetraCrsMatrixCloner.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraMultiVectorCloner</name>
    <filename>classStokhos_1_1EpetraMultiVectorCloner.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraMultiVectorOperator</name>
    <filename>classStokhos_1_1EpetraMultiVectorOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>aeeba3a2754c6fd2dca562a34292fb883</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;multi_vec, bool is_multi_vec_transposed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>abc3dea50ff8946a4cb59df10ca319128</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;multi_vec, bool is_multi_vec_transposed)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>aae72dace79d82081ed6b664e19855dbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a88f09c7a8057707b5a62027d354d998e</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a8750f0817fe614c0764f5578af30cfca</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a68f41fa13b577e58c8261a05368a4a21</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a3676f0c4e1c6cae0eb2ca24f631a761a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>adbe6342825fd6b9b5b0402a38ca2a40e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>af1437513b852ec40f87a2793de35c005</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a1880c9b59dae5e6e8ebfc75bbdb5b034</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>afec9a8d18c4d697620ed36ab1d3b9842</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a1fb54794b4efc0a423949dcfad5a26c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a77063d65c095896e8ccb419f8a217c52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a2896ec7a0733cc4ecc5314bf9488f54c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>multi_vec</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a7ad924873fb8aae2205f22d97ce0d6d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>nonconst_multi_vec</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a93cdfee871ef0a902cee8866b727d32e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_multi_vec_transposed</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>abfa133277c0bed14eda1d2b0de426fc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>a2275b9a6fe6cb5cd84b8d5f3ad7b0fe7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>domain_map</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperator.html</anchorfile>
      <anchor>ad98fd178a56621fad2b0b8f32dc76b5f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraMultiVectorOperatorOrthogPoly</name>
    <filename>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</filename>
    <base>Stokhos::EpetraOperatorOrthogPoly</base>
    <base>Stokhos::ProductEpetraMultiVectorOperator</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>a70e4d35c78e7bab43b6b309bddf87ac6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>a2e793be80f936b1e04650562f302418c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>ac5c7a89a686cbac9b8b4fa4daf62f5b7</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt; &amp;sg_mv, bool is_multi_vec_transposed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>a7342f7ed0d652adb5d7b89f41796311d</anchor>
      <arglist>(const EpetraMultiVectorOperatorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>a6007e7ffd77ef905b930a97aa66a297b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EpetraMultiVectorOperatorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>abd10d64d82677e2cb9e0056616597adf</anchor>
      <arglist>(const EpetraMultiVectorOperatorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraMultiVectorOrthogPoly &gt;</type>
      <name>multiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>a45f08973f99d14a1360b536ed3355f5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>sg_mv</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOperatorOrthogPoly.html</anchorfile>
      <anchor>af88485b7b582830ff777f8130e9b7a5b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraMultiVectorOrthogPoly</name>
    <filename>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</filename>
    <base>VectorOrthogPoly&lt; Epetra_MultiVector &gt;</base>
    <base>Stokhos::ProductEpetraMultiVector</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a1242ba43123cb69da7cdee44c436b45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a8014a8b410a69718b4e34754b06903f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>afbb99fc79608e4d118dc883a10cbf4c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a8d0b84666729bf2c277e316a74a96242</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>ad2b1d973735c190522ccef7b32d5780b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>ae3008f19e6d746ed125aaaf1abb5b04f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a5df3971e1e7ae5a2253d181840d3408e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, Epetra_DataAccess CV, const Epetra_MultiVector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>aae86efeae95e7b6b8eebcfbad853ee99</anchor>
      <arglist>(const EpetraMultiVectorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraMultiVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a418e07fda33980cd1453430ff28d8a31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EpetraMultiVectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a40dfc6fb50dc2a33105a6574da138aa7</anchor>
      <arglist>(const EpetraMultiVectorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a88ffc65b04404a49089145ff62372d7e</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a124e5c45fbf3fae0786903203ce43aa1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeMean</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a325787f4bbd233915189ecaa087b078f</anchor>
      <arglist>(Epetra_MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeVariance</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>ae1a5b5acd71c662339ef587a5394c175</anchor>
      <arglist>(Epetra_MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStandardDeviation</name>
      <anchorfile>classStokhos_1_1EpetraMultiVectorOrthogPoly.html</anchorfile>
      <anchor>a217c1e546699ca40a6a7e35702c1a922</anchor>
      <arglist>(Epetra_MultiVector &amp;v) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraOperatorCloner</name>
    <filename>classStokhos_1_1EpetraOperatorCloner.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraOperatorOrthogPoly</name>
    <filename>classStokhos_1_1EpetraOperatorOrthogPoly.html</filename>
    <base virtualness="virtual">VectorOrthogPoly&lt; Epetra_Operator &gt;</base>
    <base virtualness="virtual">Stokhos::ProductEpetraOperator</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>abac977630e57545d618017815bd3cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a7c10524707a22fe8fb55284bc2d3e54f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a9cf19292ccc2a39512f89e0f14dc9b4d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a82ca3b21cdc3c2f3b8b95210a807d7dc</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a9790c821dddc6b30aa687b68ec4790a1</anchor>
      <arglist>(const EpetraOperatorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>aec14b8fd78aecb778afdb457ebe67e64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EpetraOperatorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>ac0232b1645b01c2b10537d0ee8ecf59e</anchor>
      <arglist>(const EpetraOperatorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>EpetraOperatorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a654e8f296d32dd9bc3e40db6ad842f6b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1EpetraOperatorOrthogPoly.html</anchorfile>
      <anchor>a7233bbd289c6942d8548917d478a7055</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraSparse3Tensor</name>
    <filename>classStokhos_1_1EpetraSparse3Tensor.html</filename>
    <member kind="function">
      <type></type>
      <name>EpetraSparse3Tensor</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a0b7289f5613e2a03029be212b35097f7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;globalMultiComm, int k_begin=0, int k_end=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraSparse3Tensor</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>abd0cadc3a31b01d08382fd877b3204ad</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;globalMultiComm, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;stoch_row_map, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk_parallel=Teuchos::null, int k_begin=0, int k_end=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraSparse3Tensor</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>afba58effb2293feddd3b0d974acbe011</anchor>
      <arglist>(const EpetraSparse3Tensor &amp;epetraCijk, int k_begin_=0, int k_end_=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~EpetraSparse3Tensor</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>af310973a9f5ee82f67d3971676108a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>rebalance</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a3bbc4a63d6f677b107bf872eb725f11a</anchor>
      <arglist>(Teuchos::ParameterList &amp;isorropia_params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformToLocal</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a098888979900ebb90192e77e2fd57380</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKBegin</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a797da312cf75d2c7d02accc999041aff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getKEnd</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a081b37ef86c5fa9eb3ba2c06bda73707</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStochasticParallel</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>ac91773f3823d46a850db7682752138f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GRID</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>ae83cd2a80363c15c654147a696762e11</anchor>
      <arglist>(int lrid) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GCID</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a23dc59081da9a558472ca3e5ab78a3a1</anchor>
      <arglist>(int lcid) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGRID</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a0431b057f7378a2dda9aaf1bddba244e</anchor>
      <arglist>(int grid) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGCID</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>ac62dd36ab7d0e0141648df4d44cd3cff</anchor>
      <arglist>(int gcid) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numMyRows</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a71497d9fafd1d7ce626399d7430f2f34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numMyCols</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a252000a0cea10c23e5983442990ac38c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>getMultiComm</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>adf903e9ea6852f86bf314764ffbaf9fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>getStochasticComm</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a50f4e2a9e3e99314c30aa8e63ddddf76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>getStochasticRowMap</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a1c14da78706bfcad7bfc13b0ba29be75</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>getStochasticColMap</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a842496c66ce6fb4f6ce60b3cdf99442d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>getCijk</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>abacce4fdae8057c079a282091b21c1c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>getParallelCijk</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a58f5e50a7b9108e4f12beb8ce8988f60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_CrsGraph &gt;</type>
      <name>getStochasticGraph</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>aed6921429e1e41a1d1df84d405446ba0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Cijk_type &gt;</type>
      <name>buildParallelCijk</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>aff3f3705a6a85ba5c4a43fbc69cda6df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a853ebf0846de05da49ccadd6eb2add89</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>adc591f2daa287fdc4a432de2440a34c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>globalMultiComm</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>abf53fe765e6d5a677246ee2260e932fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_global_stoch_blocks</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a9316f61442b53c446b0a00a94d062804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>ab35687e176ba28c148c2ce13b2bbf67c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a9c0707f0f3d4453d89c529a97a40aeb1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>stoch_comm</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>af6fae0faa557414597371bac5f260fe3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_parallel</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>aeb8209d91b32d5a4661b4212e9c028b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_row_map</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>ab820399ccc77513b92a3fe60f5178295</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_col_map</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>adff6962e37b24b64364e02d15c2b2b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk_parallel</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a9cfd51dd09d636fd6bef4066fa8ce278</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_CrsGraph &gt;</type>
      <name>stoch_graph</name>
      <anchorfile>classStokhos_1_1EpetraSparse3Tensor.html</anchorfile>
      <anchor>a087e23633d3b525acef62d422655a2d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraVectorCloner</name>
    <filename>classStokhos_1_1EpetraVectorCloner.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EpetraVectorOrthogPoly</name>
    <filename>classStokhos_1_1EpetraVectorOrthogPoly.html</filename>
    <base>VectorOrthogPoly&lt; Epetra_Vector &gt;</base>
    <base>Stokhos::ProductEpetraVector</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>ac85f818381a654b8289eb3dd440c2d73</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a885c70c8672e19a545cb9cfb5c6b1b06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a7cf1062bfe22a4c481aa5c80c2ceb3eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a9ff6c2b617ce5484e685017ab9fa7151</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a33c67766803adc717bcd85e298da98ef</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a3e569b050b3dedbbf34dbfb39f1d645b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>aac87732b4d05705d06c3c44c3b79e4ff</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, Epetra_DataAccess CV, const Epetra_Vector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a47dc86a735c07ea5c998410cba488c8b</anchor>
      <arglist>(const EpetraVectorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EpetraVectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>affaeab8c01c6fe3cfb4d71758508233e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>EpetraVectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a641833f27e1cb7077540db193b209c99</anchor>
      <arglist>(const EpetraVectorOrthogPoly &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a1aafb66eb690bc4729a87ad4f8b2b3d2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a3e3f1221ea956beae37d7389cb1e3524</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeMean</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a0ffa18fd9a5e56b8c5b35b0e83a8c1be</anchor>
      <arglist>(Epetra_Vector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeVariance</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>a85c4e0aa6ee193340d951977a05e71b0</anchor>
      <arglist>(Epetra_Vector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeStandardDeviation</name>
      <anchorfile>classStokhos_1_1EpetraVectorOrthogPoly.html</anchorfile>
      <anchor>adcdde68d7315d2bf7ed4bb3f6947314c</anchor>
      <arglist>(Epetra_Vector &amp;v) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::error_storage_type_is_not_allocateable</name>
    <filename>structStokhos_1_1error__storage__type__is__not__allocateable.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::error_storage_type_is_not_resizeable</name>
    <filename>structStokhos_1_1error__storage__type__is__not__resizeable.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::EvenGrowthRule</name>
    <filename>classStokhos_1_1EvenGrowthRule.html</filename>
    <templarg></templarg>
    <base>Stokhos::GrowthRule</base>
    <member kind="function">
      <type></type>
      <name>EvenGrowthRule</name>
      <anchorfile>classStokhos_1_1EvenGrowthRule.html</anchorfile>
      <anchor>abfbce0d2050f77c70b0e08505da0accb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EvenGrowthRule</name>
      <anchorfile>classStokhos_1_1EvenGrowthRule.html</anchorfile>
      <anchor>ab1682786d44f7eb5665f701d089315c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1EvenGrowthRule.html</anchorfile>
      <anchor>a12e0bdda0c82b424f1e9cadaa2e3a29e</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::exp_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1exp__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::exp_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1exp__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::ExpansionFactory</name>
    <filename>classStokhos_1_1ExpansionFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ExpansionFactory</name>
      <anchorfile>classStokhos_1_1ExpansionFactory.html</anchorfile>
      <anchor>a81f7b816774e5a7cc46ecd355d2d0d34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ExpansionFactory</name>
      <anchorfile>classStokhos_1_1ExpansionFactory.html</anchorfile>
      <anchor>a322f8c89cbfe83f1ca762a7ed824f8ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Stokhos::OrthogPolyExpansion&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classStokhos_1_1ExpansionFactory.html</anchorfile>
      <anchor>aef8c3fe2058c38e5167ca00a166769cf</anchor>
      <arglist>(Teuchos::ParameterList &amp;sgParams)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::KL::ExponentialOneDEigenFunction</name>
    <filename>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</filename>
    <templarg>Value</templarg>
    <member kind="enumeration">
      <type></type>
      <name>TYPE</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a3d6e5c6e22e5493eeed461dc795e3eb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIN</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a3d6e5c6e22e5493eeed461dc795e3eb8a08a86b74d8cc4b827b8efc73f85b7741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COS</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a3d6e5c6e22e5493eeed461dc795e3eb8aa56929b6f53d03122ad3046bc8295cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SIN</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a3d6e5c6e22e5493eeed461dc795e3eb8a08a86b74d8cc4b827b8efc73f85b7741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>COS</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a3d6e5c6e22e5493eeed461dc795e3eb8aa56929b6f53d03122ad3046bc8295cbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ExponentialOneDEigenFunction</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>ae1f78d58fe3d3db59209f83ee5164eb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ExponentialOneDEigenFunction</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a1480d75527059064d9ff3415236b5a69</anchor>
      <arglist>(TYPE type_, const value_type &amp;a_, const value_type &amp;b_, const value_type &amp;omega_, const int dim_name_)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~ExponentialOneDEigenFunction</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a5f7c243e1e3b111420485c6d95bac5a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>ab60b9c97e75c5a07a0ee8f999190d097</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a342371659375a963dc6e9f9f2e7645c0</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION TYPE</type>
      <name>getType</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>ad918ad1dd8dfb77793944c4b26e9ffe8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>getFrequency</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a0cd8cde790fdaa1b4cf33c27626e4b0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>getMultiplier</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a96b6f63fc6b38eff69784318342ab7b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>getShift</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a4b4b4e2bdac52d9f72587ec2fcd77e63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>TYPE</type>
      <name>type</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a48380c0a84186443fcd5b376c23dc6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>a</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a43d90c7ff35ec5c0803f582aacf5cc4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>b</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>abd5dba47943767c60721b5bc039f6a31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a9fb9970a76f2b74c8ccc2211943cd8d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>omega</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a1a0d2a6787bb45b4b0f32b1a967d2244</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>dim_name</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialOneDEigenFunction.html</anchorfile>
      <anchor>a77ac243506800e00c0e1c8a983f34687</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::KL::ExponentialRandomField</name>
    <filename>classStokhos_1_1KL_1_1ExponentialRandomField.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ExponentialRandomField</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>ae817abde9b58c3727056102d4f924f0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ExponentialRandomField</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a640ddbda144440d2b7f850880273b823</anchor>
      <arglist>(Teuchos::ParameterList &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~ExponentialRandomField</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a1b7ef41471f30fc58833a0427152e34a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>spatialDimension</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a513bcb962c0ff1b66ab7177997326c7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>stochasticDimension</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a063b74784681a264970c59ccb0e49f08</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION Teuchos::PromotionTraits&lt; typename rv_type::value_type, value_type &gt;::promote</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a68385781e664f78bba0bd99263aabe70</anchor>
      <arglist>(const point_type &amp;point, const rv_type &amp;random_variables) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>evaluate_mean</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>aebc58c9946299e7ba1b1c2c06347044b</anchor>
      <arglist>(const point_type &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>evaluate_standard_deviation</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a25eace81cc4b08ba2ddd5088c1a1a74e</anchor>
      <arglist>(const point_type &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>value_type KOKKOS_INLINE_FUNCTION</type>
      <name>evaluate_eigenfunction</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>ad0a19a22aba3545ff76b7bad9ea473a3</anchor>
      <arglist>(const point_type &amp;point, int i) const </arglist>
    </member>
    <member kind="function">
      <type>value_type KOKKOS_INLINE_FUNCTION</type>
      <name>eigenvalue</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a1fc1f5fa0a4a608e2152a79ab19255b1</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a740c12492e1c9cc7355d5c4742ba8918</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_KL</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>aa970b1d0221e7d0d478b4191cc19b630</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a8542715533d547c2b65ef8348eb2fb2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a1610087eda8ea8ab25a212f3b94eefeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>std_dev</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a7e9e9525af2c7326b87738080304ecee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eigen_func_array_type</type>
      <name>product_eigen_funcs</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>ab118e600273b03f9a4b00dd96ce28e01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>eigen_value_array_type</type>
      <name>product_eigen_values</name>
      <anchorfile>classStokhos_1_1KL_1_1ExponentialRandomField.html</anchorfile>
      <anchor>a6d25ace63e63b5995346ab7a29da8daa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::ExpOp</name>
    <filename>classSacado_1_1ETPCE_1_1ExpOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::ExpOp</name>
    <filename>classSacado_1_1MP_1_1ExpOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; ExpOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr</name>
    <filename>classSacado_1_1ETPCE_1_1Expr.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Expr</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  AbsOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01AbsOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  AbsOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01AbsOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ACoshOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ACoshOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ACoshOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ACoshOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ACosOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ACosOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ACosOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ACosOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  AdditionOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01AdditionOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  AdditionOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01AdditionOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  AdditionOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01AdditionOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  AdditionOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01AdditionOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  AdditionOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01AdditionOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  AdditionOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01AdditionOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ASinhOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ASinhOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ASinhOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ASinhOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ASinOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ASinOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ASinOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ASinOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  Atan2Op&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01Atan2Op_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  Atan2Op&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01Atan2Op_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  Atan2Op&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01Atan2Op_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  Atan2Op&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01Atan2Op_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  Atan2Op&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01Atan2Op_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  Atan2Op&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01Atan2Op_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ATanhOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ATanhOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ATanhOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ATanhOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ATanOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ATanOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ATanOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ATanOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  CbrtOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01CbrtOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  CoshOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01CoshOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  CoshOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01CoshOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  CosOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01CosOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  CosOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01CosOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  DivisionOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01DivisionOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  DivisionOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01DivisionOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  DivisionOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01DivisionOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  ExpOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01ExpOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  ExpOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01ExpOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  FAbsOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01FAbsOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  FAbsOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01FAbsOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  Log10Op&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01Log10Op_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  Log10Op&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01Log10Op_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  LogOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01LogOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  LogOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01LogOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MaxOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MaxOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MaxOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MaxOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MaxOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MaxOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MaxOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MaxOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MaxOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MaxOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MaxOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MaxOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MinOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MinOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MinOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MinOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MinOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MinOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MinOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MinOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  MinOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01MinOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  MinOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01MinOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  PowerOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01PowerOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  PowerOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01PowerOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  PowerOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01PowerOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  PowerOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01PowerOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  PowerOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01PowerOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  PowerOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01PowerOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SinhOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SinhOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SinhOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SinhOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SinOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SinOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SinOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SinOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SqrtOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SqrtOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SqrtOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SqrtOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SubtractionOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SubtractionOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SubtractionOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SubtractionOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SubtractionOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SubtractionOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_0164a55b0c8a5b823689c5eb76c6b1f80b.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SubtractionOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SubtractionOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  SubtractionOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01SubtractionOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  SubtractionOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01SubtractionOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type365013822c4890ee486527797929644f.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  TanhOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01TanhOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  TanhOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01TanhOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  TanOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01TanOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  TanOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01TanOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  UnaryMinusOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01UnaryMinusOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  UnaryMinusOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01UnaryMinusOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt;  UnaryPlusOp&lt; ExprT &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01_01UnaryPlusOp_3_01ExprT_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt;  UnaryPlusOp&lt; ExprT &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01_01UnaryPlusOp_3_01ExprT_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Expr&lt; AbsOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ACoshOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ACosOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; AdditionOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; AdditionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; AdditionOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ASinhOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ASinOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; Atan2Op&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; Atan2Op&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; Atan2Op&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ATanhOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ATanOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; CbrtOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; CoshOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; CosOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; DivisionOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01DivisionOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; DivisionOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01DivisionOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01T1_01_4_1_1value__type_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Expr&lt; DivisionOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; DivisionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; DivisionOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; DivisionOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01DivisionOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Expr&lt; ExpOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; FAbsOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; Log10Op&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; LogOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MaxOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MaxOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MaxOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MinOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MinOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MinOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt; MultiplicationOp&lt; ConstExpr&lt; T1 &gt;, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01MultiplicationOp_3_01ConstExpr_3_01T1_01_4_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; MultiplicationOp&lt; Expr&lt; T1 &gt;, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01MultiplicationOp_3_01Expr_3_01T1_01_4_00_01Expr_3_01T2_01_4_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; MultiplicationOp&lt; Expr&lt; T1 &gt;, typename Expr&lt; T1 &gt;::value_type &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01MultiplicationOp_3_01Expr_3_01T1_01_4_00_01typename_01Expr_3_01dfe53115c670e57f1ed09d322cec1a22.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt; MultiplicationOp&lt; ExprT1, ConstExpr&lt; T2 &gt; &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01MultiplicationOp_3_01ExprT1_00_01ConstExpr_3_01T2_01_4_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt; MultiplicationOp&lt; ExprT1, ExprT2 &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01MultiplicationOp_3_01ExprT1_00_01ExprT2_01_4_00_01ExprSpecMPVector_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MultiplicationOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MultiplicationOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; MultiplicationOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Expr&lt; MultiplicationOp&lt; typename Expr&lt; T2 &gt;::value_type, Expr&lt; T2 &gt; &gt; &gt;</name>
    <filename>classSacado_1_1ETPCE_1_1Expr_3_01MultiplicationOp_3_01typename_01Expr_3_01T2_01_4_1_1value__type349df5f4349295226a8d2712e4b9d395.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Expr&lt; PowerOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; PowerOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; PowerOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::Expr&lt; SFadExprTag&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Num &gt;, ExprSpecMPVector &gt;</name>
    <filename>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <member kind="typedef">
      <type>RemoveConst&lt; T &gt;::type</type>
      <name>value_type</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aa2dc44b4bd61dfbd3abac8c9269d9b2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType&lt; value_type &gt;::type</type>
      <name>scalar_type</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>af896e952b7d5abebc8d39b9c8edb4cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SFad&lt; value_type, Num &gt;</type>
      <name>base_expr_type</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ac8360be3fb705082dadea0fdb67b1e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>SACADO_ENABLE_VALUE_FUNC</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aa01fc4be0feb996e99fce5af355b3183</anchor>
      <arglist>(Expr &amp;) operator</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a2d84edfb1732e0300eecbcaf508c61f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a19a1b9e9099e0145ea1f1f39bf8d9b34</anchor>
      <arglist>(const S &amp;x, SACADO_ENABLE_VALUE_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a330e9c987fd24e2e3d397e3aed095ce0</anchor>
      <arglist>(const int sz, const T &amp;x, const DerivInit zero_out=InitDerivArray)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ae5380a29f6d29d048ca6d2014fa7b925</anchor>
      <arglist>(const int sz, const int i, const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aa13c0eb15bcc9ee4a1c83cc4bfcde593</anchor>
      <arglist>(const Expr &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a9b9a07f8dc24673f0517aa4831ca8c95</anchor>
      <arglist>(const Expr&lt; S &gt; &amp;x, SACADO_ENABLE_EXPR_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aafa98743f64ea9bfa7ad2edde3645b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>diff</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ae7a227ea56a4c06dbd5aa2bd3b1bde7f</anchor>
      <arglist>(const int ith, const int n)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a5ad2ad2ad6ef91e1ed4db846dea38b1b</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>expand</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a36958905b491faf92e2efc06e88ad165</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ac19f75cf659a436ac46a6b8e6b7180d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setUpdateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a64d710548dcc60b8f59df11eb0cbe6a1</anchor>
      <arglist>(bool update_val)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>updateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a093495b9481865cf3ae3a0be2f3c4477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>SACADO_ENABLE_EXPR_FUNC</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a6cd21acf613e057f7ae182705366e7ce</anchor>
      <arglist>(bool) isEqualTo(const Expr&lt; S &gt; &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a0cb2351fd0e0f27567b6a7745908f4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>af609079b82393e7891385e94ecf672e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a6082d30627fd69d8866d04d2d412609d</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a2b54f8c272d5ae69fcba11a9386a3964</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>size</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a74a4945a1f3cb9547289e4ce0c33cede</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>availableSize</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a49820b495a0cdffc7c97ae757836f3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>hasFastAccess</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a90db54ea2e4efd16e9486b47f9f13228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>isPassive</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a70c392d8319a923f40a7e5c11ac8d7dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setIsConstant</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ad5de0d7885f29fdf2db198c1cf1f9287</anchor>
      <arglist>(bool is_const)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T *</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a3b595e612c57205fb889ec175d8c3aad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a99f87c10a4f4a92c923cf0ea0c599c0f</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a8a7011f587b5575225e7ab98985d03a9</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a86be11b32abb8b25bde64e3992db6dd6</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a7e7c1ad9e60e03dd0cd4a0a38f090e71</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>af7137ad2f1e7ab3b25679c57ad9960c0</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a1295a4af36c31e9af9bc232566511bdc</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="variable">
      <type>T</type>
      <name>val_</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ae67f7f791b1916cb78ca0fa8afd6978d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a2d84edfb1732e0300eecbcaf508c61f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a19a1b9e9099e0145ea1f1f39bf8d9b34</anchor>
      <arglist>(const S &amp;x, SACADO_ENABLE_VALUE_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a330e9c987fd24e2e3d397e3aed095ce0</anchor>
      <arglist>(const int sz, const T &amp;x, const DerivInit zero_out=InitDerivArray)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ae5380a29f6d29d048ca6d2014fa7b925</anchor>
      <arglist>(const int sz, const int i, const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aa13c0eb15bcc9ee4a1c83cc4bfcde593</anchor>
      <arglist>(const Expr &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a9b9a07f8dc24673f0517aa4831ca8c95</anchor>
      <arglist>(const Expr&lt; S &gt; &amp;x, SACADO_ENABLE_EXPR_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~Expr</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>aafa98743f64ea9bfa7ad2edde3645b0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>diff</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ae7a227ea56a4c06dbd5aa2bd3b1bde7f</anchor>
      <arglist>(const int ith, const int n)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a5ad2ad2ad6ef91e1ed4db846dea38b1b</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>expand</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a36958905b491faf92e2efc06e88ad165</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ac19f75cf659a436ac46a6b8e6b7180d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setUpdateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a64d710548dcc60b8f59df11eb0cbe6a1</anchor>
      <arglist>(bool update_val)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>updateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a093495b9481865cf3ae3a0be2f3c4477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>SACADO_ENABLE_EXPR_FUNC</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a6cd21acf613e057f7ae182705366e7ce</anchor>
      <arglist>(bool) isEqualTo(const Expr&lt; S &gt; &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a0cb2351fd0e0f27567b6a7745908f4c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>af609079b82393e7891385e94ecf672e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a6082d30627fd69d8866d04d2d412609d</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a2b54f8c272d5ae69fcba11a9386a3964</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>size</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a74a4945a1f3cb9547289e4ce0c33cede</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>availableSize</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a49820b495a0cdffc7c97ae757836f3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>hasFastAccess</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a90db54ea2e4efd16e9486b47f9f13228</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>isPassive</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a70c392d8319a923f40a7e5c11ac8d7dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setIsConstant</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>ad5de0d7885f29fdf2db198c1cf1f9287</anchor>
      <arglist>(bool is_const)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T *</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a3b595e612c57205fb889ec175d8c3aad</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a99f87c10a4f4a92c923cf0ea0c599c0f</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a8a7011f587b5575225e7ab98985d03a9</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a86be11b32abb8b25bde64e3992db6dd6</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a7e7c1ad9e60e03dd0cd4a0a38f090e71</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>af7137ad2f1e7ab3b25679c57ad9960c0</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1Expr_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixed87d1724dac89dff3661906cb1105cb98.html</anchorfile>
      <anchor>a1295a4af36c31e9af9bc232566511bdc</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SinhOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SinOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SqrtOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SubtractionOp&lt; T1, T1::value_type &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SubtractionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; SubtractionOp&lt; T2::value_type, T2 &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; TanhOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; TanOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; UnaryMinusOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="class">
    <name>Expr&lt; UnaryPlusOp&lt; T &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Expr.html</filename>
  </compound>
  <compound kind="struct">
    <name>Sacado::ETPCE::ExprQuadFuncWrapper</name>
    <filename>structSacado_1_1ETPCE_1_1ExprQuadFuncWrapper.html</filename>
    <templarg>NN</templarg>
    <templarg>ExprT</templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; DFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt; &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01DFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStf0386b33f7379ad8466cbab6e53bc596.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; GeneralFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Storage &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticF93b876b32d44635589dff04aad492ef1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; SFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Num &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01SFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStbcbd10abf5d9e1b40c3a929f5495efa1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; SFadExprTag&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Num &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01SFadExprTag_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1Staticbec721214e60d677d188dfe771f1edb5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; SLFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Num &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01SLFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedS5e0f2169a52b4d4225ba05db1213b2bb.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpec&lt; ViewFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, length, stride, BaseFadT &gt; &gt;</name>
    <filename>structSacado_1_1Fad_1_1ExprSpec_3_01ViewFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixe6bdb71c0ddc37c33e1920f7c8910f254.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg>length</templarg>
    <templarg>stride</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Fad::ExprSpecMPVector</name>
    <filename>structSacado_1_1Fad_1_1ExprSpecMPVector.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::FAbsOp</name>
    <filename>classSacado_1_1ETPCE_1_1FAbsOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::FAbsOp</name>
    <filename>classSacado_1_1MP_1_1FAbsOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; FAbsOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Kokkos::FlatArrayType</name>
    <filename>structKokkos_1_1FlatArrayType.html</filename>
    <templarg>view_type</templarg>
    <templarg>Enabled</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::FlatArrayType&lt; View&lt; T, L, D, M, Impl::ViewMPVectorContiguous &gt; &gt;</name>
    <filename>structKokkos_1_1FlatArrayType_3_01View_3_01T_00_01L_00_01D_00_01M_00_01Impl_1_1ViewMPVectorContiguous_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::FlatArrayType&lt; View&lt; T, L, D, M, Impl::ViewPCEContiguous &gt; &gt;</name>
    <filename>structKokkos_1_1FlatArrayType_3_01View_3_01T_00_01L_00_01D_00_01M_00_01Impl_1_1ViewPCEContiguous_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::FlatLTBSparse3Tensor</name>
    <filename>structStokhos_1_1FlatLTBSparse3Tensor.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::FlatLTBSparse3TensorNode</name>
    <filename>structStokhos_1_1FlatLTBSparse3TensorNode.html</filename>
    <templarg>ordinal_type</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::FlatSparse3Tensor</name>
    <filename>classStokhos_1_1FlatSparse3Tensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>ae2d97a155833e85bef73c207b55e6f2e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a085f73e55d04a31b26a02bee3d3425fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a7f5c73fb906c7c6c77ab0e27832c4e3e</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>aa40234157038a033719742cd97838dc6</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>ae86f1b7d64b20c4d3d49162a97679c07</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>k_coord</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>ada727a52a99c8adaabfd30e7e507960c</anchor>
      <arglist>(const size_type kEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a5ea9ca01aa5475c98fe8ff9f76a82a89</anchor>
      <arglist>(size_type kEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a0dd57894177cf0943c56bff964b2af44</anchor>
      <arglist>(size_type kEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a31624af478c58f372c9b56519755df05</anchor>
      <arglist>(size_type kEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>j_coord</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>aa96221fc787a9e7f75f55733d64439d9</anchor>
      <arglist>(const size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a3cf1894c6c9921482fc71427135b5d1c</anchor>
      <arglist>(const size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>ae99964e439be8ba1d4b3ab661c2803d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor.html</anchorfile>
      <anchor>a22e0ba865f5058e69cb428407d8ab26f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::FlatSparse3Tensor_kji</name>
    <filename>classStokhos_1_1FlatSparse3Tensor__kji.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a844a61af1dac77cebce285b838ca13bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>aa52f5482f23c25c9dc7e6dca609d0951</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>aada95404d6bb193d8c47cbea09560410</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a52b091ff5188e1cd98d0a0703339e787</anchor>
      <arglist>(size_type k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>aea8fd0a35cb820b9c3bd0f1fcf4dfea5</anchor>
      <arglist>(size_type k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a77dd8aed073726c4a8da0c10025872f3</anchor>
      <arglist>(size_type k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>j_coord</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a10dc52710eacc56c25710d3d77a88623</anchor>
      <arglist>(const size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a24de44eebd6191557481ff3f97dc2bf6</anchor>
      <arglist>(size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>ab74634288d8d33b98f7edbb2b446642f</anchor>
      <arglist>(size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a4f3f1b547819afd4849101cd87d76184</anchor>
      <arglist>(size_type jEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>i_coord</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a34d4026c0a0881615048d5f59ed26929</anchor>
      <arglist>(const size_type iEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a47bf2ca2945dbc18fc569b8f1a4f3f9b</anchor>
      <arglist>(const size_type iEntry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>af4788107416cc7fc68e6f1961c289236</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1FlatSparse3Tensor__kji.html</anchorfile>
      <anchor>a7afb4b8b0ef90aa2eacbe2d733192cf9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::FloatingPointLess</name>
    <filename>classStokhos_1_1FloatingPointLess.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>FloatingPointLess</name>
      <anchorfile>classStokhos_1_1FloatingPointLess.html</anchorfile>
      <anchor>a12696a55807139531a0fc981964653b8</anchor>
      <arglist>(const value_type &amp;tol_=1.0e-12)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~FloatingPointLess</name>
      <anchorfile>classStokhos_1_1FloatingPointLess.html</anchorfile>
      <anchor>a89fe90cc87d1d8afc23638e2167d37b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1FloatingPointLess.html</anchorfile>
      <anchor>a75ca0793030102c3f937170b7a73acb8</anchor>
      <arglist>(const value_type &amp;a, const value_type &amp;b) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>tol</name>
      <anchorfile>classStokhos_1_1FloatingPointLess.html</anchorfile>
      <anchor>a7c048b3097cb0ab3a3228a3c018b642a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::mpl::for_each</name>
    <filename>structStokhos_1_1mpl_1_1for__each.html</filename>
    <templarg>Seq</templarg>
    <templarg>Iter1</templarg>
    <templarg>Iter2</templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::mpl::for_each&lt; Seq, Iter1, Iter1 &gt;</name>
    <filename>structStokhos_1_1mpl_1_1for__each_3_01Seq_00_01Iter1_00_01Iter1_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ForUQTKOrthogPolyExpansion</name>
    <filename>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>OrthogPolyExpansionBase&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>ForUQTKOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a17add7500a0be1dc11e4d3838a909257</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, EXPANSION_METHOD method=TAYLOR, value_type rtol=1.0e-12)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ForUQTKOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a82a37eec2c2c5482489bd020bea0412d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>aaa4f64e6fd9dd3e0acce738d1320ee6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a469f7b4bcb1a8add9aba7ee7d7e5520a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a215dc5dc971ad7d53ea069d81f1066f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>rtol</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a30e73d8f1f3d0f20b3de9ce713da3004</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>EXPANSION_METHOD</type>
      <name>method</name>
      <anchorfile>classStokhos_1_1ForUQTKOrthogPolyExpansion.html</anchorfile>
      <anchor>a3612bd0ab555d9ca4a418c85cf778077</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::FullyAssembledOperator</name>
    <filename>classStokhos_1_1FullyAssembledOperator.html</filename>
    <base>Stokhos::SGOperator</base>
    <member kind="function">
      <type></type>
      <name>FullyAssembledOperator</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>afb104526f89f5d2c3a6f625f771f0294</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_CrsGraph &gt; &amp;base_graph, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FullyAssembledOperator</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>aa1300b9a6af83591340bebb25fd52e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>aef326fa85de46e671ed96ed2df817bdc</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a8e83e53d953ad6d5837b9cfa5d5843f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>aa52f8cc8e43f11379200b1a9b54637b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a3a6907863f5211009490b7d9f3fac5e9</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a1104978860503ee2e8630cca6d7b2f0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a5f0474f5b7ddacc7e899838e9fa0b0ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>ac733990b8a1d4cf3a7abddc72db77d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a1a2ecdd031120a873bf2573760d43574</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_sg_map</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a04026c61c29a9c85c7d35c49ce7e76d4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_sg_map</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a828e13ae6b98be4b2c71f52d46bcd8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a832427d09b2ca166887e2e2872e7c2b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>ade788b8550be6f3bffd1f2e78300b653</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a112182bd3c3a6780edc60cc459e54c40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>include_mean</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a84826f362b6aa565bfbee587bec82204</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>acf797490e21d044f61013a21a0de4606</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>aef326fa85de46e671ed96ed2df817bdc</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a8e83e53d953ad6d5837b9cfa5d5843f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>aa52f8cc8e43f11379200b1a9b54637b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1FullyAssembledOperator.html</anchorfile>
      <anchor>a3a6907863f5211009490b7d9f3fac5e9</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::FullyAssembledPreconditioner</name>
    <filename>classStokhos_1_1FullyAssembledPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>FullyAssembledPreconditioner</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>aa284f97cc6c214b67d3e571b3b36627c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FullyAssembledPreconditioner</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a88a40d5357186e4075cac9b21661a7be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a5f0b5660cfdd1f121c1948e420e74057</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a07c4a06fa46ca39a7807875b76b4cc60</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>ad53a92b5416300773a74926a70d06c39</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>aa9bad61614c5c0b38be5873fa69d9d6e</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a6a7b945e85da71333b0bb148ca096038</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a6cfc7cc2ac3037e18702e157e5e55ad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>af301a94276da211f591880b0c9966a43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>aa0f8a1387016e00731e0c1493ec3f819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>ad1fc0f7fec1b7f3eede675155dce62cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a26105deb25ae74f7d35b05afb8a1b65d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a4b1ad23acec12f5f7839af68983eee52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>ac55f9e6bce391f34f566f72c03580486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a733956f7a2a299a9061bce08e75d99fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>prec</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a429739a83fe41805c529001cbafb8683</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a5f0b5660cfdd1f121c1948e420e74057</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a07c4a06fa46ca39a7807875b76b4cc60</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>ad53a92b5416300773a74926a70d06c39</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>aa9bad61614c5c0b38be5873fa69d9d6e</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a6a7b945e85da71333b0bb148ca096038</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a6cfc7cc2ac3037e18702e157e5e55ad7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>af301a94276da211f591880b0c9966a43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>aa0f8a1387016e00731e0c1493ec3f819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>ad1fc0f7fec1b7f3eede675155dce62cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a26105deb25ae74f7d35b05afb8a1b65d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1FullyAssembledPreconditioner.html</anchorfile>
      <anchor>a4b1ad23acec12f5f7839af68983eee52</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GaussPattersonExponentialGrowthRule</name>
    <filename>classStokhos_1_1GaussPattersonExponentialGrowthRule.html</filename>
    <templarg></templarg>
    <base>Stokhos::GrowthRule</base>
    <member kind="function">
      <type></type>
      <name>GaussPattersonExponentialGrowthRule</name>
      <anchorfile>classStokhos_1_1GaussPattersonExponentialGrowthRule.html</anchorfile>
      <anchor>a3259983f91bc6d7258044f7370dd3331</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GaussPattersonExponentialGrowthRule</name>
      <anchorfile>classStokhos_1_1GaussPattersonExponentialGrowthRule.html</anchorfile>
      <anchor>af043be74f814dabbc99d9cdf620bcdd3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1GaussPattersonExponentialGrowthRule.html</anchorfile>
      <anchor>ad2928b63dbba8fd8936197ed06263e24</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GaussPattersonLegendreBasis</name>
    <filename>classStokhos_1_1GaussPattersonLegendreBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::LegendreBasis</base>
    <member kind="function">
      <type></type>
      <name>GaussPattersonLegendreBasis</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a470af4ba1f4a1f16fe0f80df6b1e7bfa</anchor>
      <arglist>(ordinal_type p, bool normalize=false, bool isotropic=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GaussPattersonLegendreBasis</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a1883f7d360b7948cf3435f865bf2f4aa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a7fd89f9d53f393268e6295aec2db3865</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>ab1d1a09c02e9175530bbe498f65b4f14</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a8b8d28223505c78ac3f3dbd7cba4ed17</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a576386828d377c43353e39584e49b893</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>afa0353f3e93ed91084c640523e152b7b</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>GaussPattersonLegendreBasis</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a7f2f2d49048acf42ed07832e2c87d4c6</anchor>
      <arglist>(ordinal_type p, const GaussPattersonLegendreBasis &amp;basis)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>isotropic</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a4317aea9c88914557760a8e3fffe69a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a7fd89f9d53f393268e6295aec2db3865</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>ab1d1a09c02e9175530bbe498f65b4f14</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a8b8d28223505c78ac3f3dbd7cba4ed17</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>a576386828d377c43353e39584e49b893</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1GaussPattersonLegendreBasis.html</anchorfile>
      <anchor>afa0353f3e93ed91084c640523e152b7b</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::Fad::GeneralFad&lt; Sacado::MP::Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;, Storage &gt;</name>
    <filename>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>VecNum</templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::StandardStorage</base>
    <member kind="typedef">
      <type>RemoveConst&lt; T &gt;::type</type>
      <name>value_type</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>ad8729a55f6f6141c7f5c98be7ca74cb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType&lt; value_type &gt;::type</type>
      <name>scalar_type</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a044cfc355bbc9dee0d3a796af99faaf8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a265e3f6427f05cbc62437dd16c154ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a220a57a110368119fd4d7b476195e86a</anchor>
      <arglist>(const S &amp;x, SACADO_ENABLE_VALUE_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a14483c38737c002347364ccdd08221cf</anchor>
      <arglist>(const int sz, const T &amp;x, const DerivInit zero_out=InitDerivArray)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aebb07e8f7eb3928ca08f53b14863a1d4</anchor>
      <arglist>(const int sz, const int i, const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>ae7444e9e8800159f5e9b2a13f3b06cc1</anchor>
      <arglist>(const Storage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2f081fae25a636d89f930e51dc5eddba</anchor>
      <arglist>(const GeneralFad &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>adfa14336a0eccdfe33a7d492038996f3</anchor>
      <arglist>(const Expr&lt; S &gt; &amp;x, SACADO_ENABLE_EXPR_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a41d46fea913f3ce0dd0bf089b38fd1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>diff</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>af3f37491afe739afcefe95525cc26474</anchor>
      <arglist>(const int ith, const int n)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setUpdateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a44128dceb0bbb8e77bfabc003034675c</anchor>
      <arglist>(bool update_val)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>updateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aa9487b39d9a73ab5120b2c6e644c8bbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>SACADO_ENABLE_EXPR_FUNC</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aaff82d650e2c8d53c7294024e2a18d54</anchor>
      <arglist>(bool) isEqualTo(const Expr&lt; S &gt; &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a46dbc0e5823fd84be90b8a2d23d0238b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a456627cbca342354c82e31a83d107809</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>af58057f117cc1711f38e79d6e72c22f7</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a5515b8563147f3641b5bb1190c45e4a8</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>availableSize</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a8df596f58415019282a386eeab400249</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>hasFastAccess</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2df1a5d62db91feb85b0ee1e49647895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>isPassive</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aa770c2465c3fa166302c276ec9df5762</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setIsConstant</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2e00816c7c784b5548ab9453d5206b49</anchor>
      <arglist>(bool is_const)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T *</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a8219bc5e159ef39d36f1d324681693a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a6c6abb8bae4c7609f28b2694d081395a</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2080f5fc8738e0beb3c73a33f0e8ee0d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aebd27fb9316a9962491a7a4b53b366fe</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a1594b1b8c3b8592d2b5271d55006dff1</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a3778f2e88241c7d05d06c1b565eddcc9</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a1fcb7a841d86cb1a5791d3e0e5485395</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a265e3f6427f05cbc62437dd16c154ae7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a220a57a110368119fd4d7b476195e86a</anchor>
      <arglist>(const S &amp;x, SACADO_ENABLE_VALUE_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a14483c38737c002347364ccdd08221cf</anchor>
      <arglist>(const int sz, const T &amp;x, const DerivInit zero_out=InitDerivArray)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aebb07e8f7eb3928ca08f53b14863a1d4</anchor>
      <arglist>(const int sz, const int i, const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>ae7444e9e8800159f5e9b2a13f3b06cc1</anchor>
      <arglist>(const Storage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2f081fae25a636d89f930e51dc5eddba</anchor>
      <arglist>(const GeneralFad &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>adfa14336a0eccdfe33a7d492038996f3</anchor>
      <arglist>(const Expr&lt; S &gt; &amp;x, SACADO_ENABLE_EXPR_CTOR_DECL)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~GeneralFad</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a41d46fea913f3ce0dd0bf089b38fd1d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>diff</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>af3f37491afe739afcefe95525cc26474</anchor>
      <arglist>(const int ith, const int n)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setUpdateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a44128dceb0bbb8e77bfabc003034675c</anchor>
      <arglist>(bool update_val)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>updateValue</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aa9487b39d9a73ab5120b2c6e644c8bbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>SACADO_ENABLE_EXPR_FUNC</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aaff82d650e2c8d53c7294024e2a18d54</anchor>
      <arglist>(bool) isEqualTo(const Expr&lt; S &gt; &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a46dbc0e5823fd84be90b8a2d23d0238b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a456627cbca342354c82e31a83d107809</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>af58057f117cc1711f38e79d6e72c22f7</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>val</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a5515b8563147f3641b5bb1190c45e4a8</anchor>
      <arglist>(int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION int</type>
      <name>availableSize</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a8df596f58415019282a386eeab400249</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>hasFastAccess</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2df1a5d62db91feb85b0ee1e49647895</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>isPassive</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aa770c2465c3fa166302c276ec9df5762</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>setIsConstant</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2e00816c7c784b5548ab9453d5206b49</anchor>
      <arglist>(bool is_const)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T *</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a8219bc5e159ef39d36f1d324681693a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a6c6abb8bae4c7609f28b2694d081395a</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a2080f5fc8738e0beb3c73a33f0e8ee0d</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const T &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>aebd27fb9316a9962491a7a4b53b366fe</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type</type>
      <name>dx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a1594b1b8c3b8592d2b5271d55006dff1</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a3778f2e88241c7d05d06c1b565eddcc9</anchor>
      <arglist>(int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const val_type &amp;</type>
      <name>fastAccessDx</name>
      <anchorfile>classSacado_1_1Fad_1_1GeneralFad_3_01Sacado_1_1MP_1_1Vector_3_01Stokhos_1_1StaticFixedStorage_3_2fe0c325d884f583e325f443d4a10d2a.html</anchorfile>
      <anchor>a1fcb7a841d86cb1a5791d3e0e5485395</anchor>
      <arglist>(int i, int j) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GetMeanValsFunc</name>
    <filename>classStokhos_1_1GetMeanValsFunc.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::GetMeanValsFunc&lt; Kokkos::View&lt; Sacado::MP::Vector&lt; Storage &gt; *,                                                                                                                                                                                                                                                                                                   Layout, Memory, Device &gt; &gt;</name>
    <filename>classStokhos_1_1GetMeanValsFunc_3_01Kokkos_1_1View_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_0f12f88443a733204dabbcd530ab1a07a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::GetMeanValsFunc&lt; Kokkos::View&lt; Sacado::UQ::PCE&lt; Storage &gt; *,                                                                                                                                                                                                                                                                                                   Layout, Memory, Device &gt; &gt;</name>
    <filename>classStokhos_1_1GetMeanValsFunc_3_01Kokkos_1_1View_3_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_59d05dac9c526f42097840520dbb0dc5b.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize.html</filename>
    <templarg>Rank</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 0 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_010_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 1 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_011_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 2 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_012_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 3 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_013_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 4 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_014_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 5 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_015_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 6 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_016_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::GetSacadoSize&lt; 7 &gt;</name>
    <filename>structKokkos_1_1Impl_1_1GetSacadoSize_3_017_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::GivensRotator&lt; Sacado::MP::Vector&lt; Storage &gt;, false &gt;</name>
    <filename>classTeuchos_1_1details_1_1GivensRotator_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01false_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::GMRESDivisionExpansionStrategy</name>
    <filename>classStokhos_1_1GMRESDivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DivisionExpansionStrategy</base>
    <member kind="function">
      <type></type>
      <name>GMRESDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>a9459518aa3554dba129c82d45a7228d7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis_, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk_, const ordinal_type prec_iter_, const value_type tol_, const ordinal_type PrecNum_, const ordinal_type max_it_, const ordinal_type linear_, const ordinal_type diag_, const ordinal_type equil_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GMRESDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>acd4e00964882560ad1d6da2194dd4155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>a22466896728a103aeea5c8347dae6de7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>ab44839816fe05aa0790b2702e332af07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>a2e876321d4ad68854e684e0a222e743b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>aa6b69c995cd3be27f2d4d8aa07919327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>prec_iter</name>
      <anchorfile>classStokhos_1_1GMRESDivisionExpansionStrategy.html</anchorfile>
      <anchor>a18ae5163ecaaad2060ab4e4d2fee4d0e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GramSchmidtBasis</name>
    <filename>classStokhos_1_1GramSchmidtBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::OrthogPolyBasis</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::GrowthRule</name>
    <filename>classStokhos_1_1GrowthRule.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GrowthRule</name>
      <anchorfile>classStokhos_1_1GrowthRule.html</anchorfile>
      <anchor>a0c9e70a348235707325523fb7fd9d983</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GrowthRule</name>
      <anchorfile>classStokhos_1_1GrowthRule.html</anchorfile>
      <anchor>a68d67db98c70be9468b526a56a706665</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1GrowthRule.html</anchorfile>
      <anchor>ad86486d2ac2f6f3884f8b24358c6ae89</anchor>
      <arglist>(const value_type &amp;x) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GSPreconditioner</name>
    <filename>classStokhos_1_1GSPreconditioner.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Operator</base>
    <member kind="function">
      <type></type>
      <name>GSPreconditioner</name>
      <anchorfile>classStokhos_1_1GSPreconditioner.html</anchorfile>
      <anchor>a777644e14be517f33a47a60b67bb77c0</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A_, const ordinal_type sym_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GSPreconditioner</name>
      <anchorfile>classStokhos_1_1GSPreconditioner.html</anchorfile>
      <anchor>a4761a1418b08f44cdefcf75f645285c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1GSPreconditioner.html</anchorfile>
      <anchor>a02d27120ba1c2615a5af3832ab765a0d</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type m) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::GSReducedPCEBasisBase</name>
    <filename>classStokhos_1_1GSReducedPCEBasisBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ReducedPCEBasis</base>
    <member kind="function">
      <type></type>
      <name>GSReducedPCEBasisBase</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a353f6389287b6d5e1af8c12843cb3eda</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~GSReducedPCEBasisBase</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>ae034b1cb3e204aabf53b3bad37816564</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a1c0a4838a2ec9cc6d440b8f5b266bf3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a6ade39040c696bf94e7d1e7c2effbc8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>acb25f30e66b764fe067a8509398d4cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a7c1cec59a2d983a22793dff054d01f46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a028826561b00b69b8136afb06543b9eb</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aecd6800c1c4518f9e82be797f9c6a8d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aaa69d74ef4a2009e84c17e1c8673def5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aecfa08ac8586ce37003bd415d9943e23</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a30a14f2e2ec4e4f3e2cc53b092a67f7b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a890b7429f07111aa80b49993e2cacd2c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a3fe6087118491d769dd35d09afb86d3a</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a4ba7fd7a358b3fbcdc3523659f064227</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a081286115ffc01c64ae234293879b561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>buildReducedBasis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a581876dd07fc04f6a33ad686a800a951</anchor>
      <arglist>(ordinal_type max_p, value_type threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;F, const Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms_, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Qp_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Q_)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>ae4cf802e0a7365a97b9d46cffe1605ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>ae7e2e2b4bb0ff571c7ed7a1e099ee1b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce_basis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>ad36db109ef572dab9cb92e6769a31395</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a5a9663dcb05867a530e1356f4ec9ac13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a423f5bc22f2c409f7a5e59d18a60c439</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aca85b2a6bde716c70594fee497fc09d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>accbc193b838e6da4b4969cc9ea1744c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt;</type>
      <name>terms</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aaec71e63844bfa128cabac87df15f1ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>num_terms</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>acb13fca60c84f7e3c859b72e601f3340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>ad0951efee77bece17e8181b312dc144e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Q</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>abbbef89f2147aa937d67d7521cc6bce6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Qp</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a83db29b38ce20dd5f6c5878224078f08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>reduced_quad</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a5e92b55c2fbf6ed58d3f70542281585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a1784f99fb93777428cb6af8d2c265dbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>rank_threshold</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a2306815adb3443850e96318e8a0b2a07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>orthogonalization_method</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a0e6346b7d7438a6ab09cfda9c4718512</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a1c0a4838a2ec9cc6d440b8f5b266bf3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a6ade39040c696bf94e7d1e7c2effbc8e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>acb25f30e66b764fe067a8509398d4cab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a7c1cec59a2d983a22793dff054d01f46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a028826561b00b69b8136afb06543b9eb</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aecd6800c1c4518f9e82be797f9c6a8d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aaa69d74ef4a2009e84c17e1c8673def5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>aecfa08ac8586ce37003bd415d9943e23</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a30a14f2e2ec4e4f3e2cc53b092a67f7b</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a890b7429f07111aa80b49993e2cacd2c</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a3fe6087118491d769dd35d09afb86d3a</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a4ba7fd7a358b3fbcdc3523659f064227</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1GSReducedPCEBasisBase.html</anchorfile>
      <anchor>a081286115ffc01c64ae234293879b561</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::HermiteBasis</name>
    <filename>classStokhos_1_1HermiteBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>HermiteBasis</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>aa5a39b947a0c2796ac324160e1529d57</anchor>
      <arglist>(ordinal_type p, bool normalize=false, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HermiteBasis</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>adffe1fda4ee89d526836a8c40c3f3ac3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>ac51d20e4062d7f1969e6120b76bd79e4</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>HermiteBasis</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>a87c6f7a5c9142e42a8ed222fce918e35</anchor>
      <arglist>(ordinal_type p, const HermiteBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>acc3f46cec6918645524a4670381c6c57</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>ac51d20e4062d7f1969e6120b76bd79e4</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1HermiteBasis.html</anchorfile>
      <anchor>acc3f46cec6918645524a4670381c6c57</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::HouseTriDiagPCEBasis</name>
    <filename>classStokhos_1_1HouseTriDiagPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>HouseTriDiagPCEBasis</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>abcd5e6e840db483134aa6ba4c0599444</anchor>
      <arglist>(ordinal_type p, const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &amp;pce, const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk, bool limit_integration_order=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~HouseTriDiagPCEBasis</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a2fabe5e1b1526dd2ceb4d6218e94417b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getNewCoeffs</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>aae24dc006e12d84e75f222c451b19c08</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformCoeffsFromHouse</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a016a365856697bb8eda47ce65b431157</anchor>
      <arglist>(const value_type *in, value_type *out) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>acb7286aef9297b13c8708de4d03e808b</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>affd8f50b90331213a11f95bae94909d2</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a6a9c6244f0a7b6532f9ee7eeed837c70</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::LAPACK&lt; ordinal_type, value_type &gt;</type>
      <name>lapack</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a7d9c6ec7074d3530ec45192e8af46f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; ordinal_type, value_type &gt;</type>
      <name>blas</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a79b6850285f97d34e3982d0ae144b2c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>limit_integration_order</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a30e7c46f33a99d55566133792b3409f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a4a80b93588262138c0c9fe6322055409</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>pce_norms</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a4f81388531d11b51180d57403e6cca07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>a</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a292c07c69c318e335f1548cb4a93dd49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>b</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a22a0f36fb81ed43bbda5567c5aea0d7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>basis_vecs</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>afd92d2b9d775dc5391d7b60f918608f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>new_pce</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a390d42f91a64ed158b71efe5cf6ef283</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>acb7286aef9297b13c8708de4d03e808b</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>affd8f50b90331213a11f95bae94909d2</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1HouseTriDiagPCEBasis.html</anchorfile>
      <anchor>a6a9c6244f0a7b6532f9ee7eeed837c70</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::IdentityGrowthRule</name>
    <filename>classStokhos_1_1IdentityGrowthRule.html</filename>
    <templarg></templarg>
    <base>Stokhos::GrowthRule</base>
    <member kind="function">
      <type></type>
      <name>IdentityGrowthRule</name>
      <anchorfile>classStokhos_1_1IdentityGrowthRule.html</anchorfile>
      <anchor>acd0033baa366d37242a1ee9d71bd862e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IdentityGrowthRule</name>
      <anchorfile>classStokhos_1_1IdentityGrowthRule.html</anchorfile>
      <anchor>a7542194bc8b261793a311433621412ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1IdentityGrowthRule.html</anchorfile>
      <anchor>a41d399e1dce892462c5622171709b3a0</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::IfpackPreconditionerFactory</name>
    <filename>classStokhos_1_1IfpackPreconditionerFactory.html</filename>
    <base>Stokhos::AbstractPreconditionerFactory</base>
    <member kind="function">
      <type></type>
      <name>IfpackPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1IfpackPreconditionerFactory.html</anchorfile>
      <anchor>a20c7dc5fed65f7076d96437a61c03155</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~IfpackPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1IfpackPreconditionerFactory.html</anchorfile>
      <anchor>af6855f92264030e328d43e784b7aaf2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>compute</name>
      <anchorfile>classStokhos_1_1IfpackPreconditionerFactory.html</anchorfile>
      <anchor>a0501ed8310ddabe9e613c243a85f48a7</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;op, bool compute_prec=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recompute</name>
      <anchorfile>classStokhos_1_1IfpackPreconditionerFactory.html</anchorfile>
      <anchor>a93091f80f8a42cd7bfe9c6e3ec0c2432</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;op, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;prec)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>precParams</name>
      <anchorfile>classStokhos_1_1IfpackPreconditionerFactory.html</anchorfile>
      <anchor>a3871c0351a9458b6824cc7da70893814</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kokkos::Details::InnerProductSpaceTraits&lt; const Sacado::UQ::PCE&lt; S &gt; &gt;</name>
    <filename>classKokkos_1_1Details_1_1InnerProductSpaceTraits_3_01const_01Sacado_1_1UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Kokkos::Details::InnerProductSpaceTraits&lt; Sacado::UQ::PCE&lt; S &gt; &gt;</name>
    <filename>classKokkos_1_1Details_1_1InnerProductSpaceTraits_3_01Sacado_1_1UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::IntegralRank</name>
    <filename>classStokhos_1_1IntegralRank.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::InterlacedOperator</name>
    <filename>classStokhos_1_1InterlacedOperator.html</filename>
    <base>Stokhos::SGOperator</base>
    <member kind="function">
      <type></type>
      <name>InterlacedOperator</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>aa35dcdedab5d5f1f579dbf8d5288b5ad</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_CrsGraph &gt; &amp;base_graph, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InterlacedOperator</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>adadbf01e3d82ce300996a3b7b5dccec2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SumIntoGlobalBlock_Deterministic</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a8d6118b0738a3537d53bb44c0ab3757f</anchor>
      <arglist>(double alpha, const Epetra_RowMatrix &amp;determBlock, int Row, int Col)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a958cfd67c679f509f610a0c353f4cd9c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a98ef708dca67ae808d4c1780b927375f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a0195e35ac7042c4f4c07eb3b6674c69b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a295537bc073a05f4966b17902fb7fffe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a02b812342c717fadcc5d6d7e0009aec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a7f8b84e2b3eaf3202d6bf8ddc3d36abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a8652cbf3a4dd91e0f57138fdc91f149c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a295ea8c88a2a668f86b648cd93b9bc03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a5a814cceee3bfee35faa3a88ab1e29c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a4a3d24fbb0433374ad32c4860b9c70f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>include_mean</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>af754bf5dc19ed87f15bf33f12e5047a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>add025beab0a4fb3ca345f1b7f0307cd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a958cfd67c679f509f610a0c353f4cd9c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a98ef708dca67ae808d4c1780b927375f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1InterlacedOperator.html</anchorfile>
      <anchor>a0195e35ac7042c4f4c07eb3b6674c69b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::IntrinsicScalarType</name>
    <filename>structKokkos_1_1IntrinsicScalarType.html</filename>
    <templarg>view_type</templarg>
    <templarg>Enabled</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::InversePreconditioner</name>
    <filename>classStokhos_1_1InversePreconditioner.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Operator&lt; ordinal_type, double &gt;</base>
    <member kind="function">
      <type></type>
      <name>InversePreconditioner</name>
      <anchorfile>classStokhos_1_1InversePreconditioner.html</anchorfile>
      <anchor>a130d31bae72c7018306b9d0c45ede65d</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, double &gt; &amp;A_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~InversePreconditioner</name>
      <anchorfile>classStokhos_1_1InversePreconditioner.html</anchorfile>
      <anchor>ae82e18a9b1e432798862f42e3eea7e51</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::is_view_mp_vector</name>
    <filename>structKokkos_1_1is__view__mp__vector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::is_view_mp_vector&lt; View&lt; T, L, D, M, Impl::ViewMPVectorContiguous &gt; &gt;</name>
    <filename>structKokkos_1_1is__view__mp__vector_3_01View_3_01T_00_01L_00_01D_00_01M_00_01Impl_1_1ViewMPVectorContiguous_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::is_view_uq_pce</name>
    <filename>structKokkos_1_1is__view__uq__pce.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::is_view_uq_pce&lt; View&lt; T, L, D, M, Impl::ViewPCEContiguous &gt; &gt;</name>
    <filename>structKokkos_1_1is__view__uq__pce_3_01View_3_01T_00_01L_00_01D_00_01M_00_01Impl_1_1ViewPCEContiguous_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::is_ViewStorage</name>
    <filename>structStokhos_1_1is__ViewStorage.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::is_ViewStorage&lt; ViewStorage&lt; ordinal_t, value_t, static_length, static_stride, device_t &gt; &gt;</name>
    <filename>structStokhos_1_1is__ViewStorage_3_01ViewStorage_3_01ordinal__t_00_01value__t_00_01static__lengtfd0c8494145fb092563a4c52c07b3b05.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>static_length</templarg>
    <templarg>static_stride</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsADType&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsADType_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsEqual&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsEqual_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsEqual&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsEqual_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsEqual&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsEqual_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsEqual&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsEqual_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::AbsOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1AbsOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ACoshOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ACoshOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ACosOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ACosOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::AdditionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1AdditionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ASinhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ASinhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ASinOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ASinOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::Atan2Op&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1Atan2Op_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ATanhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ATanhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ATanOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ATanOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::CbrtOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1CbrtOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::CoshOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1CoshOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::CosOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1CosOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::DivisionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1DivisionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::ExpOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1ExpOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::FAbsOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1FAbsOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::Log10Op&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1Log10Op_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::LogOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1LogOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::MaxOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1MaxOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::MinOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1MinOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::MultiplicationOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1MultiplicationOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::PowerOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1PowerOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::SinhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1SinhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::SinOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1SinOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::SqrtOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1SqrtOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::SubtractionOp&lt; T1, T2 &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1SubtractionOp_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::TanhOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1TanhOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::TanOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1TanOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::UnaryMinusOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1UnaryMinusOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsExpr&lt; MP::UnaryPlusOp&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsExpr_3_01MP_1_1UnaryPlusOp_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType</name>
    <filename>structStokhos_1_1IsScalarType.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType2</name>
    <filename>structStokhos_1_1IsScalarType2.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType2&lt;  double &gt;</name>
    <filename>structStokhos_1_1IsScalarType2_3_01_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType2&lt;  float &gt;</name>
    <filename>structStokhos_1_1IsScalarType2_3_01_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType2&lt;  int &gt;</name>
    <filename>structStokhos_1_1IsScalarType2_3_01_01int_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType2&lt;  long &gt;</name>
    <filename>structStokhos_1_1IsScalarType2_3_01_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType&lt;  double &gt;</name>
    <filename>structStokhos_1_1IsScalarType_3_01_01double_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType&lt;  float &gt;</name>
    <filename>structStokhos_1_1IsScalarType_3_01_01float_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType&lt;  int &gt;</name>
    <filename>structStokhos_1_1IsScalarType_3_01_01int_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::IsScalarType&lt;  long &gt;</name>
    <filename>structStokhos_1_1IsScalarType_3_01_01long_01_4.html</filename>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsScalarType&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsScalarType_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsStaticallySized&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsStaticallySized_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsStaticallySized&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsStaticallySized_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsStaticallySized&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1IsStaticallySized_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::IsStaticallySized&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1IsStaticallySized_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::TotalOrderIndexSet::Iterator</name>
    <filename>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a41b7edac0ff6372fbe9082181e55f172</anchor>
      <arglist>(ordinal_type max_order_, const multiindex_type &amp;index_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a177f8935f2af77d3ad2eae4befef03aa</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ad8e1083f4dfe9573d8bd73e6659f6a44</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator*</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1f6fd1091841b5f725a91008a147f9f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a8f57b6138d48848f8f31b330e471e603</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a3ecb7349a335178d8ee626d2840dcb3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a904afdea26e5e213eceba038801bd046</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>max_order</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ad2d09c7e535e2ee6247c4e8f8a9277cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a814a7c41bf291066196540454687a3e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ab95e446ea748306bfa24f7c66d61dbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>orders</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a96e33affca2862f5037ab7c171ee943c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductIndexSet::Iterator</name>
    <filename>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a9cb9df6407fa3a6ea8e8f4416eada250</anchor>
      <arglist>(const multiindex_type &amp;upper_, const multiindex_type &amp;index_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ac687006635dc854afaa9c3cc8beb9277</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1a50eccf602c49f3d38b3569a32b675c</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator*</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1b05d28060ea3cc35c5164384748c674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>afcae8f96032698d0f2e0f50e366b401d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a9d4a3a1dd537aaeb771593d31f749dfc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a08674d890831f276997d41dfe4d64ebc</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>upper</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a9cc27c70491b63c09324aca73c551d4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a0e22a3862561357c78703b32489fd486</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a7ec27813e267d849a150f671b965a65e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::AnisotropicTotalOrderIndexSet::Iterator</name>
    <filename>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</filename>
    <member kind="function">
      <type></type>
      <name>Iterator</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a4852d82e39ba3f8480944255bcb6512f</anchor>
      <arglist>(ordinal_type max_order_, const multiindex_type &amp;component_max_order_, const multiindex_type &amp;index_)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ab30fc3a7c19cd3be17f5ddfa7b090ace</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1fa02a83eb7eb1cc25b858f92acf506e</anchor>
      <arglist>(const Iterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator*</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a492ccc355ec5e378df21027e4e4205b9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1df5f3097a5d5142782e50e452019255</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a1389450ccac8c7cbc3b3da30eaf52921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a61766cb69d180764b4e589d5a57e6a96</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>max_order</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a2335dc783ec49346416e80330ffea0e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>component_max_order</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a51fd509f3f9e0765d6eb19dccfb8017d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a21c0ee7413bbf92d7ec956aea7b1822c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>a2b1397e4961a23cb092ed19c8cad6f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>orders</name>
      <anchorfile>classStokhos_1_1AnisotropicTotalOrderIndexSet_1_1Iterator.html</anchorfile>
      <anchor>ade437d639a88a8ec59ce81578d8c7326</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::JacobiBasis</name>
    <filename>classStokhos_1_1JacobiBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>JacobiBasis</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>aa682d19102b12532af9af1d846a3c9e3</anchor>
      <arglist>(ordinal_type p, value_type alphaIndex, value_type betaIndex, bool normalize=false, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~JacobiBasis</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a84f72d044678f6b13fc6090634206d78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a71fda89e97093b331c244dfbaec3d424</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>JacobiBasis</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a3e34e9e347a53db20e00c3813b6fa752</anchor>
      <arglist>(ordinal_type p, const JacobiBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a31b8ec393f81da383450ad63cc7b42a6</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a71fda89e97093b331c244dfbaec3d424</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1JacobiBasis.html</anchorfile>
      <anchor>a31b8ec393f81da383450ad63cc7b42a6</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::JacobiPreconditioner</name>
    <filename>classStokhos_1_1JacobiPreconditioner.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Operator</base>
    <member kind="function">
      <type></type>
      <name>JacobiPreconditioner</name>
      <anchorfile>classStokhos_1_1JacobiPreconditioner.html</anchorfile>
      <anchor>ada11f034de319b5cadb487f56e41bbcd</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~JacobiPreconditioner</name>
      <anchorfile>classStokhos_1_1JacobiPreconditioner.html</anchorfile>
      <anchor>a1faee7b0dd63171c928cc4727a61e301</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1JacobiPreconditioner.html</anchorfile>
      <anchor>aadba9c0785b62f8571c4b26b1bd5a7c9</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type m) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;::Kernel</name>
    <filename>structStokhos_1_1MeanMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixSt92b85fac2b31259f3f57e5c0e4c48df4.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::KLMatrixFreeOperator</name>
    <filename>classStokhos_1_1KLMatrixFreeOperator.html</filename>
    <base>Stokhos::SGOperator</base>
    <member kind="function">
      <type></type>
      <name>KLMatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a33243a74cae12af246f4464c79e1d58c</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KLMatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a7bded65f1c8e728880b35532d6b189cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a50cfaf99dc817967750b700f78ba94eb</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a5c640e7fbda3ffc0e011223436930931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>aa0b6d5fc9b19d44d720bd1dc501c2114</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a868dc301a36ac6e052e5d3c40e62ce44</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>abf64b88a03ba5dadcb8d9f94319cccf8</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a94a9c3c21dda9b910bf5b9ad47da877b</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a408ddd85ae56b0b4b6735bf7e8a16f47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ad0e9ab96b9a2868f150d9b22dda37a30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a83d89283426773a2b6b425b4837f1979</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a56eaf8fceb4762bdf09383ee4fb27e71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>abf232123f2c000f1f0b6c8e0e71ae3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a7e0f881053d9f35f47b772af46f409f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a77748a7d37ead8d97ddf8911acf29c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a0890f4099cc5d73208e6286057b8c0f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>af7c854a2cc89d31069dfc6ec622bcdb2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a5334abed92efd0b9389682a35e0a21a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a48522cbca6341fa399f1d1c09ca54cf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a6f34f7f727a42043b3cc12dc74f381ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a56f4468a3150a84f4dd94c25a2560812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a6c194b47e00c80ae2fa920d33c44d8b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_sg_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a596ed5d39fc9ef20aa9386323c9f585b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_sg_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ab6a82ab75d00147830dc8e16bc8dadde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_stoch_parallel</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>aa4890502c3a51f8fcc8041fd00162a30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>global_col_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a59cc7af97a10ad5b20d8f714f166825b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>global_col_map_trans</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ae4a364616c342447e8ca4c429134d6ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_col_map</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a33be532922ea2f7a8a69da8ffacf5b75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>col_importer</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a3a1d897b33b3963884c0db086574fcb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>col_importer_trans</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ab622a2e697e90fa75d310cbbafa40db1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a790c8b3723519cee92e18615b58b97ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a4ff75f6e4f787b5e65de4042235d0675</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>aeb0dffe94121ac1caa8c7eeb6e062544</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>include_mean</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a576104045492435d790865d10bd78b32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a5d919eac3308ace3e9b91ce55d8e907e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>expansion_size</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>acd9bd758b31f776fb0dfb201c030ef62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_blocks</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a6bd7d24c595549d3c2ace4d6318e91b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>max_num_mat_vec</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a6efed27ee62fe29c81677b1d89ce6377</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>input_col</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a785bf4f749e9e2d82b64ddcf3ad1f063</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>input_col_trans</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>af3cff3e151f43015e6d9675f23cf5918</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_MultiVector &gt; &gt;</type>
      <name>input_block</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a5e5c16e84f8b633dbb2f41a0bf3e466c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt;</type>
      <name>result_block</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ac4facfed8d62ea141ceb89c813242ad7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a848372c17713e8adf2ab645f40952c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp_trans</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ad48d7efc888988f52f020c969b450b51</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Cijk_type::k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a068c90283ce43032e9eec79b206a1b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Cijk_type::k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a90fb57e6dc1b9889092f4a2a5f436ad9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a50cfaf99dc817967750b700f78ba94eb</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a5c640e7fbda3ffc0e011223436930931</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>aa0b6d5fc9b19d44d720bd1dc501c2114</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a868dc301a36ac6e052e5d3c40e62ce44</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>abf64b88a03ba5dadcb8d9f94319cccf8</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a94a9c3c21dda9b910bf5b9ad47da877b</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a408ddd85ae56b0b4b6735bf7e8a16f47</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>ad0e9ab96b9a2868f150d9b22dda37a30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a83d89283426773a2b6b425b4837f1979</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a56eaf8fceb4762bdf09383ee4fb27e71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>abf232123f2c000f1f0b6c8e0e71ae3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a7e0f881053d9f35f47b772af46f409f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KLMatrixFreeOperator.html</anchorfile>
      <anchor>a77748a7d37ead8d97ddf8911acf29c11</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::KLReducedMatrixFreeOperator</name>
    <filename>classStokhos_1_1KLReducedMatrixFreeOperator.html</filename>
    <base>Stokhos::SGOperator</base>
    <member kind="function">
      <type></type>
      <name>KLReducedMatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ac26ec5d6a514e7679e252a903d989f54</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KLReducedMatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a3971cc2ecef2adf83ce7d5d53b7f9e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a249a9adb67d6595650d46abb0a7e430b</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a9811d9b4c3b423e3c6ace40b5d264567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a6843fbce1c8aefecde1b3510499b0bfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>af8abacd89366ac01204da54e174d56f9</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a4034b885fc9109b561f6a00aadf78c3f</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a98a45d9f6470ce0a38c2b08147e414db</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a3f79f77665ccc1c00103cf22c4355972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a8b36f74231d309241268c5084dfac6e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a2379efa037f3ad90053ec58d042138fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ac561e684c335f138162d1cf7806d4e6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a629b2df31493960ce5555656ac9e89d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>aff1c965b0fc9f0d839ae0a92bf3b02f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a6eca67ffcf6f15ffaf0e2f26ca6eac26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a67e2a8b7fe08bb5137867e0578df6b34</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a731e521ec2af53ddc91b16a398968f35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a7485daee20c6fa1fe3631e9b0b33e7d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a89dc306883319733a4895053f7aa9749</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a145f7830fe83406e797ab2b9114043fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a8efbcdf58900e5705ed859704b78b1e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ae2824d0d080b8bf608fe5250427a1223</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a812660067404732ee2febe5bf28fb1aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_sg_map</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>afc3f6b8c2b9de3da3ac3118b9a3b1c76</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_sg_map</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>adb9cc9c8a265d19a9f72a9dc681af597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a642c38b840d1c1aa169f2869642a0396</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a73a1713a17169f8a013f1cd53b0c4953</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a404fd1ae2561e88f8b57001890587bf3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ace353391bf424abcd63ff9ae5e990be2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>expansion_size</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a7890d92ad3a885ad48dda6c08b776050</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_blocks</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>aa1caa866fa2281fcce6b7b688bbb6279</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_KL</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a3c16aa01f91fde85d1a2dfe28af13714</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_KL_computed</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ad83a37cacc6f342959c49176a902318a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>aedf6bdc49753149c20e12a68a554a4cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>block_vec_map</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a143fe947ba93f02094eb903a547b2ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>block_vec_poly</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a65649ebe31b6dbd144fd01848bae8a61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; double &gt; &gt;</type>
      <name>dot_products</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a852c8b1b2fdc1a618273ee328fa7165a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>sparse_kl_coeffs</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a16c51e0f977f16855b848241f586eda2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_CrsMatrix &gt; &gt;</type>
      <name>kl_blocks</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>af68568c1c036a301dbedb9e019b42658</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>kl_ops</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ade922c31854585443654e987d4cc6d61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::MatrixFreeOperator &gt;</type>
      <name>kl_mat_free_op</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ab4ae5dc9002284c2583c091d9af6af9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>drop_tolerance</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a0b4343b306772be0ad9e959a23c39dde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>do_error_tests</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a9105c1a695ace5956c083bab086936ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a249a9adb67d6595650d46abb0a7e430b</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a9811d9b4c3b423e3c6ace40b5d264567</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a6843fbce1c8aefecde1b3510499b0bfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>af8abacd89366ac01204da54e174d56f9</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a4034b885fc9109b561f6a00aadf78c3f</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a98a45d9f6470ce0a38c2b08147e414db</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a3f79f77665ccc1c00103cf22c4355972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a8b36f74231d309241268c5084dfac6e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a2379efa037f3ad90053ec58d042138fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>ac561e684c335f138162d1cf7806d4e6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a629b2df31493960ce5555656ac9e89d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>aff1c965b0fc9f0d839ae0a92bf3b02f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KLReducedMatrixFreeOperator.html</anchorfile>
      <anchor>a6eca67ffcf6f15ffaf0e2f26ca6eac26</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::KroneckerProductPreconditioner</name>
    <filename>classStokhos_1_1KroneckerProductPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>KroneckerProductPreconditioner</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>abef4a26229e775cab052e9cdf36ad694</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;mean_prec_factory, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;G_prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~KroneckerProductPreconditioner</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a64e5b34bd4672ab1c754cba32d5a35c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a53d1ab10250de3b353a241c2bbac866c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>acdb3ebae2733b56297c409c727e53da8</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>adfb0ea7cd3fd3e6d6cb5abf419fa4f91</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a125d1d927e32d02589f7bba2aaecacd6</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>afa6ba1ed9c9a782c482f685e431cf8f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>af1ec0c411d4435a1475bcc8ae24754d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a658b5c2c6cbe1fe799e3a0b5f5c2a4c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a2c6aedbf39d93e4bf11b248285c5d05e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6dfa170116efca1421d69522502348f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6f83ec0826b33f3b8b37df0d8c757712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a1d6d00a1e4259b83673982d012fa4c8d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>aae72ae1f89c813e0425bfa6cc2e43a36</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>double</type>
      <name>MatrixTrace</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a39ad0818da3fdea13e93689510312126</anchor>
      <arglist>(const Epetra_CrsMatrix &amp;A, const Epetra_CrsMatrix &amp;B) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a0e514027e8c8a8411fea82899e02fbbb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a213f75e0b2e335dc21d5a4b7f975690b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>ac419ea9bdb5671528fbb5e9cb7081bf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a7c163a14d643772286b6c65c06d55b44</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6248d9d79127a841ae01235c60ac0c80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_map</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>ade8e8472a2e7909ce7baca9e73068ef6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>mean_prec_factory</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a7bfb487c4dbc22b63cd0887c243c360c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>G_prec_factory</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>ac7335d5e20519554cb4ae3b7e36c37e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a66559b25b41941e25cf701bb5cb7dc75</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a0e17bfc240cb548bd4e8230399628b87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>G_prec</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a848e1206bdfc4e3f47bfd25d61bbd5e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a3041f5e866aff4d13f8c500557cedfbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>sg_op</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>ab5935b49707caf048d12527800e1df82</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>sg_poly</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>accdd5540b573e93d5a656991fca66199</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6ad63f3a862184d791e3f1a4f40ea048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>G</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>aa6c0ec18ffb97c3d2c2e1af3f2679890</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a78afc6fc2f39cac3c6d66192465a5a4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a48c651c6b9c51df780d03a6361bc8fc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a53d1ab10250de3b353a241c2bbac866c</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>acdb3ebae2733b56297c409c727e53da8</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>adfb0ea7cd3fd3e6d6cb5abf419fa4f91</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a125d1d927e32d02589f7bba2aaecacd6</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>afa6ba1ed9c9a782c482f685e431cf8f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>af1ec0c411d4435a1475bcc8ae24754d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a658b5c2c6cbe1fe799e3a0b5f5c2a4c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a2c6aedbf39d93e4bf11b248285c5d05e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6dfa170116efca1421d69522502348f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a6f83ec0826b33f3b8b37df0d8c757712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1KroneckerProductPreconditioner.html</anchorfile>
      <anchor>a1d6d00a1e4259b83673982d012fa4c8d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::Lanczos</name>
    <filename>classStokhos_1_1Lanczos.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>compute</name>
      <anchorfile>classStokhos_1_1Lanczos.html</anchorfile>
      <anchor>a4cb4887289bf49a1b3ab1f60695f30c5</anchor>
      <arglist>(ordinal_type k, const vectorspace_type &amp;vs, const operator_type &amp;A, const vector_type &amp;u_init, matrix_type &amp;u, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;nrm_sqrd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeNormalized</name>
      <anchorfile>classStokhos_1_1Lanczos.html</anchorfile>
      <anchor>a4650e51cf08d3ce819ad70898d815d6b</anchor>
      <arglist>(ordinal_type k, const vectorspace_type &amp;vs, const operator_type &amp;A, const vector_type &amp;u_init, matrix_type &amp;u, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;nrm_sqrd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>gramSchmidt</name>
      <anchorfile>classStokhos_1_1Lanczos.html</anchorfile>
      <anchor>affa6955a75496a0aa69658ed0e54070b</anchor>
      <arglist>(ordinal_type k, const vectorspace_type &amp;vs, matrix_type &amp;u, vector_type &amp;u2)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Lanczos_Cos_Func</name>
    <filename>structLanczos__Cos__Func.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Lanczos_Exp_Func</name>
    <filename>structLanczos__Exp__Func.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>lanczos_pce_quad_func</name>
    <filename>structlanczos__pce__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Lanczos_PCE_Setup</name>
    <filename>structLanczos__PCE__Setup.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Lanczos_Sin_Func</name>
    <filename>structLanczos__Sin__Func.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::LanczosPCEBasis</name>
    <filename>classStokhos_1_1LanczosPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>LanczosPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>afc5ff0d75aadbba7d98ac4765fd10228</anchor>
      <arglist>(ordinal_type p, const Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, bool normalize, bool limit_integration_order)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LanczosPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a071ab338d31dbf9e34b24d481cee98ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getNewCoeffs</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>ab280f068b92ca0decdb7ccfa81125db7</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformCoeffsFromLanczos</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a5568c3ed3c1ecc2d71ab41b4a5a87a92</anchor>
      <arglist>(const value_type *in, value_type *out) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>ae2a38bbac8440e39a5e62ccc45e121d1</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>aa0d50bbff8027ef655e4df6ae2feaf4c</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LanczosPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a1787f521a9777cfb9fd1cc6c6a347d66</anchor>
      <arglist>(ordinal_type p, const LanczosPCEBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a0499a1aa0077458cbeba0a3968f05e45</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a15d439c42790706cffd61ba525cb8ff0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a10e3653ad19c39fe6e491b71f1659e0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>quad</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a80426f5ffb810f1cb4e99dc46b1d3e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>limit_integration_order</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>ae5e2e7a3b72925bb8847a8d0dc2d077b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>nqp</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a28fe70dfb6cc186e0877a812711f9f53</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>pce_weights</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>aa4e14bbce2163a6803ef62cc8788c707</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>pce_vals</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a1ec628572775376e69b3cc08f3fe9ee9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>u0</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>acd65ad99e8df35a2e1b585371af28bda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>lanczos_vecs</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a360f7fe3b8c91b16c6e33b3c441527d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>fromStieltjesMat</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a708316ba0837d2d4c633e30eb808d83e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>new_pce</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>ad19690aa7b45f5fb19c56f1b6691fb7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>ae2a38bbac8440e39a5e62ccc45e121d1</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>aa0d50bbff8027ef655e4df6ae2feaf4c</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a0499a1aa0077458cbeba0a3968f05e45</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1LanczosPCEBasis.html</anchorfile>
      <anchor>a15d439c42790706cffd61ba525cb8ff0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::LanczosProjPCEBasis</name>
    <filename>classStokhos_1_1LanczosProjPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>LanczosProjPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>aa420521108034e1c8108299fca4ab6cb</anchor>
      <arglist>(ordinal_type p, const Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, bool normalize, bool limit_integration_order=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LanczosProjPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>ad81880ddfbcf4012a3da9550e113b690</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getNewCoeffs</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>ab9bb7370e2f3a99f55146b0b56b9f132</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformCoeffsFromLanczos</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>afec383ce148674c553a289c299aa4cab</anchor>
      <arglist>(const value_type *in, value_type *out) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a0963bc2f34ba08d5311c6a0897ba91c3</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>ac7fd617d631ccd3c887f6d1f49aa8870</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LanczosProjPCEBasis</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a92731731f4476310eaf1d797b02c2810</anchor>
      <arglist>(ordinal_type p, const LanczosProjPCEBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a98f52f46e14367cbb6107beee083aff5</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a273ec89c2e1b459ce666b79c1d8b9b15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a9b7b217927e167b065069009fba99407</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>limit_integration_order</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>af044602ff17ea04ad59037ec2210dd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>add5febcb090339daf2525230b3b57ba7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>pce_norms</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>aaa2832ad4060c502d11db411f7264632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>Cijk_matrix</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a6c717a26af467bc3d6dfe0848694e864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>weights</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a5f35c88a7785372f2ac8ff65c3a5a240</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>u0</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>af2d64c58bcbc3bbfdc5a570812b928e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>lanczos_vecs</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>aa5eb54aacb4428452755a49c37a8dd46</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>new_pce</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>ac4b1bb966c2f91f55566fa7e4a336753</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a0963bc2f34ba08d5311c6a0897ba91c3</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>ac7fd617d631ccd3c887f6d1f49aa8870</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a98f52f46e14367cbb6107beee083aff5</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1LanczosProjPCEBasis.html</anchorfile>
      <anchor>a273ec89c2e1b459ce666b79c1d8b9b15</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::LAPACK</name>
    <filename>classTeuchos_1_1LAPACK.html</filename>
  </compound>
  <compound kind="class">
    <name>LAPACK&lt; ordinal_type, value_type &gt;</name>
    <filename>classTeuchos_1_1LAPACK.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::LAPACK&lt; OrdinalType, Sacado::MP::Vector&lt; Storage &gt; &gt;</name>
    <filename>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac547b2431094d756f60f6ec297d7e3bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a471eb1372a29a5b03ab2b2cb1c5f1bd1</anchor>
      <arglist>(const LAPACK&lt; OrdinalType, ScalarType &gt; &amp;lapack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a20eef8054d5764f45b32819306c149ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad66672fd4851df366a748aca7d01869e</anchor>
      <arglist>(const OrdinalType n, ScalarType *d, ScalarType *e, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa7e2d288015e81fa15d1390a2ed1634f</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, const ScalarType *d, const ScalarType *e, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad81cf8b2a000e8b1cfd7a358d7a76233</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af588b1fe0d0bf7fa6535dac51fb48ef4</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a35f045a466a514093a8804fc1c45f724</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa47d106bd0e254664e068981fcf7674f</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d472432c8c54c9ea8976959d460bd0d</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e6fccfc404d4ec9735a98555a52b694</anchor>
      <arglist>(const OrdinalType n, const ScalarType *A, const OrdinalType lda, MagnitudeType *S, MagnitudeType *scond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PORFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a049f7248337eab5ed5d04cbc69f07a11</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acb344c5f8cf1f84406d752da31185098</anchor>
      <arglist>(const char FACT, const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, char EQUED, ScalarType *S, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab514f669a8b752dfa570d5189a0b3dac</anchor>
      <arglist>(const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a586809979c530c0992bafce62eb21f92</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *S, const MagnitudeType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac0a13b0068e9525c9c905fe8ad3dea3b</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *S, const ScalarType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGLSE</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a00ff6ec77a55d1d91e50c126d1cf0e2a</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType p, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *C, ScalarType *D, ScalarType *X, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4024529046d92ba62eacf6d6d4052f4c</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad74492c91bcc2f7e6e2af95da6dbb627</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a63ac72694724166f2c3ef827ece0d404</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASCL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6049b17fcc976af0c241d8fb43cf6258</anchor>
      <arglist>(const char TYPE, const OrdinalType kl, const OrdinalType ku, const MagnitudeType cfrom, const MagnitudeType cto, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQP3</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6dad3707bec46dc5e20101266556e63e</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *jpvt, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASWP</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a75342baaf5105c75b4d23971f2581821</anchor>
      <arglist>(const OrdinalType N, ScalarType A[], const OrdinalType LDA, const OrdinalType K1, const OrdinalType K2, const OrdinalType IPIV[], const OrdinalType INCX) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a48f466be02b2b3caed27268c8925e144</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a15ea4f1f6e5e6c3760aecbd98f95bbb3</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a85a59cc29e933d6a49b2d39fe8637965</anchor>
      <arglist>(const OrdinalType n, ScalarType *dl, ScalarType *d, ScalarType *du, ScalarType *du2, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a82d7851f76a37f22dabea4c704ff33ad</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *dl, const ScalarType *d, const ScalarType *du, const ScalarType *du2, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f824291aade043eed3df8704cd1108a</anchor>
      <arglist>(const OrdinalType n, ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LATRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac3cbd21594b684d8d69bd95fa2521e17</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const char NORMIN, const OrdinalType N, ScalarType *A, const OrdinalType LDA, ScalarType *X, MagnitudeType *SCALE, MagnitudeType *CNORM, OrdinalType *INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GECON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a83aeea18db65f8bcb74446fbcbc6c1a5</anchor>
      <arglist>(const char NORM, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a37ae491237170ab674cfbae590b864d5</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>LANGB</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1315dd8e8947dcaf6471bb33e9b6057c</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *WORK) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7146439919639fdae8ae1a55964d85ee</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac828f2891b7a9ae59837aa5d9d18c456</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const ScalarType *A, const OrdinalType lda, ScalarType *R, ScalarType *C, ScalarType *rowcond, ScalarType *colcond, ScalarType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GERFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa754019170c902e3d53765ae0a74a8ad</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac3577d1427f958054a4447d36eba239f</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *R, MagnitudeType *C, MagnitudeType *rowcond, MagnitudeType *colcond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBRFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1aef5a6106d995ed4daba8439c6798e7</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aabffe9ad960069d18dd79167be288b0b</anchor>
      <arglist>(const char FACT, const char TRANS, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, OrdinalType *IPIV, char EQUED, ScalarType *R, ScalarType *C, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYTRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaae5d9140455e0dfb603de6e2aca5122</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *D, ScalarType *E, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEHRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade2df942648996ea56a3796a5656a96c</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a54bc6fc03c2d57603621cac3d65ec949</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a31e3bfd4595b24ec63af8dc9cefd2138</anchor>
      <arglist>(const char UPLO, const char DIAG, const OrdinalType n, const ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a78f15d5a8e580242ca3c6bf91dfa7552</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *AP, ScalarType *W, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4e9b5910160dd59e690a1846ddd0b69a</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1bea5e37135a32fbfb6a20a5c94a0758</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac13d250b234780f74fc82b6d2d3b3c9a</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaaf22aba780ac6c5cd3d199bdb529e94</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>STEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afe72825a78590df68621fa17ef68d895</anchor>
      <arglist>(const char COMPZ, const OrdinalType n, ScalarType *D, ScalarType *E, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6aa0cd06216521b9b2f845dc3fa78563</anchor>
      <arglist>(const char JOB, const char COMPZ, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *H, const OrdinalType ldh, ScalarType *WR, ScalarType *WI, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a60ab6a97c8ba6c77eea668582c28f6ca</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *WR, ScalarType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aecd27916855143c6214e694018e5eb2d</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *W, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae8569fea79182fc89bd90dcc87d7d702</anchor>
      <arglist>(const char JOBVS, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e23c2c4fc3d5032b65be2b9d4a906e0</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abf247e94f38221a87ac869c7e6547279</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *WR, ScalarType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *SCALE, MagnitudeType *abnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a19c8947807878198f1e3e9071a4690bb</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *lscale, MagnitudeType *rscale, MagnitudeType *abnrm, MagnitudeType *bbnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f5152094ca854b0ac452a8f9235475f</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab8f793c888298f90cb76685374677663</anchor>
      <arglist>(const char JOB, const char COMPQ, const OrdinalType *SELECT, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, MagnitudeType *WR, MagnitudeType *WI, OrdinalType *M, ScalarType *S, MagnitudeType *SEP, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4b4eb5884e1ec5595dcb21f9d0280d15</anchor>
      <arglist>(const OrdinalType ijob, const OrdinalType wantq, const OrdinalType wantz, const OrdinalType *SELECT, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *Q, const OrdinalType ldq, ScalarType *Z, const OrdinalType ldz, OrdinalType *M, MagnitudeType *PL, MagnitudeType *PR, MagnitudeType *DIF, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a80750d0d9ebd35218afa41f62e36f27d</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *sdim, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d460b54d9a24019e4aaa8822d0856f3</anchor>
      <arglist>(const char JOBU, const char JOBVT, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *S, ScalarType *U, const OrdinalType ldu, ScalarType *V, const OrdinalType ldv, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab5307036c4c39c70b3a139115a6b03d9</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abc1ad59aaaedd52cab61eab77149deae</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acc2a553559f24b6082db0ae2ce676be4</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa32ba2d198d035a7916c2d1579d404de</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a10b40c286ee6c7599ddc21348b952b68</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad5b34b56ebdfc2dd8b47527132909653</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6c94e54dde09efc770834354969a258f</anchor>
      <arglist>(const char SIDE, const char HOWMNY, OrdinalType *select, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aad1c4a37de50459a1489f823a0fd0dbe</anchor>
      <arglist>(const char SIDE, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREXC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5c5061f520c82299389bf3ddbbd3c9a0</anchor>
      <arglist>(const char COMPQ, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, OrdinalType ifst, OrdinalType ilst, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGEVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aae90b3253220789d350eb78f4c4eb02e</anchor>
      <arglist>(const char SIDE, const char HOWMNY, const OrdinalType *SELECT, const OrdinalType n, ScalarType *S, const OrdinalType lds, ScalarType *P, const OrdinalType ldp, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *M, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARTG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac0ac4c8aa928bfcacef431d617274573</anchor>
      <arglist>(const ScalarType f, const ScalarType g, MagnitudeType *c, ScalarType *s, ScalarType *r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARFG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab0f42801a71b9bf4b53c282bfa5c7a58</anchor>
      <arglist>(const OrdinalType n, ScalarType *alpha, ScalarType *x, const OrdinalType incx, ScalarType *tau) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acaeae14d412271e3c3c146508451f43f</anchor>
      <arglist>(const char JOBZ, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType ilo, OrdinalType ihi, MagnitudeType *scale, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d5b0141ca2d9df1fed47d5f9acfcbd0</anchor>
      <arglist>(const char JOBZ, const char SIDE, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const MagnitudeType *scale, const OrdinalType m, ScalarType *V, const OrdinalType ldv, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LARND</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a54daa0439b77722b1ab19d4db77c0f5a</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARNV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af9e5d08b87d712a48aeba479200d612d</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed, const OrdinalType n, ScalarType *v) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAMCH</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a52b601e1a61b93e5edf4d494e5fa4a32</anchor>
      <arglist>(const char CMACH) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>ILAENV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a601cb132e2bf24372a4bb8b19475a4a1</anchor>
      <arglist>(const OrdinalType ispec, const std::string &amp;NAME, const std::string &amp;OPTS, const OrdinalType N1=-1, const OrdinalType N2=-1, const OrdinalType N3=-1, const OrdinalType N4=-1) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAPY2</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af995bb53ad6f244ce2d478276e95ad34</anchor>
      <arglist>(const ScalarType x, const ScalarType y) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac547b2431094d756f60f6ec297d7e3bf</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a471eb1372a29a5b03ab2b2cb1c5f1bd1</anchor>
      <arglist>(const LAPACK&lt; OrdinalType, ScalarType &gt; &amp;lapack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a20eef8054d5764f45b32819306c149ed</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad66672fd4851df366a748aca7d01869e</anchor>
      <arglist>(const OrdinalType n, ScalarType *d, ScalarType *e, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa7e2d288015e81fa15d1390a2ed1634f</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, const ScalarType *d, const ScalarType *e, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad81cf8b2a000e8b1cfd7a358d7a76233</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af588b1fe0d0bf7fa6535dac51fb48ef4</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a35f045a466a514093a8804fc1c45f724</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa47d106bd0e254664e068981fcf7674f</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d472432c8c54c9ea8976959d460bd0d</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e6fccfc404d4ec9735a98555a52b694</anchor>
      <arglist>(const OrdinalType n, const ScalarType *A, const OrdinalType lda, MagnitudeType *S, MagnitudeType *scond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PORFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a049f7248337eab5ed5d04cbc69f07a11</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acb344c5f8cf1f84406d752da31185098</anchor>
      <arglist>(const char FACT, const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, char EQUED, ScalarType *S, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab514f669a8b752dfa570d5189a0b3dac</anchor>
      <arglist>(const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a586809979c530c0992bafce62eb21f92</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *S, const MagnitudeType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac0a13b0068e9525c9c905fe8ad3dea3b</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *S, const ScalarType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGLSE</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a00ff6ec77a55d1d91e50c126d1cf0e2a</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType p, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *C, ScalarType *D, ScalarType *X, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4024529046d92ba62eacf6d6d4052f4c</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad74492c91bcc2f7e6e2af95da6dbb627</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a63ac72694724166f2c3ef827ece0d404</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASCL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6049b17fcc976af0c241d8fb43cf6258</anchor>
      <arglist>(const char TYPE, const OrdinalType kl, const OrdinalType ku, const MagnitudeType cfrom, const MagnitudeType cto, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQP3</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6dad3707bec46dc5e20101266556e63e</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *jpvt, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASWP</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a75342baaf5105c75b4d23971f2581821</anchor>
      <arglist>(const OrdinalType N, ScalarType A[], const OrdinalType LDA, const OrdinalType K1, const OrdinalType K2, const OrdinalType IPIV[], const OrdinalType INCX) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a48f466be02b2b3caed27268c8925e144</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a15ea4f1f6e5e6c3760aecbd98f95bbb3</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a85a59cc29e933d6a49b2d39fe8637965</anchor>
      <arglist>(const OrdinalType n, ScalarType *dl, ScalarType *d, ScalarType *du, ScalarType *du2, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a82d7851f76a37f22dabea4c704ff33ad</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *dl, const ScalarType *d, const ScalarType *du, const ScalarType *du2, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f824291aade043eed3df8704cd1108a</anchor>
      <arglist>(const OrdinalType n, ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LATRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac3cbd21594b684d8d69bd95fa2521e17</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const char NORMIN, const OrdinalType N, ScalarType *A, const OrdinalType LDA, ScalarType *X, MagnitudeType *SCALE, MagnitudeType *CNORM, OrdinalType *INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GECON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a83aeea18db65f8bcb74446fbcbc6c1a5</anchor>
      <arglist>(const char NORM, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a37ae491237170ab674cfbae590b864d5</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>LANGB</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1315dd8e8947dcaf6471bb33e9b6057c</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *WORK) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7146439919639fdae8ae1a55964d85ee</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac828f2891b7a9ae59837aa5d9d18c456</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const ScalarType *A, const OrdinalType lda, ScalarType *R, ScalarType *C, ScalarType *rowcond, ScalarType *colcond, ScalarType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GERFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa754019170c902e3d53765ae0a74a8ad</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac3577d1427f958054a4447d36eba239f</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *R, MagnitudeType *C, MagnitudeType *rowcond, MagnitudeType *colcond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBRFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1aef5a6106d995ed4daba8439c6798e7</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aabffe9ad960069d18dd79167be288b0b</anchor>
      <arglist>(const char FACT, const char TRANS, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, OrdinalType *IPIV, char EQUED, ScalarType *R, ScalarType *C, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYTRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaae5d9140455e0dfb603de6e2aca5122</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *D, ScalarType *E, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEHRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade2df942648996ea56a3796a5656a96c</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a54bc6fc03c2d57603621cac3d65ec949</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a31e3bfd4595b24ec63af8dc9cefd2138</anchor>
      <arglist>(const char UPLO, const char DIAG, const OrdinalType n, const ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a78f15d5a8e580242ca3c6bf91dfa7552</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *AP, ScalarType *W, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4e9b5910160dd59e690a1846ddd0b69a</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1bea5e37135a32fbfb6a20a5c94a0758</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac13d250b234780f74fc82b6d2d3b3c9a</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaaf22aba780ac6c5cd3d199bdb529e94</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>STEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afe72825a78590df68621fa17ef68d895</anchor>
      <arglist>(const char COMPZ, const OrdinalType n, ScalarType *D, ScalarType *E, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6aa0cd06216521b9b2f845dc3fa78563</anchor>
      <arglist>(const char JOB, const char COMPZ, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *H, const OrdinalType ldh, ScalarType *WR, ScalarType *WI, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a60ab6a97c8ba6c77eea668582c28f6ca</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *WR, ScalarType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aecd27916855143c6214e694018e5eb2d</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *W, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae8569fea79182fc89bd90dcc87d7d702</anchor>
      <arglist>(const char JOBVS, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e23c2c4fc3d5032b65be2b9d4a906e0</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abf247e94f38221a87ac869c7e6547279</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *WR, ScalarType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *SCALE, MagnitudeType *abnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a19c8947807878198f1e3e9071a4690bb</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *lscale, MagnitudeType *rscale, MagnitudeType *abnrm, MagnitudeType *bbnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f5152094ca854b0ac452a8f9235475f</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab8f793c888298f90cb76685374677663</anchor>
      <arglist>(const char JOB, const char COMPQ, const OrdinalType *SELECT, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, MagnitudeType *WR, MagnitudeType *WI, OrdinalType *M, ScalarType *S, MagnitudeType *SEP, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4b4eb5884e1ec5595dcb21f9d0280d15</anchor>
      <arglist>(const OrdinalType ijob, const OrdinalType wantq, const OrdinalType wantz, const OrdinalType *SELECT, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *Q, const OrdinalType ldq, ScalarType *Z, const OrdinalType ldz, OrdinalType *M, MagnitudeType *PL, MagnitudeType *PR, MagnitudeType *DIF, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a80750d0d9ebd35218afa41f62e36f27d</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *sdim, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d460b54d9a24019e4aaa8822d0856f3</anchor>
      <arglist>(const char JOBU, const char JOBVT, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *S, ScalarType *U, const OrdinalType ldu, ScalarType *V, const OrdinalType ldv, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab5307036c4c39c70b3a139115a6b03d9</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abc1ad59aaaedd52cab61eab77149deae</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acc2a553559f24b6082db0ae2ce676be4</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa32ba2d198d035a7916c2d1579d404de</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a10b40c286ee6c7599ddc21348b952b68</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad5b34b56ebdfc2dd8b47527132909653</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6c94e54dde09efc770834354969a258f</anchor>
      <arglist>(const char SIDE, const char HOWMNY, OrdinalType *select, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aad1c4a37de50459a1489f823a0fd0dbe</anchor>
      <arglist>(const char SIDE, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREXC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5c5061f520c82299389bf3ddbbd3c9a0</anchor>
      <arglist>(const char COMPQ, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, OrdinalType ifst, OrdinalType ilst, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGEVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aae90b3253220789d350eb78f4c4eb02e</anchor>
      <arglist>(const char SIDE, const char HOWMNY, const OrdinalType *SELECT, const OrdinalType n, ScalarType *S, const OrdinalType lds, ScalarType *P, const OrdinalType ldp, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *M, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARTG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac0ac4c8aa928bfcacef431d617274573</anchor>
      <arglist>(const ScalarType f, const ScalarType g, MagnitudeType *c, ScalarType *s, ScalarType *r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARFG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab0f42801a71b9bf4b53c282bfa5c7a58</anchor>
      <arglist>(const OrdinalType n, ScalarType *alpha, ScalarType *x, const OrdinalType incx, ScalarType *tau) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acaeae14d412271e3c3c146508451f43f</anchor>
      <arglist>(const char JOBZ, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType ilo, OrdinalType ihi, MagnitudeType *scale, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3d5b0141ca2d9df1fed47d5f9acfcbd0</anchor>
      <arglist>(const char JOBZ, const char SIDE, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const MagnitudeType *scale, const OrdinalType m, ScalarType *V, const OrdinalType ldv, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LARND</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a54daa0439b77722b1ab19d4db77c0f5a</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARNV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af9e5d08b87d712a48aeba479200d612d</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed, const OrdinalType n, ScalarType *v) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAMCH</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a52b601e1a61b93e5edf4d494e5fa4a32</anchor>
      <arglist>(const char CMACH) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>ILAENV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a601cb132e2bf24372a4bb8b19475a4a1</anchor>
      <arglist>(const OrdinalType ispec, const std::string &amp;NAME, const std::string &amp;OPTS, const OrdinalType N1=-1, const OrdinalType N2=-1, const OrdinalType N3=-1, const OrdinalType N4=-1) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAPY2</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af995bb53ad6f244ce2d478276e95ad34</anchor>
      <arglist>(const ScalarType x, const ScalarType y) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::LAPACK&lt; OrdinalType, Sacado::UQ::PCE&lt; Storage &gt; &gt;</name>
    <filename>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a354de6d3730370bc6a8ef199e6de2e77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acc3855bdb29e86ce42584eac8248aca5</anchor>
      <arglist>(const LAPACK&lt; OrdinalType, ScalarType &gt; &amp;lapack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae446e4884a6e3c9bf16ea4d00ae3136c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad9d98fd5b70c2c39644f30aba3a60eaf</anchor>
      <arglist>(const OrdinalType n, ScalarType *d, ScalarType *e, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7d9a7f09e15b2745435df24903c3a287</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, const ScalarType *d, const ScalarType *e, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aab54f4f27637817f69cdef87b0aff1ef</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a869298c310588fddba790640af05e453</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af86a107301091a7c8c5a616b71ff99e9</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac2a4c0589b5a717d87544b06f568f272</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a75a33dd3302f80eabd55d5447b8a23cb</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5e6323ca801d8485f28f8ac4d07e42f8</anchor>
      <arglist>(const OrdinalType n, const ScalarType *A, const OrdinalType lda, MagnitudeType *S, MagnitudeType *scond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PORFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a293cbde421c65d7bd884e2e8f6fc3e35</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e684dc91c83dd8e2e80e2de4d910b77</anchor>
      <arglist>(const char FACT, const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, char EQUED, ScalarType *S, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad076c1cb0ffcf8dd4fd05b82b1765553</anchor>
      <arglist>(const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af77c6ebd32aa2db0c1569005dca05c42</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *S, const MagnitudeType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a529f533a49e3183e978f893123ec6ba8</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *S, const ScalarType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGLSE</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3deac1f319b17fcf4a47e0599b2f9d6c</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType p, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *C, ScalarType *D, ScalarType *X, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2af9448fe6b898ed0a111becd68f6c99</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a08d2070279535afd7766a455376b8c26</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac83f42a2104bcb255bc2db4456cf09e8</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASCL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7d4e4e74f2490c9467e6335cd977126c</anchor>
      <arglist>(const char TYPE, const OrdinalType kl, const OrdinalType ku, const MagnitudeType cfrom, const MagnitudeType cto, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQP3</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aab00648aedf585e83adaebb0bc6b458e</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *jpvt, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASWP</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4d0b8dca5e0f9867e63d45f55816b140</anchor>
      <arglist>(const OrdinalType N, ScalarType A[], const OrdinalType LDA, const OrdinalType K1, const OrdinalType K2, const OrdinalType IPIV[], const OrdinalType INCX) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6f55fd71278642e543e6e20c9c31c8f2</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3a8d61e0095e920b38265dcfc306fe5e</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aba8bc80d23ce97ac4e3254f23524df92</anchor>
      <arglist>(const OrdinalType n, ScalarType *dl, ScalarType *d, ScalarType *du, ScalarType *du2, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae6ac633b7733a87b32f32b371be95940</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *dl, const ScalarType *d, const ScalarType *du, const ScalarType *du2, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae53a395d2e5abd1d34e8425cfef1d405</anchor>
      <arglist>(const OrdinalType n, ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LATRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8cb223ab6ca697a333095ca519cf638e</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const char NORMIN, const OrdinalType N, ScalarType *A, const OrdinalType LDA, ScalarType *X, MagnitudeType *SCALE, MagnitudeType *CNORM, OrdinalType *INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GECON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a52664928607603416f1dbfc076db0bcf</anchor>
      <arglist>(const char NORM, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a66d9056f456a02fb61c28469b5124605</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>LANGB</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a88efefd82f7f9141581c8b185aecef9a</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *WORK) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afb354a264689ef957d7c5af97231f4f7</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0bae079b77ebfe2825657eb0403c3e59</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const ScalarType *A, const OrdinalType lda, ScalarType *R, ScalarType *C, ScalarType *rowcond, ScalarType *colcond, ScalarType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GERFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa62e79dfaad7c85ef53d7a2a759d443c</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8691413b1087c4df7818e5940d55f5b1</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *R, MagnitudeType *C, MagnitudeType *rowcond, MagnitudeType *colcond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBRFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a89f9eca37c1128561dc50c2483095a33</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1cfac72b8a5459d5bc811c5e8ccbb149</anchor>
      <arglist>(const char FACT, const char TRANS, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, OrdinalType *IPIV, char EQUED, ScalarType *R, ScalarType *C, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYTRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae434522b6ea26c295228048e270fb0df</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *D, ScalarType *E, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEHRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a730d707632c6462e660b6ef608ad489d</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acb21d30b09584ad8619b6516b83ccb67</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab692dee02ad875cf5b056c125759457a</anchor>
      <arglist>(const char UPLO, const char DIAG, const OrdinalType n, const ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3f05e16b2f7d5d0148c4ccbd30518068</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *AP, ScalarType *W, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a47ac7aebbaf9c31bbddd8d3d750bde18</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa49fa415e9808cfe2e49ecec61109b61</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a153bb6c0370370f1d75b6a2b26a8d045</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a91af78ce6467e5905af42a224bf73b79</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>STEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3b8923a614f2b325ddf067eb76b6e1f4</anchor>
      <arglist>(const char COMPZ, const OrdinalType n, ScalarType *D, ScalarType *E, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a702354672327b3b17df541a25f63fc40</anchor>
      <arglist>(const char JOB, const char COMPZ, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *H, const OrdinalType ldh, ScalarType *WR, ScalarType *WI, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad3104d97fef75410b25e0905606e7f68</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *WR, ScalarType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1cfadefcc753cc6ac18c8c4ddada5852</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *W, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a48ce4d2e47ffa700ea19ae09aa13bfae</anchor>
      <arglist>(const char JOBVS, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7b23096a87f791d459f7ab43c9a38f7b</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0621e2f4fec3a59d6e77ca2015d699e1</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *WR, ScalarType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *SCALE, MagnitudeType *abnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afd0b0a0da8fa447bff00b059b17aef89</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *lscale, MagnitudeType *rscale, MagnitudeType *abnrm, MagnitudeType *bbnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a9ea478ea84392f936347fd25a1e7fc88</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7bb10603975a9d76d71721e2a9ed7d4f</anchor>
      <arglist>(const char JOB, const char COMPQ, const OrdinalType *SELECT, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, MagnitudeType *WR, MagnitudeType *WI, OrdinalType *M, ScalarType *S, MagnitudeType *SEP, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6de3742abea06b8f4ff82a8906511655</anchor>
      <arglist>(const OrdinalType ijob, const OrdinalType wantq, const OrdinalType wantz, const OrdinalType *SELECT, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *Q, const OrdinalType ldq, ScalarType *Z, const OrdinalType ldz, OrdinalType *M, MagnitudeType *PL, MagnitudeType *PR, MagnitudeType *DIF, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a55a0fb85cf3bdcb277c29e3a827a2420</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *sdim, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a00d35fe71aafafc8a5bdbb4a1c3d466e</anchor>
      <arglist>(const char JOBU, const char JOBVT, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *S, ScalarType *U, const OrdinalType ldu, ScalarType *V, const OrdinalType ldv, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a72a038bb5ebb647be6c2580250a3a257</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a9e40f405e802b0efb744cd3b9e616cc1</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac9db7619a9dffdbc682d2e401e840a76</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a70dda8bb8332f2b2cba4b4760cbfcb05</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8305adf0186f0e92b58eccdf070a170b</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3ba7569c931730842ef7cc9c8dab67ba</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a717d090467977c9c9ea897e413d7c578</anchor>
      <arglist>(const char SIDE, const char HOWMNY, OrdinalType *select, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a27495e86e6df81d1fc8655fd8b26ea57</anchor>
      <arglist>(const char SIDE, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREXC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac19ad479eb4ee2b57ab403402b5a57ca</anchor>
      <arglist>(const char COMPQ, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, OrdinalType ifst, OrdinalType ilst, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGEVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a14704a12eb0f4d2a4c3c34b10716487a</anchor>
      <arglist>(const char SIDE, const char HOWMNY, const OrdinalType *SELECT, const OrdinalType n, ScalarType *S, const OrdinalType lds, ScalarType *P, const OrdinalType ldp, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *M, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARTG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab06ba9604f9c1a1fce1f634cf25d7cb2</anchor>
      <arglist>(const ScalarType f, const ScalarType g, MagnitudeType *c, ScalarType *s, ScalarType *r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARFG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5c93fcc839e3361f7a8fb10ac3a39ada</anchor>
      <arglist>(const OrdinalType n, ScalarType *alpha, ScalarType *x, const OrdinalType incx, ScalarType *tau) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0928ebd05ff0135995aba7d69fe27cca</anchor>
      <arglist>(const char JOBZ, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType ilo, OrdinalType ihi, MagnitudeType *scale, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a33d62b9e24e99364de87f10bce02cd09</anchor>
      <arglist>(const char JOBZ, const char SIDE, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const MagnitudeType *scale, const OrdinalType m, ScalarType *V, const OrdinalType ldv, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LARND</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaf46b02c027d0ddb8a178f1c1745365d</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARNV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad2b4550a822206c795df1b5b8e7887d9</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed, const OrdinalType n, ScalarType *v) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAMCH</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af6cf4d373ce7e1dbdc2e4b1a60aa8d51</anchor>
      <arglist>(const char CMACH) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>ILAENV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade600b1d17c158e20c8b10bcf81a30a8</anchor>
      <arglist>(const OrdinalType ispec, const std::string &amp;NAME, const std::string &amp;OPTS, const OrdinalType N1=-1, const OrdinalType N2=-1, const OrdinalType N3=-1, const OrdinalType N4=-1) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAPY2</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>adc88642647ce66b536e10ea93b88981e</anchor>
      <arglist>(const ScalarType x, const ScalarType y) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a354de6d3730370bc6a8ef199e6de2e77</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acc3855bdb29e86ce42584eac8248aca5</anchor>
      <arglist>(const LAPACK&lt; OrdinalType, ScalarType &gt; &amp;lapack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae446e4884a6e3c9bf16ea4d00ae3136c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad9d98fd5b70c2c39644f30aba3a60eaf</anchor>
      <arglist>(const OrdinalType n, ScalarType *d, ScalarType *e, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7d9a7f09e15b2745435df24903c3a287</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, const ScalarType *d, const ScalarType *e, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aab54f4f27637817f69cdef87b0aff1ef</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a869298c310588fddba790640af05e453</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af86a107301091a7c8c5a616b71ff99e9</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac2a4c0589b5a717d87544b06f568f272</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a75a33dd3302f80eabd55d5447b8a23cb</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5e6323ca801d8485f28f8ac4d07e42f8</anchor>
      <arglist>(const OrdinalType n, const ScalarType *A, const OrdinalType lda, MagnitudeType *S, MagnitudeType *scond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PORFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a293cbde421c65d7bd884e2e8f6fc3e35</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0e684dc91c83dd8e2e80e2de4d910b77</anchor>
      <arglist>(const char FACT, const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, char EQUED, ScalarType *S, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad076c1cb0ffcf8dd4fd05b82b1765553</anchor>
      <arglist>(const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af77c6ebd32aa2db0c1569005dca05c42</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *S, const MagnitudeType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a529f533a49e3183e978f893123ec6ba8</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *S, const ScalarType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGLSE</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3deac1f319b17fcf4a47e0599b2f9d6c</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType p, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *C, ScalarType *D, ScalarType *X, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2af9448fe6b898ed0a111becd68f6c99</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a08d2070279535afd7766a455376b8c26</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac83f42a2104bcb255bc2db4456cf09e8</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASCL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7d4e4e74f2490c9467e6335cd977126c</anchor>
      <arglist>(const char TYPE, const OrdinalType kl, const OrdinalType ku, const MagnitudeType cfrom, const MagnitudeType cto, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQP3</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aab00648aedf585e83adaebb0bc6b458e</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *jpvt, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASWP</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4d0b8dca5e0f9867e63d45f55816b140</anchor>
      <arglist>(const OrdinalType N, ScalarType A[], const OrdinalType LDA, const OrdinalType K1, const OrdinalType K2, const OrdinalType IPIV[], const OrdinalType INCX) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6f55fd71278642e543e6e20c9c31c8f2</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3a8d61e0095e920b38265dcfc306fe5e</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aba8bc80d23ce97ac4e3254f23524df92</anchor>
      <arglist>(const OrdinalType n, ScalarType *dl, ScalarType *d, ScalarType *du, ScalarType *du2, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae6ac633b7733a87b32f32b371be95940</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *dl, const ScalarType *d, const ScalarType *du, const ScalarType *du2, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae53a395d2e5abd1d34e8425cfef1d405</anchor>
      <arglist>(const OrdinalType n, ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LATRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8cb223ab6ca697a333095ca519cf638e</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const char NORMIN, const OrdinalType N, ScalarType *A, const OrdinalType LDA, ScalarType *X, MagnitudeType *SCALE, MagnitudeType *CNORM, OrdinalType *INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GECON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a52664928607603416f1dbfc076db0bcf</anchor>
      <arglist>(const char NORM, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBCON</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a66d9056f456a02fb61c28469b5124605</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>LANGB</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a88efefd82f7f9141581c8b185aecef9a</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *WORK) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afb354a264689ef957d7c5af97231f4f7</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0bae079b77ebfe2825657eb0403c3e59</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const ScalarType *A, const OrdinalType lda, ScalarType *R, ScalarType *C, ScalarType *rowcond, ScalarType *colcond, ScalarType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GERFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa62e79dfaad7c85ef53d7a2a759d443c</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8691413b1087c4df7818e5940d55f5b1</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *R, MagnitudeType *C, MagnitudeType *rowcond, MagnitudeType *colcond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBRFS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a89f9eca37c1128561dc50c2483095a33</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1cfac72b8a5459d5bc811c5e8ccbb149</anchor>
      <arglist>(const char FACT, const char TRANS, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, OrdinalType *IPIV, char EQUED, ScalarType *R, ScalarType *C, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYTRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae434522b6ea26c295228048e270fb0df</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *D, ScalarType *E, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEHRD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a730d707632c6462e660b6ef608ad489d</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acb21d30b09584ad8619b6516b83ccb67</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab692dee02ad875cf5b056c125759457a</anchor>
      <arglist>(const char UPLO, const char DIAG, const OrdinalType n, const ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3f05e16b2f7d5d0148c4ccbd30518068</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *AP, ScalarType *W, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a47ac7aebbaf9c31bbddd8d3d750bde18</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa49fa415e9808cfe2e49ecec61109b61</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a153bb6c0370370f1d75b6a2b26a8d045</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEGV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a91af78ce6467e5905af42a224bf73b79</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>STEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3b8923a614f2b325ddf067eb76b6e1f4</anchor>
      <arglist>(const char COMPZ, const OrdinalType n, ScalarType *D, ScalarType *E, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a702354672327b3b17df541a25f63fc40</anchor>
      <arglist>(const char JOB, const char COMPZ, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *H, const OrdinalType ldh, ScalarType *WR, ScalarType *WI, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad3104d97fef75410b25e0905606e7f68</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *WR, ScalarType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1cfadefcc753cc6ac18c8c4ddada5852</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *W, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a48ce4d2e47ffa700ea19ae09aa13bfae</anchor>
      <arglist>(const char JOBVS, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7b23096a87f791d459f7ab43c9a38f7b</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0621e2f4fec3a59d6e77ca2015d699e1</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *WR, ScalarType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *SCALE, MagnitudeType *abnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afd0b0a0da8fa447bff00b059b17aef89</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *lscale, MagnitudeType *rscale, MagnitudeType *abnrm, MagnitudeType *bbnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a9ea478ea84392f936347fd25a1e7fc88</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7bb10603975a9d76d71721e2a9ed7d4f</anchor>
      <arglist>(const char JOB, const char COMPQ, const OrdinalType *SELECT, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, MagnitudeType *WR, MagnitudeType *WI, OrdinalType *M, ScalarType *S, MagnitudeType *SEP, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6de3742abea06b8f4ff82a8906511655</anchor>
      <arglist>(const OrdinalType ijob, const OrdinalType wantq, const OrdinalType wantz, const OrdinalType *SELECT, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *Q, const OrdinalType ldq, ScalarType *Z, const OrdinalType ldz, OrdinalType *M, MagnitudeType *PL, MagnitudeType *PR, MagnitudeType *DIF, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGES</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a55a0fb85cf3bdcb277c29e3a827a2420</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *sdim, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVD</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a00d35fe71aafafc8a5bdbb4a1c3d466e</anchor>
      <arglist>(const char JOBU, const char JOBVT, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *S, ScalarType *U, const OrdinalType ldu, ScalarType *V, const OrdinalType ldv, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a72a038bb5ebb647be6c2580250a3a257</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a9e40f405e802b0efb744cd3b9e616cc1</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac9db7619a9dffdbc682d2e401e840a76</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a70dda8bb8332f2b2cba4b4760cbfcb05</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8305adf0186f0e92b58eccdf070a170b</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMHR</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a3ba7569c931730842ef7cc9c8dab67ba</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a717d090467977c9c9ea897e413d7c578</anchor>
      <arglist>(const char SIDE, const char HOWMNY, OrdinalType *select, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a27495e86e6df81d1fc8655fd8b26ea57</anchor>
      <arglist>(const char SIDE, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREXC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac19ad479eb4ee2b57ab403402b5a57ca</anchor>
      <arglist>(const char COMPQ, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, OrdinalType ifst, OrdinalType ilst, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGEVC</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a14704a12eb0f4d2a4c3c34b10716487a</anchor>
      <arglist>(const char SIDE, const char HOWMNY, const OrdinalType *SELECT, const OrdinalType n, ScalarType *S, const OrdinalType lds, ScalarType *P, const OrdinalType ldp, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *M, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARTG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab06ba9604f9c1a1fce1f634cf25d7cb2</anchor>
      <arglist>(const ScalarType f, const ScalarType g, MagnitudeType *c, ScalarType *s, ScalarType *r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARFG</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5c93fcc839e3361f7a8fb10ac3a39ada</anchor>
      <arglist>(const OrdinalType n, ScalarType *alpha, ScalarType *x, const OrdinalType incx, ScalarType *tau) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAL</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0928ebd05ff0135995aba7d69fe27cca</anchor>
      <arglist>(const char JOBZ, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType ilo, OrdinalType ihi, MagnitudeType *scale, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAK</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a33d62b9e24e99364de87f10bce02cd09</anchor>
      <arglist>(const char JOBZ, const char SIDE, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const MagnitudeType *scale, const OrdinalType m, ScalarType *V, const OrdinalType ldv, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LARND</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aaf46b02c027d0ddb8a178f1c1745365d</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARNV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad2b4550a822206c795df1b5b8e7887d9</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed, const OrdinalType n, ScalarType *v) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAMCH</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af6cf4d373ce7e1dbdc2e4b1a60aa8d51</anchor>
      <arglist>(const char CMACH) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>ILAENV</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade600b1d17c158e20c8b10bcf81a30a8</anchor>
      <arglist>(const OrdinalType ispec, const std::string &amp;NAME, const std::string &amp;OPTS, const OrdinalType N1=-1, const OrdinalType N2=-1, const OrdinalType N3=-1, const OrdinalType N4=-1) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAPY2</name>
      <anchorfile>classTeuchos_1_1LAPACK_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>adc88642647ce66b536e10ea93b88981e</anchor>
      <arglist>(const ScalarType x, const ScalarType y) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::Details::LapackSupportsScalar</name>
    <filename>classBelos_1_1Details_1_1LapackSupportsScalar.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Belos::Details::LapackSupportsScalar&lt; Sacado::MP::Vector&lt; S &gt; &gt;</name>
    <filename>classBelos_1_1Details_1_1LapackSupportsScalar_3_01Sacado_1_1MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::LegendreBasis</name>
    <filename>classStokhos_1_1LegendreBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>LegendreBasis</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>a37f54efd9a1b87f1e934374ab13ab5c3</anchor>
      <arglist>(ordinal_type p, bool normalize=false, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LegendreBasis</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>a71fcdb0220abde99f5427c4f22556f65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>a34b62a1572cdca2cc455b1439de39f52</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>LegendreBasis</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>a2b5b8fcb99180d24610ab3f0bbde78bf</anchor>
      <arglist>(ordinal_type p, const LegendreBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>aa488d24153b293d4bbcb767f758ced23</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>a34b62a1572cdca2cc455b1439de39f52</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1LegendreBasis.html</anchorfile>
      <anchor>aa488d24153b293d4bbcb767f758ced23</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cusp::block_multilevel::level</name>
    <filename>structcusp_1_1block__multilevel_1_1level.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::LexicographicBlockSparse3Tensor</name>
    <filename>classStokhos_1_1LexicographicBlockSparse3Tensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>a6135e23df3957edc4b7bd0434d80baef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_coord</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>a0ee9928b3b4e49050f68dc07553b2138</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_value</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>ac7695ba0cbddd0fdb83d31c744cf90ce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>aa66814f20cdc3ca758928bc712da5d5d</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>a951be30a308659705eb476eb3a5e608c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>a512b3e5d09ce579fbbdb0050a4b30a97</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>symmetric</name>
      <anchorfile>classStokhos_1_1LexicographicBlockSparse3Tensor.html</anchorfile>
      <anchor>ac4f5273cec99a3729cfee98b4180e886</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::LexicographicTreeBasisNode</name>
    <filename>structStokhos_1_1LexicographicTreeBasisNode.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::LexographicLess</name>
    <filename>classStokhos_1_1LexographicLess.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>LexographicLess</name>
      <anchorfile>classStokhos_1_1LexographicLess.html</anchorfile>
      <anchor>a40f3bedbfaf34556d36772a40fce1897</anchor>
      <arglist>(const compare_type &amp;cmp_=compare_type())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1LexographicLess.html</anchorfile>
      <anchor>ab383160574a4b9e8283bd4c50ec71f7a</anchor>
      <arglist>(const term_type &amp;a, const term_type &amp;b) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classStokhos_1_1LexographicLess.html</anchorfile>
      <anchor>ac47030846f198fc532dec74b11786d89</anchor>
      <arglist>(const element_type &amp;a, const element_type &amp;b) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>compare_type</type>
      <name>cmp</name>
      <anchorfile>classStokhos_1_1LexographicLess.html</anchorfile>
      <anchor>a42fbebd1ff17494ec1eedfbb65a04be4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::LinearGrowthRule</name>
    <filename>classStokhos_1_1LinearGrowthRule.html</filename>
    <templarg></templarg>
    <base>Stokhos::GrowthRule</base>
    <member kind="function">
      <type></type>
      <name>LinearGrowthRule</name>
      <anchorfile>classStokhos_1_1LinearGrowthRule.html</anchorfile>
      <anchor>aa8cbd0ac91d77b6a8b4f6d49da666829</anchor>
      <arglist>(const value_type &amp;a_=value_type(1), const value_type &amp;b_=value_type(0))</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearGrowthRule</name>
      <anchorfile>classStokhos_1_1LinearGrowthRule.html</anchorfile>
      <anchor>a13e2b9b6961fd645eff5a1770e0bc0b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>operator()</name>
      <anchorfile>classStokhos_1_1LinearGrowthRule.html</anchorfile>
      <anchor>a83ca9933b51fec08c7be78a4e86f9d8c</anchor>
      <arglist>(const value_type &amp;x) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>a</name>
      <anchorfile>classStokhos_1_1LinearGrowthRule.html</anchorfile>
      <anchor>a534024d3006aef9e9877cde8803791b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>b</name>
      <anchorfile>classStokhos_1_1LinearGrowthRule.html</anchorfile>
      <anchor>a5f121a9a3f5512f48172fb61d181fe3c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::LinearSparse3Tensor</name>
    <filename>classStokhos_1_1LinearSparse3Tensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>BlockSize</templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>acbd8f184de075bf332611a4ca165edd5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>aligned_dimension</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>aa1b3844d475ef3a65ac86343f83fff27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>a817eaca945f2dd8c434af9123377ff35</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION bool</type>
      <name>symmetric</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>ad39f5ade806939f6abd23452b24d39da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>a87bd7fc758e5f7fb91e12cc3168ced39</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>abd7b33d4c092edf3edc31e7150f78e3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1LinearSparse3Tensor.html</anchorfile>
      <anchor>aba84abfbc81efd61a763f8a79c7e7e7e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView</name>
    <filename>structKokkos_1_1LocalMPVectorView.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
    <templarg>Rank</templarg>
    <templarg>isStatic</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 1, false &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_011_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 1, true &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_011_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 2, false &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_012_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 2, true &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_012_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 3, false &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_013_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalMPVectorView&lt; ViewType, LocalSize, 3, true &gt;</name>
    <filename>structKokkos_1_1LocalMPVectorView_3_01ViewType_00_01LocalSize_00_013_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::Details::LocalReciprocalThreshold</name>
    <filename>structIfpack2_1_1Details_1_1LocalReciprocalThreshold.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::Details::LocalReciprocalThreshold&lt;  Kokkos::View&lt; T, L, D, M, Kokkos::Impl::ViewMPVectorContiguous &gt;, SizeType &gt;</name>
    <filename>structIfpack2_1_1Details_1_1LocalReciprocalThreshold_3_01_01Kokkos_1_1View_3_01T_00_01L_00_01D_01c1d3adcc012d75b5d092a2abb4ba0e0.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::Details::LocalReciprocalThreshold&lt;  Kokkos::View&lt; T, L, D, M, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structIfpack2_1_1Details_1_1LocalReciprocalThreshold_3_01_01Kokkos_1_1View_3_01T_00_01L_00_01D_05b51ee810bd4bc0e9ae481fd8890839a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalUQPCEView</name>
    <filename>structKokkos_1_1LocalUQPCEView.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
    <templarg>Rank</templarg>
    <templarg>isStatic</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalUQPCEView&lt; ViewType, LocalSize, 1, false &gt;</name>
    <filename>structKokkos_1_1LocalUQPCEView_3_01ViewType_00_01LocalSize_00_011_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::LocalUQPCEView&lt; ViewType, LocalSize, 1, true &gt;</name>
    <filename>structKokkos_1_1LocalUQPCEView_3_01ViewType_00_01LocalSize_00_011_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg>LocalSize</templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::log10_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1log10__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::log10_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1log10__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::Log10Op</name>
    <filename>classSacado_1_1ETPCE_1_1Log10Op.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Log10Op</name>
    <filename>classSacado_1_1MP_1_1Log10Op.html</filename>
    <templarg></templarg>
    <base>Expr&lt; Log10Op&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::log_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1log__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::log_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1log__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::LogOp</name>
    <filename>classSacado_1_1ETPCE_1_1LogOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::LogOp</name>
    <filename>classSacado_1_1MP_1_1LogOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; LogOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::LTBSparse3Tensor</name>
    <filename>classStokhos_1_1LTBSparse3Tensor.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <class kind="struct">Stokhos::LTBSparse3Tensor::CijkNode</class>
    <member kind="function">
      <type></type>
      <name>LTBSparse3Tensor</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>af3a06929820e4a06df7f95c858e920c0</anchor>
      <arglist>(const bool symm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~LTBSparse3Tensor</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a1843afd62457edfebabe2260e0533a22</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setHeadNode</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a96b88d02375a7eaec1a862582ad5d144</anchor>
      <arglist>(const Teuchos::RCP&lt; CijkNode &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const CijkNode &gt;</type>
      <name>getHeadNode</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a8521c4ccca22e16bf5a63887e8ef1e03</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a014ffb069d97eb3779109f4d61392d89</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getValue</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>aabee4090841c13d06241217d9a831688</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_entries</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>ad6ebc1ab902e64c5621ccc9a662783cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_leafs</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a01974fd4808e08842ce46b9f4a30a58b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>symmetric</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>a458b58575ab82c7758925d12bb247152</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classStokhos_1_1LTBSparse3Tensor.html</anchorfile>
      <anchor>abdca38d8ca80df184888f8101969f9f1</anchor>
      <arglist>(std::ostream &amp;os, const LTBSparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MatrixFreeOperator</name>
    <filename>classStokhos_1_1MatrixFreeOperator.html</filename>
    <base>Stokhos::SGOperator</base>
    <member kind="function">
      <type></type>
      <name>MatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a3647880d03c5fc0008b67c383b85bb07</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MatrixFreeOperator</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a25b97a7fcacd524daa5828d2375ecea9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>countApplyFlops</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a3432f1a355f05ad07c9114df20967a9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a581ac1f97c3c873b9d2f8101eae29668</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a6e48cb8bd4d669d3fe0d7edeb6483f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>adf25678b2b885d1342b972cd093a337e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>aea256f514a31212e57b675c3a4286833</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>af00ab317319e90326a6d81c8ff890f98</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a62d74e7cd50e609a18affbb289524822</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a454824fac92a2f7b41ef878132eea438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a5432fa3c24bebc814a5a37795753c95a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ae5f59ff0183c871f8f8d1c6f07d28514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a7ccce623a832c0007abeab28ed196d05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a731f2c87cd7a93a245e100b680030d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a8e4263f07c237cb2b473220d154abf0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a0a91eb4bc83778e44ea9a108dc5eee36</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; int, double &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>aea37fafabece594a96cf799768bc3533</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a1a797d3721cc1c3d72e4940a845a0474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>af2425c9c8ba620109c8bd36d6f3b868c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a618d4046fe18e887a142b162d765f487</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>aebb51cdba800fc71b934182999cc4d54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ade2b73247f631563adf4fefc4538c303</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a125fdc46a36ebd78e9eb3dced7004dca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_sg_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a3fe714f4e367549e679cf14491659938</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_sg_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a1dddeaf7180bbeba786b24e5aee54957</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>is_stoch_parallel</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a9ed165d9b943d931edaf637fa1cba143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>global_col_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ab4f8c3149205d9654559351b59878d8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>global_col_map_trans</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a6c262de1aa9b642a859358735bd12dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_col_map</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a3f111076f6c68179c0f365a8c54be703</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>col_importer</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a1b829282ed5bd4af0df18ec0434401c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>col_importer_trans</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ae88a9cf8bba1572c097ab0afdea7658a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a53d09359c3cb39e83b39c367039ad64f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>block_ops</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>abd198a7113874d374afc4c3e243a7622</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>scale_op</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a89d4755331ac9078c534af2351535033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>include_mean</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a4facf4a2f7f63801a89598d430aad812</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>only_use_linear</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ab2f6cf8841cc69efe23133ba84d7b58f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a3523bbfbb4a40b84715c12a277c20d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_block_apply</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a8ffa822806671a33f414ce5bfd1d8a9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>expansion_size</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ab8f21dd2d3119c9fe0294ed1e41eadb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_blocks</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a0c48a6235c81d0481f4cc31b31e9ccb8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>max_num_mat_vec</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>aefb1318858e802ec28d8cae57178078c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>input_col</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a7c081cc1662bdd5dcf4f747fb969f875</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>input_col_trans</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a22c2955273bc700d563a6c93ae43e19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_MultiVector &gt; &gt;</type>
      <name>input_block</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a75001e41f2e5aa052b9b1c6ec33a8939</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt;</type>
      <name>result_block</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a432933d08a54a87cd2cb19d5601da7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a306b52356c5884a2baf106958bb2c870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp_trans</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a761535eb756413d306ea1b63462defef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Cijk_type::k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ab0aead32770ac8789aa83ba402735602</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Cijk_type::k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a2072f6fe3b1a5cc95974bb35f80cd755</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a581ac1f97c3c873b9d2f8101eae29668</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a6e48cb8bd4d669d3fe0d7edeb6483f57</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>adf25678b2b885d1342b972cd093a337e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>aea256f514a31212e57b675c3a4286833</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>af00ab317319e90326a6d81c8ff890f98</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a62d74e7cd50e609a18affbb289524822</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a454824fac92a2f7b41ef878132eea438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a5432fa3c24bebc814a5a37795753c95a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>ae5f59ff0183c871f8f8d1c6f07d28514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a7ccce623a832c0007abeab28ed196d05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a731f2c87cd7a93a245e100b680030d6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a8e4263f07c237cb2b473220d154abf0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MatrixFreeOperator.html</anchorfile>
      <anchor>a0a91eb4bc83778e44ea9a108dc5eee36</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MatrixMarketWriter</name>
    <filename>classStokhos_1_1MatrixMarketWriter.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::MatrixMarketWriter&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt; &gt;</name>
    <filename>classStokhos_1_1MatrixMarketWriter_3_01CrsMatrix_3_01MatrixValue_00_01Device_00_01Layout_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::MaxOp</name>
    <filename>classSacado_1_1ETPCE_1_1MaxOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MaxOp</name>
    <filename>classSacado_1_1MP_1_1MaxOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; MaxOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MaxOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1MaxOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MaxOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MaxOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1MaxOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MaxOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::MeanBasedDivisionExpansionStrategy</name>
    <filename>classStokhos_1_1MeanBasedDivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DivisionExpansionStrategy</base>
    <member kind="function">
      <type></type>
      <name>MeanBasedDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1MeanBasedDivisionExpansionStrategy.html</anchorfile>
      <anchor>a10e5427e9fb38ba8ee50c980a4802415</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MeanBasedDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1MeanBasedDivisionExpansionStrategy.html</anchorfile>
      <anchor>a09da4fa033e391adb5c06823796f5087</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MeanBasedPreconditioner</name>
    <filename>classStokhos_1_1MeanBasedPreconditioner.html</filename>
    <base>Stokhos::SGPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>MeanBasedPreconditioner</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>acc4378157ea154efe8d771aea3b87f22</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MeanBasedPreconditioner</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ab354979f25fc6a87021cea219f9135e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>abcae7d9520b2718aba3ee144304f37be</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ac7d2539b814914dc47735392154d9d14</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a3dedb99bd8fe781fb833b043621b53ae</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a63a32ff85ab3fc7c7c111fe1ccfb7ff1</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a4154cb7dd89afb05814ab1adfe663c09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a628c9e1af0c60b3d3919a3ca579dc48c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a45f2ebe72b1114049bbab77e34f87030</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ae63cc1428ab35f1cdd8e27b9558ca66c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a53ced2db03f4c889607934934aec4d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ae3bbcf8b0e10c48ab607a753e087a405</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a5577ca2baa59fc76fb573699baf2e053</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>aae9daedf58577737b1e9e2b19456d548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a6c12a64ed13315f6a262156a1a5ca62a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a2098b85e638e43b6a158be3b2cb27082</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a0187f5a0cec926bbd97df195aac84d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>aa4b1d67def24abd0f9cd5bd96eb7a5c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_map</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a8e98911bebc400e1ad559ba8a495e75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_blocks</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a851c5fb81d25c2d8646b202f4effc392</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a9bfc3864e21bdce612221dd92c7965c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a3b2dee7f83a6f60494c10d3b661caf9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a8a02c5d7c10cd50c248609ab57604809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_block_apply</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a7da0052bf90bcc1bd0ed66af8661822d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>abcae7d9520b2718aba3ee144304f37be</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ac7d2539b814914dc47735392154d9d14</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a3dedb99bd8fe781fb833b043621b53ae</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a63a32ff85ab3fc7c7c111fe1ccfb7ff1</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a4154cb7dd89afb05814ab1adfe663c09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a628c9e1af0c60b3d3919a3ca579dc48c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a45f2ebe72b1114049bbab77e34f87030</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ae63cc1428ab35f1cdd8e27b9558ca66c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a53ced2db03f4c889607934934aec4d2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>ae3bbcf8b0e10c48ab607a753e087a405</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MeanBasedPreconditioner.html</anchorfile>
      <anchor>a5577ca2baa59fc76fb573699baf2e053</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MeanMultiply</name>
    <filename>classStokhos_1_1MeanMultiply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;::BlockKernel</class>
    <class kind="struct">Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;::Kernel</class>
  </compound>
  <compound kind="class">
    <name>Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; **,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           InputDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; **,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           OutputDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;</name>
    <filename>classStokhos_1_1MeanMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixSto3d02430896b2046e03c5e49c33994b1f.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;</name>
    <filename>classStokhos_1_1MeanMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixSto73730897eeae4bbfed25a1eea9e1d6e7.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::MemoryTraits</name>
    <filename>structStokhos_1_1MemoryTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void *</type>
      <name>alloc</name>
      <anchorfile>structStokhos_1_1MemoryTraits.html</anchorfile>
      <anchor>a8008949ffafc17c3ac7b8c9edde3ea0d</anchor>
      <arglist>(const size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>free</name>
      <anchorfile>structStokhos_1_1MemoryTraits.html</anchorfile>
      <anchor>a44c5f1c2601135514cee186b9ab3ddda</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>Alignment</name>
      <anchorfile>structStokhos_1_1MemoryTraits.html</anchorfile>
      <anchor>a6cb6a614853cd82e56208fa725508221</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::MemoryTraits&lt; Kokkos::HostSpace &gt;</name>
    <filename>structStokhos_1_1MemoryTraits_3_01Kokkos_1_1HostSpace_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void *</type>
      <name>alloc</name>
      <anchorfile>structStokhos_1_1MemoryTraits_3_01Kokkos_1_1HostSpace_01_4.html</anchorfile>
      <anchor>a963521b2064806ff21ed2302184e0c3d</anchor>
      <arglist>(const size_t size)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>free</name>
      <anchorfile>structStokhos_1_1MemoryTraits_3_01Kokkos_1_1HostSpace_01_4.html</anchorfile>
      <anchor>ac9db42fa2be9499fef7885d7c4dadb18</anchor>
      <arglist>(void *ptr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const unsigned</type>
      <name>Alignment</name>
      <anchorfile>structStokhos_1_1MemoryTraits_3_01Kokkos_1_1HostSpace_01_4.html</anchorfile>
      <anchor>a56751118ad63f59682789c75d2ee47d1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::MinOp</name>
    <filename>classSacado_1_1ETPCE_1_1MinOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MinOp</name>
    <filename>classSacado_1_1MP_1_1MinOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; MinOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MinOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1MinOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MinOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MinOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1MinOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MinOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::MLPreconditionerFactory</name>
    <filename>classStokhos_1_1MLPreconditionerFactory.html</filename>
    <base>Stokhos::AbstractPreconditionerFactory</base>
    <member kind="function">
      <type></type>
      <name>MLPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1MLPreconditionerFactory.html</anchorfile>
      <anchor>a1cff566910b28068fc9904afe129bfb4</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MLPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1MLPreconditionerFactory.html</anchorfile>
      <anchor>a715a6623a76cc2abb9dccd1ca9eeb6bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>compute</name>
      <anchorfile>classStokhos_1_1MLPreconditionerFactory.html</anchorfile>
      <anchor>ac412ea5b2a3bcb201ece280337ba1695</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;op, bool compute_prec=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recompute</name>
      <anchorfile>classStokhos_1_1MLPreconditionerFactory.html</anchorfile>
      <anchor>ad03abcc761f602bb3ee9dd4954f243bc</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;op, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;prec)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>precParams</name>
      <anchorfile>classStokhos_1_1MLPreconditionerFactory.html</anchorfile>
      <anchor>ab91297574ac8892754b9af907eee935e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MonomialGramSchmidtPCEBasis</name>
    <filename>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::GSReducedPCEBasisBase</base>
    <member kind="function">
      <type></type>
      <name>MonomialGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a7cf2b3ff6d2e928ca5d7639622d7d99a</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MonomialGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ac0ab31e7fd9ea43f6c0453d10be4fac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a31a11aec5a0e20d4553a798426369e13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>buildReducedBasis</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae6f5c88b4997626fb470732bfe88fb7e</anchor>
      <arglist>(ordinal_type max_p, value_type threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;F, const Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms_, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Qp_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Q_)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a59ced99b7cd48fc097f36121d7ac728f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a31a11aec5a0e20d4553a798426369e13</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MonomialProjGramSchmidtPCEBasis</name>
    <filename>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::GSReducedPCEBasisBase</base>
    <member kind="function">
      <type></type>
      <name>MonomialProjGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a73749c35bf0f2aa115cbfca042d90a32</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MonomialProjGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>aa526a1e0f1b3f9325c6d21cf723bf0b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ab7832da1250aeb3706e97a33c34bfe6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>buildReducedBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a4b980c48a1028a3f206dbef589cd7412</anchor>
      <arglist>(ordinal_type max_p, value_type threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;F, const Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms_, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Qp_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Q_)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>af29761a5e55f3d5aa320ab4ee475e792</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ab7832da1250aeb3706e97a33c34bfe6c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MonomialProjGramSchmidtPCEBasis2</name>
    <filename>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ReducedPCEBasis</base>
    <member kind="function">
      <type></type>
      <name>MonomialProjGramSchmidtPCEBasis2</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ad2d67c3e978435e1b442238255c23176</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MonomialProjGramSchmidtPCEBasis2</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a0dc4c3b96bcf5628ce073428d824c925</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ada7f946ebef0fc6b0666360532be6d86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a45401ecab2ec090f757a3df94867e461</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a9cb85afe6c9015fe752940d1ea7f95cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a27dcc5a79e6c11dbff32ac6da47f2705</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a567b1d7a0a6e3d8d71b9e73058fa87a9</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a29bac36cbe6dbd9fc501d6ac97dda34d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a983fc3aa72f22ede5023f109db18e36f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ab54812df87e5b6e02358278f40142705</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a49dd86dfdabb3588dc3be58a9f9b7cd2</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a233e07495499f14951ffe0d1c4edff07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a00ebc3ffd55ef19480640e1d8ff925dc</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ad767cdcaf7ff08e82c28388d09d4c16f</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a0cb5d0526f78121ec95e7f2064c64d41</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a83b5ccae02b635f0287f11be2e20af1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ordinal_type</type>
      <name>buildQ</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a7041cdfd9c5d16a4d9a3b05c9e16d305</anchor>
      <arglist>(ordinal_type max_p, value_type threshold, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt; &amp;terms_, Teuchos::Array&lt; ordinal_type &gt; &amp;num_terms_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Qp_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A_, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;F_)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ae9de44f562ecf5855dab22d890c20220</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a1f6ad42d099ec475fab3b110dbed7eb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce_basis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>acf927147dde0e814923bc01bc5981f5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a7fb31be0c3280dc0d64d575a43cadbde</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a457cc22043d53a456f031616a00ef3e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ab006a1082a07286a41f819a58725845e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ab7a936497694638954b40eb7f40d5054</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Stokhos::MultiIndex&lt; ordinal_type &gt; &gt;</type>
      <name>terms</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a22969b05abfeac66310836509bc4beab</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>num_terms</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a66a2950a630f85ed4c7563ca82290c6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a79c7ff05167ce5b7f413f727204a4ed1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Q</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a04b2bbd87931be3764f801b3c1e15643</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Qp</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>affe82d2df68e87b867cb9e41832414dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>reduced_quad</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>aa438945225f25c85352eab1ec8f57115</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>abf6ace1482b0f1c44314dfbf2c8d4446</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>rank_threshold</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a9810ff57153a67168c33608b49f3717b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>orthogonalization_method</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a4ff8a7dad9628f2bd0d66d3e5b16ccec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ada7f946ebef0fc6b0666360532be6d86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a45401ecab2ec090f757a3df94867e461</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a9cb85afe6c9015fe752940d1ea7f95cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a27dcc5a79e6c11dbff32ac6da47f2705</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a567b1d7a0a6e3d8d71b9e73058fa87a9</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a29bac36cbe6dbd9fc501d6ac97dda34d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a983fc3aa72f22ede5023f109db18e36f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ab54812df87e5b6e02358278f40142705</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a49dd86dfdabb3588dc3be58a9f9b7cd2</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a233e07495499f14951ffe0d1c4edff07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a00ebc3ffd55ef19480640e1d8ff925dc</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>ad767cdcaf7ff08e82c28388d09d4c16f</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a0cb5d0526f78121ec95e7f2064c64d41</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1MonomialProjGramSchmidtPCEBasis2.html</anchorfile>
      <anchor>a83b5ccae02b635f0287f11be2e20af1f</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MonoProjPCEBasis</name>
    <filename>classStokhos_1_1MonoProjPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>MonoProjPCEBasis</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a613731a0f4952af4090211755ee97289</anchor>
      <arglist>(ordinal_type p, const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &amp;pce, const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &amp;quad, const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk, bool limit_integration_order=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MonoProjPCEBasis</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>ae56cbaa040e9c3393db1e533b5f4db08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getNewCoeffs</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a09dc0cde89b2994b5fcc0fe66b4b2fad</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformCoeffs</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>ab25b70dde05759b5f5f31e4b793fcf81</anchor>
      <arglist>(const value_type *in, value_type *out) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a322f32588419829e4983ad09b8699241</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a1ee56d9d86f2f54911933646cb6e47d2</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>aa45a945bfcbe5d7bd547e4d70f21ca7f</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>limit_integration_order</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a27bf45da1e26ce75b19b1c3ede6fd6a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>abbb5afe3a7a752270a2dc221e0e4ee69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>pce_norms</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a65149c580144d69bf1cbfd90b5d9d3a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>a</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a44a77519d08d705a766de0183b73b22f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>b</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a9e671304f542e648f50c9ceefd7f3b23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>matrix_type</type>
      <name>basis_vecs</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a546050276eb5e1aecb976cefdb47e86d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>vector_type</type>
      <name>new_pce</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a0c55effe1ba2b814d4bfa4269dee7dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a322f32588419829e4983ad09b8699241</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>a1ee56d9d86f2f54911933646cb6e47d2</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1MonoProjPCEBasis.html</anchorfile>
      <anchor>aa45a945bfcbe5d7bd547e4d70f21ca7f</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MortonZLess</name>
    <filename>classStokhos_1_1MortonZLess.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>MortonZLess</name>
      <anchorfile>classStokhos_1_1MortonZLess.html</anchorfile>
      <anchor>aa7f31ae5380182c034778539bd11cd02</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPBlockDiagonalPreconditioner</name>
    <filename>classStokhos_1_1MPBlockDiagonalPreconditioner.html</filename>
    <base>Stokhos::MPPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>MPBlockDiagonalPreconditioner</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac978c4fefc2c73ae42c52adb9afad67b</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;mp_comm, int num_mp_blocks, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;mp_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MPBlockDiagonalPreconditioner</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a6ce20dfc07f984fb1eb05cc23d981e72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a8548205569809525ea228f5c810b9299</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt; &amp;mp_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>abd31c2c9c42e7752947c0a6ef2984f14</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>acaeb0068ac8c68299241a81dc5848b89</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a421ec08692e1646865734b1faa09e324</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a811a5281ce52a6f665305ceced0d3844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a2968f8bd209c6decc7327deb56da47ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a6ad4e875cfa592d807c0fd5a264df5a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a349f8d8483a3a282747adb9aa273a412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a4bbd41829d3eff917534353c4827837e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac575c33c915bb2c7c210eb1b20a49415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac18995f9abfe8587ce88a3f488d82abe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a905c5f0e1f5118cd229e65e066f44471</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>mp_comm</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ab9e636db193b59f392b4d97778ca61fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_mp_blocks</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a40192d7b483dbee4fe69c4bd0b4e92a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a9b7c025bc57d87fcabfa59ed97d66e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_map</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a17f65243e04553de98c735ee8cb4c7ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a5a5546e07baf96adaa864beb7fc06fee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Operator &gt; &gt;</type>
      <name>block_precs</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ad97b3f043375c3cbe79cded5748c7628</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac2a53e7ae76b51736e47669af83ecb00</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a8548205569809525ea228f5c810b9299</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt; &amp;mp_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>abd31c2c9c42e7752947c0a6ef2984f14</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>acaeb0068ac8c68299241a81dc5848b89</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a421ec08692e1646865734b1faa09e324</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a811a5281ce52a6f665305ceced0d3844</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a2968f8bd209c6decc7327deb56da47ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a6ad4e875cfa592d807c0fd5a264df5a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a349f8d8483a3a282747adb9aa273a412</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>a4bbd41829d3eff917534353c4827837e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac575c33c915bb2c7c210eb1b20a49415</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MPBlockDiagonalPreconditioner.html</anchorfile>
      <anchor>ac18995f9abfe8587ce88a3f488d82abe</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPInverseModelEvaluator</name>
    <filename>classStokhos_1_1MPInverseModelEvaluator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>ab2af70be91966338033a976855e13f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>abd908f223995d7cffdb8333a65bc518f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a9e86ce9013cec67a327a85bb3d2bb611</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a638b31de0ffc56731165e33049c4ec56</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>acd04c1ec57842b1232ffc599e2016454</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>aa60571a1eaf348daaf92b3cedc46ea5a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a0222751de00975115fec98774846896a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a7bf996028f1d5151ad7af08db100e8e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a3cbc5263cbfd425c9deaa3b79659840a</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>aaa0b21421be90417a59750b85a52eace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_p_index_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a36baa0dc585e102e1d60a46c2948c825</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_g_index_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a533302d2610df7f52ca15597f8508723</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>base_g_maps</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a047ca423c13b78743dff315cb78bb188</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a1e0643f9eab3ae9e9d359629aa84bcfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a9a0d40224190592214dbe1314b5f1659</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_mp</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a43c6768744a431ca54091a238b003c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_mp</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>adc37f7c6e632070f0df92fa855f942b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>ab2af70be91966338033a976855e13f26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>abd908f223995d7cffdb8333a65bc518f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a9e86ce9013cec67a327a85bb3d2bb611</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a638b31de0ffc56731165e33049c4ec56</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>acd04c1ec57842b1232ffc599e2016454</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>aa60571a1eaf348daaf92b3cedc46ea5a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a0222751de00975115fec98774846896a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a7bf996028f1d5151ad7af08db100e8e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPInverseModelEvaluator.html</anchorfile>
      <anchor>a3cbc5263cbfd425c9deaa3b79659840a</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPMeanBasedPreconditioner</name>
    <filename>classStokhos_1_1MPMeanBasedPreconditioner.html</filename>
    <base>Stokhos::MPPreconditioner</base>
    <member kind="function">
      <type></type>
      <name>MPMeanBasedPreconditioner</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>af872b3b4392020c15b21c9e8c4de15f9</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;mp_comm, int num_mp_blocks, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;mp_map, const Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt; &amp;prec_factory, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MPMeanBasedPreconditioner</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a7d580ba6afd4c9247a6c8644757d35f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a4b8ea80ed7378b92e017430f34e74e37</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt; &amp;mp_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a3739be2766d176ded0dfe1125643b4e3</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a6acf4a79f36933d4194af6df2198c536</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a3c1f8b69a2f74ed15fafbfaf9691f8b3</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a1a48ff088dde86aa83120319d9d812b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a235811b359cec2110a03e289521fad2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a96c96ae89da0dc87d9c7ec10fc7e0083</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a33923d6638c6c51396f54be21ad9539e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a7e8a079e5a75cbfd7cfc696d79cfab19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a453b3c7ca8a4ed5a776fb71ef4b8d2dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a75ae0024c9a2047c0929081f794081f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a5ab730ce8c7f94803e0aa4386f6c9faa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>mp_comm</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>af6c518989b229374d449d5f8d9a5f783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_mp_blocks</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a2c1d346b6d99abf8212e56a24d9b32e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>base_map</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>acf2404b824db855c304d832a730e35d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_map</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>af20f1cbfd621bee563c7d2ef47b51ef1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>prec_factory</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a2732fb9d103eba964749eac5e329ef66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>mean_prec</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a06ca80a6d96e19974448b83d94ee8691</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a7eca09a9637646920ec881d0be06660b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a4b8ea80ed7378b92e017430f34e74e37</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt; &amp;mp_op, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a3739be2766d176ded0dfe1125643b4e3</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a6acf4a79f36933d4194af6df2198c536</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a3c1f8b69a2f74ed15fafbfaf9691f8b3</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a1a48ff088dde86aa83120319d9d812b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a235811b359cec2110a03e289521fad2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a96c96ae89da0dc87d9c7ec10fc7e0083</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a33923d6638c6c51396f54be21ad9539e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a7e8a079e5a75cbfd7cfc696d79cfab19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a453b3c7ca8a4ed5a776fb71ef4b8d2dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1MPMeanBasedPreconditioner.html</anchorfile>
      <anchor>a75ae0024c9a2047c0929081f794081f7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPModelEvaluator</name>
    <filename>classStokhos_1_1MPModelEvaluator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_x_mp_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a45f0bc8705d553cad2e89905aa135cef</anchor>
      <arglist>(const Stokhos::ProductEpetraVector &amp;x_mp_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::ProductEpetraVector &gt;</type>
      <name>get_x_mp_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a82be0f2279dfbb592cb3a7d921b28497</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_p_mp_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a20fe5a3b7f23eeda2ed7b8b2db50af02</anchor>
      <arglist>(int i, const Stokhos::ProductEpetraVector &amp;p_mp_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::ProductEpetraVector &gt;</type>
      <name>get_p_mp_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a9e701fef05a05e9c376755cc858a1204</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_p_mp_map_indices</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ab791308c39f75102f20c7df5326eef85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_g_mp_map_indices</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a64fc0374fe9257024f1405e2dec7e8eb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>get_g_mp_base_maps</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ac14c275bdd1a71d7bb58f36335b8f594</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraVector &gt;</type>
      <name>create_x_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a76cd6afd34aead42f55bc32c2ee3fc33</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraMultiVector &gt;</type>
      <name>create_x_mv_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a578eed94c85ff7b8291c88176e899176</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraVector &gt;</type>
      <name>create_p_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a7abf5a91a99fabbb4dc120cd87a6d102</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraMultiVector &gt;</type>
      <name>create_p_mv_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a94fe4a647f6f51116880690a35e9f803</anchor>
      <arglist>(int l, int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraVector &gt;</type>
      <name>create_f_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aad039da802b043d62c26bb0ed9fb612e</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraMultiVector &gt;</type>
      <name>create_f_mv_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a077eeb037895031181b4dac5e8d77aa7</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraVector &gt;</type>
      <name>create_g_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a8b5615f45c62b9e7efe0b53c956d82a4</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraMultiVector &gt;</type>
      <name>create_g_mv_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a364d7daa177fe8e61bc1afa5ca09c9c4</anchor>
      <arglist>(int l, int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a4c90b7729ef7bf5a242ff7649f49bcf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a58fb041c83062a97bb9841d3cbdbc8f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a8d3d87aa05fbef5de986827b0eb9ec89</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ad657855858db0152f788b226f0efd68f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aae5577931c62246c2422980393f1bfd1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a06eef184ac4b3ec009409c9f88c43870</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a524585a12c9be4c728e3dec7ca5296b1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aebadf9aa2a2a31facd860ec4df575bbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator::Preconditioner &gt;</type>
      <name>create_WPrec</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a5afe778d08296f51c3f4333cf081dea9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_dot_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a66f53449a87c561e39002286dcfd6c97</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ac114c1f7b0c69b3754c9e2bb05ecc14f</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDp_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ab7ff0c6e1bd2026b5348d5538369d63f</anchor>
      <arglist>(int j, int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DfDp_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a76f8907021d1eb84503a40b0c39bb2e1</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a9cb00613078fadbbba4f957bcedfb94a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a05499e782eab8eff7c2ccb9926aa655d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a015a650c30463745fb46f0cfcdb3a37a</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a8b8316adc623a6f07da5408648430800</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_mp_blocks</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ab8c2b0c1e72c8e0ce7cedfc5c23508c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>mp_comm</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ac036ea058b869b26a561b1e109d29c4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_block_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a6617e5dd6fd93b7cbeca018ecf9507f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>af0e7b1ce0e5850613cece9297ce715f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>supports_x</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a36a8464d1dad2cb7a22ff4f1528c2f80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a233ecc299b6d0f91c77c96556369797a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a3f3618686c856c5aa5f4c259224a7d17</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ae8a800998ec66b278fb2a4772930e767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ac3dbb8edaba0d9938749688322726de9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>af53978e7fb464100e5cbeb15dda0577b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ada0c9bd76d4594cf803721f66354bd27</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_p_index_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aec4b893763d7b99ed8441e6c0148f383</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>mp_p_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ad61685000766886ad9c7b1b59274b283</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt;</type>
      <name>mp_p_names</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a4dce0c3c1912adb62a59ca310f3b361d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>adf9046d7582410bf13dc95e7ffbed8af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_mp</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a5067ba9e569ccf74965a0930749f0bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_g_index_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a3c78019953f2743678f492adb8e2d1a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>mp_g_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a84f01a9120143d4ad8822a723c3d673f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraOperator &gt;</type>
      <name>W_mp_blocks</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a5b0472f5d231f96d30734d5ecae00a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::ProductEpetraVector &gt;</type>
      <name>mp_x_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ae45749fd5f7eb1467b4b05757a3bf452</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; ProductEpetraVector &gt; &gt;</type>
      <name>mp_p_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a8e705bc1933316a5d42e1d90f3ff427a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt;</type>
      <name>my_W</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a304a826ce29edfa2aff7dc2c9820abc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>my_x</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>adefae2d0e278ef95d30572101fba2b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a4c90b7729ef7bf5a242ff7649f49bcf4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a58fb041c83062a97bb9841d3cbdbc8f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a8d3d87aa05fbef5de986827b0eb9ec89</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ad657855858db0152f788b226f0efd68f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aae5577931c62246c2422980393f1bfd1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a06eef184ac4b3ec009409c9f88c43870</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a524585a12c9be4c728e3dec7ca5296b1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>aebadf9aa2a2a31facd860ec4df575bbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator::Preconditioner &gt;</type>
      <name>create_WPrec</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a5afe778d08296f51c3f4333cf081dea9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_dot_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a66f53449a87c561e39002286dcfd6c97</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ac114c1f7b0c69b3754c9e2bb05ecc14f</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDp_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>ab7ff0c6e1bd2026b5348d5538369d63f</anchor>
      <arglist>(int j, int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DfDp_op</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a76f8907021d1eb84503a40b0c39bb2e1</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a9cb00613078fadbbba4f957bcedfb94a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a05499e782eab8eff7c2ccb9926aa655d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPModelEvaluator.html</anchorfile>
      <anchor>a015a650c30463745fb46f0cfcdb3a37a</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPModelEvaluatorAdapter</name>
    <filename>classStokhos_1_1MPModelEvaluatorAdapter.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a8985b4c0e1f4839f9992ecf167b4a133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ae1e18075aed54f8626a0abd46f07fe66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a565058ed8e01ce801619e3cfabbba802</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a30ad3ed5446c845840922664c60dc784</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a375c45581a113362de969bd03ad16e3f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a744ea3b165832f36c1b3665e40954021</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ab01993a00c3012a1ceeeb223662de367</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ade174841e785b2103321f7d3924c351c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ac20bfaf13aa7bebd040be7b386779d3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a87343c1744cb42485d4575e6ae2878dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>aec24962774d1e437eeb34304660d4808</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>afc68f5846379c0b601f41cfccb9bbc14</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a8985b4c0e1f4839f9992ecf167b4a133</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ae1e18075aed54f8626a0abd46f07fe66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a565058ed8e01ce801619e3cfabbba802</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a30ad3ed5446c845840922664c60dc784</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a375c45581a113362de969bd03ad16e3f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a744ea3b165832f36c1b3665e40954021</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ab01993a00c3012a1ceeeb223662de367</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ade174841e785b2103321f7d3924c351c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>ac20bfaf13aa7bebd040be7b386779d3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>a87343c1744cb42485d4575e6ae2878dc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1MPModelEvaluatorAdapter.html</anchorfile>
      <anchor>aec24962774d1e437eeb34304660d4808</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::details::MPMultiply</name>
    <filename>classStokhos_1_1details_1_1MPMultiply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::details::MPMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; **,                                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; **,                                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                           OutputMemory &gt;,                                                                                                                           Update                                                                                                                           &gt;</name>
    <filename>classStokhos_1_1details_1_1MPMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1MP_1_1Vector_3098c1d25cf4c34951a9560ff971c706e.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::details::MPMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; *,                                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                           OutputMemory &gt;,                                                                                                                           Update                                                                                                           &gt;</name>
    <filename>classStokhos_1_1details_1_1MPMultiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1MP_1_1Vector_39f88d6ced8fc438e95f9cf54cf85fa3b.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPPreconditioner</name>
    <filename>classStokhos_1_1MPPreconditioner.html</filename>
    <member kind="function">
      <type></type>
      <name>MPPreconditioner</name>
      <anchorfile>classStokhos_1_1MPPreconditioner.html</anchorfile>
      <anchor>a3c3cee997214dcb50fd47b8a8c58fc11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MPPreconditioner</name>
      <anchorfile>classStokhos_1_1MPPreconditioner.html</anchorfile>
      <anchor>a200400284d5d87c4c624844583d5c490</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1MPPreconditioner.html</anchorfile>
      <anchor>a980344d19adc6d16d0be13a99d176b55</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::BlockDiagonalOperator &gt; &amp;mp_op, const Epetra_Vector &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::MPPreconditionerFactory</name>
    <filename>classStokhos_1_1MPPreconditionerFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>MPPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1MPPreconditionerFactory.html</anchorfile>
      <anchor>a391f5a9bb1a81fbc65b3d62d3c282279</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MPPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1MPPreconditionerFactory.html</anchorfile>
      <anchor>a4bebf112b87712b36193899705658116</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::MPPreconditioner &gt;</type>
      <name>build</name>
      <anchorfile>classStokhos_1_1MPPreconditionerFactory.html</anchorfile>
      <anchor>a5c37dabe188d40632e12535e2018ac1e</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;mp_comm, int num_mp_blocks, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;mp_map)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>buildPointPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1MPPreconditionerFactory.html</anchorfile>
      <anchor>a74a2ceacdcbf1e5f7ccbbb45996cf195</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1MPPreconditionerFactory.html</anchorfile>
      <anchor>ac1d36d6062d2b74fa808340d5e4b79b0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::MPVectorAllocation</name>
    <filename>structKokkos_1_1Impl_1_1MPVectorAllocation.html</filename>
    <templarg></templarg>
    <templarg>is_static</templarg>
  </compound>
  <compound kind="class">
    <name>MPVectorAllocation&lt; stokhos_storage_type &gt;</name>
    <filename>structKokkos_1_1Impl_1_1MPVectorAllocation.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::MPVectorAllocation&lt; Storage, false &gt;</name>
    <filename>structKokkos_1_1Impl_1_1MPVectorAllocation_3_01Storage_00_01false_01_4.html</filename>
    <templarg></templarg>
    <class kind="struct">Kokkos::Impl::MPVectorAllocation&lt; Storage, false &gt;::VectorInit</class>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::MPVectorAllocation&lt; Storage, true &gt;</name>
    <filename>structKokkos_1_1Impl_1_1MPVectorAllocation_3_01Storage_00_01true_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::MPVectorArrayHelper</name>
    <filename>structTeuchos_1_1details_1_1MPVectorArrayHelper.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::MPVectorArrayHelper&lt; Stokhos::DynamicStorage&lt; Ordinal, Value, Device &gt; &gt;</name>
    <filename>structTeuchos_1_1details_1_1MPVectorArrayHelper_3_01Stokhos_1_1DynamicStorage_3_01Ordinal_00_01Value_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::MPVectorArrayHelper&lt; Stokhos::StaticFixedStorage&lt; Ordinal, Value, Num, Device &gt; &gt;</name>
    <filename>structTeuchos_1_1details_1_1MPVectorArrayHelper_3_01Stokhos_1_1StaticFixedStorage_3_01Ordinal_000ce397f9660625153d60772531789a93.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
  </compound>
  <compound kind="class">
    <name>Amesos2::MPVectorSolverAdapter</name>
    <filename>classAmesos2_1_1MPVectorSolverAdapter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>ConcreteSolver</templarg>
    <member kind="function">
      <type></type>
      <name>MPVectorSolverAdapter</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a73f2462b91ef4527d4e73c1ad04daaeb</anchor>
      <arglist>(const Teuchos::RCP&lt; const Matrix &gt; &amp;A_, const Teuchos::RCP&lt; Vector &gt; &amp;X_, const Teuchos::RCP&lt; const Vector &gt; &amp;B_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>preOrdering</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>aa1d3269783e13efc77a3271b8383a823</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>symbolicFactorization</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a1c82ccd02786f7a301f5b1876d23aa47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>numericFactorization</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abd04db8fecb36f4c20051af1adb8a058</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af3f5f4796cb6877fd1d68b644249f463</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a2df467efe2facce5b6129b28efcd8b46</anchor>
      <arglist>(const Teuchos::Ptr&lt; Vector &gt; XX, const Teuchos::Ptr&lt; const Vector &gt; BB) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>ac43977e99e949488c93626a095e48984</anchor>
      <arglist>(Vector *XX, const Vector *BB) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>setParameters</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7cb8302080fd341d408d6565f7be4abe</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;parameterList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a049573140acbefbe8c14f786f0956435</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setA</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a73bb56c66bdeeb010f122e1119b9cd3a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Matrix &gt; a, EPhase keep_phase=CLEAN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setA</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7359ac2ca84921cd14248dc931b9b286</anchor>
      <arglist>(const Matrix *a, EPhase keep_phase=CLEAN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>matrixShapeOK</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a092da07480d0d1041ae31b514971be01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a169714e35951d4f398c235925df60f3a</anchor>
      <arglist>(const Teuchos::RCP&lt; Vector &gt; x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abe986ad8e7a8d342722208875467a2ce</anchor>
      <arglist>(Vector *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Vector &gt;</type>
      <name>getX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a5e6a741fa2b0d7340135de7948fed8fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector *</type>
      <name>getXRaw</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af8bf06416aef4f6864c72ae058a932a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a9cca3581e3ffc0b76587426339cce0fb</anchor>
      <arglist>(const Teuchos::RCP&lt; const Vector &gt; b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a275ff7d0460166b79742cb4c7cfd0d71</anchor>
      <arglist>(const Vector *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const Vector &gt;</type>
      <name>getB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abe8b2a6efde977bd9021950ce62760d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Vector *</type>
      <name>getBRaw</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af88a090cdcfe30c27d5f2ddabf7643c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a70369c1e2e0912978502d2f8f077a97f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status &amp;</type>
      <name>getStatus</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a62584f2362bbca66285a24797adf7144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a248b420533a3df394ebf3176e133e63e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a6e37f23cfe6a7ac51eb8f737d9eb27cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>aa88410301d2c084ed1d2ff6de197cae0</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printTiming</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7214f6f36b631ca5516cfc485ced8b5f</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getTiming</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>add405612a4d88a2dbfc9381a1ce7db7b</anchor>
      <arglist>(Teuchos::ParameterList &amp;timingParameterList) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>preOrdering</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>aa1d3269783e13efc77a3271b8383a823</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>symbolicFactorization</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a1c82ccd02786f7a301f5b1876d23aa47</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>numericFactorization</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abd04db8fecb36f4c20051af1adb8a058</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af3f5f4796cb6877fd1d68b644249f463</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a2df467efe2facce5b6129b28efcd8b46</anchor>
      <arglist>(const Teuchos::Ptr&lt; Vector &gt; XX, const Teuchos::Ptr&lt; const Vector &gt; BB) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>ac43977e99e949488c93626a095e48984</anchor>
      <arglist>(Vector *XX, const Vector *BB) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual type &amp;</type>
      <name>setParameters</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7cb8302080fd341d408d6565f7be4abe</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;parameterList)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a049573140acbefbe8c14f786f0956435</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setA</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a73bb56c66bdeeb010f122e1119b9cd3a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Matrix &gt; a, EPhase keep_phase=CLEAN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setA</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7359ac2ca84921cd14248dc931b9b286</anchor>
      <arglist>(const Matrix *a, EPhase keep_phase=CLEAN)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>matrixShapeOK</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a092da07480d0d1041ae31b514971be01</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a169714e35951d4f398c235925df60f3a</anchor>
      <arglist>(const Teuchos::RCP&lt; Vector &gt; x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abe986ad8e7a8d342722208875467a2ce</anchor>
      <arglist>(Vector *x)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; Vector &gt;</type>
      <name>getX</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a5e6a741fa2b0d7340135de7948fed8fe</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Vector *</type>
      <name>getXRaw</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af8bf06416aef4f6864c72ae058a932a3</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a9cca3581e3ffc0b76587426339cce0fb</anchor>
      <arglist>(const Teuchos::RCP&lt; const Vector &gt; b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a275ff7d0460166b79742cb4c7cfd0d71</anchor>
      <arglist>(const Vector *b)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::RCP&lt; const Vector &gt;</type>
      <name>getB</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>abe8b2a6efde977bd9021950ce62760d0</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Vector *</type>
      <name>getBRaw</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>af88a090cdcfe30c27d5f2ddabf7643c5</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Teuchos::Comm&lt; int &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a70369c1e2e0912978502d2f8f077a97f</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Status &amp;</type>
      <name>getStatus</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a62584f2362bbca66285a24797adf7144</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a248b420533a3df394ebf3176e133e63e</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a6e37f23cfe6a7ac51eb8f737d9eb27cf</anchor>
      <arglist>(void) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>aa88410301d2c084ed1d2ff6de197cae0</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printTiming</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>a7214f6f36b631ca5516cfc485ced8b5f</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out, const Teuchos::EVerbosityLevel verbLevel=Teuchos::Describable::verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getTiming</name>
      <anchorfile>classAmesos2_1_1MPVectorSolverAdapter.html</anchorfile>
      <anchor>add405612a4d88a2dbfc9381a1ce7db7b</anchor>
      <arglist>(Teuchos::ParameterList &amp;timingParameterList) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::MPVectorWorkConfig</name>
    <filename>structKokkos_1_1MPVectorWorkConfig.html</filename>
    <templarg>ExecSpace</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::MultiIndex</name>
    <filename>classStokhos_1_1MultiIndex.html</filename>
    <templarg>ordinal_t</templarg>
    <member kind="function">
      <type></type>
      <name>MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>add8dbe0fa68a07f933ebf0360a1d2aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a743817574d5e5b0acb01d1a240e22464</anchor>
      <arglist>(ordinal_type dim, ordinal_type v=ordinal_type(0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a107fc5ecf774d8f2eb6da250dbab3061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>acd662745b5bf4761213546a3b6bd5e4c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a2aada68b22593a6fb80f0d03709a5a23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ordinal_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a30ecc6f3bef734d96e976dcc10e2c11a</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a6816eab637a0a8f6b517e6002c2405ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af65a3aaf3e75007236cdb840a6645a32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a838ef317a7677a704150d5c58708fea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>ac449ac7f12f9be58f0e38ac9b71882bc</anchor>
      <arglist>(ordinal_type v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a191e6563fedf6944838242b6038e3e03</anchor>
      <arglist>(ordinal_type d, ordinal_type v=ordinal_type(0))</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>afcacdcc437b0d66fcea279dc0ad084b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a1dd855a0a2d517058486b93e2fce0752</anchor>
      <arglist>(const MultiIndex &amp;idx) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a17878195d9e8e46fcfeb21d0851a7594</anchor>
      <arglist>(const MultiIndex &amp;idx) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>termWiseLEQ</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>aaf3c375e0e7a853d611fb2e1323df068</anchor>
      <arglist>(const MultiIndex &amp;idx) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>aa9b86bfc447dc921f48c072eb38b7f79</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMin</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af0195e61d6d0ec8567e19be9364db544</anchor>
      <arglist>(const MultiIndex &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMin</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af7ec6e26635af933caf5da2bd553679f</anchor>
      <arglist>(const ordinal_type idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMax</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a8ac6002a70ed7c6faa38ee17663dc27e</anchor>
      <arglist>(const MultiIndex &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMax</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>adb0ebd616921ebd877745e112816e399</anchor>
      <arglist>(const ordinal_type idx)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a19ed748c162206b87c245ad29e09604a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>MultiIndex&lt; ordinal_type &gt;</name>
    <filename>classStokhos_1_1MultiIndex.html</filename>
    <member kind="function">
      <type></type>
      <name>MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>add8dbe0fa68a07f933ebf0360a1d2aa7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a743817574d5e5b0acb01d1a240e22464</anchor>
      <arglist>(ordinal_type dim, ordinal_type v=ordinal_type(0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~MultiIndex</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a107fc5ecf774d8f2eb6da250dbab3061</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>acd662745b5bf4761213546a3b6bd5e4c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a2aada68b22593a6fb80f0d03709a5a23</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ordinal_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a30ecc6f3bef734d96e976dcc10e2c11a</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a6816eab637a0a8f6b517e6002c2405ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af65a3aaf3e75007236cdb840a6645a32</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a838ef317a7677a704150d5c58708fea1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>ac449ac7f12f9be58f0e38ac9b71882bc</anchor>
      <arglist>(ordinal_type v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a191e6563fedf6944838242b6038e3e03</anchor>
      <arglist>(ordinal_type d, ordinal_type v=ordinal_type(0))</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>afcacdcc437b0d66fcea279dc0ad084b8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a1dd855a0a2d517058486b93e2fce0752</anchor>
      <arglist>(const MultiIndex &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a17878195d9e8e46fcfeb21d0851a7594</anchor>
      <arglist>(const MultiIndex &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>termWiseLEQ</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>aaf3c375e0e7a853d611fb2e1323df068</anchor>
      <arglist>(const MultiIndex &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>aa9b86bfc447dc921f48c072eb38b7f79</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMin</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af0195e61d6d0ec8567e19be9364db544</anchor>
      <arglist>(const MultiIndex &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMin</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>af7ec6e26635af933caf5da2bd553679f</anchor>
      <arglist>(const ordinal_type idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMax</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a8ac6002a70ed7c6faa38ee17663dc27e</anchor>
      <arglist>(const MultiIndex &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>MultiIndex &amp;</type>
      <name>termWiseMax</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>adb0ebd616921ebd877745e112816e399</anchor>
      <arglist>(const ordinal_type idx)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1MultiIndex.html</anchorfile>
      <anchor>a19ed748c162206b87c245ad29e09604a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MultiplicationOp</name>
    <filename>classSacado_1_1MP_1_1MultiplicationOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; MultiplicationOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::MultiplicationOp</name>
    <filename>classSacado_1_1ETPCE_1_1MultiplicationOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MultiplicationOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1MultiplicationOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MultiplicationOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::MultiplicationOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1MultiplicationOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; MultiplicationOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply</name>
    <filename>classStokhos_1_1Multiply.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ApplyKernelAsymmetric</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ApplyKernelSymmetric</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CooProductTensor&lt; TensorScalar, Kokkos::Cuda, Pack &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::CooKernel</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::MultiplyKernel</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; TiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ProductTensorLoop</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; SimpleTiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ProductTensorLoop</class>
    <class kind="struct">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::TensorReadEntry</class>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt;                  StochasticProductTensor&lt; TensorScalar, TensorType, Kokkos::Cuda &gt;,           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01_01abebfd27d28f66f7636e30b0d3a89237.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; BlockSpec, MatrixValue, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01BlockSpec_00_01MatrixValue_00_01Kokkos_1_1Cud198d14543ffe91bad1a78a080658e3af.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CooProductTensor&lt; TensorScalar, Kokkos::Cuda, Pack &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01CooProductTensor_3_01TensorScalar_00_01Kokkosff76258380d126df2e5df2b450a8dfe5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Pack</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01CrsProductTensor_3_01TensorScalar_00_01Kokkos7052e00780ec981320118da803ec29d1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; FlatSparse3Tensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01FlatSparse3Tensor_3_01TensorScalar_00_01Kokko73719d03421df33a35d798860da592e3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; FlatSparse3Tensor_kji&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01FlatSparse3Tensor__kji_3_01TensorScalar_00_01e0176c7adad0293a05285cafcb4c52dd.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LexicographicBlockSparse3Tensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01LexicographicBlockSparse3Tensor_3_01TensorScaa532c9374d190b7f59bda0f1e78b09f4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01LinearSparse3Tensor_3_01TensorScalar_00_01Kok2ab512d8425480bcf0201eee8e1238a8.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>BlockSize</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; SimpleTiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01SimpleTiledCrsProductTensor_3_01TensorScalar_ace6204b5f324b41fbb08a1e2587828a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::OpenMP &gt;, Kokkos::OpenMP &gt;, MatrixValue, Kokkos::OpenMP &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::OpenMP &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::OpenMP &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01StochasticProductTensor_3_01ValueType_00_01Cr3d08fb889db57a777d9ff85dfefbd686.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::Serial &gt;, Kokkos::Serial &gt;, MatrixValue, Kokkos::Serial &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Serial &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Serial &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01StochasticProductTensor_3_01ValueType_00_01Crda8e7f3166d7ae686e922f8bfb6bbcbe.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::Threads &gt;, Kokkos::Threads &gt;, MatrixValue, Kokkos::Threads &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Threads &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Threads &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01StochasticProductTensor_3_01ValueType_00_01Cr6c072b80eb0ac9cf2b7f28f0f49603f3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; TiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01TiledCrsProductTensor_3_01TensorScalar_00_01K7103469fac52f044001b591b645b7b16.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; BlockCrsMatrix&lt; BlockSpec, MatrixValue, Device &gt;,                                                                                                           Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Device &gt;,                                                                                                           Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Device &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01BlockCrsMatrix_3_01BlockSpec_00_01MatrixValue_00_01Device_01_4_00_0a314b7883012f15a3c45fd5e4f8a8f2e.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputMultiVectorType,                                                                                                           OutputMultiVectorType,                                                                                                           std::vector&lt; OrdinalType &gt;,                                                                                                           IntegralRank&lt; 2 &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01CrsMatrix_3_01MatrixValue_00_01Device_00_01Layout_01_4_00_01_01_01_4062477b31f9aa52eec6e1b6f596077e.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputMultiVectorType,                                                                                                           OutputMultiVectorType,                                                                                                           void,                                                                                                           IntegralRank&lt; 2 &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01CrsMatrix_3_01MatrixValue_00_01Device_00_01Layout_01_4_00_01_01_01_48b9761156328800b37fde0e0a6a6897.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputVectorType,                                                                                                           OutputVectorType,                                                                                                           void,                                                                                                           IntegralRank&lt; 1 &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01CrsMatrix_3_01MatrixValue_00_01Device_00_01Layout_01_4_00_01_01_01_099bd90ffcac840325eb70b1a67d5ca9.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           std::vector&lt; InputViewType &gt;,                                                                                                           std::vector&lt; OutputViewType &gt;,                                                                                                           void,                                                                                                           IntegralRank&lt; 1 &gt; &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01CrsMatrix_3_01MatrixValue_00_01Device_00_01Layout_01_4_00_01_01_01_912f7b21e049a5aee2087a31cb133993.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; **,                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; **,                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1MP_1_1Vector_3_01MatrixStora5ddaaa5f3e9c431ba859cdbf78fee79.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; *,                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; *,                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1MP_1_1Vector_3_01MatrixStor259c3fe41924b1c12e705c911c895d48.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; **,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; **,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixStoragefbef985d4954901c55619de531cc9a2c.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                                   ViewDevice,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</name>
    <filename>classStokhos_1_1Multiply_3_01KokkosSparse_1_1CrsMatrix_3_01Sacado_1_1UQ_1_1PCE_3_01MatrixStoragef48baca7cc386bf48ec55db988e33ac3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::details::MultiplyAssign</name>
    <filename>structStokhos_1_1details_1_1MultiplyAssign.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::MultiplyImpl</name>
    <filename>classStokhos_1_1MultiplyImpl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::MultiplyKernel</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01CrsProductTensor_3_01TensorScalar_00_01Kokkos3187594156638b18f34d8ac27d016338.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::details::MultiplyScaledAssign</name>
    <filename>structStokhos_1_1details_1_1MultiplyScaledAssign.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::details::MultiplyScaledUpdate</name>
    <filename>structStokhos_1_1details_1_1MultiplyScaledUpdate.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::details::MultiplyScaledUpdate2</name>
    <filename>structStokhos_1_1details_1_1MultiplyScaledUpdate2.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::details::MultiplyUpdate</name>
    <filename>structStokhos_1_1details_1_1MultiplyUpdate.html</filename>
  </compound>
  <compound kind="class">
    <name>Tpetra::MultiVector</name>
    <filename>classTpetra_1_1MultiVector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Belos::MultiVecTraits&lt; BaseScalar, Tpetra::MultiVector&lt; Sacado::PCE::OrthogPoly&lt; BaseScalar, Storage &gt;, LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1MultiVecTraits_3_01BaseScalar_00_01Tpetra_1_1MultiVector_3_01Sacado_1_1PCE_1_1Orth3cf0e1fb12241551e5e4ab66325f8df2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Belos::MultiVecTraits&lt; typename Storage::value_type,                                                                                                                                                                   Tpetra::MultiVector&lt; Sacado::MP::Vector&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                                           LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>Clone</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>a82d4b57259d284482ecbdce1a9e9af69</anchor>
      <arglist>(const MV &amp;X, const int numVecs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>af70066e7032bba5d3372c9073e126f20</anchor>
      <arglist>(const MV &amp;X)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>aa2fe13548c19dbb248284ad2e9321149</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>a0a83c7a99a2d5881bd62b0d76ec05353</anchor>
      <arglist>(const MV &amp;mv, const Teuchos::Range1D &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvAddMv</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>aeb51644b60deed3393796ef6eb1ea570</anchor>
      <arglist>(Scalar alpha, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, Scalar beta, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvDot</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>a67820db7a93c981ca42515b8c7c0a739</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, std::vector&lt; dot_type &gt; &amp;dots)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvNorm</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_014e224de46576376cce164cc693a22330.html</anchorfile>
      <anchor>adc79f2279e2bb7ddaccc925abd9bf785</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, std::vector&lt; mag_type &gt; &amp;normvec, NormType type=TwoNorm)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::MultiVecTraits&lt; typename Storage::value_type,                                                                                                                                                                   Tpetra::MultiVector&lt; Sacado::UQ::PCE&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                                           LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>Clone</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>ad6d606af4a4227fef3a8a04de259e388</anchor>
      <arglist>(const MV &amp;X, const int numVecs)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>a71edbb5e806f3b6dd055e7530933ad60</anchor>
      <arglist>(const MV &amp;X)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>a318464914cc42dbed52ee01a682a6b32</anchor>
      <arglist>(const MV &amp;mv, const std::vector&lt; int &gt; &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; MV &gt;</type>
      <name>CloneCopy</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>a7e2624267206b5d05b328753a57c0a32</anchor>
      <arglist>(const MV &amp;mv, const Teuchos::Range1D &amp;index)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvAddMv</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>a76cac95fc327e02272821e558ab41717</anchor>
      <arglist>(Scalar alpha, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, Scalar beta, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvDot</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>aee437292b82fa49f5b0aeb1a5ef327bd</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;A, const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;B, std::vector&lt; dot_type &gt; &amp;dots)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>MvNorm</name>
      <anchorfile>classBelos_1_1MultiVecTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0147bfb7fb82b57b8ee13f0cb3e425b607.html</anchorfile>
      <anchor>ae12fc17fb4c6d8c092dd7e7da7347749</anchor>
      <arglist>(const Tpetra::MultiVector&lt; Scalar, LO, GO, Node &gt; &amp;mv, std::vector&lt; mag_type &gt; &amp;normvec, NormType type=TwoNorm)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::MV_MultFunctor&lt;  Kokkos::View&lt; CT, CL, CD, CM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; AT, AL, AD, AM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; BT, BL, BD, BM, Kokkos::Impl::ViewPCEContiguous &gt;, scalar_ab, scalar_c, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1MV__MultFunctor_3_01_01Kokkos_1_1View_3_01CT_00_01CL_00_01CD_00_01CM4208115b1b2d950c621122ac7387e8b2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>scalar_ab</templarg>
    <templarg>scalar_c</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::MV_Reciprocal_Functor&lt;  Kokkos::View&lt; RT, RL, RD, RM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; XT, XL, XD, XM, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1MV__Reciprocal__Functor_3_01_01Kokkos_1_1View_3_01RT_00_01RL_00_01RDee3580be990faf90b676409b61ebcbb4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::MV_ReciprocalSelf_Functor&lt;  Kokkos::View&lt; RT, RL, RD, RM, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1MV__ReciprocalSelf__Functor_3_01_01Kokkos_1_1View_3_01RT_00_01RL_00_ba2ae6076635ee05e8250e3631915866.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::KL::OneDEigenPair</name>
    <filename>structStokhos_1_1KL_1_1OneDEigenPair.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::KL::OneDExponentialCovarianceFunction</name>
    <filename>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</filename>
    <templarg>value_type</templarg>
    <class kind="struct">Stokhos::KL::OneDExponentialCovarianceFunction::EigFuncCos</class>
    <class kind="struct">Stokhos::KL::OneDExponentialCovarianceFunction::EigFuncSin</class>
    <member kind="function">
      <type></type>
      <name>OneDExponentialCovarianceFunction</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>affaf7ac7b1d1e12b58f66ccce6e98f89</anchor>
      <arglist>(int M, const value_type &amp;a, const value_type &amp;b, const value_type &amp;L, const int dim_name, Teuchos::ParameterList &amp;solverParams)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OneDExponentialCovarianceFunction</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>af33c37f56db225159336f453e1c57e91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>evaluateCovariance</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>a622eab57400ff201acd84444878c747b</anchor>
      <arglist>(const value_type &amp;x, const value_type &amp;xp) const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; eigen_pair_type &gt; &amp;</type>
      <name>getEigenPairs</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>a90b326ffcd6f70e63555864dcb020586</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>newton</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>aa43ca3b94b2a27ecd1aa2bac8f701185</anchor>
      <arglist>(const Func &amp;func, const value_type &amp;a, const value_type &amp;b, magnitude_type tol, int max_num_its)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>value_type</type>
      <name>bisection</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>a151354ecad8f771e64c06cd29b7e844e</anchor>
      <arglist>(const Func &amp;func, const value_type &amp;a, const value_type &amp;b, magnitude_type tol, int max_num_its)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>L</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>a6705d08830b8bd7e41284124d612ee7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; eigen_pair_type &gt;</type>
      <name>eig_pair</name>
      <anchorfile>classStokhos_1_1KL_1_1OneDExponentialCovarianceFunction.html</anchorfile>
      <anchor>a30c4d538de0b69aa422e9ced3284d9c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::OneDOrthogPolyBasis</name>
    <filename>classStokhos_1_1OneDOrthogPolyBasis.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="typedef">
      <type>int(*</type>
      <name>LevelToOrderFnPtr</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a5b125d90fef32cec337b87d8a0d531a2</anchor>
      <arglist>)(int level, int growth)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OneDOrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>ad1641245ab13cf537d9c128079f6b3a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OneDOrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aa48a9668b066bcc15864fb9ec444d47d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a00e3632148eda30a49d2c160b476575c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aa35b82940465865eddf0ae2fae676175</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>ace7caf3e717d11c8fb6b84b327073235</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a247e60327f9e3dec2cfe7a4814cb9f00</anchor>
      <arglist>(ordinal_type i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a4ede19ff956b6b053b8616390585f7bc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeSparseTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aea72772eeb0a9d4f1ded5d43af638a8d</anchor>
      <arglist>(ordinal_type order) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a52d73d5d87286cffc7bab8bf8a999dc9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a1d0bb55a1118952441947488cd2fb6f9</anchor>
      <arglist>(const value_type &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_pts) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a8375ccaa0727e99ce6f2d8079c49cc37</anchor>
      <arglist>(const value_type &amp;point, ordinal_type order) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aec341a6abd8a7a2a6a6e8b2e02ad03a9</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a68269eae203ff7a4c67aee4f01183e35</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a5375176783780481be94bfd5e23af85f</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a71d9beffe70e5d8a340c966d06fe188e</anchor>
      <arglist>(ordinal_type n) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aa2e0e3e52a7b6243f80a0893d4e80842</anchor>
      <arglist>(ordinal_type p) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a6b8b2b8381bd9dae6a8d2586432f4cac</anchor>
      <arglist>(ordinal_type n) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>a447857676a38a214e2d5bd33bb4b160c</anchor>
      <arglist>(ordinal_type n) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual LevelToOrderFnPtr</type>
      <name>getSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>ad2d99a4e71e0c3896f2df81259ddd1dc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1OneDOrthogPolyBasis.html</anchorfile>
      <anchor>aad40c9e0ee1cb3d89384b8d04c236919</anchor>
      <arglist>(LevelToOrderFnPtr ptr)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::Operator</name>
    <filename>classStokhos_1_1Operator.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="function">
      <type></type>
      <name>Operator</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>a40080b12aced0d5d132c54a85ca7a0d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>a14b609e498b72e5b66b37931c30f7aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>aa5e6a6ab612878bda08f9906142132eb</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type m) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Operator&lt; ordinal_type, double &gt;</name>
    <filename>classStokhos_1_1Operator.html</filename>
    <member kind="function">
      <type></type>
      <name>Operator</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>a40080b12aced0d5d132c54a85ca7a0d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Operator</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>a14b609e498b72e5b66b37931c30f7aa8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1Operator.html</anchorfile>
      <anchor>aa5e6a6ab612878bda08f9906142132eb</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, double &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, double &gt; &amp;Result, ordinal_type m) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::OperatorTraits&lt; BaseScalar, Tpetra::MultiVector&lt; Sacado::PCE::OrthogPoly&lt; BaseScalar, Storage &gt;, LO, GO, Node &gt;, Tpetra::Operator&lt; Sacado::PCE::OrthogPoly&lt; BaseScalar, Storage &gt;, LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1OperatorTraits_3_01BaseScalar_00_01Tpetra_1_1MultiVector_3_01Sacado_1_1PCE_1_1Orth2df8a138550e2526f78b79a87984faf6.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Belos::OperatorTraits&lt; typename Storage::value_type,                                                                                                                                                                           Tpetra::MultiVector&lt; Sacado::MP::Vector&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                                                   LO, GO, Node &gt;,                                                                                                                                                                           Tpetra::Operator&lt; Sacado::MP::Vector&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                   LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1OperatorTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_0105c310d05c127886425f8a7bda089a7d.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Belos::OperatorTraits&lt; typename Storage::value_type,                                                                                                                                                                           Tpetra::MultiVector&lt; Sacado::UQ::PCE&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                                                   LO, GO, Node &gt;,                                                                                                                                                                           Tpetra::Operator&lt; Sacado::UQ::PCE&lt; Storage &gt;,                                                                                                                                                                                                                                                                                                                   LO, GO, Node &gt; &gt;</name>
    <filename>classBelos_1_1OperatorTraits_3_01typename_01Storage_1_1value__type_00_01_01_01_01_01_01_01_01_01f007a6c5f79dccabc235d6402bc17e5f.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::OrthogonalizationFactory</name>
    <filename>classStokhos_1_1OrthogonalizationFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>OrthogonalizationFactory</name>
      <anchorfile>classStokhos_1_1OrthogonalizationFactory.html</anchorfile>
      <anchor>aca41fa269c2c9ac0ce26e3a6eced8d12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogonalizationFactory</name>
      <anchorfile>classStokhos_1_1OrthogonalizationFactory.html</anchorfile>
      <anchor>a2f5d498ee4a1f5df95dde9cb55cd305e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ordinal_type</type>
      <name>createOrthogonalBasis</name>
      <anchorfile>classStokhos_1_1OrthogonalizationFactory.html</anchorfile>
      <anchor>ab9026918df7927c98b14bb25e110c3a7</anchor>
      <arglist>(const std::string &amp;method, value_type threshold, bool verbose, const SDM &amp;A, const Teuchos::Array&lt; value_type &gt; &amp;w, SDM &amp;Q, SDM &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::PCE::OrthogPoly</name>
    <filename>classSacado_1_1PCE_1_1OrthogPoly.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::OrthogPoly</name>
    <filename>classSacado_1_1ETPCE_1_1OrthogPoly.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::OrthogPolyApprox</name>
    <filename>classStokhos_1_1OrthogPolyApprox.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <templarg>storage_type</templarg>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aaa7126088a662a72e6bee7cf5af4340a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis=Teuchos::null, ordinal_type sz=0, const value_type *vals=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af931bdbe32e14026a7bf52134628e24c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af340f68bdc6716f8307bb3fd37dbea8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a3c59fbe28de78bae6d26b5abf295e72c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ab99dffb1e6481b5c4887daa02f6d7ea8</anchor>
      <arglist>(const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a210f39ef2dd418b58860cffa05d5048d</anchor>
      <arglist>(const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aeac5d84de07c11787b9ee25ebb6438cf</anchor>
      <arglist>(const value_type *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac2259d97f866f003d36359e948bc28dd</anchor>
      <arglist>(const OrthogPolyApprox&lt; ordinal_type, value_type, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa44d17b359b03e4de26ba34267a44838</anchor>
      <arglist>(value_type *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a92f48e760a44f7c3635cbddc35b3e4d2</anchor>
      <arglist>(OrthogPolyApprox&lt; ordinal_type, value_type, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aee6a1d2873850e2a7eb0f97274b2481c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a08ffca460b38bbb13294989ab6122b16</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, ordinal_type sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a5c486867adf37c866f52294f2cc8242b</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa73f4b1fceb9e15f15af2f9791d6dce4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>abbd6b2b7c5238dff9309c58e0114028f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a917bd400a3270d81b1cb697a4ca9e37c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aac601aa25b0fe439e226dd0d9ba99f95</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a966cb39acbbf96c3df0f32e746a5f654</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>add9b8eb283f976089d0b6e513555ddde</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac9ac672cf14b64c1301db43671f10eae</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const </arglist>
    </member>
    <member kind="function">
      <type>const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9e154f26e9f73148fa48550762a1547f</anchor>
      <arglist>(ordinal_type term) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a07642c34850ee3b3d3b1bd9c27b06385</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ad28e716ab93057088bfbbee0947f551b</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;point, const Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a97e98750852d29d79b8e2d979223d101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>standard_deviation</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9a81c804956aaa3c4764fac593d8a4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>two_norm</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a15f2ff24114af1cba033c9f3a05aa221</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>two_norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a8365602bd6464d3a7e7072a550b04a9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>inner_product</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ae4e0ba44eb10c8c2f241719729fbf970</anchor>
      <arglist>(const OrthogPolyApprox &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a2c868c03f62841ee9290a0f67f0d7115</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a1affac45812d2b64a26e5ab12e100762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>storage_type</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a58b8133d3cbdd7a431ca79448d2f9add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyApprox&lt; int, double &gt;</name>
    <filename>classStokhos_1_1OrthogPolyApprox.html</filename>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aaa7126088a662a72e6bee7cf5af4340a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis=Teuchos::null, int sz=0, const double *vals=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af931bdbe32e14026a7bf52134628e24c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af340f68bdc6716f8307bb3fd37dbea8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a3c59fbe28de78bae6d26b5abf295e72c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ab99dffb1e6481b5c4887daa02f6d7ea8</anchor>
      <arglist>(const double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a210f39ef2dd418b58860cffa05d5048d</anchor>
      <arglist>(const double &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aeac5d84de07c11787b9ee25ebb6438cf</anchor>
      <arglist>(const double *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac2259d97f866f003d36359e948bc28dd</anchor>
      <arglist>(const OrthogPolyApprox&lt; int, double, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa44d17b359b03e4de26ba34267a44838</anchor>
      <arglist>(double *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a92f48e760a44f7c3635cbddc35b3e4d2</anchor>
      <arglist>(OrthogPolyApprox&lt; int, double, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aee6a1d2873850e2a7eb0f97274b2481c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a08ffca460b38bbb13294989ab6122b16</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;new_basis, int sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a5c486867adf37c866f52294f2cc8242b</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa73f4b1fceb9e15f15af2f9791d6dce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>abbd6b2b7c5238dff9309c58e0114028f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a917bd400a3270d81b1cb697a4ca9e37c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aac601aa25b0fe439e226dd0d9ba99f95</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a966cb39acbbf96c3df0f32e746a5f654</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>add9b8eb283f976089d0b6e513555ddde</anchor>
      <arglist>(int dimension, int order)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac9ac672cf14b64c1301db43671f10eae</anchor>
      <arglist>(int dimension, int order) const</arglist>
    </member>
    <member kind="function">
      <type>const MultiIndex&lt; int &gt; &amp;</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9e154f26e9f73148fa48550762a1547f</anchor>
      <arglist>(int term) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a07642c34850ee3b3d3b1bd9c27b06385</anchor>
      <arglist>(const Teuchos::Array&lt; double &gt; &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ad28e716ab93057088bfbbee0947f551b</anchor>
      <arglist>(const Teuchos::Array&lt; double &gt; &amp;point, const Teuchos::Array&lt; double &gt; &amp;basis_vals) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a97e98750852d29d79b8e2d979223d101</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>standard_deviation</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9a81c804956aaa3c4764fac593d8a4da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>two_norm</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a15f2ff24114af1cba033c9f3a05aa221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>two_norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a8365602bd6464d3a7e7072a550b04a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>inner_product</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ae4e0ba44eb10c8c2f241719729fbf970</anchor>
      <arglist>(const OrthogPolyApprox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a2c868c03f62841ee9290a0f67f0d7115</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a1affac45812d2b64a26e5ab12e100762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stokhos::StandardStorage&lt; int,       double &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a58b8133d3cbdd7a431ca79448d2f9add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyApprox&lt; ordinal_type, value_type &gt;</name>
    <filename>classStokhos_1_1OrthogPolyApprox.html</filename>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aaa7126088a662a72e6bee7cf5af4340a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis=Teuchos::null, ordinal_type sz=0, const value_type *vals=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af931bdbe32e14026a7bf52134628e24c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af340f68bdc6716f8307bb3fd37dbea8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a3c59fbe28de78bae6d26b5abf295e72c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ab99dffb1e6481b5c4887daa02f6d7ea8</anchor>
      <arglist>(const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a210f39ef2dd418b58860cffa05d5048d</anchor>
      <arglist>(const value_type &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aeac5d84de07c11787b9ee25ebb6438cf</anchor>
      <arglist>(const value_type *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac2259d97f866f003d36359e948bc28dd</anchor>
      <arglist>(const OrthogPolyApprox&lt; ordinal_type, value_type, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa44d17b359b03e4de26ba34267a44838</anchor>
      <arglist>(value_type *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a92f48e760a44f7c3635cbddc35b3e4d2</anchor>
      <arglist>(OrthogPolyApprox&lt; ordinal_type, value_type, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aee6a1d2873850e2a7eb0f97274b2481c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a08ffca460b38bbb13294989ab6122b16</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, ordinal_type sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a5c486867adf37c866f52294f2cc8242b</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa73f4b1fceb9e15f15af2f9791d6dce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>abbd6b2b7c5238dff9309c58e0114028f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a917bd400a3270d81b1cb697a4ca9e37c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aac601aa25b0fe439e226dd0d9ba99f95</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a966cb39acbbf96c3df0f32e746a5f654</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>add9b8eb283f976089d0b6e513555ddde</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac9ac672cf14b64c1301db43671f10eae</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const</arglist>
    </member>
    <member kind="function">
      <type>const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9e154f26e9f73148fa48550762a1547f</anchor>
      <arglist>(ordinal_type term) const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a07642c34850ee3b3d3b1bd9c27b06385</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ad28e716ab93057088bfbbee0947f551b</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;point, const Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a97e98750852d29d79b8e2d979223d101</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>standard_deviation</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9a81c804956aaa3c4764fac593d8a4da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>two_norm</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a15f2ff24114af1cba033c9f3a05aa221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>two_norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a8365602bd6464d3a7e7072a550b04a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>inner_product</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ae4e0ba44eb10c8c2f241719729fbf970</anchor>
      <arglist>(const OrthogPolyApprox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a2c868c03f62841ee9290a0f67f0d7115</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a1affac45812d2b64a26e5ab12e100762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stokhos::StandardStorage&lt; ordinal_type,       value_type &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a58b8133d3cbdd7a431ca79448d2f9add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyApprox&lt; OrdinalType, ValueType &gt;</name>
    <filename>classStokhos_1_1OrthogPolyApprox.html</filename>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aaa7126088a662a72e6bee7cf5af4340a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; OrdinalType, ValueType &gt; &gt; &amp;basis=Teuchos::null, OrdinalType sz=0, const ValueType *vals=NULL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af931bdbe32e14026a7bf52134628e24c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OrthogPolyApprox</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>af340f68bdc6716f8307bb3fd37dbea8c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a3c59fbe28de78bae6d26b5abf295e72c</anchor>
      <arglist>(const OrthogPolyApprox &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>OrthogPolyApprox &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ab99dffb1e6481b5c4887daa02f6d7ea8</anchor>
      <arglist>(const ValueType &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a210f39ef2dd418b58860cffa05d5048d</anchor>
      <arglist>(const ValueType &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aeac5d84de07c11787b9ee25ebb6438cf</anchor>
      <arglist>(const ValueType *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac2259d97f866f003d36359e948bc28dd</anchor>
      <arglist>(const OrthogPolyApprox&lt; OrdinalType, ValueType, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa44d17b359b03e4de26ba34267a44838</anchor>
      <arglist>(ValueType *v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a92f48e760a44f7c3635cbddc35b3e4d2</anchor>
      <arglist>(OrthogPolyApprox&lt; OrdinalType, ValueType, S &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; OrdinalType, ValueType &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aee6a1d2873850e2a7eb0f97274b2481c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a08ffca460b38bbb13294989ab6122b16</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; OrdinalType, ValueType &gt; &gt; &amp;new_basis, OrdinalType sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a5c486867adf37c866f52294f2cc8242b</anchor>
      <arglist>(OrdinalType sz)</arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aa73f4b1fceb9e15f15af2f9791d6dce4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>abbd6b2b7c5238dff9309c58e0114028f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a917bd400a3270d81b1cb697a4ca9e37c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>aac601aa25b0fe439e226dd0d9ba99f95</anchor>
      <arglist>(OrdinalType i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a966cb39acbbf96c3df0f32e746a5f654</anchor>
      <arglist>(OrdinalType i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>add9b8eb283f976089d0b6e513555ddde</anchor>
      <arglist>(OrdinalType dimension, OrdinalType order)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ac9ac672cf14b64c1301db43671f10eae</anchor>
      <arglist>(OrdinalType dimension, OrdinalType order) const</arglist>
    </member>
    <member kind="function">
      <type>const MultiIndex&lt; OrdinalType &gt; &amp;</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9e154f26e9f73148fa48550762a1547f</anchor>
      <arglist>(OrdinalType term) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a07642c34850ee3b3d3b1bd9c27b06385</anchor>
      <arglist>(const Teuchos::Array&lt; ValueType &gt; &amp;point) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ad28e716ab93057088bfbbee0947f551b</anchor>
      <arglist>(const Teuchos::Array&lt; ValueType &gt; &amp;point, const Teuchos::Array&lt; ValueType &gt; &amp;basis_vals) const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>mean</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a97e98750852d29d79b8e2d979223d101</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>standard_deviation</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a9a81c804956aaa3c4764fac593d8a4da</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>two_norm</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a15f2ff24114af1cba033c9f3a05aa221</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>two_norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a8365602bd6464d3a7e7072a550b04a9f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValueType</type>
      <name>inner_product</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>ae4e0ba44eb10c8c2f241719729fbf970</anchor>
      <arglist>(const OrthogPolyApprox &amp;b) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a2c868c03f62841ee9290a0f67f0d7115</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; OrdinalType, ValueType &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a1affac45812d2b64a26e5ab12e100762</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stokhos::StandardStorage&lt; OrdinalType,       ValueType &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1OrthogPolyApprox.html</anchorfile>
      <anchor>a58b8133d3cbdd7a431ca79448d2f9add</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::OrthogPolyBasis</name>
    <filename>classStokhos_1_1OrthogPolyBasis.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="function">
      <type></type>
      <name>OrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a210606e42136ece7bb7e1c2b94056ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a6847253a8dd251138cf48864582dd12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a671691b67654978477423587f3478843</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>aaca40953942fde3a5988bb1055a7d837</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a26e57238693f5b2d8f86299f9d7cd861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a17ca685c51ac723c0ea25a6c88e6e5f0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a93a61353270578d01c11902b88666ac8</anchor>
      <arglist>(ordinal_type i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>aba3a3c38c5c23c3ccf2099e6597c1082</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>ae07ba012046e3016df001927095a3cd1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a3fb2bdff52d57ce410bad97c9665201d</anchor>
      <arglist>(ordinal_type i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a6bb3dd5e7b1adb9effc943de9c2f3d3c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>ab250c8b4c32b7ca91c1041e8a5475bc5</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a8a2d6386f8260af2011a42173db588a9</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyBasis&lt; int, double &gt;</name>
    <filename>classStokhos_1_1OrthogPolyBasis.html</filename>
    <member kind="function">
      <type></type>
      <name>OrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a210606e42136ece7bb7e1c2b94056ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a6847253a8dd251138cf48864582dd12c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a671691b67654978477423587f3478843</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>aaca40953942fde3a5988bb1055a7d837</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a26e57238693f5b2d8f86299f9d7cd861</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; double &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a17ca685c51ac723c0ea25a6c88e6e5f0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const double &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a93a61353270578d01c11902b88666ac8</anchor>
      <arglist>(int i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>aba3a3c38c5c23c3ccf2099e6597c1082</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; int, double &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>ae07ba012046e3016df001927095a3cd1</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual double</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a3fb2bdff52d57ce410bad97c9665201d</anchor>
      <arglist>(int i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a6bb3dd5e7b1adb9effc943de9c2f3d3c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const double &gt; &amp;point, Teuchos::Array&lt; double &gt; &amp;basis_vals) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>ab250c8b4c32b7ca91c1041e8a5475bc5</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1OrthogPolyBasis.html</anchorfile>
      <anchor>a8a2d6386f8260af2011a42173db588a9</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::OrthogPolyExpansion</name>
    <filename>classStokhos_1_1OrthogPolyExpansion.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <templarg>node_type</templarg>
    <member kind="typedef">
      <type>Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>tp_type</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>ade311f0683c2a8a8b2c088e4ca99b009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1709ff039ceaf499d5139bd9ad638145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a811ff55ddf671f8d844abfde99d2ae46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1a59aa5f15f0537a6a2d2ef5028bd5ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a3f3e6b3513a7e1b6bac0f8b41de00891</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>afba020d9a3b818cdc5bfe4fd29865560</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyExpansion&lt; ordinal_type, value_type &gt;</name>
    <filename>classStokhos_1_1OrthogPolyExpansion.html</filename>
    <member kind="typedef">
      <type>Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>tp_type</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>ade311f0683c2a8a8b2c088e4ca99b009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1709ff039ceaf499d5139bd9ad638145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a811ff55ddf671f8d844abfde99d2ae46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1a59aa5f15f0537a6a2d2ef5028bd5ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a3f3e6b3513a7e1b6bac0f8b41de00891</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>afba020d9a3b818cdc5bfe4fd29865560</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyExpansion&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt;</name>
    <filename>classStokhos_1_1OrthogPolyExpansion.html</filename>
    <member kind="typedef">
      <type>Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>tp_type</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>ade311f0683c2a8a8b2c088e4ca99b009</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1709ff039ceaf499d5139bd9ad638145</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a811ff55ddf671f8d844abfde99d2ae46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a1a59aa5f15f0537a6a2d2ef5028bd5ef</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>a3f3e6b3513a7e1b6bac0f8b41de00891</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansion.html</anchorfile>
      <anchor>afba020d9a3b818cdc5bfe4fd29865560</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::OrthogPolyExpansionBase</name>
    <filename>classStokhos_1_1OrthogPolyExpansionBase.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <templarg>node_type</templarg>
    <base>Stokhos::OrthogPolyExpansion</base>
    <member kind="function">
      <type></type>
      <name>OrthogPolyExpansionBase</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a50829c2acf42b6eb54c514372bae3ba5</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyExpansionBase</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>af593396689f5e889a8f46a66100372e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a504d91803212a2add3dca3c9f3e8d16b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a46180de0aeb3c0ceda3ee260af2704b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a23f5ad53447ae3b98f6350ab881f9067</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ad2bf83b835ace4896f96e2bfb8c677bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ac0a4feed5ab68ce75e7d5b9f1fc2c492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a14bd1d2f42332925bb553165c050a4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a90dae88c26e30ddc35f91094b74d4fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::DivisionExpansionStrategy&lt; ordinal_type, value_type, node_type &gt; &gt;</type>
      <name>division_strategy</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ac8d1a59f78c52c4a3a0227f7f18adfe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a69589ec8ba08572a98fb87b2d5a4470c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>OrthogPolyExpansionBase&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt;</name>
    <filename>classStokhos_1_1OrthogPolyExpansionBase.html</filename>
    <base>OrthogPolyExpansion&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt;</base>
    <member kind="function">
      <type></type>
      <name>OrthogPolyExpansionBase</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a50829c2acf42b6eb54c514372bae3ba5</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrthogPolyExpansionBase</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>af593396689f5e889a8f46a66100372e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a504d91803212a2add3dca3c9f3e8d16b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getBasis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a46180de0aeb3c0ceda3ee260af2704b1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getTripleProduct</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a23f5ad53447ae3b98f6350ab881f9067</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ad2bf83b835ace4896f96e2bfb8c677bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ac0a4feed5ab68ce75e7d5b9f1fc2c492</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a14bd1d2f42332925bb553165c050a4d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a90dae88c26e30ddc35f91094b74d4fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::DivisionExpansionStrategy&lt; ordinal_type, value_type, Stokhos::StandardStorage&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>division_strategy</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>ac8d1a59f78c52c4a3a0227f7f18adfe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1OrthogPolyExpansionBase.html</anchorfile>
      <anchor>a69589ec8ba08572a98fb87b2d5a4470c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           IdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArrayMultiColumn_3_01_01_01_01_01_01_01_01_01_045552ba64cc65ee187f607845ef124cf.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           IdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArrayMultiColumn_3_01_01_01_01_01_01_01_01_01_0bbfe829304d6b56b282bac5af6edf5d9.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           IdxView,           ColView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArrayMultiColumnVariableStride_3_01_01_01_01_011d2852e2b7cd184d2ade98daf903316a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           IdxView,           ColView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArrayMultiColumnVariableStride_3_01_01_01_01_0101d75328d5d44401141eed7a2e819433.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArraySingleColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           IdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArraySingleColumn_3_01_01_01_01_01_01_01_01_01_8445213d9f3e587f04c16fba06786c11.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PackArraySingleColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           IdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PackArraySingleColumn_3_01_01_01_01_01_01_01_01_01_73a685889ba834e571cab1746fc85a4f.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::Details::PackTraits&lt; Sacado::UQ::PCE&lt; S &gt;, D &gt;</name>
    <filename>structTpetra_1_1Details_1_1PackTraits_3_01Sacado_1_1UQ_1_1PCE_3_01S_01_4_00_01D_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>compileTimeSize</name>
      <anchorfile>structTpetra_1_1Details_1_1PackTraits_3_01Sacado_1_1UQ_1_1PCE_3_01S_01_4_00_01D_01_4.html</anchorfile>
      <anchor>a5e1e63c941021fe25c0ba604d8aa10e2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ParallelData</name>
    <filename>classStokhos_1_1ParallelData.html</filename>
    <member kind="function">
      <type></type>
      <name>ParallelData</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a295414df5508cad421b19648d827c3f2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const Epetra_Comm &gt; &amp;globalComm, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParallelData</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a310a7b96ba1cd2ecd12d0966d99a04b2</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; int, double &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;globalMultiComm, Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ParallelData</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a374a8196c32c0e77f79777e5ecf4f5d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>getMultiComm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>acba8cc2333ea745157d0587fa4a4f75d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>getStochasticComm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a374a7ecd7dcb7ddf1614d49602f0a6af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>getSpatialComm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>addba246589fd142b5234df90ccf23b71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>getEpetraCijk</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a3b10552e3d1331d26a7092e5a93eff09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>globalMultiComm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>ac34a3e2cfeedd3b559bc7baaf21fcb01</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>stoch_comm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a9cab53debba8181707ab5f9fd4ad35f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Comm &gt;</type>
      <name>spatial_comm</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>aec6757055b29120898ea770e707970e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1ParallelData.html</anchorfile>
      <anchor>a1d6f34a982e3fb6ee66ad4f7c04fd01c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sacado::UQ::PCE</name>
    <filename>classSacado_1_1UQ_1_1PCE.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::PCEAllocation</name>
    <filename>structKokkos_1_1Impl_1_1PCEAllocation.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::PCEAllocation&lt; const Sacado::UQ::PCE&lt; Storage &gt; &gt;</name>
    <filename>structKokkos_1_1Impl_1_1PCEAllocation_3_01const_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::PCEAllocation&lt; Sacado::UQ::PCE&lt; Storage &gt; &gt;</name>
    <filename>structKokkos_1_1Impl_1_1PCEAllocation_3_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
    <class kind="struct">Kokkos::Impl::PCEAllocation&lt; Sacado::UQ::PCE&lt; Storage &gt; &gt;::VectorInit</class>
  </compound>
  <compound kind="class">
    <name>PCEAllocation&lt; typename traits::value_type &gt;</name>
    <filename>structKokkos_1_1Impl_1_1PCEAllocation.html</filename>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::PCEArrayHelper</name>
    <filename>structTeuchos_1_1details_1_1PCEArrayHelper.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::PCEArrayHelper&lt; Stokhos::DynamicStorage&lt; Ordinal, Value, Device &gt; &gt;</name>
    <filename>structTeuchos_1_1details_1_1PCEArrayHelper_3_01Stokhos_1_1DynamicStorage_3_01Ordinal_00_01Value_00_01Device_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::PCECovarianceOp</name>
    <filename>classStokhos_1_1PCECovarianceOp.html</filename>
    <member kind="function">
      <type></type>
      <name>PCECovarianceOp</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a2fcb07f3b26e8f85f00440cf78e9c737</anchor>
      <arglist>(const Stokhos::VectorOrthogPoly&lt; Epetra_Vector &gt; &amp;X_poly)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PCECovarianceOp</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a1469d73e50ad54371bd96c4e8e34aaaf</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::BlockVector &gt; &amp;X, const Stokhos::OrthogPolyBasis&lt; int, double &gt; &amp;basis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PCECovarianceOp</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a9e5ec9eda84e9a53db54250876fc4514</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_MultiVector &gt; &amp;X, const Stokhos::OrthogPolyBasis&lt; int, double &gt; &amp;basis)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PCECovarianceOp</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>aad3fb6fb8ba3d582ffa42daff70d2838</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>ad5b105859ebdaba553e3797ea6a69c34</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>aeba5e8b247bf86094bba2ed97267f28e</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>af06ad5afb40ff223f106a443742e8825</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a0cead1860c2401e60f7c1b537f2e7fd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a1e06113813652adfe4d90ebffdf6cd74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>aa071441e5db810b242ef666265df863c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>abbe56f4bccb01e5c16bc036ad05fa8b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>ab005c195489e498084741aedb5c9581d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a2290e54b6ef2a0f693fddb4e671967d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a1651ae8c6580b772df0f7f3cc1ba5f59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Epetra_BlockMap &amp;</type>
      <name>CoeffMap</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a5734b61d72ff421ee2b9b4b9a37c0271</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>label</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a96a01c27a00db6379c61d7602bba2d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>X</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a146897d835c00ee3993b75c84bcd00f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; double &gt;</type>
      <name>s</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a661bb6c93d0be731960b2e2c2ef97a4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>adb25a809fd40b90ed98843c12818483a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>tmp_map</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>aa0c88d98f47ca9bf713b1b39a38dbc55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>tmp</name>
      <anchorfile>classStokhos_1_1PCECovarianceOp.html</anchorfile>
      <anchor>a343c20b78c6eb31054a11a45d9f8f7ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::PecosOneDOrthogPolyBasis</name>
    <filename>classStokhos_1_1PecosOneDOrthogPolyBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::OneDOrthogPolyBasis</base>
    <member kind="function">
      <type></type>
      <name>PecosOneDOrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a23ca98ac38d4f967ea85ab5ca5968064</anchor>
      <arglist>(const Teuchos::RCP&lt; Pecos::OrthogonalPolynomial &gt; &amp;pecosPoly, const std::string &amp;name, ordinal_type p)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PecosOneDOrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a215b1f3281bdfe0bcbb6e857393715c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBasesAndDerivatives</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>ab6592f6542ff82ce6bac7584f4c1c141</anchor>
      <arglist>(const value_type &amp;point, Teuchos::Array&lt; value_type &gt; &amp;vals, Teuchos::Array&lt; value_type &gt; &amp;derivs) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>PecosOneDOrthogPolyBasis</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a1b844bec9030fb9aedf9a7b8496e9ea2</anchor>
      <arglist>(ordinal_type p, const PecosOneDOrthogPolyBasis &amp;basis)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Pecos::OrthogonalPolynomial &gt;</type>
      <name>pecosPoly</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a17b48024b333b7e33a181cfea61a5163</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>ae3ae15a2e0e49387f8af1fae1aa730e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a8865e53617028e029415d653263c8321</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LevelToOrderFnPtr</type>
      <name>sparse_grid_growth_rule</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a5e892a537c6ce8279a7765c3e0362e36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a5766a993c06d3b14cb9c6df601a2bc67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt;::LevelToOrderFnPtr</type>
      <name>LevelToOrderFnPtr</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a3a976165040664d2943d0335c0014be0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a26c31c2af1daca8e45645f6918479a33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>af8ef2f8db177dba00844e9e3635bd212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>aa01b78c32270b9ef07fb6c0d8dcaac50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>aec9a49c7853fcccfbf921c1d68ccd57a</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a6dee4118725d628586a72a571a94d4fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeSparseTripleProductTensor</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a7236c145a9c6070e12f38b9cf92a2c0c</anchor>
      <arglist>(ordinal_type order) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a3b38d2099ce69572beb48fde516fc3ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a6348661b947870fee246a07bf72fd257</anchor>
      <arglist>(const value_type &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_pts) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a923b5cb74c12cf18b6764ee985d8aca8</anchor>
      <arglist>(const value_type &amp;point, ordinal_type order) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a9517e0364b6ce0c421aa0c8e4e8f4615</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a3370f20a41dffd12c9658fb02f138340</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a48486b0b0879ec588a25b7eb71007c2f</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>ad93e567c7e9a78b006f7853c78f835ad</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a38752d96743a6c36212e6a2e3a296eff</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>a4946615c184b6a4e74e98927bae83401</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LevelToOrderFnPtr</type>
      <name>getSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>aeb41abe5ecd745cb5c7a3affc75bbfe9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>abb6436ca83ec39909eeeb757272f41e8</anchor>
      <arglist>(LevelToOrderFnPtr ptr)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1PecosOneDOrthogPolyBasis.html</anchorfile>
      <anchor>afa7b52cbf0c5352b387374aa7e35f374</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PermuteArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           DstIdxView,           SrcIdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PermuteArrayMultiColumn_3_01_01_01_01_01_01_01_01_01f6992d17b27a26ce49e5e4723167d56.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PermuteArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           DstIdxView,           SrcIdxView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PermuteArrayMultiColumn_3_01_01_01_01_01_01_01_01_0b0dd2b749b4a90fa60547550d214bc8b.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PermuteArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           DstIdxView, SrcIdxView,           DstColView, SrcColView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PermuteArrayMultiColumnVariableStride_3_01_01_01_018011d1c8f5eec72f5ae5d4c96ecbc9fa.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::PermuteArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           DstIdxView, SrcIdxView,           DstColView, SrcColView &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1PermuteArrayMultiColumnVariableStride_3_01_01_01_01cbdadfaf62c15bd7cffd33a70b55e87b.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::pow_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1pow__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::pow_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1pow__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::PowerOp</name>
    <filename>classSacado_1_1ETPCE_1_1PowerOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::PowerOp</name>
    <filename>classSacado_1_1MP_1_1PowerOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; PowerOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::PowerOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1PowerOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; PowerOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::PowerOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1PowerOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; PowerOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::PreconditionerFactory</name>
    <filename>classStokhos_1_1PreconditionerFactory.html</filename>
    <base>Stokhos::AbstractPreconditionerFactory</base>
    <member kind="function">
      <type></type>
      <name>PreconditionerFactory</name>
      <anchorfile>classStokhos_1_1PreconditionerFactory.html</anchorfile>
      <anchor>a345c27b540065a53474389eba43e1f1a</anchor>
      <arglist>(const std::string &amp;prec_name, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PreconditionerFactory</name>
      <anchorfile>classStokhos_1_1PreconditionerFactory.html</anchorfile>
      <anchor>af4b1585e99a8a08f9708e3f2ab4ade1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>compute</name>
      <anchorfile>classStokhos_1_1PreconditionerFactory.html</anchorfile>
      <anchor>ada16c5979d0d3b7f8f11d4692eaa7e0d</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;mat, bool compute_prec=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>recompute</name>
      <anchorfile>classStokhos_1_1PreconditionerFactory.html</anchorfile>
      <anchor>a5125bc7381d3548248cb1adac46e3645</anchor>
      <arglist>(const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;mat, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;prec)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>factory</name>
      <anchorfile>classStokhos_1_1PreconditionerFactory.html</anchorfile>
      <anchor>a73240faf6f7cf6174b74992b61831f6c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductBasis</name>
    <filename>classStokhos_1_1ProductBasis.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base virtualness="virtual">Stokhos::OrthogPolyBasis</base>
    <member kind="function">
      <type></type>
      <name>ProductBasis</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>aa29f0c4022c2d15ddc6e6b7204bd5e76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductBasis</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>a2d9a9cc456fc6ddb3ffe5ae36925a282</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>a4296f4745076ff8dd90d8be3ba831929</anchor>
      <arglist>(ordinal_type i) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>a0e9600fce88a5ed9a5117782b4f1a256</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>a903d65d2cb277281822d2ded8dc73cf4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1ProductBasis.html</anchorfile>
      <anchor>a6a6696d0a31642f1adea37723073cca8</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductBasisUtils</name>
    <filename>classStokhos_1_1ProductBasisUtils.html</filename>
    <class kind="struct">Stokhos::ProductBasisUtils::Cijk_1D_Iterator</class>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>buildProductBasis</name>
      <anchorfile>classStokhos_1_1ProductBasisUtils.html</anchorfile>
      <anchor>ac335f590b57459c749a1b9843ef407d3</anchor>
      <arglist>(const index_set_type &amp;index_set, const growth_rule_type &amp;growth_rule, basis_set_type &amp;basis_set, basis_map_type &amp;basis_map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>buildProductBasis</name>
      <anchorfile>classStokhos_1_1ProductBasisUtils.html</anchorfile>
      <anchor>a7640ddd333636bdb6880a92afad88c5d</anchor>
      <arglist>(const index_set_type &amp;index_set, basis_set_type &amp;basis_set, basis_map_type &amp;basis_map)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainer</name>
    <filename>classStokhos_1_1ProductContainer.html</filename>
    <templarg>coeff_type</templarg>
    <member kind="typedef">
      <type>Stokhos::ProductContainerTraits&lt; coeff_type &gt;</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad747eaa97af4dc8876ca5a6b0ace4fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a1a7f1ac5e97b702c0c329f141366b7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a3e5b7ded60ebdcf1b6ce6e6dfc9049a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a069e9f3750bc3c922bc4dbc21dec0051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ac2396dda356065d06778ada72f3911a1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a23ef49c7b6829d4b8295acf940f94426</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9b07aa90bceac66803c24426215b6bcd</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a951d035652cbf33e51a833ee077c0c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aa4f3db09855f9fbecc18f190b09023bb</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a6e7ccb1d1c558bea05dccdb4c6fcc8da</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>adddc9901865b2fd6a7c3262f7912d2f8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab87e6f9ba876f6aca5703f56c17e894f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a5ccfccb8e077498c6d24b4a2955dae68</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ade2be6b45e40777e08e105a5e9e9a071</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a87152aaea4845a3dfc13fd4ea7104e07</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Teuchos::RCP&lt; coeff_type &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a45690532aa0b76681b085febbd648433</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; coeff_type &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>abfaf7bf7d20abbc3fca73829ecfdf82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; coeff_type &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a82ddebf7996394dc7d1f70601bf993ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const coeff_type &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab0fe00560e6c3dd0e0946a6d42c0f566</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>af6b96d747761620672aba46d3534858a</anchor>
      <arglist>(ordinal_type i, const Teuchos::RCP&lt; coeff_type &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>coeff_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad1aa8a8b524f442db92f436fb3200bd3</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const coeff_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aaa6b9a97018c44a5c466ab4c3a980b13</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a91e0ddc41ae1efe1b0ba10d084f4104d</anchor>
      <arglist>(const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGID</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9daeed38984ad782e50a6d085dd3f419</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a980d4c2d8c436ba503cd3668cf503a32</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aeaaf9f33d4a7f36ef357d8866fe35b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; coeff_type &gt; &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a590f2293f40ed649f3ea5e3353a87f1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProductContainer&lt; Epetra_MultiVector &gt;</name>
    <filename>classStokhos_1_1ProductContainer.html</filename>
    <member kind="typedef">
      <type>Stokhos::ProductContainerTraits&lt; Epetra_MultiVector &gt;</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad747eaa97af4dc8876ca5a6b0ace4fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a1a7f1ac5e97b702c0c329f141366b7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a3e5b7ded60ebdcf1b6ce6e6dfc9049a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a069e9f3750bc3c922bc4dbc21dec0051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ac2396dda356065d06778ada72f3911a1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a23ef49c7b6829d4b8295acf940f94426</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9b07aa90bceac66803c24426215b6bcd</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a951d035652cbf33e51a833ee077c0c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aa4f3db09855f9fbecc18f190b09023bb</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a6e7ccb1d1c558bea05dccdb4c6fcc8da</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>adddc9901865b2fd6a7c3262f7912d2f8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab87e6f9ba876f6aca5703f56c17e894f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a5ccfccb8e077498c6d24b4a2955dae68</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ade2be6b45e40777e08e105a5e9e9a071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a87152aaea4845a3dfc13fd4ea7104e07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a45690532aa0b76681b085febbd648433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>abfaf7bf7d20abbc3fca73829ecfdf82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_MultiVector &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a82ddebf7996394dc7d1f70601bf993ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_MultiVector &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab0fe00560e6c3dd0e0946a6d42c0f566</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>af6b96d747761620672aba46d3534858a</anchor>
      <arglist>(ordinal_type i, const Teuchos::RCP&lt; Epetra_MultiVector &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad1aa8a8b524f442db92f436fb3200bd3</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_MultiVector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aaa6b9a97018c44a5c466ab4c3a980b13</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a91e0ddc41ae1efe1b0ba10d084f4104d</anchor>
      <arglist>(const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGID</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9daeed38984ad782e50a6d085dd3f419</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a980d4c2d8c436ba503cd3668cf503a32</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aeaaf9f33d4a7f36ef357d8866fe35b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_MultiVector &gt; &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a590f2293f40ed649f3ea5e3353a87f1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProductContainer&lt; Epetra_Operator &gt;</name>
    <filename>classStokhos_1_1ProductContainer.html</filename>
    <member kind="typedef">
      <type>Stokhos::ProductContainerTraits&lt; Epetra_Operator &gt;</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad747eaa97af4dc8876ca5a6b0ace4fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a1a7f1ac5e97b702c0c329f141366b7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a3e5b7ded60ebdcf1b6ce6e6dfc9049a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a069e9f3750bc3c922bc4dbc21dec0051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ac2396dda356065d06778ada72f3911a1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a23ef49c7b6829d4b8295acf940f94426</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9b07aa90bceac66803c24426215b6bcd</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a951d035652cbf33e51a833ee077c0c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aa4f3db09855f9fbecc18f190b09023bb</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a6e7ccb1d1c558bea05dccdb4c6fcc8da</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>adddc9901865b2fd6a7c3262f7912d2f8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab87e6f9ba876f6aca5703f56c17e894f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a5ccfccb8e077498c6d24b4a2955dae68</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ade2be6b45e40777e08e105a5e9e9a071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a87152aaea4845a3dfc13fd4ea7104e07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Operator &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a45690532aa0b76681b085febbd648433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Operator &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>abfaf7bf7d20abbc3fca73829ecfdf82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a82ddebf7996394dc7d1f70601bf993ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Operator &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab0fe00560e6c3dd0e0946a6d42c0f566</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>af6b96d747761620672aba46d3534858a</anchor>
      <arglist>(ordinal_type i, const Teuchos::RCP&lt; Epetra_Operator &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Operator &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad1aa8a8b524f442db92f436fb3200bd3</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Operator &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aaa6b9a97018c44a5c466ab4c3a980b13</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a91e0ddc41ae1efe1b0ba10d084f4104d</anchor>
      <arglist>(const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGID</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9daeed38984ad782e50a6d085dd3f419</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a980d4c2d8c436ba503cd3668cf503a32</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aeaaf9f33d4a7f36ef357d8866fe35b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Operator &gt; &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a590f2293f40ed649f3ea5e3353a87f1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ProductContainer&lt; Epetra_Vector &gt;</name>
    <filename>classStokhos_1_1ProductContainer.html</filename>
    <member kind="typedef">
      <type>Stokhos::ProductContainerTraits&lt; Epetra_Vector &gt;</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad747eaa97af4dc8876ca5a6b0ace4fec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a1a7f1ac5e97b702c0c329f141366b7aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a3e5b7ded60ebdcf1b6ce6e6dfc9049a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a069e9f3750bc3c922bc4dbc21dec0051</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ac2396dda356065d06778ada72f3911a1</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a23ef49c7b6829d4b8295acf940f94426</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9b07aa90bceac66803c24426215b6bcd</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductContainer</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a951d035652cbf33e51a833ee077c0c62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductContainer &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aa4f3db09855f9fbecc18f190b09023bb</anchor>
      <arglist>(const ProductContainer &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a6e7ccb1d1c558bea05dccdb4c6fcc8da</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>adddc9901865b2fd6a7c3262f7912d2f8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab87e6f9ba876f6aca5703f56c17e894f</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a5ccfccb8e077498c6d24b4a2955dae68</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ade2be6b45e40777e08e105a5e9e9a071</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a87152aaea4845a3dfc13fd4ea7104e07</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a45690532aa0b76681b085febbd648433</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt; &amp;</type>
      <name>getCoefficients</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>abfaf7bf7d20abbc3fca73829ecfdf82f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a82ddebf7996394dc7d1f70601bf993ab</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>getCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ab0fe00560e6c3dd0e0946a6d42c0f566</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoeffPtr</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>af6b96d747761620672aba46d3534858a</anchor>
      <arglist>(ordinal_type i, const Teuchos::RCP&lt; Epetra_Vector &gt; &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>ad1aa8a8b524f442db92f436fb3200bd3</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Vector &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aaa6b9a97018c44a5c466ab4c3a980b13</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a91e0ddc41ae1efe1b0ba10d084f4104d</anchor>
      <arglist>(const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>myGID</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a9daeed38984ad782e50a6d085dd3f419</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a980d4c2d8c436ba503cd3668cf503a32</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>map_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>aeaaf9f33d4a7f36ef357d8866fe35b1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>coeff_</name>
      <anchorfile>classStokhos_1_1ProductContainer.html</anchorfile>
      <anchor>a590f2293f40ed649f3ea5e3353a87f1c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainerTraits</name>
    <filename>classStokhos_1_1ProductContainerTraits.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainerTraits&lt; Epetra_CrsMatrix &gt;</name>
    <filename>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>a625d43b7160da2c412905ca4e2946333</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>a0be83480fadc0618c7f51399901cc098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraCrsMatrixCloner</type>
      <name>cloner_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>a9132aef71da1dd094e33928711a79cc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>aeb970179c5693c062402041b0341796a</anchor>
      <arglist>(Epetra_CrsMatrix &amp;mat, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>a0d0dc31fd4e032e630e87058ac8a18f3</anchor>
      <arglist>(Epetra_CrsMatrix &amp;mat, double a, const Epetra_CrsMatrix &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__CrsMatrix_01_4.html</anchorfile>
      <anchor>a1a6a78559fb7fc013de905ccdbe92213</anchor>
      <arglist>(std::ostream &amp;os, const Epetra_CrsMatrix &amp;mat)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainerTraits&lt; Epetra_MultiVector &gt;</name>
    <filename>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>ae44e9bc8d10e91122778cf694e7ba417</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>aba5a9c37465afa836114a22e80ee082c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraMultiVectorCloner</type>
      <name>cloner_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>aab5ab2a3efeba6947bab1389bc77d6d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>a41cbc67ea4d0f618e65f20d37ec8bb38</anchor>
      <arglist>(Epetra_MultiVector &amp;vec, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>aae73b79df20d886dd681e7d8e9fb3dc8</anchor>
      <arglist>(Epetra_MultiVector &amp;vec, double a, const Epetra_MultiVector &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__MultiVector_01_4.html</anchorfile>
      <anchor>affa4fd6396aa3ba3a192beb60fc16c12</anchor>
      <arglist>(std::ostream &amp;os, const Epetra_MultiVector &amp;vec)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainerTraits&lt; Epetra_Operator &gt;</name>
    <filename>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>a226a5abae134168915d09eb7bb891fcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>ad4b43e3cb33a0df8a161a5a7dcd71b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraOperatorCloner</type>
      <name>cloner_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>a3221bc2d6d748c48ab9243bc010ed0a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>a542084ef940b2a1f8ceb33d3f86e2b28</anchor>
      <arglist>(Epetra_Operator &amp;op, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>a27d35bcb55a9979990d4c4bf12db216c</anchor>
      <arglist>(Epetra_Operator &amp;op, double a, const Epetra_Operator &amp;x_op)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Operator_01_4.html</anchorfile>
      <anchor>a597224f9850a1c28d7df61b209e73297</anchor>
      <arglist>(std::ostream &amp;os, const Epetra_Operator &amp;op)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductContainerTraits&lt; Epetra_Vector &gt;</name>
    <filename>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</filename>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>a98cdc9a7bd02bb2ee56f6703ca8d950d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>a795d14a6157c8c8c156ed44e8a05856a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>EpetraVectorCloner</type>
      <name>cloner_type</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>a6a302a738b2aec599cc6a5e22acd3e0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>acfffe32b5967e5832ac4b3e10663fc26</anchor>
      <arglist>(Epetra_Vector &amp;vec, double val)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>a0aff9e36f9bfa50607cb6c620de85285</anchor>
      <arglist>(Epetra_Vector &amp;vec, double a, const Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductContainerTraits_3_01Epetra__Vector_01_4.html</anchorfile>
      <anchor>abdc8b455b39feea4759845c105992c24</anchor>
      <arglist>(std::ostream &amp;os, const Epetra_Vector &amp;vec)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::KL::ProductEigenPair</name>
    <filename>structStokhos_1_1KL_1_1ProductEigenPair.html</filename>
    <templarg>eigen_function_type</templarg>
    <templarg>ExecutionSpace</templarg>
    <member kind="function">
      <type></type>
      <name>ProductEigenPair</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a3a2d211959db462572d8d95d0b0d4667</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEigenPair</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a20283bf0c4d09a143fd61dfd8c2852d7</anchor>
      <arglist>(const ProductEigenPair &amp;ep)</arglist>
    </member>
    <member kind="function">
      <type>ProductEigenPair &amp;</type>
      <name>operator=</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>ac69f720c58fd37d1e6f93e56b82d086e</anchor>
      <arglist>(const ProductEigenPair &amp;ep)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a157dc55cce85547b1b5a7d7de464882b</anchor>
      <arglist>(const Teuchos::Array&lt; one_d_eigen_pair_type &gt; &amp;ep)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION value_type</type>
      <name>evalEigenfunction</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a3cdc8b554546cc5cbe9896d153f3c075</anchor>
      <arglist>(const point_type &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a17733072ce0db86c5bbc1b3c4e9d7a03</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable">
      <type>value_type</type>
      <name>eig_val</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a3712f3506994d15c8f029256540d15eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>eig_pair_type</type>
      <name>eig_pairs</name>
      <anchorfile>structStokhos_1_1KL_1_1ProductEigenPair.html</anchorfile>
      <anchor>a5116491215492c9ed7cd9542a279722a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::KL::ProductEigenPairGreater</name>
    <filename>structStokhos_1_1KL_1_1ProductEigenPairGreater.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductEpetraMultiVector</name>
    <filename>classStokhos_1_1ProductEpetraMultiVector.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_MultiVector &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>ab4a677dd5c2cc411cb24b9bbe5411150</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a3579a63309ac2c019c25ec88559dc7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>add2be14e8251881a2cb672e59d92d0b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a9266be7b0b6d1783b34dd56b7dd68f01</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a96a0b73a3833f094b3be25435f73ab48</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>aa224788f05a5d689e66c6e5c94c3405b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>abfc8fc07436b90b8af7ad514f6364fcc</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, Epetra_DataAccess CV, const Epetra_MultiVector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>aae4a4f57900532b8df3d85eac6d3fe26</anchor>
      <arglist>(const ProductEpetraMultiVector &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductEpetraMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a608bb2abf4444244508f0f2abfd64f9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a7fc2f201c918e0ac14f306232d7a1764</anchor>
      <arglist>(const ProductEpetraMultiVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraMultiVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>adeea46f8e405aab342011dc1738735d5</anchor>
      <arglist>(const Epetra_MultiVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignToBlockMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>aec4139c5826684634e99608ce761d024</anchor>
      <arglist>(Epetra_MultiVector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignFromBlockMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a28e5b1849826a66cd6b57e4519c8712b</anchor>
      <arglist>(const Epetra_MultiVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>coefficientMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a1f037e93657830a2bf48c8335b42ecd7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>productMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a66df5bb6cd7c961847602d41c6d63f7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>productComm</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>aa48b776ccce0c824a59f7200f9e4bba4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numVectors</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>ad4565521c42b8c6d61b44e1d9534992a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>adcc1b45c6bacff3ec92e1c1e664d3abc</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a1d00692c31401e298d4e67ddfd56d430</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, int num_vectors)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCoefficients</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a879552ffad1b651d37c67058666b7460</anchor>
      <arglist>(Epetra_DataAccess CV, const Epetra_MultiVector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt;</type>
      <name>getBlockMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>ac0c9dda02075a69edcbdeb09218c4012</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::BlockMultiVector &gt;</type>
      <name>getBlockMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>abe8d06faa8dc2de7ac209e293a38f3d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlockMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a93d8fbbd9b1bf0a0174bfae3a287ba69</anchor>
      <arglist>(const Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt; &amp;block_vec)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>coeff_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a01bc6c5b73ff68528a8e57bb4244948b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>product_comm</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a0effe3f92888c39e96c239bc2127d497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>product_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a05b915a284d38f627baa9694ce11b690</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockMultiVector &gt;</type>
      <name>bv</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVector.html</anchorfile>
      <anchor>a1eda8ed5afb58ded5ccaceca46f3820e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductEpetraMultiVectorOperator</name>
    <filename>classStokhos_1_1ProductEpetraMultiVectorOperator.html</filename>
    <base virtualness="virtual">Stokhos::ProductEpetraOperator</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a7f9138af94a4bcf5ce79b37c3064d41b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a0558ece46670a7423a54ba4a01a7b72b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a59d0434973a06c90c16bc1cecf1e78cd</anchor>
      <arglist>(const Teuchos::RCP&lt; ProductEpetraMultiVector &gt; &amp;product_mv, bool is_multi_vec_transposed)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a269b64448e41a515897569a4773c9bed</anchor>
      <arglist>(const ProductEpetraMultiVectorOperator &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductEpetraMultiVectorOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a3c8ea39f2fa7492edb6e7b9bc3adee66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraMultiVectorOperator &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a89960c5a0027e3eb8f7ec0c48e3661c4</anchor>
      <arglist>(const ProductEpetraMultiVectorOperator &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; ProductEpetraMultiVector &gt;</type>
      <name>productMultiVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>a75af7a6cf4c85664ed1db76c5b3d9487</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; ProductEpetraMultiVector &gt;</type>
      <name>product_mv</name>
      <anchorfile>classStokhos_1_1ProductEpetraMultiVectorOperator.html</anchorfile>
      <anchor>ad2eefe88df43a998ae3118709967c9aa</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductEpetraOperator</name>
    <filename>classStokhos_1_1ProductEpetraOperator.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_Operator &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>af2836b014ad10af33ae9d9b92ea336ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a91ceb90dc1750f37e7ffc565d6bc8acf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a6daadc5e42ec1abe73b27e99359eda82</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ae2130d5f1aca4f372e606d8a38c51f09</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a1ca88cdfdaf172d4d10e67676342d9cf</anchor>
      <arglist>(const ProductEpetraOperator &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductEpetraOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aeff3284fec48d6eeb1e5f88b7f4208f4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraOperator &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a9866008ebfb6e24c8cd195a91c957f38</anchor>
      <arglist>(const ProductEpetraOperator &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>productComm</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a1d72d8966084301448eca793b6ce3cc4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a9ba04f30053e0bdfe9dbc48e9a3107cc</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a50c944ac31377938a442ce50567dc0f9</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>acee0f99bb62a3bbaee7cb01a4882e829</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ac70ec6dfe208148864d744503cc19da3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aea9eb3bdd1ac7d56c8cdaaa823f3182f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a94c2002700724df6498dd0881bd0eda4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aaa8570a01b53abaa1a3c0d5a3e7fcbc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ad62e3072a8c05c19996d1e055f7e7d2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a3830a52892dcdc72646915fc79d67cf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a025726580a5596afc20ca60db388ce74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ProductEpetraOperator</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a016c50ed497f082a6c053bb99061fa9d</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a6b6903f782ab7e3451482252d6dd5eef</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>domain_base_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a9e0e1dcbbe141705e3100bf06a4a15c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>range_base_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aeeb1986ca95932b94bb1ccee8879c8aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>product_range_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ab739a8bf0af4964737b03105b0c8ef50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>product_comm</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a543c17e48b46940d0fe63f81fd7c1dc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>useTranspose</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a0f67e682dd2a9bf10c9615b2b1cc4bd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>SetUseTranspose</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a9ba04f30053e0bdfe9dbc48e9a3107cc</anchor>
      <arglist>(bool UseTranspose)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>Apply</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a50c944ac31377938a442ce50567dc0f9</anchor>
      <arglist>(const Epetra_MultiVector &amp;Input, Epetra_MultiVector &amp;Result) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>acee0f99bb62a3bbaee7cb01a4882e829</anchor>
      <arglist>(const Epetra_MultiVector &amp;X, Epetra_MultiVector &amp;Y) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual double</type>
      <name>NormInf</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ac70ec6dfe208148864d744503cc19da3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>Label</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aea9eb3bdd1ac7d56c8cdaaa823f3182f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>UseTranspose</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a94c2002700724df6498dd0881bd0eda4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>HasNormInf</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>aaa8570a01b53abaa1a3c0d5a3e7fcbc6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Comm &amp;</type>
      <name>Comm</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>ad62e3072a8c05c19996d1e055f7e7d2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorDomainMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a3830a52892dcdc72646915fc79d67cf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Epetra_Map &amp;</type>
      <name>OperatorRangeMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraOperator.html</anchorfile>
      <anchor>a025726580a5596afc20ca60db388ce74</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductEpetraVector</name>
    <filename>classStokhos_1_1ProductEpetraVector.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_Vector &gt;</base>
    <member kind="typedef">
      <type>double</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>adb5e45bdee708d7b381fc5b6a671aab4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a71cdbfb379372730e089d2e796979881</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a8088dca255f599c6c75bb2d7f534090f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a1faa2d7f8d03f571482ebc049cf512db</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>ae9238633c3d2edb052d6d65921dbe701</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a6b76d1a0543de775005c65428fd4bd22</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>aaed49abb7217a76ce9b09ef62b5baa94</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm, Epetra_DataAccess CV, const Epetra_Vector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a3652add1314a7a2ed0856842b6852439</anchor>
      <arglist>(const ProductEpetraVector &amp;v)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductEpetraVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>ac53bc48536cef8ee5904d49e084544d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>abf1367ff9ec540a10e953b0ecf753d49</anchor>
      <arglist>(const ProductEpetraVector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ProductEpetraVector &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a9ff36c27853a8e866e70bdc6d6979899</anchor>
      <arglist>(const Epetra_Vector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignToBlockVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a0a40316a1dedc934bfbc41f8541401b8</anchor>
      <arglist>(Epetra_Vector &amp;v) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assignFromBlockVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a155392926ec6d409a9225c27e76da91d</anchor>
      <arglist>(const Epetra_Vector &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>coefficientMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a6cc32f45ce5bee2c9ecbedcd62acd33d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>productMap</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>aa53b43cc5996d19234f301002279ab86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>productComm</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a30b7cc5ec62f06b8c3ea3173aa820739</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>aabae91b52d0b1864608f4ce08e6a2eb8</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>ac0f99a70f1f49be17ab32eb8216d48d7</anchor>
      <arglist>(const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;block_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;coeff_map, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;product_map, const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;product_comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetCoefficients</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a9e4b965a0c88e004e28df8c2a5973b7c</anchor>
      <arglist>(Epetra_DataAccess CV, const Epetra_Vector &amp;block_vector)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>getBlockVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>acdf77689800415596b11c18c91fdb288</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const EpetraExt::BlockVector &gt;</type>
      <name>getBlockVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a4ed6a34882334a712cc22f9410e36e19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setBlockVector</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>aed4ef7fa4934e7de59090f1b566fcd39</anchor>
      <arglist>(const Teuchos::RCP&lt; EpetraExt::BlockVector &gt; &amp;block_vec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumAll</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a94a0714fc8e92d008e2ef932070109a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>coeff_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a925fb6c32356135589839cbfe63acd4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>product_comm</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a0d5b51b344e2271b4c2b09720765060a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>product_map</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>a4ecd8b0763619bbc9c3efb97e6b3ec02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>bv</name>
      <anchorfile>classStokhos_1_1ProductEpetraVector.html</anchorfile>
      <anchor>abe9f3d21c189951f669ea8077119d166</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductLanczosGramSchmidtPCEBasis</name>
    <filename>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ReducedPCEBasis</base>
    <member kind="function">
      <type></type>
      <name>ProductLanczosGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>af752a4660102424fb79007682d1d5ea6</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductLanczosGramSchmidtPCEBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a076917791c428e84610a43e0a3bb2bf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a853cfe4e72dced3f79ec7aeb12776d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ac5cb9b8fdd9b19e97a3e8fbc8a26fcc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a2a9ca8b691d952eddcd2db8cd38225ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a9bbfa9adee1aafd1a48e852e7034852b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a8b77e1a3b0d8c51c366e9617c2898f68</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a4a979c0b64ca0c673d561d075038b335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a03addfe9f94bb5aa9de15bc629c4d65d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae326836db528eb39766d5cd62e470eda</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>adec2482142f1bce5f329b7fa80bdfee1</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a511d746d0801d3175cffc78eb184ebb4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>afcc99d97b8db8e16ea18fc3b308cd62a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a02ffff62c4aaa066e808dd1b34942f73</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae2711670555ab7fa534e163f37ed6f90</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a1919d84c1b347cf5e368f9249167e0ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a1d0db48809f2c1c63e813ae52cb5f521</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae6d47ae13d27739e66ef54c6b26ce390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>pce_sz</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ad66a03c39df850a07eb81dffc2af0828</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a5ef667be0e4a60e47d9fce338b33c89e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>acc6354aadac5aff8d9cd0a88624ddf14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a65d3367f85e378078bcfe46fdb25385b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::CompletePolynomialBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>tensor_lanczos_basis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a8597bb48a495f1bca9dec74765eb9428</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>aaa9e452d4511dc5b15568150dde1f496</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Q</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a26cd2eec30c4e3e729538fb6885cc1a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Qp</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae3b49c44991215f86ab64b84d1bad73e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>reduced_quad</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a6ebddcc99e01d4130988ac322e0acb0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt;</type>
      <name>tmp_pce</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a40fb9187f5a12fae9574f5066c57d85a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a853cfe4e72dced3f79ec7aeb12776d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ac5cb9b8fdd9b19e97a3e8fbc8a26fcc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a2a9ca8b691d952eddcd2db8cd38225ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a9bbfa9adee1aafd1a48e852e7034852b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a8b77e1a3b0d8c51c366e9617c2898f68</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a4a979c0b64ca0c673d561d075038b335</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a03addfe9f94bb5aa9de15bc629c4d65d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae326836db528eb39766d5cd62e470eda</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>adec2482142f1bce5f329b7fa80bdfee1</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a511d746d0801d3175cffc78eb184ebb4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>afcc99d97b8db8e16ea18fc3b308cd62a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a02ffff62c4aaa066e808dd1b34942f73</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>ae2711670555ab7fa534e163f37ed6f90</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ProductLanczosGramSchmidtPCEBasis.html</anchorfile>
      <anchor>a1919d84c1b347cf5e368f9249167e0ac</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ProductLanczosPCEBasis</name>
    <filename>classStokhos_1_1ProductLanczosPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ProductBasis</base>
    <base>Stokhos::ReducedPCEBasis</base>
    <member kind="function">
      <type></type>
      <name>ProductLanczosPCEBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>acad2bad86bb8c783e732fbb2bad2cfb2</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::ParameterList &amp;params=Teuchos::ParameterList())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ProductLanczosPCEBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a7d1ce473ebd3eaf9e5f3f315dba058be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>acca084052c219ec8432b42db5aa22ac8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ac76df457d215e6c605f7d03197bf46a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ae4459475994fe80b26f82e6820fd159f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1404af52cb439a75c124e6645bb2ec73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ae71fc0cee07cae9397dca6b309d9281b</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a98800bf982c446c4a43f2cc90764f515</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aab0f7c7d088c0658af79332fc968159f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aa71b341f899195a58d940c17ff56c18c</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a0f41378589afbbc93ff82a5988428e7c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1b46e4329a87b764059d856ab0096240</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aeeaf5b2b6adeeacea605467036caa496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>af15de89777fa9841cef20af9fa68c79e</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a5c4e9008a45d8a37972b6bb99f88dbc9</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a3069535887e72921419b964adf9ab6df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a77b8f5af9e0cc220f8377b2fa0fa7f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a6b4a1d1256fea6fe6c58ec6a02e2cb35</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a6379e168556d206869b5d7e35ae077c8</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1d16d8eab7e4ab120eba71394c54bdfb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a8601bcfd3a35b35fed81dfc97e5ee143</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a2bdbd86ee1d2675f86ee2fde71661d1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::CompletePolynomialBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>tensor_lanczos_basis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a76a0fb3f98cb81960f7357dc55fb2d63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Phi</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a31d0f8014561a11328c7db49ee00c706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a49d27c80cbb75ffebdc6fb265f88da1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDM</type>
      <name>Ainv</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>adde744e5f7a7ffb835d1272f0c4cb98a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>reduced_quad</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a7dc0ef5d9098e7029ad188924ef1844c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt;</type>
      <name>tmp_pce</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a406f96084e391bc8bd16f12d62c7d467</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>acca084052c219ec8432b42db5aa22ac8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ac76df457d215e6c605f7d03197bf46a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ae4459475994fe80b26f82e6820fd159f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1404af52cb439a75c124e6645bb2ec73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>ae71fc0cee07cae9397dca6b309d9281b</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a98800bf982c446c4a43f2cc90764f515</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aab0f7c7d088c0658af79332fc968159f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aa71b341f899195a58d940c17ff56c18c</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a0f41378589afbbc93ff82a5988428e7c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1b46e4329a87b764059d856ab0096240</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>aeeaf5b2b6adeeacea605467036caa496</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>af15de89777fa9841cef20af9fa68c79e</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a5c4e9008a45d8a37972b6bb99f88dbc9</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a3069535887e72921419b964adf9ab6df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a77b8f5af9e0cc220f8377b2fa0fa7f67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a6b4a1d1256fea6fe6c58ec6a02e2cb35</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a6379e168556d206869b5d7e35ae077c8</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ProductLanczosPCEBasis.html</anchorfile>
      <anchor>a1d16d8eab7e4ab120eba71394c54bdfb</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; SimpleTiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ProductTensorLoop</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01SimpleTiledCrsProductTensor_3_01TensorScalar_cd92d2558d485b142d7a732f1239e4b8.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; TiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::ProductTensorLoop</name>
    <filename>classStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01TiledCrsProductTensor_3_01TensorScalar_00_01Kbc3e6631ea5f55d0f63d0ba23679fd51.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::PseudoSpectralOperator</name>
    <filename>classStokhos_1_1PseudoSpectralOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>PseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>abe34ec129513dfa1a0634408e623565b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>af168d8c3b7e0c4f47d510cd9f9d27d64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>point_size</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>afa4947c985dcd49f1f2215bd8c7988c0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>coeff_size</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>ab0fa6ce1f58bfcd22132946776587f94</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a9fc2d974bba4cbf62bf1169212c494ba</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a0cd056450f571750ffc894df70e806ec</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a8730bec341908ff66d2196a11c1bd155</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a9b32c546b7542f1c8f90d9997daee449</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>acf998b7b5369097c3449f3b6ff23d3d3</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>acb086719a838cd7b07d9f5560624c852</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const_set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>ab86b11841b24c4c4450c286dff98685b</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const_set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a5fcccbcc5a79b073c3bde618f2c8d143</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>acc7cf616fef1088d25e8bd29eff47183</anchor>
      <arglist>(const point_type &amp;point) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const point_type &amp;</type>
      <name>point</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a1b8b4fe1deef392a7276e1295b5ca715</anchor>
      <arglist>(ordinal_type n) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformQP2PCE</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a78677cc48aca14e68e1458a2e93a3960</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformPCE2QP</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperator.html</anchorfile>
      <anchor>a6301cfecac9c8681c67903dff0b7e0af</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::PseudoSpectralOperatorFactory</name>
    <filename>classStokhos_1_1PseudoSpectralOperatorFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Stokhos::PseudoSpectralOperator&lt; ordinal_type, value_type &gt;</type>
      <name>psop_type</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperatorFactory.html</anchorfile>
      <anchor>aad9dce1b320c0b855ec2ce674c5ac89a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>PseudoSpectralOperatorFactory</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperatorFactory.html</anchorfile>
      <anchor>ac32dd4fcb62a7f469aa441e9e705109a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PseudoSpectralOperatorFactory</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperatorFactory.html</anchorfile>
      <anchor>aa700ac9dad5302b70bffaeffe481517a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const psop_type &gt;</type>
      <name>create</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOperatorFactory.html</anchorfile>
      <anchor>ae8dcfd9392b4862dc01663ace3cb3bc7</anchor>
      <arglist>(Teuchos::ParameterList &amp;sgParams)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion</name>
    <filename>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::OrthogPolyExpansionBase</base>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::acos_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::acosh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::asin_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::asinh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::atan2_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::atan_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::atanh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::cbrt_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::cos_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::cosh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::div_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::exp_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::log10_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::log_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::pow_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::sin_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::sinh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::sqrt_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::tan_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::tanh_quad_func</class>
    <class kind="struct">Stokhos::PseudoSpectralOrthogPolyExpansion::times_quad_func</class>
    <member kind="function">
      <type></type>
      <name>PseudoSpectralOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>af11ffe43919154c3bfd0d593d5a8c53f</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const PseudoSpectralOperator&lt; ordinal_type, value_type, point_compare_type &gt; &gt; &amp;ps_op, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PseudoSpectralOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>ac8d2f4e480ce96ef71ee5a169ac6fb12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unary_op</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a7b3caafaed6bae5e39f1a8dc0789969a</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a12d080774bf58b87b7e82c3e6f4e1fd4</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a119047cfc42eaf0e12b8a61c6d8fe3ac</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const value_type &amp;a, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>ad99650259f7a2fb1ba64a0cfba19c520</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a, const value_type &amp;b)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>OrthogPolyExpansionBase&lt; ordinal_type, value_type, node_type &gt;::Cijk_type</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a23bb481b45885476b30ccf5ff8c9e5d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Teuchos::SerialDenseVector&lt; ordinal_type, value_type &gt;</type>
      <name>SDV</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>ac2e3a818aebfaaa2c06fb8c599101cee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const PseudoSpectralOperator&lt; ordinal_type, value_type, point_compare_type &gt; &gt;</type>
      <name>ps_op</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a3dea1f660bf7d511cd0bc0c30f3bc48f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_quad_for_times</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>ad44d8fe0ea57d7ab3b6f80fa4a14add2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_quad_for_division</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a641cb53be1a948aca832467440d0069e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>abb3faa1df77db632f6cc0f9175329f38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>nqp</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>af44eb3a9ab79bf59986bd948d9f5a3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDV</type>
      <name>avals</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a4c908e524a51385fb025b954856267eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDV</type>
      <name>bvals</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a00fe25babc4b4f4347f765ff8156c349</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; SDV &gt; &gt;</type>
      <name>navals</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a0161c63ae5b334d2f3c931f4515d7466</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SDV</type>
      <name>fvals</name>
      <anchorfile>classStokhos_1_1PseudoSpectralOrthogPolyExpansion.html</anchorfile>
      <anchor>a4777dd1a1d423fcda6209ccb7b35c1fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::QuadOrthogPolyExpansion</name>
    <filename>classStokhos_1_1QuadOrthogPolyExpansion.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <templarg>node_type</templarg>
    <base>Stokhos::OrthogPolyExpansionBase</base>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::acos_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::acosh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::asin_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::asinh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::atan2_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::atan_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::atanh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::cbrt_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::cos_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::cosh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::div_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::exp_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::log10_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::log_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::pow_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::sin_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::sinh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::sqrt_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::tan_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::tanh_quad_func</class>
    <class kind="struct">Stokhos::QuadOrthogPolyExpansion::times_quad_func</class>
    <member kind="function">
      <type></type>
      <name>QuadOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a312d73da6be31aa969303ed96acfa1ce</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk, const Teuchos::RCP&lt; const Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QuadOrthogPolyExpansion</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a5ec1f080bb383e48046ae2d645865804</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unary_op</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>aefbd6577a7c4555519ae53cc5a82fbba</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>abeeb65936f1975a59fe326a5651ec6db</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a710800f4d1ccbb2456401c9b3f900eec</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const value_type &amp;a, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>binary_op</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>aa820eec5f7841a21991a76fd0253fbd0</anchor>
      <arglist>(const FuncT &amp;func, OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;c, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a, const value_type &amp;b)</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>OrthogPolyExpansionBase&lt; ordinal_type, value_type, node_type &gt;::Cijk_type</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a62d0320204703faa4a5dde88c6d3032b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>quad</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a2f3c322d5f77a9affc674d9b843cf49b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_quad_for_times</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a7be09e993efcf723092275c3ea3e83a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_quad_for_division</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>ad6de03b9fa343eb2a0abfb0eb511974d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>ac3aaacba816d4f5860462d54d20ccaad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; ordinal_type, value_type &gt;</type>
      <name>blas</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a5185bf7b9095371a2baa1c194e27269e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>aec4e937a9a51ce5ac7635a1ea7e24cba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>aedea32f2dd31a22853fd01d64585f1d0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a82be1530ef5897e8016fc8b3a3d62bb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>ac55fb0e5ef056ee9e308c8bb641fdcfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>nqp</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a05d95541138ba4b6282bbf252c560e7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>avals</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>ac0f4a40d03a80682a662aadc9a690648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>bvals</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>ad264c7462d769394587f466c3ec682f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt;</type>
      <name>navals</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a127ddce9bb2423d43479dafd902eae42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>fvals</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>aaafaa6d9a3deffcaf42482ad4e4c3a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>qv</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a234f03becdd19565c573f707e14a42be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>sqv</name>
      <anchorfile>classStokhos_1_1QuadOrthogPolyExpansion.html</anchorfile>
      <anchor>a0c5c65c107a1344328a53be6ba111589</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::Quadrature</name>
    <filename>classStokhos_1_1Quadrature.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="function">
      <type></type>
      <name>Quadrature</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>a189813bf501f52b97faa63a803277b06</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Quadrature</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>adc9ce2fa8cbc4b3b4bfb5095a80d512a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>add4717ac92ae9c49727fb3d70d12cb71</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>a64b466a23a9f5c69c9df7e0b537af21d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>a185c715ce95efb8e7501dfe87943aae0</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>a7cbee7328a4eda1142c524ae45a0cfcc</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1Quadrature.html</anchorfile>
      <anchor>a6c1380e7748e32ca88c0d60e2912cc70</anchor>
      <arglist>(std::ostream &amp;os) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::QuadratureFactory</name>
    <filename>classStokhos_1_1QuadratureFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>QuadratureFactory</name>
      <anchorfile>classStokhos_1_1QuadratureFactory.html</anchorfile>
      <anchor>a14ea0d3cf3c5c5b9dd1d79d58b66a67e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QuadratureFactory</name>
      <anchorfile>classStokhos_1_1QuadratureFactory.html</anchorfile>
      <anchor>ad969f5cd54b8ffbe04edb9619191e6b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>create</name>
      <anchorfile>classStokhos_1_1QuadratureFactory.html</anchorfile>
      <anchor>aa98e05381132274455d5b759b0428cf8</anchor>
      <arglist>(Teuchos::ParameterList &amp;sgParams)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::QuadraturePseudoSpectralOperator</name>
    <filename>classStokhos_1_1QuadraturePseudoSpectralOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::PseudoSpectralOperator</base>
    <member kind="function">
      <type></type>
      <name>QuadraturePseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a0bbaf397c1a37b8a77f1c1e0dece20e6</anchor>
      <arglist>(const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &amp;basis, const Quadrature&lt; ordinal_type, value_type &gt; &amp;quad, const point_compare_type &amp;point_compare=point_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~QuadraturePseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a5c7b079e8c04d4f6a175df3b16e725d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>point_size</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a8bd7a08985a7b6bfec66f24971827232</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>coeff_size</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a98fb0f6403eb64a1e421fe55af8386d5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a009c0100fc3b5c04525681abbbd311d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a08a2fc6c56813a6b718076d61df3e7a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a5cbb50973e6d48f29b58dbe62c146ab8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a455b3ee91648ac0995ba6756bf33139f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>af8b0c50421c1670605541b4b44010e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a053ec53e5b13d3ddfdd13460b88fade8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a126181c23a1a68b9804dbf69aa38971d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a09342f2f744d0097cea7c8b268d0521b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a5c6c1ff04f456ddc4398aa515790e015</anchor>
      <arglist>(const point_type &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>const point_type &amp;</type>
      <name>point</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>af496fd10233f0853a0fbcb9d8052c4c2</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformQP2PCE</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>ab886d52a8d0a7415684db13e95d2c6c7</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformPCE2QP</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>ab8a9f6078db57ef5aaef4851053ecbb4</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>coeff_sz</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a6873a5bc84bd90b28aac8ed4646081d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_set_type</type>
      <name>points</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a6ea3608078391d6e0f623fb1476ef261</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_map_type</type>
      <name>point_map</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a0037913c742c04ec14b1890c8cd5def8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>qp2pce</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a0df1ddccb7a5912b2a60765a4d593135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>pce2qp</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>adfcde78a7b0a46bd6243e3ce69f9788e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; ordinal_type, value_type &gt;</type>
      <name>blas</name>
      <anchorfile>classStokhos_1_1QuadraturePseudoSpectralOperator.html</anchorfile>
      <anchor>a227dd654f043221abfc4b02b2b63e365</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::RCB</name>
    <filename>classStokhos_1_1RCB.html</filename>
    <templarg></templarg>
    <class kind="struct">Stokhos::RCB::Box</class>
    <class kind="struct">Stokhos::RCB::CoordCompare</class>
    <member kind="function">
      <type></type>
      <name>RCB</name>
      <anchorfile>classStokhos_1_1RCB.html</anchorfile>
      <anchor>ae36bd57515bcbc4d3f155993131ddf6a</anchor>
      <arglist>(const coord_type &amp;max_length_, const size_type &amp;max_parts_, const Teuchos::ArrayView&lt; TupleType &gt; &amp;coords_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCB</name>
      <anchorfile>classStokhos_1_1RCB.html</anchorfile>
      <anchor>a4249170d15f473b77e5c79f659ef2a11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>get_num_parts</name>
      <anchorfile>classStokhos_1_1RCB.html</anchorfile>
      <anchor>ac056d616c4b6000190dc14ce248c43a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Box &gt;</type>
      <name>get_partition_root</name>
      <anchorfile>classStokhos_1_1RCB.html</anchorfile>
      <anchor>ae3951cc48400edbeda1ad742fdd5029c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::Array&lt; Teuchos::RCP&lt; Box &gt; &gt; &gt;</type>
      <name>get_parts</name>
      <anchorfile>classStokhos_1_1RCB.html</anchorfile>
      <anchor>a6c42073ec4c84e37708b1b9ac99ae9a3</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::aligned_allocator::rebind</name>
    <filename>structStokhos_1_1aligned__allocator_1_1rebind.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::aligned_allocator&lt; const T &gt;::rebind</name>
    <filename>structStokhos_1_1aligned__allocator_3_01const_01T_01_4_1_1rebind.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; const Sacado::MP::Vector&lt; OldStorageType &gt;, Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01const_01Sacado_1_1MP_1_1Vector_3_01OldStorageType_01_4_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; const Sacado::UQ::PCE&lt; OldStorageType &gt;, Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01const_01Sacado_1_1UQ_1_1PCE_3_01OldStorageType_01_4_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; Sacado::MP::Vector&lt; OldStorageType &gt;, Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01Sacado_1_1MP_1_1Vector_3_01OldStorageType_01_4_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; Sacado::UQ::PCE&lt; OldStorageType &gt;, Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01Sacado_1_1UQ_1_1PCE_3_01OldStorageType_01_4_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; T *, Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01T_01_5_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; T[], Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01T[]_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::RebindStokhosStorageDevice&lt; T[N], Device &gt;</name>
    <filename>structKokkos_1_1Impl_1_1RebindStokhosStorageDevice_3_01T[N]_00_01Device_01_4.html</filename>
    <templarg></templarg>
    <templarg>N</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::RecurrenceBasis</name>
    <filename>classStokhos_1_1RecurrenceBasis.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::OneDOrthogPolyBasis</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RecurrenceBasis</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>adad4d4a3c5cc79d5998d656e482d1c26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a9c11ace0ac961f589a63744b203eaf0b</anchor>
      <arglist>(Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBasesAndDerivatives</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>af1f9224c86a83552ff3b1ec2099365c9</anchor>
      <arglist>(const value_type &amp;point, Teuchos::Array&lt; value_type &gt; &amp;vals, Teuchos::Array&lt; value_type &gt; &amp;derivs) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setQuadZeroTol</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a28f83fd7867bd81152180426d7ec978e</anchor>
      <arglist>(value_type tol)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecurrenceBasis</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>af25eae463a772d8f9d4c5ce50f52a203</anchor>
      <arglist>(const std::string &amp;name, ordinal_type p, bool normalize, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RecurrenceBasis</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a3a6a6abd7829f6d7d43f2dbfe15b7cb5</anchor>
      <arglist>(ordinal_type p, const RecurrenceBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>ad98c748337ac52ac68156f69f4ba6f81</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>aa94ea78269ce9774b2666551019b1a9f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>normalizeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>afb84e7d8e41c2d207bbbc45dc91f1bb8</anchor>
      <arglist>(Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>ac74be4f3006544e1d5e6609c026f7a0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a7df69fec077176292b0eb43af7a1ccf0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>normalize</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a1c3ea5da1d4b58fb34448abad8ea76e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>GrowthPolicy</type>
      <name>growth</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a358ca9bc4694c9217ad0f6cea10dac88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>quad_zero_tol</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a44da95d2739ced3acb6fa333a381b5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>LevelToOrderFnPtr</type>
      <name>sparse_grid_growth_rule</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>ac1c660d5df42e95a5574027a1a159504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>alpha</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a6f5e1fcda86fc3b2f375075e13095149</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>beta</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a7064d2eb57b598a5147377daa68da2db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>delta</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a8641c52fe59207f75a5b8560b6baf2ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>gamma</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a7e4b124df5ac1a9bbd4da8f7bf4d6a47</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a14188d26e5302ade50a9251e1d510b13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt;::LevelToOrderFnPtr</type>
      <name>LevelToOrderFnPtr</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a37294e97f773f1d1d10018e89755b8de</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a6cb18ff7a396b2619a579d793aa43eb1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a3e282869d19b234daa77523298fa7ad2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>af3f15391d8f1f5b20bea4a5468160037</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a615fe5e954539f81d6499a396793d4dc</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Dense3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>aae4c8c161ee4527dc4d83cff13e801c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeSparseTripleProductTensor</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>ad957009c4881af571ba5f49c0ea92b56</anchor>
      <arglist>(ordinal_type order) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeDerivDoubleProductTensor</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a49402fd16ecf0cd87e95e4d1394e51e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>afbdb3bd34d9217b6efe5f5898513aa6b</anchor>
      <arglist>(const value_type &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_pts) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a647914468f68d18af938c1c82e784968</anchor>
      <arglist>(const value_type &amp;point, ordinal_type order) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>ab68b8469a135faa6c5c131c843e1f1ef</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a2590d8c048a360dde9d217ed1b4c364a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a0d2932f2a7618898a43a6f3cb339b34d</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>quadDegreeOfExactness</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a256e2e68e2f5dc69b7c5326d2330f1b7</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>coefficientGrowth</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a0160343bca628f3707badea5002e5bb3</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>pointGrowth</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a62ed6f88f289912be16847fabfb63949</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual LevelToOrderFnPtr</type>
      <name>getSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a42fa0419fd35b9ef8a5a320eafa080ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setSparseGridGrowthRule</name>
      <anchorfile>classStokhos_1_1RecurrenceBasis.html</anchorfile>
      <anchor>a9ee267d0e0298567fc0eec822b898291</anchor>
      <arglist>(LevelToOrderFnPtr ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ReducedBasisFactory</name>
    <filename>classStokhos_1_1ReducedBasisFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ReducedBasisFactory</name>
      <anchorfile>classStokhos_1_1ReducedBasisFactory.html</anchorfile>
      <anchor>ac6a2459638af2e48484bd42345d785ea</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReducedBasisFactory</name>
      <anchorfile>classStokhos_1_1ReducedBasisFactory.html</anchorfile>
      <anchor>aee9843aec8ba7b75d78f9f4b4494ea52</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::ReducedPCEBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>createReducedBasis</name>
      <anchorfile>classStokhos_1_1ReducedBasisFactory.html</anchorfile>
      <anchor>a88c2102071c755c8ede97a855e1063cf</anchor>
      <arglist>(ordinal_type p, const Teuchos::Array&lt; Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1ReducedBasisFactory.html</anchorfile>
      <anchor>a9acdbe8692e11d97a6985e79906f5379</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>reduction_method</name>
      <anchorfile>classStokhos_1_1ReducedBasisFactory.html</anchorfile>
      <anchor>a63d2d26d8717beb48569f0e095907c77</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ReducedPCEBasis</name>
    <filename>classStokhos_1_1ReducedPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base virtualness="virtual">Stokhos::OrthogPolyBasis</base>
    <member kind="function">
      <type></type>
      <name>ReducedPCEBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>aea2da176b7198d2c252364a80d0c1206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReducedPCEBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a44545ca62b907e555e0791890fba5ef5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a1360aaa0e7faec21a1251cd126b3c1cd</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a97e07c175d7fcc20091107a0cc8db173</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a7daff3cbfacd8bb9554997c73c868117</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformToOriginalBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a1360aaa0e7faec21a1251cd126b3c1cd</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>transformFromOriginalBasis</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a97e07c175d7fcc20091107a0cc8db173</anchor>
      <arglist>(const value_type *in, value_type *out, ordinal_type ncol=1, bool transpose=false) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ReducedPCEBasis.html</anchorfile>
      <anchor>a7daff3cbfacd8bb9554997c73c868117</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ReducedQuadratureFactory</name>
    <filename>classStokhos_1_1ReducedQuadratureFactory.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="function">
      <type></type>
      <name>ReducedQuadratureFactory</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>aba6600e4520023e3b4daa3ed41b88bfe</anchor>
      <arglist>(const Teuchos::ParameterList &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ReducedQuadratureFactory</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a2f8c347766de07a4cfd952edcc4cbdaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; const Stokhos::UserDefinedQuadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>createReducedQuadrature</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a63c877e5203bd611b43a7fb55a1f75e9</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Q, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Q2, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;F, const Teuchos::Array&lt; value_type &gt; &amp;weights) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>ordinal_type</type>
      <name>n_choose_k</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a9897b5c3673c052ce6d144433e481f28</anchor>
      <arglist>(const ordinal_type &amp;n, const ordinal_type &amp;k) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ParameterList</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>ab8f77a7aa2145f96e0d4d3161de7db36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>reduction_method</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>ac1a228063d5381bd126845fbbb44de3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>solver_method</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>afe72f4829d72518f1e7742f2d5eabe93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eliminate_dependent_rows</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a0a81e26cecd3610b75786379b5ea737b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a3341d9f6c9ded02764aec6c42841c1b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>reduction_tol</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>a43f693baa6030c88542c5d95b599ed62</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>objective_value</name>
      <anchorfile>classStokhos_1_1ReducedQuadratureFactory.html</anchorfile>
      <anchor>ae77796caf095f7cab24525be86c7f80c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::ResponseStatisticModelEvaluator</name>
    <filename>classStokhos_1_1ResponseStatisticModelEvaluator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a3a40f47d426e0c67bdc8a392e6ee7e29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ad0b1e887c9e76e78e696bed4527d7233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a9b4b53b5b9e6aa6c89ff6b9fbfc45f94</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ad401851f1cd44c10b3f47a832dced1aa</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a55ce3be06b337aa735156060096b461e</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a8265cf542adcc0ec24bfd939af96ffa7</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a759fd243f8a40ac5ca299f3327b37cde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a2ef3580d07c038ac4490fec04d66a0b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ac7acf62dd139adbc872482328db0a9a8</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a2eff6cfc9020eabb6ec05770752ff78c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>base_g_maps</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a6447cefcfaf036f136989ad8ffee31bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a8cb1f9558f3d81743efe46ba29190fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a24137784a0bb302e1fd885a202051e88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>block_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a01c02c3f4e6e0861321563f98d2fbe21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a184d0b5210fbae98fa67aaa418e7d935</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>aa415f87bee0fa1c5868365d4ee8426dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a3a40f47d426e0c67bdc8a392e6ee7e29</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ad0b1e887c9e76e78e696bed4527d7233</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a9b4b53b5b9e6aa6c89ff6b9fbfc45f94</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ad401851f1cd44c10b3f47a832dced1aa</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a55ce3be06b337aa735156060096b461e</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a8265cf542adcc0ec24bfd939af96ffa7</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a759fd243f8a40ac5ca299f3327b37cde</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>a2ef3580d07c038ac4490fec04d66a0b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1ResponseStatisticModelEvaluator.html</anchorfile>
      <anchor>ac7acf62dd139adbc872482328db0a9a8</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::RysBasis</name>
    <filename>classStokhos_1_1RysBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DiscretizedStieltjesBasis</base>
    <member kind="function">
      <type></type>
      <name>RysBasis</name>
      <anchorfile>classStokhos_1_1RysBasis.html</anchorfile>
      <anchor>acb1d474cff4a5f825699d16a7c28409a</anchor>
      <arglist>(ordinal_type p, value_type c, bool normalize, GrowthPolicy growth=SLOW_GROWTH)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RysBasis</name>
      <anchorfile>classStokhos_1_1RysBasis.html</anchorfile>
      <anchor>a572d1a70a0c143e0b3a04cb0c9e9f347</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1RysBasis.html</anchorfile>
      <anchor>af018b7cfd5244f064a05eb1b6c99ce77</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static value_type</type>
      <name>rysWeight</name>
      <anchorfile>classStokhos_1_1RysBasis.html</anchorfile>
      <anchor>a8375d30b1f71edffc42333830c376031</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>RysBasis</name>
      <anchorfile>classStokhos_1_1RysBasis.html</anchorfile>
      <anchor>a3847e3fad768a1415c3f6b97b5cc900d</anchor>
      <arglist>(ordinal_type p, const RysBasis &amp;basis)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>cusp::precond::aggregation::sa_level</name>
    <filename>structcusp_1_1precond_1_1aggregation_1_1sa__level.html</filename>
    <templarg>MatrixType</templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewError::sacado_mp_vector_partition_constructor_requires_unmanaged_view</name>
    <filename>structKokkos_1_1Impl_1_1ViewError_1_1sacado__mp__vector__partition__constructor__requires__unmanaged__view.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewError::sacado_pce_partition_constructor_requires_unmanaged_view</name>
    <filename>structKokkos_1_1Impl_1_1ViewError_1_1sacado__pce__partition__constructor__requires__unmanaged__view.html</filename>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarType&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarType_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ScalarValue&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ScalarValue_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::SchurPreconditioner</name>
    <filename>classStokhos_1_1SchurPreconditioner.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Operator</base>
    <member kind="function">
      <type></type>
      <name>SchurPreconditioner</name>
      <anchorfile>classStokhos_1_1SchurPreconditioner.html</anchorfile>
      <anchor>a65ab285536409b9ae858397b48a63413</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;K, const ordinal_type p, const ordinal_type m, const ordinal_type diag)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SchurPreconditioner</name>
      <anchorfile>classStokhos_1_1SchurPreconditioner.html</anchorfile>
      <anchor>a77bf1d7af45c2219597986ed00c629e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>ApplyInverse</name>
      <anchorfile>classStokhos_1_1SchurPreconditioner.html</anchorfile>
      <anchor>a2152dd43f4c6c5ccde8b4a09c7893554</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;Result, ordinal_type prec_iters) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialQRDenseSolver</name>
    <filename>classTeuchos_1_1SerialQRDenseSolver.html</filename>
  </compound>
  <compound kind="class">
    <name>SerialQRDenseSolver&lt; OrdinalType, BaseScalarType &gt;</name>
    <filename>classTeuchos_1_1SerialQRDenseSolver.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialQRDenseSolver&lt; OrdinalType, Sacado::MP::Vector&lt; Storage &gt; &gt;</name>
    <filename>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a975ce49c56318951b528420dc281c201</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4750aafa0bdca340fb4397dd93a6a710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7c078cb94a1b04e72b64f264499e4290</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aee9c191f47596746948ddfd0ff013349</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af30ee206cec92a5b4609f644338adda1</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1dd27b6943fbd4e16862065bd3ea21e7</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad2b1eb6795404627ee765ee2633fffda</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8a7f50b257ba6c65368ae9d8e38a6785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a89fd29b15f7a6aba7215c80f39da378b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a979398d152c739104e3434707572ad50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abd7dcb70da7e5057700a67867d81d7e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a500b4d499b92d4e068ecd9d9e615ebf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f51812293fad9e0cfa91f7126afe635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a78ebb782f569729d95d6cd8aa341a63b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a18fc845825a547edc5dca939cae36b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiplyQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade97f1f142f1b10a451a6effa694af50</anchor>
      <arglist>(ETransp transq, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afc5dfcbd3aea4e00b974e409f8fffe59</anchor>
      <arglist>(ETransp transr, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa16952e3390af68460c15a303fda485e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a687a43b60c46e7d5ccf302d61c56dd20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab6a5d4b268dec18bafa7ddbd5466f699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa0c28b03a5c6accce055c7e2779f2921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4e30573eb8700b9a11fdce09caf9ad07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7a84a204bf0feca70d65d2c97595f0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afaa7e514ddb8fe3d727a2ed01873a325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5dcdaa480f748e4293f981651ef8e49f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aacdcda1af8554317ed64f6dc42492c59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a649b8d4fa6e6c744e942dd52572a538f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4ab7c735d72d2356da4054c6ed97f642</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abf2ade9e22ea5966768d00d6dc260e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad107f84785cb0f13dbeb84bc47d7355f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a190b156edde07fe7f255704ebcf16ee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac7111c3bdcbe710515fce72636fda4e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aad6a4aabcfbd3ade1edb6cb8ba4f950f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>tau</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a12c0b18fd695ed01f81e7fa163fd9458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6d8d3ae1031ce041cc4082d691e07c77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abd41386324f3d3a1619adc1b4f62fa61</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a975ce49c56318951b528420dc281c201</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4750aafa0bdca340fb4397dd93a6a710</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7c078cb94a1b04e72b64f264499e4290</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aee9c191f47596746948ddfd0ff013349</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af30ee206cec92a5b4609f644338adda1</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1dd27b6943fbd4e16862065bd3ea21e7</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad2b1eb6795404627ee765ee2633fffda</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8a7f50b257ba6c65368ae9d8e38a6785</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a89fd29b15f7a6aba7215c80f39da378b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a979398d152c739104e3434707572ad50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abd7dcb70da7e5057700a67867d81d7e7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a500b4d499b92d4e068ecd9d9e615ebf5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2f51812293fad9e0cfa91f7126afe635</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a78ebb782f569729d95d6cd8aa341a63b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a18fc845825a547edc5dca939cae36b7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiplyQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ade97f1f142f1b10a451a6effa694af50</anchor>
      <arglist>(ETransp transq, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afc5dfcbd3aea4e00b974e409f8fffe59</anchor>
      <arglist>(ETransp transr, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa16952e3390af68460c15a303fda485e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a687a43b60c46e7d5ccf302d61c56dd20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ab6a5d4b268dec18bafa7ddbd5466f699</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa0c28b03a5c6accce055c7e2779f2921</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4e30573eb8700b9a11fdce09caf9ad07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a7a84a204bf0feca70d65d2c97595f0c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>afaa7e514ddb8fe3d727a2ed01873a325</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5dcdaa480f748e4293f981651ef8e49f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aacdcda1af8554317ed64f6dc42492c59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a649b8d4fa6e6c744e942dd52572a538f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a4ab7c735d72d2356da4054c6ed97f642</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abf2ade9e22ea5966768d00d6dc260e7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad107f84785cb0f13dbeb84bc47d7355f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a190b156edde07fe7f255704ebcf16ee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac7111c3bdcbe710515fce72636fda4e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aad6a4aabcfbd3ade1edb6cb8ba4f950f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>tau</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a12c0b18fd695ed01f81e7fa163fd9458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6d8d3ae1031ce041cc4082d691e07c77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abd41386324f3d3a1619adc1b4f62fa61</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialQRDenseSolver&lt; OrdinalType, Sacado::UQ::PCE&lt; Storage &gt; &gt;</name>
    <filename>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac10248e685902cc93e1f77dcf5db97fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a62f5a7e9f6ff00746b3d70bde271cb5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad642b13b7bbea1114da2b435b09011b3</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>addfb5c2d5082452d93a0bb67a6a278cb</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8a7ef5c4e44833bd5ae5350b4e36c948</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abe8b0d191546f16640adbdf340d2aacc</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae65892cab9162338cb7802c2f1da9956</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8243c799a030f1e1946b1da46110569e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae8da53a0e972cce9042af65fcd5d0c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a42bbfb706cb393e931f73fd8e6540ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a62e544bb8661a4d87264a8b0fb127aba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a09b993c9c5b7dccfd8384b289323e1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2e955dbd047544f4b03edd6de4bd5e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa908d69ac0ac053ea86f8473898fcdf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af3192e1d9ef64b08ec51ef33e1bb0528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiplyQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a47f7989bc66b56e1e5d0cbe338a55475</anchor>
      <arglist>(ETransp transq, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a26055905eb752534b835c46f19f98950</anchor>
      <arglist>(ETransp transr, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acd7fcda21050381bf2357ebe4658a509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a401458788788a1d82c0f7b58aa1272d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a274e1c71f825ba374692ccb2124fbd7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a32d755267dca7e506ada8176535cd00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6b338cb9d374289e8960caaa49b6b1f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5a53827f5665da16b72f11bb47556737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a224af86dbbb790e590665fe9fcf0e079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1c8ae62f8689cf4d2a97d8fd0ae335c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aecbcabc4968f22d966a1708c59a117ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac9e775b5fce095aa6e9406b00e53242a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad9e1e730fa26b255e392493f815fa3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2fcc99dc8e48c13b4d062f1b32c6037c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8137438ba883d69a3514e2c792ae25c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a18c0ec55f35db0609f7ca600e447114d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0093741cdf5a69fd5957a8d650dd8794</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac79161c85251c44cd8d5db7029bde31d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>tau</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1bd1498258cda5d5e5ae078e6cd752af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad35b38ec78c08493a53d88a05444d8f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae199ca181a1dbb0aeed08265bbd2b85d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac10248e685902cc93e1f77dcf5db97fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a62f5a7e9f6ff00746b3d70bde271cb5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad642b13b7bbea1114da2b435b09011b3</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>addfb5c2d5082452d93a0bb67a6a278cb</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8a7ef5c4e44833bd5ae5350b4e36c948</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>abe8b0d191546f16640adbdf340d2aacc</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae65892cab9162338cb7802c2f1da9956</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8243c799a030f1e1946b1da46110569e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae8da53a0e972cce9042af65fcd5d0c6e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a42bbfb706cb393e931f73fd8e6540ce5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a62e544bb8661a4d87264a8b0fb127aba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a09b993c9c5b7dccfd8384b289323e1fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2e955dbd047544f4b03edd6de4bd5e03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aa908d69ac0ac053ea86f8473898fcdf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>af3192e1d9ef64b08ec51ef33e1bb0528</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiplyQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a47f7989bc66b56e1e5d0cbe338a55475</anchor>
      <arglist>(ETransp transq, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a26055905eb752534b835c46f19f98950</anchor>
      <arglist>(ETransp transr, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>acd7fcda21050381bf2357ebe4658a509</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a401458788788a1d82c0f7b58aa1272d9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a274e1c71f825ba374692ccb2124fbd7b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a32d755267dca7e506ada8176535cd00c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a6b338cb9d374289e8960caaa49b6b1f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a5a53827f5665da16b72f11bb47556737</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a224af86dbbb790e590665fe9fcf0e079</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1c8ae62f8689cf4d2a97d8fd0ae335c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>aecbcabc4968f22d966a1708c59a117ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac9e775b5fce095aa6e9406b00e53242a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad9e1e730fa26b255e392493f815fa3c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a2fcc99dc8e48c13b4d062f1b32c6037c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a8137438ba883d69a3514e2c792ae25c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a18c0ec55f35db0609f7ca600e447114d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a0093741cdf5a69fd5957a8d650dd8794</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ac79161c85251c44cd8d5db7029bde31d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>tau</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>a1bd1498258cda5d5e5ae078e6cd752af</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ad35b38ec78c08493a53d88a05444d8f3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver_3_01OrdinalType_00_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4.html</anchorfile>
      <anchor>ae199ca181a1dbb0aeed08265bbd2b85d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGInverseModelEvaluator</name>
    <filename>classStokhos_1_1SGInverseModelEvaluator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a819d19b953c498b99c3ea567de40062a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>aaae4411352673fdb28b2c718dc243a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a9700c426c36baa593a8a06e519dd2a0e</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ac080f99dae6b32e7372b3f93e2c950bf</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a53155f10daa055508521dc0a970401fb</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a2c330e1810dc6a8b43aa680df76dd800</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a9eb60f716215ff819efb7b9f009c91df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ac51ca732c96b26267f30382ecac0ba6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a8a0aa2e8e3da18a505389117e5e44429</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>aa929f9a58ea84cf4bbfc57a645d1771a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_p_index_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a41e970d46bb60396a050e237e926d6da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_g_index_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>aa498e35a9d4a617212338bccbcbbabcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>base_g_maps</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ab0349708ae54de821e39769a2d8533ca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ae2549c9b567049f158acf0fba0832bd2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a4d65aba2542c2089bd8f303360a7067c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_sg</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a952af7b697680a56f2d330a3364e44e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_sg</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a3694898d30176ff30c9cd9f2f5b803fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a819d19b953c498b99c3ea567de40062a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>aaae4411352673fdb28b2c718dc243a80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a9700c426c36baa593a8a06e519dd2a0e</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ac080f99dae6b32e7372b3f93e2c950bf</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a53155f10daa055508521dc0a970401fb</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a2c330e1810dc6a8b43aa680df76dd800</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a9eb60f716215ff819efb7b9f009c91df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>ac51ca732c96b26267f30382ecac0ba6c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGInverseModelEvaluator.html</anchorfile>
      <anchor>a8a0aa2e8e3da18a505389117e5e44429</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGModelEvaluator</name>
    <filename>classStokhos_1_1SGModelEvaluator.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a5d5a665f8aafb930ceb1ffffe19d5008</anchor>
      <arglist>(const Stokhos::EpetraVectorOrthogPoly &amp;x_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a4fb47be4e415dff56b9b7e9de90b8c8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ad2679325da5b7fd934b75459199713ba</anchor>
      <arglist>(int i, const Stokhos::EpetraVectorOrthogPoly &amp;p_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>acd54fd6d177be1956de9c97b87f46d58</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_p_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>adabc81b3f416dc0accb9485f409bfded</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_g_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>abe8ecf394d8d1f2172544003303bf48e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>get_g_sg_base_maps</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a1568635d43389bd34e380bf0e58e7476</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_overlap_stochastic_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a0a6322ef512b0ba590f54454114932b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_x_sg_overlap_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ac19309eb44d9da6882d9aa0584ff1136</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Import &gt;</type>
      <name>get_x_sg_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a92399431e338e54e727616f80c1c4a71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6ceef09b93a17c79e9771da7fb22d9df</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ab162bb1e1640b38c10cc984fa3e7389b</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a7871aabd9f25bbe58c7077e37dfc9767</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a517ecbeaad477a93b2a16e01c1feb593</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2594d4837e220aebf8f0e276f7b202d2</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a0bc98f0f12aa5c004a88942aaa9f109f</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a3dd4fc8c0af08636f919deec8be0ecc4</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ab478a0a80d90c6c6d4cc218906edf847</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6da37ebfd29aedacb7dbf14f710c318f</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>acff52756ca4c97b01e8d756ee17eead0</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_g_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a23f1b083174f901c6f74cd65444d4f8f</anchor>
      <arglist>(int l, int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>import_solution</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ad6d7bbc7bc8035deae69456cce92e75f</anchor>
      <arglist>(const Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>import_solution_poly</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ab69ed8b771575295e04a31b7ddc2bf65</anchor>
      <arglist>(const Epetra_Vector &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>export_solution</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>aca2acbfdff27cc022b5e43ce0765be2b</anchor>
      <arglist>(const Epetra_Vector &amp;x_overlapped) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>import_residual</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>aa03304d43c50002467849206e7e84b19</anchor>
      <arglist>(const Epetra_Vector &amp;f) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::BlockVector &gt;</type>
      <name>export_residual</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>aec281c11b3cb4bcdcebc29ba682389c7</anchor>
      <arglist>(const Epetra_Vector &amp;f_overlapped) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a5936ad6d58ea6a3a8403f19f3c9f9072</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a1d976f31cb28c6c22ce7e272fd158251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ada811521f7dbf793ab8a6a001c763d4f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2aefe42a6fea55827bd295bd9bf040d1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a1efcf88a532b0d7b2373594c6ec7097d</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a0fd367228ff4ea7aaa2041b78fd93780</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a596a02bb468ffbccd1211b29d77a1de9</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a02db2d6944e68c2ba9db09450af6b551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator::Preconditioner &gt;</type>
      <name>create_WPrec</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>afdd4b1c199fb2a0beb8f07e3fea153a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_dot_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>af8a822db2ebffade93c7b8baf85de35c</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6faeee42ce7b4c68526f3cd476b89440</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDp_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a94d876d910515313c975b0888b1eb11e</anchor>
      <arglist>(int j, int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DfDp_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a731c843d0ca3d40a776c2a6d4733a7e8</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a51146cf87c4269c578a73d81bedef93e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6c9bd40febb4a1b5d69bd55a9f6aa1e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a8b99868a7e5d327a146e6f87b5e23b48</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a27525f68a25d94f8a25711a1660bfef5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a017ebce31c3a12c7ebe12b532583aae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; int, double &gt; &gt;</type>
      <name>sg_quad</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a4034db157c2293a6ebaaa1dc2fdfd525</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::OrthogPolyExpansion&lt; int, double &gt; &gt;</type>
      <name>sg_exp</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a7c74178e9fabc24a8eab9fe404247745</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a7f14deb2c909aaceaf6dc04bcd5cb90f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a48074615584c7f57760b63072357b048</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_W_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ae71d4b3fffbf0cb5d85e72eacbe43794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_p_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>afb09f5e7666fe0f8d3431b0efefb7014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>supports_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ae5d53e7ccf2c41b639bf69f391d2e228</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>aef8a4a63d7ee68b177370526d2e01d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a418a38d35d55fefa118c5aefa5b5ea23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::ParallelData &gt;</type>
      <name>sg_parallel_data</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a13d07f8808bccfb121cbad10398e4541</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a942e160cf23727ede963ddece4bc5880</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ae31b7b81fb5a1710d37b7f6b92653f6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>serialCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2f77a5c3670240b6ccf05c377dc93733</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ab9cebe510a4315045710ba89f2f8225e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a5172da0d470f096e8a4b899cf8805118</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6b21fb8286b7cc0886a6f7696acde472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a558ba533a74f63ca73d31d7ba1e81255</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_overlapped_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a4a0afcabc385cd35a85f538d7c652c60</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a16e0ee4425a6b49ccff82998a87786b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>sg_overlapped_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>afcb687c040803ac405355ce684eb4aac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>sg_overlapped_x_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a625b5ea808fb54799b062717ac15ddbf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>sg_overlapped_f_exporter</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a8883fa64aa3cac15c26f3e96e41a4358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>addc498fcc1bc3ff47acc351a88182b57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a199725fe505a851bc139b15c03180dc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_p_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a91295e6f08f663e76249e2c71c71b5bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a8338dc35fbac8496e9d5fbbdcbde7047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt;</type>
      <name>sg_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a83fafa2b47e7b214561f64575a693d67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>afb2ca3e7fdd5baf7d07858310e6e084a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2de248259e841561144d2db9689efff3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_g_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a8299438d789e2055f84fbf2309e5a8ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a5ee6d9ba78c94c75e0aff1ee7216a429</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_dot_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>aa2ae7a84f8015c31445026e1a46ca555</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a803f9c29a3c0cd38c177a4252438f2d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>f_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>af3f5033112209ae3247b0a14d67adea9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>W_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ab230e4143bf44634737bac8e790e9f22</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>sg_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a29f6d3a78ca60d098ae50856ae5f8dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt; &gt;</type>
      <name>sg_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ac5b114de9278fb2d9923e0da128b5afd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eval_W_with_f</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6b69dc932c6697db834ea49af532fa4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>my_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ac72367a6ab385c23d3db759161bcb151</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>my_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a86301ba62cb2a2ab1e82101f37bb8ad5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGPreconditionerFactory &gt;</type>
      <name>sg_prec_factory</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2e276b3a0e250f9e81cefb2a83635f78</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a5936ad6d58ea6a3a8403f19f3c9f9072</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a1d976f31cb28c6c22ce7e272fd158251</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>ada811521f7dbf793ab8a6a001c763d4f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a2aefe42a6fea55827bd295bd9bf040d1</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a1efcf88a532b0d7b2373594c6ec7097d</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a0fd367228ff4ea7aaa2041b78fd93780</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a596a02bb468ffbccd1211b29d77a1de9</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a02db2d6944e68c2ba9db09450af6b551</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator::Preconditioner &gt;</type>
      <name>create_WPrec</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>afdd4b1c199fb2a0beb8f07e3fea153a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_dot_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>af8a822db2ebffade93c7b8baf85de35c</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDx_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6faeee42ce7b4c68526f3cd476b89440</anchor>
      <arglist>(int j) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DgDp_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a94d876d910515313c975b0888b1eb11e</anchor>
      <arglist>(int j, int i) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_DfDp_op</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a731c843d0ca3d40a776c2a6d4733a7e8</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a51146cf87c4269c578a73d81bedef93e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a6c9bd40febb4a1b5d69bd55a9f6aa1e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator.html</anchorfile>
      <anchor>a8b99868a7e5d327a146e6f87b5e23b48</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGModelEvaluator_Adaptive</name>
    <filename>classStokhos_1_1SGModelEvaluator__Adaptive.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ad9b02b826cfbd59a955b7178b1f01f73</anchor>
      <arglist>(const Stokhos::EpetraVectorOrthogPoly &amp;x_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aed98de7dfb4b687318497cad12ff0626</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a666d53854900eb7482bd91fe65c4f4b1</anchor>
      <arglist>(int i, const Stokhos::EpetraVectorOrthogPoly &amp;p_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ac03293e9b482812d0c1c86064d3b56ef</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_p_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a48ce9cd9c0ce1a37127ebbea8fd14ab5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_g_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a529fb20426d2063f45541a0d174a5084</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>get_g_sg_base_maps</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a1977ae9153fc3648a96ada74298297f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_overlap_stochastic_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a3d71b8aeefb69b548d537c196a74a153</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_x_sg_overlap_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a5e9e785d85d415bcf31785aeb25da8fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Import &gt;</type>
      <name>get_x_sg_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a1354d2b08f5ae26898add667cb655b2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a55f7362c83871429caa4460fc5d9e533</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9df7f082356757714ee55395de6b3348</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a37dbf8e0800d6a65bde2535704abe8be</anchor>
      <arglist>(int num_vecs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a4a6c36d805406c2406d67adc705bd007</anchor>
      <arglist>(int num_vecs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a5a42582a249dfa0777f73f0a069b97de</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=0) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ae2bfee07b001638796027337f91ad1e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a26ce6909106377d33ee19d09c4dc2bf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ac743b76645d8020886593b8f3924b798</anchor>
      <arglist>(int num_vecs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a0665d3b966ebc922c3425d20d25aa3ea</anchor>
      <arglist>(int num_vecs) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>abda6f50cd326f0f429dc9ef99b8dd2ec</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_g_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a1f9f3224f2b0447abce53fc14fee2eb8</anchor>
      <arglist>(int l, int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9f771904f78823d0d157df31740301db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a4c96568186e7f8c5f8405fa98a95b3eb</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a40bf8cca2f3acb48d296181418c9d7f6</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a8d83a885eed66e5e61349fe21b8365c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aadcfbc81b307d02fde96781c90d7d0b7</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a2678347f3099d04610258bd5715f5b99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a0b004fed4dc0269fea35629aafdba2aa</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a998a40c97c910fab78711e881b003eb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aa0abf585646984ff16d7338cf7e76974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a463f9043ed7bde08b7f422f1414d0442</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>abf5a5571b0636d7713e0e6def76b52ee</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a4c36ee3010b3af6db2f699c2fb1e1e16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aa102a2b315b0f3f8efbaeba4cc245454</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; int, double &gt; &gt;</type>
      <name>sg_quad</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aa8c9c0ac8bd12806a275224cbd93e85e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::OrthogPolyExpansion&lt; int, double &gt; &gt;</type>
      <name>sg_exp</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a06e2b04ee2f19ea58f6fb01ccf8ca887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>abdc1e44853954c020e79abd7c2c23364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a0f3054ee3f5502bc10ecda08cd1baa03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_W_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a8a7e2d45b68407ec34e49d74ac2aaaa1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_p_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a7ff285abe25c7db5b931b32e4e034a35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>supports_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>afa6beb2f318be84dd96db68c4ed91dee</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aa668fea055a9207b8e8a3454da313a68</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a60512d5439573ae8ca24ae0a5e8378e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::ParallelData &gt;</type>
      <name>sg_parallel_data</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a8dcd8a3af94dabf980b54cf11d997597</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ade811aa9fb73bc90e2a62153304d6c8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>afdea82e05570d971c996d57d7c810cd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>serialCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>afd47b10980c2cc5ae7429fe11efd8d8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a42d23fa09fb2de74a5fcb35f38f70211</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a5feebea1b4c63911880d0bc23aa46e13</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ae972bf7349eed0b3b4f3b0dbe620e68d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>adapted_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ad51715b8ea0872048bc01dc2eaff7bac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>adapted_overlapped_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ae19da22cb2ebda25db2fc24a01b87860</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>adapted_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9c800deeee910cd542dfaa1537437147</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>adapted_overlapped_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a85c656e4a5e439b76159721c283ef0cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>adapted_overlapped_x_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a7df75d3db611e4e21421cb91059fb8cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>adapted_overlapped_f_exporter</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>afab87075a092e04f5ac3eaf403da8a21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>af56c977681693433c0cb9e0c7825fabf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aba88eceea8e358aab46a7cd2aed203de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_p_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a43629a35cf2a56bfc52be1ea7d0be180</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a737ba88b7eafd8144396f9e9f54017bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt;</type>
      <name>sg_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a2c73eeae752b06c0ff7119188154b390</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>ad1bf2506e24d6c0988778355e4ec7c09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a61fbd621b4f2df5765657b49c777d6b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_g_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9f806aea2e2c71794ce54cc94967f139</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a63a8239d7bf1cc60257f638096639dba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_dot_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aace3362adc0a04a3549999f6e0f91135</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a4511712925c190bfe398ae215395b9cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>f_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a3345bb234e21fe96d9515c1ae440b099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>W_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a5a9d03a9836f477d0d5ba18ed605da37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt; &gt;</type>
      <name>dgdx_dot_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a3adea6e6b7928970fa23bf12533b51f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt; &gt;</type>
      <name>dgdx_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a431df24de1cc89f963b466a94c570040</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>sg_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>afa33a8eb4178dbd9786bf5719d55ccbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt; &gt;</type>
      <name>sg_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a1d4c4ccb43e6c57f0c9f5dabc926a567</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eval_W_with_f</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a44b137de57447a66793386630a011245</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_CrsMatrix &gt;</type>
      <name>my_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9e9d614c4fae969dbf54b3cc5cd0a26c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>my_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a8ebf7b41395c496a9f9f863bd3a3c590</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a9f771904f78823d0d157df31740301db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a4c96568186e7f8c5f8405fa98a95b3eb</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a40bf8cca2f3acb48d296181418c9d7f6</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a8d83a885eed66e5e61349fe21b8365c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aadcfbc81b307d02fde96781c90d7d0b7</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a2678347f3099d04610258bd5715f5b99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a0b004fed4dc0269fea35629aafdba2aa</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a998a40c97c910fab78711e881b003eb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>aa0abf585646984ff16d7338cf7e76974</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>a463f9043ed7bde08b7f422f1414d0442</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Adaptive.html</anchorfile>
      <anchor>abf5a5571b0636d7713e0e6def76b52ee</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGModelEvaluator_Interlaced</name>
    <filename>classStokhos_1_1SGModelEvaluator__Interlaced.html</filename>
    <member kind="function">
      <type>void</type>
      <name>set_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aaec039ec03e9a186b860964796db2822</anchor>
      <arglist>(const Stokhos::EpetraVectorOrthogPoly &amp;x_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_x_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aa7db4499689a51423468a837b2161aa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>abe937d395465ab605e2683f0e61ccfad</anchor>
      <arglist>(int i, const Stokhos::EpetraVectorOrthogPoly &amp;p_sg_in)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>get_p_sg_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ad51f21eb98360ee0a32d529bff2f4074</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_p_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>abacc78575346450a0fda305035a5ea0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>get_g_sg_map_indices</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab14f5e2435a36711adf40bb41a482738</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>get_g_sg_base_maps</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a78c02b39077e7400fe4a28b966f2422a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_overlap_stochastic_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3b360bb0f0ae224e2b75d9251a24772a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>get_x_sg_overlap_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aaac399acec92b05fa735989a980013f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Import &gt;</type>
      <name>get_x_sg_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aefaf6ee3d0e692eb084a65441741b5ec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a6703b7c1126db5db107857849fc92c9a</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_x_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3987e1ee47061c11fa9b45348cd368a2</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a40d367b7275046f004b56b64788f6347</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_x_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a4943a8480cd8a1aca3ade15df98cc3a3</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>afaf23af9fa831a7bbf2d451e8e31dcdc</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab47b936c191d3903b96ed774e1d71c45</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_f_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a908823be071fc177e92781e246dc3bfa</anchor>
      <arglist>(Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aff1d414ebaa1b1cb739ca15acd84efe5</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_f_mv_sg_overlap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a2b127b112dfa9afc7af826af86a791da</anchor>
      <arglist>(int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>create_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ad0fc6e70fab932d7b443eab2cec3c27e</anchor>
      <arglist>(int l, Epetra_DataAccess CV=Copy, const Epetra_Vector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt;</type>
      <name>create_g_mv_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a6dfd353dace443d537fe306a0a43e7e2</anchor>
      <arglist>(int l, int num_vecs, Epetra_DataAccess CV=Copy, const Epetra_MultiVector *v=NULL) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ace3950e084163d61d6dcfb59d63d3c34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a51cec7f7f0636c6d53146259248c9921</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a93f4cedaf0602a3902e73c88c538f856</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab296ffcd2b79aed789f01924ed1c4199</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ae47e3bd4250faab4ba5067059a096f4a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aaf8359b0267c850dc6a7c8d344896d6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aacb39ad82be46fd88daf27f4b1b7c1d0</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a94ac30a8b6e4954889fab87fc3165fa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a439d4e26a461ab5489103f87c4985bcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a12b61fa277a8944870cdedec67ecb08e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a9fbd546e4d04567e6829e7caf2f2c9e5</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; Epetra_Map &gt;</type>
      <name>buildInterlaceMap</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a20c04dac765925374e4edb1e38092b65</anchor>
      <arglist>(const Epetra_BlockMap &amp;determ_map, const Epetra_BlockMap &amp;stocha_map)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyToInterlacedVector</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a37bbb206501ad50c41a846d44243e4d3</anchor>
      <arglist>(const Stokhos::EpetraVectorOrthogPoly &amp;x_sg, Epetra_Vector &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copyToPolyOrthogVector</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a22393ad49fc7d022d562ed90dfebefbe</anchor>
      <arglist>(const Epetra_Vector &amp;x, Stokhos::EpetraVectorOrthogPoly &amp;x_sg)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a5fdc424438ccb28a774190e922f99a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt;</type>
      <name>sg_basis</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>abfda01829ba577703353f1d353ebea08</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; int, double &gt; &gt;</type>
      <name>sg_quad</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a0e8461a5a9e1c2145ed10d2dc475893f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::OrthogPolyExpansion&lt; int, double &gt; &gt;</type>
      <name>sg_exp</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3d4f4098c6c38514fdd1981a255fb74b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab46181ad212e35f3cff77a6981da2221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a69fcffe7a86ca2a5205f472bf221085e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_W_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>af726d68eba6cf4fdea83f4ad33d53657</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>num_p_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a40ab0954e65ba94f1874f15546f5f3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>supports_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a567c46d6599145abdf7f84cc1548bddc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ae88e28e128d5e5c95afeb3aa2631f773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a8a4396f889e064bca6a12d3977bc894f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::ParallelData &gt;</type>
      <name>sg_parallel_data</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ae8d7f86e337f4b4d807ba17126c89014</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>sg_comm</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a8b1ef9a7cd20625941c82409d560632c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>epetraCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a45c6bbd1ef3df13e667f90842bf42ec0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt;</type>
      <name>serialCijk</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a241feb5fa986df76bff687b650618d15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a5f78d940f839faf7451235841bdd0c28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_row_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3f20111b824413666b04077a1dcf29e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_BlockMap &gt;</type>
      <name>overlapped_stoch_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a57b3c612abe8d093726beb75b409004d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>interlace_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>afa409d696c92a74db1528a1df216a5b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>interlace_overlapped_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>abfe77beca617037bab5854d0e6b6ed58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>interlace_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a74898c32a807bc3c02d8e3a61b71d4b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>interlace_overlapped_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aadbf16c43053845641f82efc4a03d4a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Import &gt;</type>
      <name>interlace_overlapped_x_importer</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a1bf79e0035fab8d3f21dd39241e8b4dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Export &gt;</type>
      <name>interlace_overlapped_f_exporter</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a835b3b7a0da8e313dc4cf621d93080d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a62903587c376d9b67634bd234b01231a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a5e35591d4137c8764d19784003dc2c63</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_p_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3e43fecd532a1abea47b4061c0ba3a88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab2e284178a266f32ecd913f1b09f0474</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Teuchos::Array&lt; std::string &gt; &gt; &gt;</type>
      <name>sg_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a2fff1132f33715d7d050b1079117fb07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ae9feb8f1ec6931c36bd80948900d38df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_sg</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a7f86b9efc59a1e20383b7447b0c3b57b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>sg_g_index_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a9a99a82fdd2105b125d8a725ae6be3f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Epetra_Map &gt; &gt;</type>
      <name>sg_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aaf451e4a179f90f38fc3683b9065e36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_dot_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a29cbdc6f23c7b9975deeaa78e8ef1a23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>x_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>af710bb9a0759a8ce57d60725425bd090</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>f_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a620a87c28fd87dfbc1ae33f75a12351c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>W_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>adcf960b37e5c45d56eca25ee526e68df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt; &gt;</type>
      <name>dgdx_dot_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a9753f3bffa40811da401c835602660f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraMultiVectorOrthogPoly &gt; &gt;</type>
      <name>dgdx_sg_blocks</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a307c9244c03fa079fc06228a247cdb69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt;</type>
      <name>sg_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a3bbe695e424daa8cc8aff516465e8d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Stokhos::EpetraVectorOrthogPoly &gt; &gt;</type>
      <name>sg_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a7f2ce68b93741a75c2d698924132c2d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>eval_W_with_f</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a34acf9ddb0e4cc6e51141960be6ef683</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>my_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a28b667e35a6c700e81b0505525d54005</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>my_x</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a644a3b137618b84a5819ac99296ac075</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ace3950e084163d61d6dcfb59d63d3c34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a51cec7f7f0636c6d53146259248c9921</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a93f4cedaf0602a3902e73c88c538f856</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ab296ffcd2b79aed789f01924ed1c4199</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>ae47e3bd4250faab4ba5067059a096f4a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aaf8359b0267c850dc6a7c8d344896d6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>aacb39ad82be46fd88daf27f4b1b7c1d0</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a94ac30a8b6e4954889fab87fc3165fa9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a439d4e26a461ab5489103f87c4985bcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a12b61fa277a8944870cdedec67ecb08e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGModelEvaluator__Interlaced.html</anchorfile>
      <anchor>a9fbd546e4d04567e6829e7caf2f2c9e5</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGOperator</name>
    <filename>classStokhos_1_1SGOperator.html</filename>
    <member kind="function">
      <type></type>
      <name>SGOperator</name>
      <anchorfile>classStokhos_1_1SGOperator.html</anchorfile>
      <anchor>a26ec04ed8fe00688f90c0581cc378cda</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SGOperator</name>
      <anchorfile>classStokhos_1_1SGOperator.html</anchorfile>
      <anchor>a991b752d1bdc6049dfa33e13e7d9d392</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setupOperator</name>
      <anchorfile>classStokhos_1_1SGOperator.html</anchorfile>
      <anchor>a6ff74a329fcb5a642df981b6db031587</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt; &amp;poly)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1SGOperator.html</anchorfile>
      <anchor>a6395daf2a6c7068ec22d4b1100b55eb5</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const Stokhos::EpetraOperatorOrthogPoly &gt;</type>
      <name>getSGPolynomial</name>
      <anchorfile>classStokhos_1_1SGOperator.html</anchorfile>
      <anchor>a78880891264973331450e1741dab146c</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGOperatorFactory</name>
    <filename>classStokhos_1_1SGOperatorFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>SGOperatorFactory</name>
      <anchorfile>classStokhos_1_1SGOperatorFactory.html</anchorfile>
      <anchor>adf3fb55f0b279d93b82ca3af56d03b52</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SGOperatorFactory</name>
      <anchorfile>classStokhos_1_1SGOperatorFactory.html</anchorfile>
      <anchor>abbd53a8fc0d1b374ca389715ee393178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::SGOperator &gt;</type>
      <name>build</name>
      <anchorfile>classStokhos_1_1SGOperatorFactory.html</anchorfile>
      <anchor>a5573d0109f2738fa2b12de2aba3d5c2a</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;domain_sg_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;range_sg_map)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1SGOperatorFactory.html</anchorfile>
      <anchor>ac8da6ce2ea8e4aaa427d7f6388440578</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGPreconditioner</name>
    <filename>classStokhos_1_1SGPreconditioner.html</filename>
    <member kind="function">
      <type></type>
      <name>SGPreconditioner</name>
      <anchorfile>classStokhos_1_1SGPreconditioner.html</anchorfile>
      <anchor>a4d27523fc4bd0a1465e4d7b404b801fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SGPreconditioner</name>
      <anchorfile>classStokhos_1_1SGPreconditioner.html</anchorfile>
      <anchor>a2a4bfaf3539e0dad2b15ef2ec89676d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setupPreconditioner</name>
      <anchorfile>classStokhos_1_1SGPreconditioner.html</anchorfile>
      <anchor>abab6ab00ba61edb2c2142867842c813f</anchor>
      <arglist>(const Teuchos::RCP&lt; Stokhos::SGOperator &gt; &amp;sg_op, const Epetra_Vector &amp;x)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGPreconditionerFactory</name>
    <filename>classStokhos_1_1SGPreconditionerFactory.html</filename>
    <member kind="function">
      <type></type>
      <name>SGPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>a3851956e324ddea23a6750e7f7a47db2</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SGPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>a5e3d744aed161c9ac2e30b6a5d81a80f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isPrecSupported</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>aa0fedc2cec0399ce090776b49e971ed5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::SGPreconditioner &gt;</type>
      <name>build</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>aee2d74c4b80cb4bb171691fa99843789</anchor>
      <arglist>(const Teuchos::RCP&lt; const EpetraExt::MultiComm &gt; &amp;sg_comm, const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; int, double &gt; &gt; &amp;sg_basis, const Teuchos::RCP&lt; const Stokhos::EpetraSparse3Tensor &gt; &amp;epetraCijk, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;base_map, const Teuchos::RCP&lt; const Epetra_Map &gt; &amp;sg_map)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Teuchos::RCP&lt; Stokhos::AbstractPreconditionerFactory &gt;</type>
      <name>buildMeanPreconditionerFactory</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>ada3e7860addd3210feb8589ccf390cfa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>params</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>a6ea4c954b6da7b62fca2060a5105da9c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>prec_method</name>
      <anchorfile>classStokhos_1_1SGPreconditionerFactory.html</anchorfile>
      <anchor>ad45e0254195ddde82e1f0db2b10a0bcd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGQuadModelEvaluator</name>
    <filename>classStokhos_1_1SGQuadModelEvaluator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a00cdfe1e90bdd603ca24ac3fd5ec8a7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a25bb4520866481a47905386e524ce594</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a38be0ff4c68f0f4b25413412e16c8b0b</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ac69fcae0295e3121b0058f907e5b082c</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a7cccf366db0bd9cf12e76a2ef1805e86</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aa9ced0c48fc5b23968a352622e04710e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a60c13a4a9b324195a57fbe294010f37f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a9cca1a6ead175fed99d3198bfa9c83f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aeb39de06af52b2c6b2dfbb2738535a09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ab7622447172142a7bac1050c59d4343e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aa76e518323c75ab12acd7ce685f3dde6</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a119728fd8748d5e562372bb2b23ea225</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ab6a3f43c5e0383fe53e741c943c14201</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>af3d66583732ff788bd8dc3db99bf9af4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_dot_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a17e043db430ccaa8d8a9a1a37ffd0a85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>x_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a7adb12e3bdd49fde4be50d33355a08ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>p_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a5ffc6dd8b934ea38f95029fed745770c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Vector &gt;</type>
      <name>f_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a11e69b96700594e539f637a5b4082ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>W_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a0ab6fbdce1ce5fedff117539cf5ca506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; EpetraExt::ModelEvaluator::Derivative &gt;</type>
      <name>dfdp_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ad2d40d112cea16bb2cc7c2588bd763ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Epetra_Vector &gt; &gt;</type>
      <name>g_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ac42792c6e7b17dcb2b91be705a2d6565</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; EpetraExt::ModelEvaluator::Derivative &gt;</type>
      <name>dgdx_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ac7df0a8de654ffee37a1e757665ed1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; EpetraExt::ModelEvaluator::Derivative &gt;</type>
      <name>dgdx_dot_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a93caea630c1957ef2300d12138443b4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; EpetraExt::ModelEvaluator::Derivative &gt; &gt;</type>
      <name>dgdp_qp</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a6656bfbb53f2d401d10cb6c19c809174</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a00cdfe1e90bdd603ca24ac3fd5ec8a7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a25bb4520866481a47905386e524ce594</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a38be0ff4c68f0f4b25413412e16c8b0b</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ac69fcae0295e3121b0058f907e5b082c</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a7cccf366db0bd9cf12e76a2ef1805e86</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aa9ced0c48fc5b23968a352622e04710e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a60c13a4a9b324195a57fbe294010f37f</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>a9cca1a6ead175fed99d3198bfa9c83f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aeb39de06af52b2c6b2dfbb2738535a09</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>ab7622447172142a7bac1050c59d4343e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGQuadModelEvaluator.html</anchorfile>
      <anchor>aa76e518323c75ab12acd7ce685f3dde6</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SGQuadMPModelEvaluator</name>
    <filename>classStokhos_1_1SGQuadMPModelEvaluator.html</filename>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>ac73e5c141f94b6fde821ba9679d1cac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>af9159b09cf830af4577a780f0ae5a85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5845767cc285857f6ea51fbc616a602c</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a1972b4b67d979237a1755d2fe5cde44a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a6bfccbc167449f5a7deace0faf0c5be6</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a62c26e14b75dcb7a3c5b2b9bd0bd6419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5d8c76085f4e88857562786878ee1c64</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a04a2e6fce39b5d57ca7918c453cf7d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a93c5bac214b3bf2897e7bb5a84375af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a2f72901c429e00038a63b8a108db4ab3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>aa8dba36b25a034c0c5f585064e429d45</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; EpetraExt::ModelEvaluator &gt;</type>
      <name>me</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>af979343c63576a7b755a08ad944bcea2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const EpetraExt::MultiComm &gt;</type>
      <name>mp_comm</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a407355fe6523137886686bdd76869037</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>mp_block_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a9562d6010381f5fd320932153a985855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; int, double &gt; &gt;</type>
      <name>sg_quad</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a8c8f110a91db856a6df310b1584de649</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>ae4385273b90b6a7467aa48ed5f8225af</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>acebf6f0072583f947621af16acbecb61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_p_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a4ece623cbf71cf3c1447d2885f4f98de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>int</type>
      <name>num_g_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>af00edaa1e1df7b037398ddea08f556a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_p_index_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>adffbdf57837f87c901b786b0455a8e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>mp_g_index_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5f6cbefa6cae876fe5629a76e27d2397</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mp_vector_t</type>
      <name>x_dot_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a71d0768330c4703f4d0222fe3a87702a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mp_vector_t</type>
      <name>x_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a9396131becd30e2631efcb1d59857609</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; mp_vector_t &gt;</type>
      <name>p_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a3811815e6144c865abe08b61ee5a02f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mp_vector_t</type>
      <name>f_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a84a2492915ac4de66e15f10a8d3848c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>mp_operator_t</type>
      <name>W_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a4d07809fa5a031667e3921d57b4c639d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; MPDerivative &gt;</type>
      <name>dfdp_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>ae0554739a9b2da8da95a2097c8689731</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; mp_vector_t &gt;</type>
      <name>g_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a481e3dbcdd2a653c0bb16505da871c2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; MPDerivative &gt;</type>
      <name>dgdx_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5d5c070a9d9ae22ef90c6bcf631c9b45</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; MPDerivative &gt;</type>
      <name>dgdx_dot_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>af755742c5e0baa19595f491543557c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; MPDerivative &gt; &gt;</type>
      <name>dgdp_mp</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a679e4665db32736dbba27db20493f091</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_x_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>ac73e5c141f94b6fde821ba9679d1cac9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_f_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>af9159b09cf830af4577a780f0ae5a85e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_p_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5845767cc285857f6ea51fbc616a602c</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Map &gt;</type>
      <name>get_g_map</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a1972b4b67d979237a1755d2fe5cde44a</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; std::string &gt; &gt;</type>
      <name>get_p_names</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a6bfccbc167449f5a7deace0faf0c5be6</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_x_init</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a62c26e14b75dcb7a3c5b2b9bd0bd6419</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Epetra_Vector &gt;</type>
      <name>get_p_init</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a5d8c76085f4e88857562786878ee1c64</anchor>
      <arglist>(int l) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_Operator &gt;</type>
      <name>create_W</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a04a2e6fce39b5d57ca7918c453cf7d7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>InArgs</type>
      <name>createInArgs</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a93c5bac214b3bf2897e7bb5a84375af2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OutArgs</type>
      <name>createOutArgs</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>a2f72901c429e00038a63b8a108db4ab3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evalModel</name>
      <anchorfile>classStokhos_1_1SGQuadMPModelEvaluator.html</anchorfile>
      <anchor>aa8dba36b25a034c0c5f585064e429d45</anchor>
      <arglist>(const InArgs &amp;inArgs, const OutArgs &amp;outArgs) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SimpleTiledCrsProductTensor</name>
    <filename>classStokhos_1_1SimpleTiledCrsProductTensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a6942690b6ae50119d787775ed3f1d947</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a2d34d044ddabf06108331bd845d2dda7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_i_tiles</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a4e03c2a1514058d70c66b244bb5fdb3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a74457eee2e961e756eab3c6dd6655fe5</anchor>
      <arglist>(const size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>i_size</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a78d311b30b1031e83ee5c9bea35499d1</anchor>
      <arglist>(const size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_j_tiles</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a60b0a90f0246dc4c25f5f6791ba5aafc</anchor>
      <arglist>(const size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a299549bce28314a99dd3a433ec57473a</anchor>
      <arglist>(const size_type i, const size_type j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>j_size</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a8029db3eff1f7388e8733bb130cb45cd</anchor>
      <arglist>(const size_type i, const size_type j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_k_tiles</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>af349393ae3928615cd3c2c1de474bcff</anchor>
      <arglist>(const size_type i, const size_type j) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a077d0a57fa61aa747abf0f345297a0a0</anchor>
      <arglist>(const size_type i, const size_type j, const size_type k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>k_size</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>acff04d100eb8021485de766132545999</anchor>
      <arglist>(const size_type i, const size_type j, const size_type k) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_entry</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a23b58d65eae5aed60ce21e1d3b5b19fd</anchor>
      <arglist>(const size_type i, const size_type j, const size_type k, const size_type r) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_begin</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a0d4171842d7e03d6ab431399bd91b16a</anchor>
      <arglist>(const size_type i, const size_type j, const size_type k, const size_type r) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_end</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a117b1b5def2e9bef33efad0b25233f64</anchor>
      <arglist>(const size_type i, const size_type j, const size_type k, const size_type r) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>ae606aaab75c71cf55cfdc13e7f5a2e2c</anchor>
      <arglist>(const size_type entry, const size_type c) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>aac6d45acc0b7f0daa09fc123f543770d</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>af7cea59bbf11b0d94e92bcbbbde90e6f</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a2fa3e84503c7a79e69c243202e60caa5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a9bc6b0a89bb04139097bbf577ec8efd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>max_i_tile_size</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>a022e665e254af8b0a53d7694bdf5cc04</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>max_jk_tile_size</name>
      <anchorfile>classStokhos_1_1SimpleTiledCrsProductTensor.html</anchorfile>
      <anchor>acdf70344b51a0f07cf64e138ab83bc7e</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::sin_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1sin__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::sin_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1sin__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::SingleColumnMultivectorMultiply</name>
    <filename>classStokhos_1_1SingleColumnMultivectorMultiply.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::sinh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1sinh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::sinh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1sinh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SinhOp</name>
    <filename>classSacado_1_1MP_1_1SinhOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; SinhOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::SinhOp</name>
    <filename>classSacado_1_1ETPCE_1_1SinhOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SinOp</name>
    <filename>classSacado_1_1MP_1_1SinOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; SinOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::SinOp</name>
    <filename>classSacado_1_1ETPCE_1_1SinOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::SmolyakBasis</name>
    <filename>classStokhos_1_1SmolyakBasis.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <templarg>coeff_compare_type</templarg>
    <base>Stokhos::ProductBasis</base>
    <class kind="struct">Stokhos::SmolyakBasis::SmolyakPredicate</class>
    <member kind="function">
      <type></type>
      <name>SmolyakBasis</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>adeef458caf0032c289de5d4904806972</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt; &amp;bases, const index_set_type &amp;index_set, const value_type &amp;sparse_tol=1.0e-12, const coeff_compare_type &amp;coeff_compare=coeff_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmolyakBasis</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>ae48b01da3b08b2af4a753fd2ccde43ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>getNumSmolyakTerms</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a8ebf6feba69008d23d6ddce5f792686d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const tensor_product_basis_type &gt;</type>
      <name>getTensorProductBasis</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa562722165f6da7a3e02ff20b8413fa8</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>getSmolyakCoefficient</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aaee7dc12e19f912053bb80dc9b452b35</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa61902953d58fa988b1c65595b3e209d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>ada13ef657e75935a15743b38fb621f9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aaa6cd7c7f595a22fe48f0239327bdc7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a450467fee0910377554bb5a0e2ab58c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a3d33e236cc9350b043d093528be9bb88</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a7059bb281cd15bf16f388add54e19262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a619a28c6752f41f408322beaa6e9b8c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>af1cd2c854287a34a43cfccd5af76a950</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a2c96c6ebb3c4c6ae25db942b40d146e6</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a98e06d90ebde35624c66e8dea9a7360b</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>adf8deec99423c9043a838311492d0fe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a284c12c9ca79dd098352ad7c614a202b</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a8f4916f9e4eb533823abf35b6ba09830</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>abab1a850ac1b303e22c5eb0ccec4fd42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa508b4e9e4cff0486bab99f1ff7dfa74</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a273766654bcef5765f77f338665eb2cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>ae78bcb5cbd59bf363dbd2082fe1465a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a2b5dd2c6362a06e9cc83cb8e83bf833d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a671137935ef0eb8b884e58d0febd1739</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a658f5a82efb5856850445c126217375c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>sparse_tol</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a7fb9ccd0864b659f23217e237bf93887</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a653d51ab421d48ac0b3cb1926cf78fdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_set_type</type>
      <name>basis_set</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a96ced24a7aa383fd9253a0deed33062d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_map_type</type>
      <name>basis_map</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a490110b7e1663929b5ac4b7c4b4bf705</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>smolyak_coeffs</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a1595754546573b1ff92ed7dec1f3ea9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa0570e73352f29f54ea0223bfa134818</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>basis_eval_tmp</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a11fff3e75b5ac522051c359424746b05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; tensor_product_basis_type &gt; &gt;</type>
      <name>tp_bases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a001c2c47ed53ad2480609477d3522506</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>SmolyakPredicate&lt; TensorProductPredicate&lt; ordinal_type &gt; &gt;</type>
      <name>sm_pred</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>ab79953218c53c915ef2d4897b1a604e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa61902953d58fa988b1c65595b3e209d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>ada13ef657e75935a15743b38fb621f9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aaa6cd7c7f595a22fe48f0239327bdc7b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a450467fee0910377554bb5a0e2ab58c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a3d33e236cc9350b043d093528be9bb88</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a7059bb281cd15bf16f388add54e19262</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a619a28c6752f41f408322beaa6e9b8c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>af1cd2c854287a34a43cfccd5af76a950</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a2c96c6ebb3c4c6ae25db942b40d146e6</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a98e06d90ebde35624c66e8dea9a7360b</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>adf8deec99423c9043a838311492d0fe7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a284c12c9ca79dd098352ad7c614a202b</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>a8f4916f9e4eb533823abf35b6ba09830</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>abab1a850ac1b303e22c5eb0ccec4fd42</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1SmolyakBasis.html</anchorfile>
      <anchor>aa508b4e9e4cff0486bab99f1ff7dfa74</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::SmolyakBasis::SmolyakPredicate</name>
    <filename>structStokhos_1_1SmolyakBasis_1_1SmolyakPredicate.html</filename>
    <templarg>tp_predicate_type</templarg>
  </compound>
  <compound kind="class">
    <name>SmolyakPredicate&lt; Stokhos::TensorProductPredicate&lt; ordinal_type &gt; &gt;</name>
    <filename>structStokhos_1_1SmolyakBasis_1_1SmolyakPredicate.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::SmolyakPseudoSpectralOperator</name>
    <filename>classStokhos_1_1SmolyakPseudoSpectralOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::PseudoSpectralOperator</base>
    <member kind="function">
      <type></type>
      <name>SmolyakPseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a83a13835244d44c41fa8a2b0d0efdcf0</anchor>
      <arglist>(const SmolyakBasis&lt; ordinal_type, value_type, coeff_compare_type &gt; &amp;smolyak_basis, bool use_smolyak_apply=true, bool use_pst=true, const point_compare_type &amp;point_compare=point_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmolyakPseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a660df65121fd2a7393df3e748781ed1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>point_size</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a324dceac882ab9d5efeb08179cb32241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>coeff_size</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>ad910f61f526cee3c3fbbf8f015865218</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>ac14948cf5e18236e3723877289c4548e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>ac6107cbd059bbcfcfa404a0b0d3ad9b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a189656282ff3e8b9e7326faca99c311d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>afd7e996bb1f2c3ef6b9860d087d14d66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a3d1c295e2b4cbce9115a24c5b133b6e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a097cf47950395ced1785d8095448ab68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>abb16aaeac91e07e51780f9d4f231172e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a5a90c77a18210c0896ba44c1ba05d244</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a6f29e869fd2d170a330dd985fcf8c10c</anchor>
      <arglist>(const point_type &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>const point_type &amp;</type>
      <name>point</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a9ff81c9c0fbe65174ad4b6108b7083f0</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformQP2PCE</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a961dc506b4d12b65091556cd59c43b2e</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformPCE2QP</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a9b99eea129bd5c3689241c339be7ade0</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>apply_direct</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a3d985c2bd287ab7a94f02be34a2611a4</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A, const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>transformQP2PCE_smolyak</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>aaf5e424bca0d5b5dadc450582e851cfc</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>transformPCE2QP_smolyak</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a9fc86edc6b828612de6182e05a801aa8</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_smolyak</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a7fb0d4c1dcb0a6e96c4f577214af1a50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>coeff_sz</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>af7f114ebfc0320687c46c6739cef7c3f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_set_type</type>
      <name>points</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a685b02311fd55a83707c27c32a5cc21f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_map_type</type>
      <name>point_map</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a269702f39fd3fb86f57ba90fefd4b73b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>smolyak_coeffs</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a69bc06dfcbe27f6e456628758c2d1771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>operator_set_type</type>
      <name>operators</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a18d1e8ace165f592fe6b6f51acbd74d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; ordinal_type &gt; &gt;</type>
      <name>gather_maps</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a6050942588190dd73e8fbbeb86299da0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; ordinal_type &gt; &gt;</type>
      <name>scatter_maps</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a915cfbd7be4f7bf3047e71b455443b1d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>qp2pce</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a55aa1280fca1169b4868a5beac6e2725</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>pce2qp</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a47bdfd5aedafe3c73db24844ed08ab0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; ordinal_type, value_type &gt;</type>
      <name>blas</name>
      <anchorfile>classStokhos_1_1SmolyakPseudoSpectralOperator.html</anchorfile>
      <anchor>a9fa8383d88d7eab23ab50430906be1e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SmolyakSparseGridQuadrature</name>
    <filename>classStokhos_1_1SmolyakSparseGridQuadrature.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::Quadrature</base>
    <member kind="function">
      <type></type>
      <name>SmolyakSparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a31cb9b8cba8312c78eb68739848249ca</anchor>
      <arglist>(const Teuchos::RCP&lt; const ProductBasis&lt; ordinal_type, value_type &gt; &gt; &amp;product_basis, const index_set_type &amp;index_set, const value_type duplicate_tol=1.0e-12, const point_compare_type &amp;point_compare=point_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SmolyakSparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a24663db713f3827a9da17656d51437d3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a8c78f2503b4968048574358b511f9cf8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a3d571085cf4eb5ae0ae7cf4305ab51f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a3f7ba94419ed5f5a953f9c2fb6f2cad3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a06c7ac9ed5a8dc1274eab1fe781c1822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>ab1282175f2639842628fc62750a113a3</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>a67551901a548c90a24a96f2cad8ec771</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>abdf693690a288d518b1f4cd44f728f16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1SmolyakSparseGridQuadrature.html</anchorfile>
      <anchor>aec08f742634a219b9bcca83e3b030d88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Amesos2::solver_supports_scalar&lt; ConcreteSolver, Sacado::MP::Vector&lt; Storage &gt; &gt;</name>
    <filename>structAmesos2_1_1solver__supports__scalar_3_01ConcreteSolver_00_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_01_4.html</filename>
    <templarg>ConcreteSolver</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Sparse3Tensor</name>
    <filename>classStokhos_1_1Sparse3Tensor.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <member kind="typedef">
      <type>kji_sparse_array::const_iterator</type>
      <name>k_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a676d438054dc3feebcb8a0cfe1951e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>kji_sparse_array::const_reverse_iterator</type>
      <name>k_reverse_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ac7c789f2538a2cabfd4f6c4938a44c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ji_sparse_array::const_iterator</type>
      <name>kj_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acd4885417c6a51850230ba15fdd588a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>j_sparse_array::const_iterator</type>
      <name>kji_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acbec28adcecf22961d8c28d39030f3da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ikj_sparse_array::const_iterator</type>
      <name>i_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a77db0a22430a64c94b246821eb55cbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ikj_sparse_array::const_reverse_iterator</type>
      <name>i_reverse_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1b81aec81a33822fd78c64f6491ad923</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>kj_sparse_array::const_iterator</type>
      <name>ik_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3a83aea8f55eb37785e15b2873271d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>j_sparse_array::const_iterator</type>
      <name>ikj_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a33d5c03eacef5bc984a5f04d1a03046d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sparse3Tensor</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a956a39eaaefbb4a32028748bdba0e725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sparse3Tensor</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa6b087fcd7c81ecc698c73d65011c2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_term</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aed6a137169d092e8ff7e1d6deabd63a6</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k, const value_type &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum_term</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13783bba69ef4f70918378e400f611ef</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k, const value_type &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a880b436f16126ef7449eaa122077b834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillCompleted</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa307367952c3c9005335584fe7a8a295</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8cf9aed8a028a0a9b67914527a07d12f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>value_type</type>
      <name>getValue</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a449a2ea79e4790722ba64310613de47a</anchor>
      <arglist>(ordinal_type i, ordinal_type j, ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_entries</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7ba0771407701fbaa0aa061c6e25e6d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a914b26de7a2d2929f1d4374895b4e879</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6e74774a7412d5101ddfe3bdaf2037d</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aab668ded12f37c306becd95f42d24bfb</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6cf3fadef255e415c04f571750d9de2</anchor>
      <arglist>(ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6eca906aef5ea89ac14dda6487d998b8</anchor>
      <arglist>(const k_iterator &amp;k, ordinal_type j) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acc75e26097c8a8f4e45a9f63b32e236d</anchor>
      <arglist>(const kj_iterator &amp;j, ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1500d26befd4fa69408d10c8aae44a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a206b721dba49c455736aa3be77a48118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a53d3ef58720d1b9a2f6b91b9661b4108</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>adaf5139f17814610fa6f55277fce66c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a9186ca331872012c5e53c18b47a09e9a</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a10e760411e0f1410c3e2541dec9b01fd</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a430c1554b41b562b6a45f4840d1bf932</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7567d9c890f184cafb8ffba24dedab32</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a49bb290279fd0b0a7d919cfd746f2622</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab63f7c48a77a41cdd294badf45f798c8</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aeee0200d94ba4775b29f7d75b15e3704</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab3684995ffe379e7e436b5702528e30c</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a327e2238bd235cf280a404c83f99dc1b</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad0094e8bb8ceae0de6e28047f021f797</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a90871f61031c0ad039683fdaf5b51747</anchor>
      <arglist>(const i_iterator &amp;i, ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a5df7d533ad7994aacc663a42c68ab98e</anchor>
      <arglist>(const ik_iterator &amp;k, ordinal_type j) const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a028f6fe73e6d61755270ccee9147665c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a29cc1cc39404611113f48c541683529a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a067f5ad7f16000bf02d366b6b0862fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8a7a0dada710b7eae933e2df45edd4df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ae070a78985e0dba13ea30a7ebb633edf</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13552ee40fe97ca9a1e27d674ac6c8f4</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abdb5f9a694484dc3214163b69f74c469</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3d8e8a4f6f517d01cf71efc159d4e6f5</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a623c534721bdd7f28e9c0a3567b536ce</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abe8789179d0509f0861e192476b8e9d9</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fill_completed</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad4488e64bc920baf67236a0c340c322b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_map</type>
      <name>kji_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a990dfb44d14acd0ec1fac3e1f99718b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_sparse_array</type>
      <name>kji_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a32d36948853dfc8f0294b47d1a229810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_map</type>
      <name>ikj_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa5fc0242cbf9fe21634c6f20b74ddf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_sparse_array</type>
      <name>ikj_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6c1b4eb13c3317eaf61eb92f3dd1a308</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>adb83d5bf29cf2b854370d0037753926b</anchor>
      <arglist>(std::ostream &amp;os, const Sparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk)</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator&lt; index_iterator, value_iterator &gt;::value_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab8601ad3111d45e4b30980380c2f4a07</anchor>
      <arglist>(const SparseArrayIterator&lt; index_iterator, value_iterator &gt; &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayReverseIterator&lt; index_iterator, value_iterator &gt;::value_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad43ea31307a95926f606b2c070633f15</anchor>
      <arglist>(const SparseArrayReverseIterator&lt; index_iterator, value_iterator &gt; &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator&lt; index_iterator, value_iterator &gt;::value_reference</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a87c4f5daca7befc1cc9ba730f3e4fc31</anchor>
      <arglist>(const SparseArrayIterator&lt; index_iterator, value_iterator &gt; &amp;it)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a914b26de7a2d2929f1d4374895b4e879</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6e74774a7412d5101ddfe3bdaf2037d</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aab668ded12f37c306becd95f42d24bfb</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6cf3fadef255e415c04f571750d9de2</anchor>
      <arglist>(ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6eca906aef5ea89ac14dda6487d998b8</anchor>
      <arglist>(const k_iterator &amp;k, ordinal_type j) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acc75e26097c8a8f4e45a9f63b32e236d</anchor>
      <arglist>(const kj_iterator &amp;j, ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1500d26befd4fa69408d10c8aae44a72</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a206b721dba49c455736aa3be77a48118</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a53d3ef58720d1b9a2f6b91b9661b4108</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>adaf5139f17814610fa6f55277fce66c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a9186ca331872012c5e53c18b47a09e9a</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a10e760411e0f1410c3e2541dec9b01fd</anchor>
      <arglist>(const k_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a430c1554b41b562b6a45f4840d1bf932</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7567d9c890f184cafb8ffba24dedab32</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a49bb290279fd0b0a7d919cfd746f2622</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab63f7c48a77a41cdd294badf45f798c8</anchor>
      <arglist>(const kj_iterator &amp;j) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aeee0200d94ba4775b29f7d75b15e3704</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab3684995ffe379e7e436b5702528e30c</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a327e2238bd235cf280a404c83f99dc1b</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad0094e8bb8ceae0de6e28047f021f797</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a90871f61031c0ad039683fdaf5b51747</anchor>
      <arglist>(const i_iterator &amp;i, ordinal_type k) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a5df7d533ad7994aacc663a42c68ab98e</anchor>
      <arglist>(const ik_iterator &amp;k, ordinal_type j) const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a028f6fe73e6d61755270ccee9147665c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a29cc1cc39404611113f48c541683529a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a067f5ad7f16000bf02d366b6b0862fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8a7a0dada710b7eae933e2df45edd4df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ae070a78985e0dba13ea30a7ebb633edf</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13552ee40fe97ca9a1e27d674ac6c8f4</anchor>
      <arglist>(const i_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abdb5f9a694484dc3214163b69f74c469</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3d8e8a4f6f517d01cf71efc159d4e6f5</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a623c534721bdd7f28e9c0a3567b536ce</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abe8789179d0509f0861e192476b8e9d9</anchor>
      <arglist>(const ik_iterator &amp;k) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_map</type>
      <name>kji_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a990dfb44d14acd0ec1fac3e1f99718b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_sparse_array</type>
      <name>kji_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a32d36948853dfc8f0294b47d1a229810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_map</type>
      <name>ikj_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa5fc0242cbf9fe21634c6f20b74ddf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_sparse_array</type>
      <name>ikj_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6c1b4eb13c3317eaf61eb92f3dd1a308</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Sparse3Tensor&lt; int, double &gt;</name>
    <filename>classStokhos_1_1Sparse3Tensor.html</filename>
    <member kind="typedef">
      <type>kji_sparse_array::const_iterator</type>
      <name>k_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a676d438054dc3feebcb8a0cfe1951e48</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>kji_sparse_array::const_reverse_iterator</type>
      <name>k_reverse_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ac7c789f2538a2cabfd4f6c4938a44c29</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ji_sparse_array::const_iterator</type>
      <name>kj_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acd4885417c6a51850230ba15fdd588a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>j_sparse_array::const_iterator</type>
      <name>kji_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acbec28adcecf22961d8c28d39030f3da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ikj_sparse_array::const_iterator</type>
      <name>i_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a77db0a22430a64c94b246821eb55cbcb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ikj_sparse_array::const_reverse_iterator</type>
      <name>i_reverse_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1b81aec81a33822fd78c64f6491ad923</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>kj_sparse_array::const_iterator</type>
      <name>ik_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3a83aea8f55eb37785e15b2873271d3c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>j_sparse_array::const_iterator</type>
      <name>ikj_iterator</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a33d5c03eacef5bc984a5f04d1a03046d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Sparse3Tensor</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a956a39eaaefbb4a32028748bdba0e725</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Sparse3Tensor</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa6b087fcd7c81ecc698c73d65011c2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>add_term</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aed6a137169d092e8ff7e1d6deabd63a6</anchor>
      <arglist>(int i, int j, int k, const double &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sum_term</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13783bba69ef4f70918378e400f611ef</anchor>
      <arglist>(int i, int j, int k, const double &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>fillComplete</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a880b436f16126ef7449eaa122077b834</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fillCompleted</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa307367952c3c9005335584fe7a8a295</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8cf9aed8a028a0a9b67914527a07d12f</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getValue</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a449a2ea79e4790722ba64310613de47a</anchor>
      <arglist>(int i, int j, int k) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_entries</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7ba0771407701fbaa0aa061c6e25e6d9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a914b26de7a2d2929f1d4374895b4e879</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6e74774a7412d5101ddfe3bdaf2037d</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aab668ded12f37c306becd95f42d24bfb</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6cf3fadef255e415c04f571750d9de2</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6eca906aef5ea89ac14dda6487d998b8</anchor>
      <arglist>(const k_iterator &amp;k, int j) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acc75e26097c8a8f4e45a9f63b32e236d</anchor>
      <arglist>(const kj_iterator &amp;j, int i) const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1500d26befd4fa69408d10c8aae44a72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a206b721dba49c455736aa3be77a48118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a53d3ef58720d1b9a2f6b91b9661b4108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>adaf5139f17814610fa6f55277fce66c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a9186ca331872012c5e53c18b47a09e9a</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a430c1554b41b562b6a45f4840d1bf932</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a10e760411e0f1410c3e2541dec9b01fd</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7567d9c890f184cafb8ffba24dedab32</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a49bb290279fd0b0a7d919cfd746f2622</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab63f7c48a77a41cdd294badf45f798c8</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab3684995ffe379e7e436b5702528e30c</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a327e2238bd235cf280a404c83f99dc1b</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aeee0200d94ba4775b29f7d75b15e3704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a90871f61031c0ad039683fdaf5b51747</anchor>
      <arglist>(const i_iterator &amp;i, int k) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a5df7d533ad7994aacc663a42c68ab98e</anchor>
      <arglist>(const ik_iterator &amp;k, int j) const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad0094e8bb8ceae0de6e28047f021f797</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ae070a78985e0dba13ea30a7ebb633edf</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abdb5f9a694484dc3214163b69f74c469</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13552ee40fe97ca9a1e27d674ac6c8f4</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3d8e8a4f6f517d01cf71efc159d4e6f5</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a623c534721bdd7f28e9c0a3567b536ce</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abe8789179d0509f0861e192476b8e9d9</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a028f6fe73e6d61755270ccee9147665c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a29cc1cc39404611113f48c541683529a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a067f5ad7f16000bf02d366b6b0862fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8a7a0dada710b7eae933e2df45edd4df</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>fill_completed</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad4488e64bc920baf67236a0c340c322b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_map</type>
      <name>kji_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a990dfb44d14acd0ec1fac3e1f99718b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_sparse_array</type>
      <name>kji_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a32d36948853dfc8f0294b47d1a229810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_map</type>
      <name>ikj_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa5fc0242cbf9fe21634c6f20b74ddf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_sparse_array</type>
      <name>ikj_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6c1b4eb13c3317eaf61eb92f3dd1a308</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_map</type>
      <name>kji_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a990dfb44d14acd0ec1fac3e1f99718b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>kji_sparse_array</type>
      <name>kji_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a32d36948853dfc8f0294b47d1a229810</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_map</type>
      <name>ikj_data</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aa5fc0242cbf9fe21634c6f20b74ddf21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ikj_sparse_array</type>
      <name>ikj_array</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6c1b4eb13c3317eaf61eb92f3dd1a308</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a914b26de7a2d2929f1d4374895b4e879</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6e74774a7412d5101ddfe3bdaf2037d</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aab668ded12f37c306becd95f42d24bfb</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad6cf3fadef255e415c04f571750d9de2</anchor>
      <arglist>(int k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a6eca906aef5ea89ac14dda6487d998b8</anchor>
      <arglist>(const k_iterator &amp;k, int j) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>acc75e26097c8a8f4e45a9f63b32e236d</anchor>
      <arglist>(const kj_iterator &amp;j, int i) const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a1500d26befd4fa69408d10c8aae44a72</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a206b721dba49c455736aa3be77a48118</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a53d3ef58720d1b9a2f6b91b9661b4108</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>k_reverse_iterator</type>
      <name>k_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>adaf5139f17814610fa6f55277fce66c9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a9186ca331872012c5e53c18b47a09e9a</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a430c1554b41b562b6a45f4840d1bf932</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a10e760411e0f1410c3e2541dec9b01fd</anchor>
      <arglist>(const k_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a7567d9c890f184cafb8ffba24dedab32</anchor>
      <arglist>(const k_reverse_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a49bb290279fd0b0a7d919cfd746f2622</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>kji_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab63f7c48a77a41cdd294badf45f798c8</anchor>
      <arglist>(const kj_iterator &amp;j) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ab3684995ffe379e7e436b5702528e30c</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a327e2238bd235cf280a404c83f99dc1b</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>aeee0200d94ba4775b29f7d75b15e3704</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>find_k</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a90871f61031c0ad039683fdaf5b51747</anchor>
      <arglist>(const i_iterator &amp;i, int k) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>find_j</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a5df7d533ad7994aacc663a42c68ab98e</anchor>
      <arglist>(const ik_iterator &amp;k, int j) const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>find_i</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ad0094e8bb8ceae0de6e28047f021f797</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>ae070a78985e0dba13ea30a7ebb633edf</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abdb5f9a694484dc3214163b69f74c469</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a13552ee40fe97ca9a1e27d674ac6c8f4</anchor>
      <arglist>(const i_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ik_iterator</type>
      <name>k_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a3d8e8a4f6f517d01cf71efc159d4e6f5</anchor>
      <arglist>(const i_reverse_iterator &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a623c534721bdd7f28e9c0a3567b536ce</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>ikj_iterator</type>
      <name>j_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>abe8789179d0509f0861e192476b8e9d9</anchor>
      <arglist>(const ik_iterator &amp;k) const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_begin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a028f6fe73e6d61755270ccee9147665c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_iterator</type>
      <name>i_end</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a29cc1cc39404611113f48c541683529a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rbegin</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a067f5ad7f16000bf02d366b6b0862fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>i_reverse_iterator</type>
      <name>i_rend</name>
      <anchorfile>classStokhos_1_1Sparse3Tensor.html</anchorfile>
      <anchor>a8a7a0dada710b7eae933e2df45edd4df</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::SparseArray</name>
    <filename>structStokhos_1_1SparseArray.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>val_type</templarg>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab33ff470cfe6f43186fb8cfb690d08dd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a9983c9e6659d6b7d4e45e6c1cd3ede76</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>aca5bc8b39dd9bdc024c5f130d839a109</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a1b2278979f1b010cfdd740a6c2670653</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a621901e1c7901997d86bab6c2e9c4f87</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab318e642b96d12026034187ec48cc0f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a27cfcbf5e3ae8cb48ee2c376c14683bc</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>indices</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a699ebc889ab589464d697f6166067cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; val_type &gt;</type>
      <name>values</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a0c9c9371d0b1217a8006780cc15e91cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseArray&lt; int, ji_sparse_array &gt;</name>
    <filename>structStokhos_1_1SparseArray.html</filename>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab33ff470cfe6f43186fb8cfb690d08dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a9983c9e6659d6b7d4e45e6c1cd3ede76</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>aca5bc8b39dd9bdc024c5f130d839a109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a1b2278979f1b010cfdd740a6c2670653</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a621901e1c7901997d86bab6c2e9c4f87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab318e642b96d12026034187ec48cc0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a27cfcbf5e3ae8cb48ee2c376c14683bc</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>indices</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a699ebc889ab589464d697f6166067cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; ji_sparse_array &gt;</type>
      <name>values</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a0c9c9371d0b1217a8006780cc15e91cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseArray&lt; int, kj_sparse_array &gt;</name>
    <filename>structStokhos_1_1SparseArray.html</filename>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab33ff470cfe6f43186fb8cfb690d08dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a9983c9e6659d6b7d4e45e6c1cd3ede76</anchor>
      <arglist>(int sz)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>aca5bc8b39dd9bdc024c5f130d839a109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a1b2278979f1b010cfdd740a6c2670653</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a621901e1c7901997d86bab6c2e9c4f87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab318e642b96d12026034187ec48cc0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a27cfcbf5e3ae8cb48ee2c376c14683bc</anchor>
      <arglist>(int i) const</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; int &gt;</type>
      <name>indices</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a699ebc889ab589464d697f6166067cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; kj_sparse_array &gt;</type>
      <name>values</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a0c9c9371d0b1217a8006780cc15e91cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseArray&lt; ordinal_type, ji_sparse_array &gt;</name>
    <filename>structStokhos_1_1SparseArray.html</filename>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab33ff470cfe6f43186fb8cfb690d08dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a9983c9e6659d6b7d4e45e6c1cd3ede76</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>aca5bc8b39dd9bdc024c5f130d839a109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a1b2278979f1b010cfdd740a6c2670653</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a621901e1c7901997d86bab6c2e9c4f87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab318e642b96d12026034187ec48cc0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a27cfcbf5e3ae8cb48ee2c376c14683bc</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>indices</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a699ebc889ab589464d697f6166067cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; ji_sparse_array &gt;</type>
      <name>values</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a0c9c9371d0b1217a8006780cc15e91cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SparseArray&lt; ordinal_type, kj_sparse_array &gt;</name>
    <filename>structStokhos_1_1SparseArray.html</filename>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab33ff470cfe6f43186fb8cfb690d08dd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a9983c9e6659d6b7d4e45e6c1cd3ede76</anchor>
      <arglist>(ordinal_type sz)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>aca5bc8b39dd9bdc024c5f130d839a109</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a1b2278979f1b010cfdd740a6c2670653</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a621901e1c7901997d86bab6c2e9c4f87</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>ab318e642b96d12026034187ec48cc0f1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a27cfcbf5e3ae8cb48ee2c376c14683bc</anchor>
      <arglist>(ordinal_type i) const</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>indices</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a699ebc889ab589464d697f6166067cd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Teuchos::Array&lt; kj_sparse_array &gt;</type>
      <name>values</name>
      <anchorfile>structStokhos_1_1SparseArray.html</anchorfile>
      <anchor>a0c9c9371d0b1217a8006780cc15e91cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SparseArrayIterator</name>
    <filename>structStokhos_1_1SparseArrayIterator.html</filename>
    <templarg>index_iterator_type</templarg>
    <templarg>value_iterator_type</templarg>
    <member kind="function">
      <type></type>
      <name>SparseArrayIterator</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a288df56c0bb57ac33c9ece035cbc4144</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SparseArrayIterator</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a89af9dc228d9353ea4589b22cfd1df96</anchor>
      <arglist>(index_iterator_type index_it, value_iterator_type value_it)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>af9618e094cc5ad509be64264e2d7fde3</anchor>
      <arglist>(const SparseArrayIterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a1b0a7750cff5be5b18c1598e2288395b</anchor>
      <arglist>(const SparseArrayIterator &amp;it) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a42052125d8cc60e9fd008bc6875494b6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a5653bdc86ade172cc8b51536941ed4d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a5d006bf2630751a49ed964ff5198b743</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator</type>
      <name>operator++</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>adfdb6a08bd9fdc108a136ab318cb7ab7</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a844c6dfdbde5f94acf02ae1a70d4c60e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SparseArrayIterator</type>
      <name>operator--</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>ab771dddd9d2d91d282a7906593b3e491</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a9c30225d9b23f595231593184991f109</anchor>
      <arglist>(const SparseArrayIterator &amp;b) const </arglist>
    </member>
    <member kind="function">
      <type>value_reference</type>
      <name>value</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a722554eff336dd09e0d1e87be22b35e5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>index_iterator_type</type>
      <name>index_iterator</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>a1905325108e7b83b88955db420153d42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_iterator_type</type>
      <name>value_iterator</name>
      <anchorfile>structStokhos_1_1SparseArrayIterator.html</anchorfile>
      <anchor>af47acdd49ae7ce6ea5f33e22d900c5e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SparseArrayReverseIterator</name>
    <filename>structStokhos_1_1SparseArrayReverseIterator.html</filename>
    <templarg>index_iterator_type</templarg>
    <templarg>value_iterator_type</templarg>
    <member kind="function">
      <type></type>
      <name>SparseArrayReverseIterator</name>
      <anchorfile>structStokhos_1_1SparseArrayReverseIterator.html</anchorfile>
      <anchor>a938056405da17a7c4e2904f6acac7937</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SparseArrayReverseIterator</name>
      <anchorfile>structStokhos_1_1SparseArrayReverseIterator.html</anchorfile>
      <anchor>ac51246eb7254bbba296f30ae1fb08a78</anchor>
      <arglist>(iterator_type it)</arglist>
    </member>
    <member kind="function">
      <type>value_reference</type>
      <name>value</name>
      <anchorfile>structStokhos_1_1SparseArrayReverseIterator.html</anchorfile>
      <anchor>a401388d5b068bfede2525d81bb3f1bf2</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SparseGridQuadrature</name>
    <filename>classStokhos_1_1SparseGridQuadrature.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <base>Stokhos::Quadrature</base>
    <member kind="function">
      <type></type>
      <name>SparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a5ce92c4e88de604381452d7acc782c1c</anchor>
      <arglist>(const Teuchos::RCP&lt; const ProductBasis&lt; ordinal_type, value_type &gt; &gt; &amp;product_basis, ordinal_type sparse_grid_level=0, value_type duplicate_tol=1.0e-12, ordinal_type growth_rate=Pecos::SLOW_RESTRICTED_GROWTH)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SparseGridQuadrature</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a2d35b5e0a85456d575be70f1b91d5fe3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a3e96593566cba9bf13a2f10d53c54394</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>ac09a265ac8c93edcbb9c5410b912105d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a2b8c2367460b1a2de99d145542896de2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a910d79670151cdb40aa37628daaa8361</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a3ef85874de0a41b10a5057e9866bcdc4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>coordinate_bases</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a2e9ea28b5c23822abf24935dff46033c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>ae6ad632187fa48491e41a8b8d4cc380b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a5825f461fe38e94151df5767be3fab96</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>a98d87db7a1836ad28d03e6635fa2dd8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected" static="yes">
      <type>static SparseGridQuadrature *</type>
      <name>sgq</name>
      <anchorfile>classStokhos_1_1SparseGridQuadrature.html</anchorfile>
      <anchor>ab18955811e2c02ba14979c1792f44a51</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::SPDDenseDirectDivisionExpansionStrategy</name>
    <filename>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::DivisionExpansionStrategy</base>
    <member kind="function">
      <type></type>
      <name>SPDDenseDirectDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>ae2ae6fa4e90dc878bd2ee49c02ebcec6</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis_, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk_)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SPDDenseDirectDivisionExpansionStrategy</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>ae67b10aa23c66c3438a7e1f96d1fab8d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a4e5a7cc83385d4a3df081fe6256fd3e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a19d1d04f46c643ba2f2ee1c455402648</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a24a4178206a72b856fac9396f85feed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Teuchos::SerialSymDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>A</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a3d7bfac2d7f0c812c792fa55f187f87c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialSpdDenseSolver&lt; ordinal_type, value_type &gt;</type>
      <name>solver</name>
      <anchorfile>classStokhos_1_1SPDDenseDirectDivisionExpansionStrategy.html</anchorfile>
      <anchor>a22b6c49cd7bb59a5a90a050b356124d0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::sqrt_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1sqrt__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::sqrt_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1sqrt__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::SqrtOp</name>
    <filename>classSacado_1_1ETPCE_1_1SqrtOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SqrtOp</name>
    <filename>classSacado_1_1MP_1_1SqrtOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; SqrtOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::StandardStorage</name>
    <filename>classStokhos_1_1StandardStorage.html</filename>
    <templarg>ordinal_type</templarg>
    <templarg>value_type</templarg>
    <class kind="struct">Stokhos::StandardStorage::apply</class>
    <member kind="function">
      <type></type>
      <name>StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0bddf33ef408643e6fb8414d7cc488a5</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a008122abe79b81b5bed07cc7a2a6efb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>aac38fa4ae3738c701db0e1ef0c31fc8a</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a3a549c8a24f7210855e2f0547f452a6f</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a2378aa689034c51e5e5cfa0a6979320e</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>abfd12c24716798fea85de8052f8425ee</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a64c23e0d047400d5b50bd00e5d4d6cc2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>ad06b9da5f12e108b437737c122f6f168</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a1c45964cc40c5ff02264b099d3e8f4e8</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a180f78317ff429256fde9e6532b5b264</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0734146a9a57d02860468f13a01116b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StandardStorage&lt; int,                                   double &gt;</name>
    <filename>classStokhos_1_1StandardStorage.html</filename>
    <member kind="function">
      <type></type>
      <name>StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0bddf33ef408643e6fb8414d7cc488a5</anchor>
      <arglist>(const int &amp;sz, const double &amp;x=double(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a008122abe79b81b5bed07cc7a2a6efb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>aac38fa4ae3738c701db0e1ef0c31fc8a</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a3a549c8a24f7210855e2f0547f452a6f</anchor>
      <arglist>(const_pointer v, const int &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a2378aa689034c51e5e5cfa0a6979320e</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>abfd12c24716798fea85de8052f8425ee</anchor>
      <arglist>(const int &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a64c23e0d047400d5b50bd00e5d4d6cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>ad06b9da5f12e108b437737c122f6f168</anchor>
      <arglist>(const int &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a1c45964cc40c5ff02264b099d3e8f4e8</anchor>
      <arglist>(const int &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a180f78317ff429256fde9e6532b5b264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0734146a9a57d02860468f13a01116b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StandardStorage&lt; ordinal_type,                                   value_type &gt;</name>
    <filename>classStokhos_1_1StandardStorage.html</filename>
    <member kind="function">
      <type></type>
      <name>StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0bddf33ef408643e6fb8414d7cc488a5</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a008122abe79b81b5bed07cc7a2a6efb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>aac38fa4ae3738c701db0e1ef0c31fc8a</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a3a549c8a24f7210855e2f0547f452a6f</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a2378aa689034c51e5e5cfa0a6979320e</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>abfd12c24716798fea85de8052f8425ee</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a64c23e0d047400d5b50bd00e5d4d6cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>ad06b9da5f12e108b437737c122f6f168</anchor>
      <arglist>(const ordinal_type &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a1c45964cc40c5ff02264b099d3e8f4e8</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a180f78317ff429256fde9e6532b5b264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0734146a9a57d02860468f13a01116b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StandardStorage&lt; OrdinalType,                                   ValueType &gt;</name>
    <filename>classStokhos_1_1StandardStorage.html</filename>
    <member kind="function">
      <type></type>
      <name>StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0bddf33ef408643e6fb8414d7cc488a5</anchor>
      <arglist>(const OrdinalType &amp;sz, const ValueType &amp;x=ValueType(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StandardStorage</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a008122abe79b81b5bed07cc7a2a6efb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>aac38fa4ae3738c701db0e1ef0c31fc8a</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a3a549c8a24f7210855e2f0547f452a6f</anchor>
      <arglist>(const_pointer v, const OrdinalType &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a2378aa689034c51e5e5cfa0a6979320e</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>abfd12c24716798fea85de8052f8425ee</anchor>
      <arglist>(const OrdinalType &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a64c23e0d047400d5b50bd00e5d4d6cc2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>ad06b9da5f12e108b437737c122f6f168</anchor>
      <arglist>(const OrdinalType &amp;i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a1c45964cc40c5ff02264b099d3e8f4e8</anchor>
      <arglist>(const OrdinalType &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a180f78317ff429256fde9e6532b5b264</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StandardStorage.html</anchorfile>
      <anchor>a0734146a9a57d02860468f13a01116b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticArrayTraits</name>
    <filename>structStokhos_1_1StaticArrayTraits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>isScalar</templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticArrayTraits&lt; T, D, false &gt;</name>
    <filename>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>a88bcf6636cb0f6b1ac7a176f9dc7ba24</anchor>
      <arglist>(const volatile T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>a7a21a7f23689253e96cd655f2f85a514</anchor>
      <arglist>(const volatile T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>adeb9f255e88ca05d2466376a8039c1d7</anchor>
      <arglist>(const T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>a3f6388434c82f410b6553e007deef3f6</anchor>
      <arglist>(const T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>aa757b8d7a62c1d6106b9c2c2bbd19af6</anchor>
      <arglist>(T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>af2d871e2b75e0dcebabbe7273ccf2879</anchor>
      <arglist>(volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>a83207c360ed5a24fe8f345d29fba71b9</anchor>
      <arglist>(T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01false_01_4.html</anchorfile>
      <anchor>a310d2aabe861c3a80fcb0d9c913eadbb</anchor>
      <arglist>(volatile T *dest, std::size_t sz, const T &amp;v)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::StaticArrayTraits&lt; T, D, true &gt;</name>
    <filename>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>af193239afc086161c13ed2be6e077340</anchor>
      <arglist>(const volatile T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>ad5433f754d67020e331649500cc1a447</anchor>
      <arglist>(const volatile T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>ab52545119c6bc0e93c9ef67aef1ac964</anchor>
      <arglist>(const T *src, volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>copy</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>a9a25414051a29f2ed4664f322e6135c5</anchor>
      <arglist>(const T *src, T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>ac4ba583549379067a546bfb49c3745d9</anchor>
      <arglist>(T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>zero</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>a1b88bcfd00d7a8add669346ccdd66fef</anchor>
      <arglist>(volatile T *dest, std::size_t sz)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>af4bac7fd7bb6e9a33cb152739de91ed3</anchor>
      <arglist>(T *dest, std::size_t sz, T v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION void</type>
      <name>fill</name>
      <anchorfile>structStokhos_1_1StaticArrayTraits_3_01T_00_01D_00_01true_01_4.html</anchorfile>
      <anchor>a60088c8b1997cbf3a9ad10c4fc441248</anchor>
      <arglist>(volatile T *dest, std::size_t sz, T v)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StaticFixedStandardStorage</name>
    <filename>classStokhos_1_1StaticFixedStandardStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <class kind="struct">Stokhos::StaticFixedStandardStorage::apply</class>
    <member kind="function">
      <type></type>
      <name>StaticFixedStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>ada40474c718053fac6a3ea2c22ae352e</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticFixedStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>accc6f2e1c94fa31824a31a7a9c74969d</anchor>
      <arglist>(const StaticFixedStandardStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StaticFixedStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>ab46ca7033c570c2653f00e7d38634e99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticFixedStandardStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>a28648a1e0f13cba813c545638818bff1</anchor>
      <arglist>(const StaticFixedStandardStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>ac958af7f66b4fc3d98c3031d99592871</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>ab4a05f0a87cebb86b781392d8dcc98d2</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz_=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>a6f169378db61cfb2d1353f0903a23fae</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>a0128de03c40d14abaece6d07585953f5</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>a1e50f3156eb4073c07fba22d8fb15ef9</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>afec843998379500bb177609348d9eb7b</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>ae5adebf0ceb463738be017bf83b52ea2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>aac1be62af8a3cc546cacdf6070045853</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StaticFixedStandardStorage.html</anchorfile>
      <anchor>a60e99895d484c0af06990b023a5f61e1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StaticFixedStorage</name>
    <filename>classStokhos_1_1StaticFixedStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::StaticFixedStorage::apply</class>
    <class kind="struct">Stokhos::StaticFixedStorage::apply_N</class>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a889c8425b08bec0e166568d76153ed1a</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a458f9a3c6888ab5ea0ca31293dcdeca1</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>ab57dbc0d952f564b928802be0b739a96</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type *x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a3b3103260600c6e0b1fa331ff1a9ab94</anchor>
      <arglist>(const ordinal_type &amp;sz, pointer v, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a1b3fe8070c219402caa081ff68e9ee9a</anchor>
      <arglist>(const StaticFixedStorage &amp;s)=default</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a477e2facb32574b46fa50a214669c676</anchor>
      <arglist>(const volatile StaticFixedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~StaticFixedStorage</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a6068925e052ed8fdcd596daf2c0d0686</anchor>
      <arglist>()=default</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticFixedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a60fe19bc5e6d0eaf081e908c6e59f9eb</anchor>
      <arglist>(const StaticFixedStorage &amp;s)=default</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticFixedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a0bfb6c3b057ac44184824dd972d05fab</anchor>
      <arglist>(const volatile StaticFixedStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticFixedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a69d7552d5e20bbf17252f5d7a3437d1b</anchor>
      <arglist>(const StaticFixedStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticFixedStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a67560d7a8cfb8d473d8d19f783c360a3</anchor>
      <arglist>(const volatile StaticFixedStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a67ed77d3e848ac2f11b9e33f7dc36888</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>aaf0641717fe2a7a65c308a56bde8173c</anchor>
      <arglist>(const_reference v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a5744d5a29de37369c60a058c63f01924</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>aa5032041ce2af92cc6651cb6ef806d69</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>ab60178f57fd5bd541a03fded4a8db15f</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>aebf133d40388e185ee21f757e8760f2f</anchor>
      <arglist>(pointer v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a943c875ad33b1b919c8657fd7caecc30</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a4eb540a9415afb93c0d5e2ed2e4a9f71</anchor>
      <arglist>(const ordinal_type &amp;sz) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>af1829ce7fdd5ed0510f3dd1bc89d3a9d</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>ad869fa5e0a84182d04210b819765417e</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a1af8a005bd46d62237cb14b6d44872f2</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a98309f4f63f7f64fb557e6d6fd895291</anchor>
      <arglist>(const ordinal_type &amp;i) const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a3522f0741d2814ac7733320086ea4eb6</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a07d8118ed49721d136e6360b23758bca</anchor>
      <arglist>(const ordinal_type &amp;i) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a916ea9dd57860a7b257cbacdeaae9d2a</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a1a543fb83280a442722cac93b947ab88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>adeecbf6f9b326d4e26b61496db09051a</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>ab2a454cfce06d18b1054601f58d77578</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StaticFixedStorage.html</anchorfile>
      <anchor>a2077c2c30e5ea79ab95808436461a6f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StaticStandardStorage</name>
    <filename>classStokhos_1_1StaticStandardStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <class kind="struct">Stokhos::StaticStandardStorage::apply</class>
    <member kind="function">
      <type></type>
      <name>StaticStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>acfd1546d9fae81b0bb37d364c36890f4</anchor>
      <arglist>(const ordinal_type &amp;sz_, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StaticStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a340257b46ceb4d2b021218b28239295c</anchor>
      <arglist>(const StaticStandardStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StaticStandardStorage</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a425350536f5cb63a85aceca89763241a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>StaticStandardStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>ae0a5b696c58403b35a6e1e9984105ebb</anchor>
      <arglist>(const StaticStandardStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>acb34e272784f4d4ddc275a061feafad5</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>ae3f06ed2c09286b58cd04e93803e2d8c</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz_=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a2abb1e79b9dca8230663c1ca286210a7</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>af4bc4d6efe6d4c05bd63f2b96a969ba7</anchor>
      <arglist>(const ordinal_type &amp;sz_)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a6a2b92d5e0c7f9c3463e28230d6524c7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a100f8b175156425f11c0207ec79610dc</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a265b702106b012b8715a8cce6a0a1b2a</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a77ba534d002ee1bddc97b4cfc9562a6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStandardStorage.html</anchorfile>
      <anchor>a63370c57698386aa36e8cee5941c3cb4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StaticStorage</name>
    <filename>classStokhos_1_1StaticStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::StaticStorage::apply</class>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>abcb0501fb61a1b2a1c7b6e5a01ef15de</anchor>
      <arglist>(const ordinal_type &amp;sz=1, const value_type &amp;x=value_type(0.0))</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a6590f581d3be0ee1b6b1105441bd4384</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type *x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a72b8bb6186bdedfbed4203950435c8e8</anchor>
      <arglist>(const ordinal_type &amp;sz, pointer v, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>ac450a8c47369d280c94cd1f1693c2372</anchor>
      <arglist>(const StaticStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>aa1b7e1d433122e9ff6b8c562f68ddf64</anchor>
      <arglist>(const volatile StaticStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~StaticStorage</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>ae8e1d4ba23c07877db7b2b0227e5e4f8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a52fb3bc4355814a20240b520131f0e65</anchor>
      <arglist>(const StaticStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION StaticStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a9c55e3a9eb19078f9239bbc0d5d36ae0</anchor>
      <arglist>(const volatile StaticStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile StaticStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a24a877e445cd36e4274460d7457cce22</anchor>
      <arglist>(const StaticStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile StaticStorage &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>aefc28c05cbc032707f21c8709304af52</anchor>
      <arglist>(const volatile StaticStorage &amp;s) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a12d6fe34f1a6c0d0586e61949382cbb4</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a82bb9997d82f3c7c68217f1c49dc6b00</anchor>
      <arglist>(const_reference v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a67e8d68e31f5b3651855040ddecb4acb</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>af4ad094e55fc6902b86e423f86b74e8e</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>af5b542aecc756e2f12a9b232e24ba825</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>ad508556c975aee2c7373a4e119c62c0d</anchor>
      <arglist>(pointer v) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a21ba89cbacf04c0f546696525722ece6</anchor>
      <arglist>(const ordinal_type &amp;sz)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>aac20b82acc9bf2b310553e2ad1ee7be5</anchor>
      <arglist>(const ordinal_type &amp;sz) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>af64f5c82333b7935250bb9f292800fb0</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a49a19c8af70c2a382605b879f1fbdd0e</anchor>
      <arglist>(pointer v, const ordinal_type &amp;sz, const ordinal_type &amp;stride, bool owned) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a6a0c427154ea93f4496ff2c54999f611</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a9fdc2c180621763d6efa6e8da2924aeb</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>aecf84f9ad7ef37daeebfc8fb5c2c46d7</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a0b7467861f67c912228108d5fbdc24c5</anchor>
      <arglist>(const ordinal_type &amp;i) const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a853f7a16699171f26caf55dc63370980</anchor>
      <arglist>(const ordinal_type &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>ab0f676c4e227ccc7b3890699569c4775</anchor>
      <arglist>(const ordinal_type &amp;i) volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a5e607f6f1dfe41296e11d39be074fcc0</anchor>
      <arglist>() const  volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>accfcd0ae7035fc0b4a52acbce9f72b9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION volatile_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>abc89d47a3c264f20a1bd7a2d647b6d73</anchor>
      <arglist>() volatile</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1StaticStorage.html</anchorfile>
      <anchor>a7e0952cdde45215a525f95c3eca54eae</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Belos::StatusTestGenResNorm</name>
    <filename>classBelos_1_1StatusTestGenResNorm.html</filename>
  </compound>
  <compound kind="class">
    <name>Belos::StatusTestGenResNorm&lt; Sacado::MP::Vector&lt; Storage &gt;, MV, OP &gt;</name>
    <filename>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>Implicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23abc3edc015d7717dde058f167fe7253cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Explicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23a03ec14810981f6e0a3421a86c4047f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResType</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Implicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23abc3edc015d7717dde058f167fe7253cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Explicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23a03ec14810981f6e0a3421a86c4047f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusTestGenResNorm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad0c59228138b4a1bb8271ced620f12ea</anchor>
      <arglist>(MagnitudeType Tolerance, int quorum=-1, bool showMaxResNormOnly=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatusTestGenResNorm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a287d9f6a3a5daa7fab2b5607a04250f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defineResForm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa060f246339a88871c7824b51058b484</anchor>
      <arglist>(ResType TypeOfResidual, NormType TypeOfNorm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defineScaleForm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa94b4ef76d152e31cf0eb8d69206f9bd</anchor>
      <arglist>(ScaleType TypeOfScaling, NormType TypeOfNorm, MagnitudeType ScaleValue=Teuchos::ScalarTraits&lt; MagnitudeType &gt;::one())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setTolerance</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad1a3f52e641c4fdffe60f480c0ea8f10</anchor>
      <arglist>(MagnitudeType tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setQuorum</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a7bf1851a27ec7f7892f3888cfa3789ab</anchor>
      <arglist>(int quorum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setShowMaxResNormOnly</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af442949f9a61563df6d0db0126fe7dc0</anchor>
      <arglist>(bool showMaxResNormOnly)</arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a24a9da7e1baa2e27d287e8d8055ed2f4</anchor>
      <arglist>(Iteration&lt; ScalarType, MV, OP &gt; *iSolver)</arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>getStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a72239d431f858af43816f8cd75a9b7bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a2d9cd8a2be499f33898eb9608feebffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a8a5aded3f1438bf98ade63282e329131</anchor>
      <arglist>(std::ostream &amp;os, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a84df403ed206acac1fccbc0235ead283</anchor>
      <arglist>(std::ostream &amp;os, StatusType type) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MV &gt;</type>
      <name>getSolution</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a5d9afbedeba018df4d770cdbe83a4efa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getQuorum</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af542ce4b93156419d0e29f93c75f6ccd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowMaxResNormOnly</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad7f0359e64df473e52b83643626cb258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>convIndices</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a86112cf9265df449bd257ed335e3e5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>getTolerance</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aee2e01a5f2702958c365c810a7775297</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getTestValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a6c60a9fd3dce46c253efcffe550beae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getResNormValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a1c912aa86a67ebf700ea91b8ba38d8cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getScaledNormValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a7cbb4ff38259edfe96e81eeaeb6ba514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLOADetected</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>abb5809c2db07f4e7dc02c65edfeb7f9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt;</type>
      <name>getEnsembleIterations</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a627acf6146f6651845ec3e83256b6f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>firstCallCheckStatusSetup</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a4dad4820bd5f2c4580decdef4027708b</anchor>
      <arglist>(Iteration&lt; ScalarType, MV, OP &gt; *iSolver)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af295348040c6288f38774c9d726848f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ResType</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Implicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23abc3edc015d7717dde058f167fe7253cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Explicit</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa9818d9cb1fe1f225a2bf68cc17aae23a03ec14810981f6e0a3421a86c4047f09</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StatusTestGenResNorm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad0c59228138b4a1bb8271ced620f12ea</anchor>
      <arglist>(MagnitudeType Tolerance, int quorum=-1, bool showMaxResNormOnly=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StatusTestGenResNorm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a287d9f6a3a5daa7fab2b5607a04250f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defineResForm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa060f246339a88871c7824b51058b484</anchor>
      <arglist>(ResType TypeOfResidual, NormType TypeOfNorm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>defineScaleForm</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aa94b4ef76d152e31cf0eb8d69206f9bd</anchor>
      <arglist>(ScaleType TypeOfScaling, NormType TypeOfNorm, MagnitudeType ScaleValue=Teuchos::ScalarTraits&lt; MagnitudeType &gt;::one())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setTolerance</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad1a3f52e641c4fdffe60f480c0ea8f10</anchor>
      <arglist>(MagnitudeType tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setQuorum</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a7bf1851a27ec7f7892f3888cfa3789ab</anchor>
      <arglist>(int quorum)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setShowMaxResNormOnly</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af442949f9a61563df6d0db0126fe7dc0</anchor>
      <arglist>(bool showMaxResNormOnly)</arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>checkStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a24a9da7e1baa2e27d287e8d8055ed2f4</anchor>
      <arglist>(Iteration&lt; ScalarType, MV, OP &gt; *iSolver)</arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>getStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a72239d431f858af43816f8cd75a9b7bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a2d9cd8a2be499f33898eb9608feebffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a8a5aded3f1438bf98ade63282e329131</anchor>
      <arglist>(std::ostream &amp;os, int indent=0) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printStatus</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a84df403ed206acac1fccbc0235ead283</anchor>
      <arglist>(std::ostream &amp;os, StatusType type) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; MV &gt;</type>
      <name>getSolution</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a5d9afbedeba018df4d770cdbe83a4efa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getQuorum</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af542ce4b93156419d0e29f93c75f6ccd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowMaxResNormOnly</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>ad7f0359e64df473e52b83643626cb258</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>convIndices</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a86112cf9265df449bd257ed335e3e5c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>getTolerance</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>aee2e01a5f2702958c365c810a7775297</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getTestValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a6c60a9fd3dce46c253efcffe550beae9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getResNormValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a1c912aa86a67ebf700ea91b8ba38d8cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; MagnitudeType &gt; *</type>
      <name>getScaledNormValue</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a7cbb4ff38259edfe96e81eeaeb6ba514</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getLOADetected</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>abb5809c2db07f4e7dc02c65edfeb7f9c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; int &gt;</type>
      <name>getEnsembleIterations</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a627acf6146f6651845ec3e83256b6f82</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>StatusType</type>
      <name>firstCallCheckStatusSetup</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>a4dad4820bd5f2c4580decdef4027708b</anchor>
      <arglist>(Iteration&lt; ScalarType, MV, OP &gt; *iSolver)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classBelos_1_1StatusTestGenResNorm_3_01Sacado_1_1MP_1_1Vector_3_01Storage_01_4_00_01MV_00_01OP_01_4.html</anchorfile>
      <anchor>af295348040c6288f38774c9d726848f1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StieltjesBasis</name>
    <filename>classStokhos_1_1StieltjesBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>StieltjesBasis</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a767b298c98af3d0b3214835de8dc0113</anchor>
      <arglist>(ordinal_type p, const Teuchos::RCP&lt; const func_type &gt; &amp;func, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, bool use_pce_quad_points, bool normalize=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StieltjesBasis</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a4c6a2f3d5a5a84e602dfca268eec9dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a1cd2db360fa9a10037169caf726e096d</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>ad8c57c0d127e5c36379c0cf4a11b41aa</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stieltjes</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a4578259dcd7f478419d80e0321e7afa2</anchor>
      <arglist>(ordinal_type nstart, ordinal_type nfinish, const Teuchos::Array&lt; value_type &gt; &amp;weights, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;a, Teuchos::Array&lt; value_type &gt; &amp;b, Teuchos::Array&lt; value_type &gt; &amp;nrm, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;phi_vals) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integrateBasisSquared</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a5f0aa2c63dad38d1d4aac80bf25b12fd</anchor>
      <arglist>(ordinal_type k, const Teuchos::Array&lt; value_type &gt; &amp;a, const Teuchos::Array&lt; value_type &gt; &amp;b, const Teuchos::Array&lt; value_type &gt; &amp;weights, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;phi_vals, value_type &amp;val1, value_type &amp;val2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evaluateRecurrence</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a5d0af6470b87b8651d991e919cb980e0</anchor>
      <arglist>(ordinal_type k, const Teuchos::Array&lt; value_type &gt; &amp;a, const Teuchos::Array&lt; value_type &gt; &amp;b, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StieltjesBasis</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a02f2db446eb9459b7c2f6398ffe32bbf</anchor>
      <arglist>(ordinal_type p, const StieltjesBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a7abe480ad2d3e79c7d7229db1437c2ec</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>aa982d4ac454859dc3f69cd79d3402471</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const func_type &gt;</type>
      <name>func</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a3d1220a0c47dea58404a38c5187c3fa7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>quad</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>acca624aef98fa8b8be63235129e7ff2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>pce_weights</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>ac25588858ec03624a951a3179e6303d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>basis_values</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a8f2a682d57cbbad47f338062ccd26302</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>func_vals</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>af5a29c6416776fc7a2fc5d1f264cd3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>phi_vals</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>ace9c3e8c049b93d2f25fc307b00aba74</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_pce_quad_points</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a7623af0a2ff8d74c7c3467c399804047</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a1cd2db360fa9a10037169caf726e096d</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>ad8c57c0d127e5c36379c0cf4a11b41aa</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>a7abe480ad2d3e79c7d7229db1437c2ec</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1StieltjesBasis.html</anchorfile>
      <anchor>aa982d4ac454859dc3f69cd79d3402471</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StieltjesGramSchmidtBuilder</name>
    <filename>classStokhos_1_1StieltjesGramSchmidtBuilder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>StieltjesGramSchmidtBuilder</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>ab7e5d5cf908babf50fd02557297b53db</anchor>
      <arglist>(const Teuchos::RCP&lt; const Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, const Teuchos::Array&lt; OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pces, ordinal_type new_order, bool use_pce_qp, bool normalize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StieltjesGramSchmidtBuilder</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>abf1f4a85306601e034ba13da6de321fd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedBasis</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a9465a7683a4651891a3b45e5e1acbd13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>getReducedQuadrature</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a2c8d1fc8eb69eca6d0d2fc2a153d7ba3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>computeReducedPCEs</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a8118a8efa83654f38b55e4fdd71f6763</anchor>
      <arglist>(const Teuchos::Array&lt; OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pces, Teuchos::Array&lt; OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;new_pces)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>quad</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>aed948558e935c02b9fc70781be573ebc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>tensor_basis</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a6e46d0207b0651531f0dbe26c270a66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; GramSchmidtBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>gs_basis</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a8b6a91d3b25597c677ee92a409d9e0a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; UserDefinedQuadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>gs_quad</name>
      <anchorfile>classStokhos_1_1StieltjesGramSchmidtBuilder.html</anchorfile>
      <anchor>a319a3f4a430dc1c9c9889f160d27b933</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StieltjesPCEBasis</name>
    <filename>classStokhos_1_1StieltjesPCEBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::RecurrenceBasis</base>
    <member kind="function">
      <type></type>
      <name>StieltjesPCEBasis</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>af1696ac7a5d7b3a605f81cfb717683c0</anchor>
      <arglist>(ordinal_type p, const Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt; &amp;pce, const Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt; &amp;quad, bool use_pce_quad_points, bool normalize=false, bool project_integrals=false, const Teuchos::RCP&lt; const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt; &amp;Cijk=Teuchos::null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~StieltjesPCEBasis</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>af8e081a60ad295685e8a61aea8a57441</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformCoeffsFromStieltjes</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a0472c3d17212994ca30ae4b74c404502</anchor>
      <arglist>(const value_type *in, value_type *out) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ab410f924fcb6891225032fb45d18b755</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ae7718f56d277b7a114b494434edb2728</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="typedef" protection="protected">
      <type>Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt;</type>
      <name>Cijk_type</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a1733687d9b874c3124bf90b48e8dfeec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>stieltjes</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aa18d6fc4f8012314dcdb7beaad707f53</anchor>
      <arglist>(ordinal_type nstart, ordinal_type nfinish, const Teuchos::Array&lt; value_type &gt; &amp;weights, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;a, Teuchos::Array&lt; value_type &gt; &amp;b, Teuchos::Array&lt; value_type &gt; &amp;nrm, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;phi_vals) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integrateBasisSquared</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aa052a6eda6531c441a0d59de9ca0c7d3</anchor>
      <arglist>(ordinal_type k, const Teuchos::Array&lt; value_type &gt; &amp;a, const Teuchos::Array&lt; value_type &gt; &amp;b, const Teuchos::Array&lt; value_type &gt; &amp;weights, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;phi_vals, value_type &amp;val1, value_type &amp;val2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>integrateBasisSquaredProj</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>acba59dd8f1c5df228a5172a993e2027d</anchor>
      <arglist>(ordinal_type k, const Teuchos::Array&lt; value_type &gt; &amp;a, const Teuchos::Array&lt; value_type &gt; &amp;b, const Teuchos::Array&lt; value_type &gt; &amp;weights, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;phi_vals, value_type &amp;val1, value_type &amp;val2) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>evaluateRecurrence</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a71c7ad4c1d3ad36c6bdac9a134f94179</anchor>
      <arglist>(ordinal_type k, const Teuchos::Array&lt; value_type &gt; &amp;a, const Teuchos::Array&lt; value_type &gt; &amp;b, const Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>StieltjesPCEBasis</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>afc97886fb031d03d0013882be5fccaaf</anchor>
      <arglist>(ordinal_type p, const StieltjesPCEBasis &amp;basis)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a699e44350c3c2cd0cd0f307134ebeef8</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ad76eb9d16c47d20541d83e366d8d6d93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyApprox&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a7da0be883908032df14f55fc8130a969</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::Quadrature&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>quad</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a05cecbda8e637070db4590f2f577b99e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>pce_weights</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aea7246edc631d88c077525ca1b5ef472</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>basis_values</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aa81923a3bebdd41853a45682aef205cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>pce_vals</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a3dcf6e874399f7f1900ec59933471c03</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>phi_vals</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a27065ebb087371db9317dc6ce747e5b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_pce_quad_points</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a6797f5920cdb1c15708b83800a3b2c14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>fromStieltjesMat</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a0b198e2a797547de7f386200aae8846b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>project_integrals</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aac790b5ae9f555b6a0efaaa270fe443d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>aabbfa0384c9b109ad8ac0601cddf2291</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Cijk_type &gt;</type>
      <name>Cijk</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a794ef3c051d8f8e27e275a8646acac5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>phi_pce_coeffs</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>afd0ef82a56489fca96c24d03787f1b89</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ab410f924fcb6891225032fb45d18b755</anchor>
      <arglist>(ordinal_type quad_order, Teuchos::Array&lt; value_type &gt; &amp;points, Teuchos::Array&lt; value_type &gt; &amp;weights, Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;values) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>cloneWithOrder</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ae7718f56d277b7a114b494434edb2728</anchor>
      <arglist>(ordinal_type p) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual bool</type>
      <name>computeRecurrenceCoefficients</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>a699e44350c3c2cd0cd0f307134ebeef8</anchor>
      <arglist>(ordinal_type n, Teuchos::Array&lt; value_type &gt; &amp;alpha, Teuchos::Array&lt; value_type &gt; &amp;beta, Teuchos::Array&lt; value_type &gt; &amp;delta, Teuchos::Array&lt; value_type &gt; &amp;gamma) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>setup</name>
      <anchorfile>classStokhos_1_1StieltjesPCEBasis.html</anchorfile>
      <anchor>ad76eb9d16c47d20541d83e366d8d6d93</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::StochasticProductTensor</name>
    <filename>classStokhos_1_1StochasticProductTensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1StochasticProductTensor.html</anchorfile>
      <anchor>a934cce85418721eba42b44cbe190ca0d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>aligned_dimension</name>
      <anchorfile>classStokhos_1_1StochasticProductTensor.html</anchorfile>
      <anchor>a3f0744ad646fc3252e1a80b8d069295f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>variable_count</name>
      <anchorfile>classStokhos_1_1StochasticProductTensor.html</anchorfile>
      <anchor>a63dc7374fd6c1f83844a5e3d09134e16</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>variable_degree</name>
      <anchorfile>classStokhos_1_1StochasticProductTensor.html</anchorfile>
      <anchor>a855006b5e83d8ea4046f24234f30a740</anchor>
      <arglist>(const iType &amp;iVariable) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>bases_degree</name>
      <anchorfile>classStokhos_1_1StochasticProductTensor.html</anchorfile>
      <anchor>a51d0c5b51457db5e6d3b4dc85809ee32</anchor>
      <arglist>(const iType &amp;iBasis, const jType &amp;iVariable) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::DynamicStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                                                   value_t,                                                                                                                                                                                                                                                                                                                                                   device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1DynamicStorage_3_01ordinal__t_00_01_01_01_01_01_01_01_8b54382baa3fed8351a1227c1066f473.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::DynamicStridedStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                                                                                                           value_t,                                                                                                                                                                                                                                                                                                                                                                                                           device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1DynamicStridedStorage_3_01ordinal__t_00_01_01_01_01_014e5605c5d4e91a42713089332dc7af7c.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::DynamicThreadedStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                                                                                                                   value_t,                                                                                                                                                                                                                                                                                                                                                                                                                   device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1DynamicThreadedStorage_3_01ordinal__t_00_01_01_01_01_0ed8eb240a915b587dbe5e2367f14ceab.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::StaticFixedStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                                                                                   value_t,                                                                                                                                                                                                                                                                                                                                                                                   Num,                                                                                                                                                                                                                                                                                                                                                                                   device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1StaticFixedStorage_3_01ordinal__t_00_01_01_01_01_01_01dcde33610ee987e1f33f86fef1baef77.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::StaticStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                                           value_t,                                                                                                                                                                                                                                                                                                                                           Num,                                                                                                                                                                                                                                                                                                                                           device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1StaticStorage_3_01ordinal__t_00_01_01_01_01_01_01_01_0d8ded895b015eb3ec6d8b0bc5024e4ae.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>Num</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; Stokhos::ViewStorage&lt; ordinal_t,                                                                                                                                                                                                                                                                                                                           value_t,                                                                                                                                                                                                                                                                                                                           static_length,                                                                                                                                                                                                                                                                                                                           static_stride,                                                                                                                                                                                                                                                                                                                           device_t &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01Stokhos_1_1ViewStorage_3_01ordinal__t_00_01_01_01_01_01_01_01_01_2bf6ec12ba6676cc8de7fda89a0616af.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>static_length</templarg>
    <templarg>static_stride</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::StringName&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1StringName_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SubtractionOp</name>
    <filename>classSacado_1_1MP_1_1SubtractionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Expr&lt; SubtractionOp&lt; T1, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::SubtractionOp</name>
    <filename>classSacado_1_1ETPCE_1_1SubtractionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SubtractionOp&lt; T1, typename T1::value_type &gt;</name>
    <filename>classSacado_1_1MP_1_1SubtractionOp_3_01T1_00_01typename_01T1_1_1value__type_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; SubtractionOp&lt; T1, T1::value_type &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::SubtractionOp&lt; typename T2::value_type, T2 &gt;</name>
    <filename>classSacado_1_1MP_1_1SubtractionOp_3_01typename_01T2_1_1value__type_00_01T2_01_4.html</filename>
    <templarg></templarg>
    <base>Expr&lt; SubtractionOp&lt; T2::value_type, T2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::SymmetricDiagonalSpec</name>
    <filename>classStokhos_1_1SymmetricDiagonalSpec.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION unsigned</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1SymmetricDiagonalSpec.html</anchorfile>
      <anchor>a1aaca27c1ca1b83d8d92043834f0f5f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION unsigned</type>
      <name>matrix_offset</name>
      <anchorfile>classStokhos_1_1SymmetricDiagonalSpec.html</anchorfile>
      <anchor>aef3318f3d5a2c5764dd55a0beea71b8d</anchor>
      <arglist>(const unsigned row, const unsigned column) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION unsigned</type>
      <name>matrix_size</name>
      <anchorfile>classStokhos_1_1SymmetricDiagonalSpec.html</anchorfile>
      <anchor>ac66981aea2443d3c6d03b68dfb4e1be5</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::tan_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1tan__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::tan_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1tan__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::tanh_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1tanh__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::tanh_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1tanh__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::TanhOp</name>
    <filename>classSacado_1_1MP_1_1TanhOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; TanhOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::TanhOp</name>
    <filename>classSacado_1_1ETPCE_1_1TanhOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::TanOp</name>
    <filename>classSacado_1_1ETPCE_1_1TanOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::TanOp</name>
    <filename>classSacado_1_1MP_1_1TanOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; TanOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductBasis</name>
    <filename>classStokhos_1_1TensorProductBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ProductBasis</base>
    <member kind="function">
      <type></type>
      <name>TensorProductBasis</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a876c1ce4f27314093946efb2cacb22f4</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt; &amp;bases, const value_type &amp;sparse_tol=1.0e-12, const MultiIndex&lt; ordinal_type &gt; &amp;index=MultiIndex&lt; ordinal_type &gt;(), const coeff_compare_type &amp;coeff_compare=coeff_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TensorProductBasis</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a9252654d3d549b19692d4adb2422947b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a092c07a81cf209309a379b03c3e9f159</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ae9645898c86ec662e8c6dc7b7beb20a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a4193e68a9f3128de11b9f5d21ac52ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a9f9b6c39591cb837194dc10a0b348923</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a45088d87d9066fd3f9dc91b594554e10</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ac3b64979072a89ed8b8434b2855ff357</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ad79748c5ed7a2bd6024a1e5e564f1eb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a7d2a617d5e1fb6c7c7a75386af54818d</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a8eab61d8391922ce7317ffc13cdf174c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a03ef27e02eee7d6fbd778a86a98533e4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a72399cb991bd02566980b1b123e8d077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a30195ed6d0202f3559d98be12f03902d</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ac9edadc9acda9f6d1fe43db88e2c7cf5</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>aa85db75f0d56d6ffe374c1d8bca915ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>aa1bfe29d056798d36d2fb146763a8c2b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>af2f36571c53b40b3a29bc35b0868e419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ac0bd8c07a510e103fb8ae599f0358f66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>adc35f13a812f276fcfef5ac66093b972</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a4a58eabdb85370a5c505c5e018cc0738</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ad0d82ae292e6ca36f761ee928fd705b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>sparse_tol</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>afa81b568b513dea5cfc0c2ef5701a75e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a3421f650d1de023f9914b5d634781436</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_set_type</type>
      <name>basis_set</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a5ce9605bfc83a019b5f7721cbe3920f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_map_type</type>
      <name>basis_map</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>aa95ac9161876e853f9c4407b077930f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a6b6a114af934a023935c61780293a073</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>basis_eval_tmp</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a6589f768e6fde89dd19d22317ff8793d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a092c07a81cf209309a379b03c3e9f159</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ae9645898c86ec662e8c6dc7b7beb20a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a4193e68a9f3128de11b9f5d21ac52ae8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a9f9b6c39591cb837194dc10a0b348923</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a45088d87d9066fd3f9dc91b594554e10</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ac3b64979072a89ed8b8434b2855ff357</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ad79748c5ed7a2bd6024a1e5e564f1eb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a7d2a617d5e1fb6c7c7a75386af54818d</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a8eab61d8391922ce7317ffc13cdf174c</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a03ef27e02eee7d6fbd778a86a98533e4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a72399cb991bd02566980b1b123e8d077</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>a30195ed6d0202f3559d98be12f03902d</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>ac9edadc9acda9f6d1fe43db88e2c7cf5</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>aa85db75f0d56d6ffe374c1d8bca915ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1TensorProductBasis.html</anchorfile>
      <anchor>aa1bfe29d056798d36d2fb146763a8c2b</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductElement</name>
    <filename>classStokhos_1_1TensorProductElement.html</filename>
    <templarg>ordinal_t</templarg>
    <templarg>element_t</templarg>
    <member kind="function">
      <type></type>
      <name>TensorProductElement</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a4ce053d73450682b78eb299825acf173</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorProductElement</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>ae8136ff41c871b58d1facc6254b64f99</anchor>
      <arglist>(ordinal_type dim, const element_type &amp;val=element_type(0))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TensorProductElement</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a891179af56c9bcef03f963f7a92c0193</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a8e7af7994bb08fdde4f863dbd9e451c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a977c29bb93f520b978cc0ecab9891b4d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const element_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a85824bead4c90dfcdd6a7d74c2074cb6</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function">
      <type>element_type &amp;</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>aa9d9d3a6862912522369b4a2fd380e72</anchor>
      <arglist>(ordinal_type i)</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a6330c1f0476ed9b6723de1aa70fdd68e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; element_type &gt; &amp;</type>
      <name>getTerm</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>ad9741df1c91a606447035b1078b194d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Teuchos::ArrayView&lt; element_type &gt;</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>aa1cfc9ee5a55313e0a961afcb0c32e41</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Teuchos::ArrayView&lt; const element_type &gt;</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a929b5efbc6d922f83e64c1d02f55b9b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>element_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a8c3f4b8c66dab2f94957b6e601597124</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>a51b1058634984ecc092fa88e22028bc7</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; element_type &gt;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1TensorProductElement.html</anchorfile>
      <anchor>ae92fe4449181b7bc444e1a786c99cc05</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductIndexSet</name>
    <filename>classStokhos_1_1TensorProductIndexSet.html</filename>
    <templarg></templarg>
    <class kind="class">Stokhos::TensorProductIndexSet::Iterator</class>
    <member kind="function">
      <type></type>
      <name>TensorProductIndexSet</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a4532311133dda5a6ea7b31ba381e9363</anchor>
      <arglist>(ordinal_type dim_, ordinal_type lower_, ordinal_type upper_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorProductIndexSet</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a3f4e681c1e95ce21f8b8af96b73505c5</anchor>
      <arglist>(ordinal_type dim_, ordinal_type upper_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorProductIndexSet</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a1a388445d60f70c3f09f6e3e7073b302</anchor>
      <arglist>(const multiindex_type &amp;lower_, const multiindex_type &amp;upper_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorProductIndexSet</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a655bcd936aa7a8edd8a423a708137b8c</anchor>
      <arglist>(const multiindex_type &amp;upper_)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a7381bcbe6f93998936881cdd1e13d2d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>multiindex_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a1c10a72221a1114432ce66d8bfa2f831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a3d052fe2a2fefaebada9238cd5f2863a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a3289b270a92ddbb3686a272d838ddcf0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a94e7a9a087e47f01f060cee3833b4e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>lower</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a9bb1dac2e532a7dbde947554ba201efe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>multiindex_type</type>
      <name>upper</name>
      <anchorfile>classStokhos_1_1TensorProductIndexSet.html</anchorfile>
      <anchor>a0bee3de508937bbd0a8ebaa0a9bcda03</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::TensorProductPredicate</name>
    <filename>structStokhos_1_1TensorProductPredicate.html</filename>
    <templarg>ordinal_type</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductPseudoSpectralOperator</name>
    <filename>classStokhos_1_1TensorProductPseudoSpectralOperator.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::PseudoSpectralOperator</base>
    <member kind="function">
      <type></type>
      <name>TensorProductPseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a39610ad500c7f480aea615f0d163d680</anchor>
      <arglist>(const ProductBasis&lt; ordinal_type, value_type &gt; &amp;product_basis, bool use_pst_=false, multiindex_type multiindex=multiindex_type(), const point_compare_type &amp;point_compare=point_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TensorProductPseudoSpectralOperator</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a3d92ed1bc8194c3d7ca276bfb731bcb4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>point_size</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ae35bc3dd368077c36d8c6c30eb394378</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>coeff_size</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ac1fa28a70265559e1b43288c345a4148</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a0298acce72ec912e34b5621ab154db78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>af4df8786436919da6464dfc4d5579954</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a2d5ccc4c300c4cfd26ed745da84e9314</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a342f5b652a38e240f60d719ec85458ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a16d1f5da0e5e5d8ab251d6ea3a3871b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a61fe57eb09fd085518a69b6a1dd1a566</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_begin</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ad569ba941391b3a6ae043c5c97763b0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_set_iterator</type>
      <name>set_end</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>af40646de979f433b3a073d462ed41936</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a0bd7083cf3d32d5601830a06639c7de8</anchor>
      <arglist>(const point_type &amp;point) const </arglist>
    </member>
    <member kind="function">
      <type>const point_type &amp;</type>
      <name>point</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ad660f7bdf8283fc5509b5729fbacd168</anchor>
      <arglist>(ordinal_type n) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformQP2PCE</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>abf1c4ae7d601376414bda86592877417</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>transformPCE2QP</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a7e1f3a2c729b71fe99b0fbe4e104b1fc</anchor>
      <arglist>(const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans=false) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>apply_direct</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a2f3b2081439061f2bf9f3e43d7e5b337</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;A, const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>apply_pst</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a014425db9023a4784ae8183b1b3c8c58</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt; &amp;Ak, const value_type &amp;alpha, const Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;input, Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &amp;result, const value_type &amp;beta, bool trans, bool reorder_input, bool reorder_result) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>use_pst</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>af355c450ffe7204390babf74d5237ebe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>coeff_sz</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ab561bafe08f9415e4b0c9dbed7dd4b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a64e1deb99d9008d51fae9153fb144759</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_set_type</type>
      <name>points</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a3cb2524264333ce2e4f4f640e6cb9835</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>point_map_type</type>
      <name>point_map</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>a471b66f1a2bc7057a434724acfac4221</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>reorder</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ab1bbb3b6ff1d9bb6043a176ac8b9a6a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; ordinal_type &gt;</type>
      <name>perm</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>afc3948130ac9cfb77811682aea518fc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>qp2pce</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>abf5db866b0f144a70d23b52d0fc9b39e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt;</type>
      <name>pce2qp</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>adf3bd26317faa4124d9433d1aa700f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>qp2pce_k</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>aeff747a1cfba34037aeeec372422142b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::SerialDenseMatrix&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>pce2qp_k</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ad7a3db3fe7220a91c3ed50f6745d614a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::BLAS&lt; ordinal_type, value_type &gt;</type>
      <name>blas</name>
      <anchorfile>classStokhos_1_1TensorProductPseudoSpectralOperator.html</anchorfile>
      <anchor>ad8d16d4f9c67a939cc28454b60b285a9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TensorProductQuadrature</name>
    <filename>classStokhos_1_1TensorProductQuadrature.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::Quadrature</base>
    <member kind="function">
      <type></type>
      <name>TensorProductQuadrature</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a712f8adb91081e24da1f25770b7f6b1f</anchor>
      <arglist>(const Teuchos::RCP&lt; const ProductBasis&lt; ordinal_type, value_type &gt; &gt; &amp;product_basis)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TensorProductQuadrature</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a7aa7fe4c8e65a2b5b219b9d4056a7348</anchor>
      <arglist>(const Teuchos::RCP&lt; const ProductBasis&lt; ordinal_type, value_type &gt; &gt; &amp;product_basis, const ordinal_type &amp;quad_order)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TensorProductQuadrature</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a6446452e985238360f4c865b3f80a51c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a7beb6d7e6b81cb7e580db661f1269538</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>ab8c2e6609af64abd868d574cf2c61ca2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a52bed6585ad686a5ba2b7daac68a5c1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>ac43d10b5d3e7b0cb7f5d9031928eecb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a1106bcf736cf2958e91715f682c92603</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>ae756af6e2481f9ca47609ef117649a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a948add00319bde000ec9d6b3880b01cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1TensorProductQuadrature.html</anchorfile>
      <anchor>a3c7f83851f717fe5cc18f253405a1ed6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;::TensorReadEntry</name>
    <filename>structStokhos_1_1Multiply_3_01_01BlockCrsMatrix_3_01CrsProductTensor_3_01TensorScalar_00_01Kokko3f776321490570bc6e64539b7202e9ba.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::TiledCrsProductTensor</name>
    <filename>classStokhos_1_1TiledCrsProductTensor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a3c521e7fc09a10c89306c27adb960651</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_count</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>aae4e2ef6ac9b99f0d1325977554d6cca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_maximum</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a7355856143c9faa8df0a66db2195046b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>max_num_rows</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>affd872ba6923f8ed5be2dde42d8e5516</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_rows</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>ac0cbb09d9eecafd17b087dcb4efb099f</anchor>
      <arglist>(size_type tile) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>entry_begin</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>af4897ecc025f8becdc93dc6e0ea0ffed</anchor>
      <arglist>(size_type tile, size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>entry_end</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a3ed0b31f7700c2556eb556ab6b4af9ef</anchor>
      <arglist>(size_type tile, size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type *</type>
      <name>row_map_ptr</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a6ced564c670d01cea5dba89cc82d0756</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>num_entry</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a4a2e0729f96b6c74839e39f491b73e55</anchor>
      <arglist>(size_type tile, size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a5d1f0aef957ef7fb00f148ae9c655292</anchor>
      <arglist>(const size_type entry, const size_type c) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>coord</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a1ecebaaf8d195a9511baa383b3b197bf</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const value_type &amp;</type>
      <name>value</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>ae18f27a84df68e9d741d20cbdab32a35</anchor>
      <arglist>(const size_type entry) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_non_zeros</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>add078ab6a3df56b830739c9d4c4bc02a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_flops</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>ac5e195eadbb99035a856f0f3ccbc6661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>tile_size</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a51d5e09b75df9670e3d8e67e729901d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION size_type</type>
      <name>num_tiles</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>ac4beef3e3d363619bc8ef44375b25875</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>offset</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>a045404d2beb65af806c804770bbcc859</anchor>
      <arglist>(const size_type entry, const size_type c) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const size_type &amp;</type>
      <name>range</name>
      <anchorfile>classStokhos_1_1TiledCrsProductTensor.html</anchorfile>
      <anchor>ac1c09fd1557f0e9b706bc78995095c83</anchor>
      <arglist>(const size_type entry, const size_type c) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::QuadOrthogPolyExpansion::times_quad_func</name>
    <filename>structStokhos_1_1QuadOrthogPolyExpansion_1_1times__quad__func.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::PseudoSpectralOrthogPolyExpansion::times_quad_func</name>
    <filename>structStokhos_1_1PseudoSpectralOrthogPolyExpansion_1_1times__quad__func.html</filename>
  </compound>
  <compound kind="class">
    <name>Stokhos::TinyVec</name>
    <filename>classStokhos_1_1TinyVec.html</filename>
    <templarg></templarg>
    <templarg>N</templarg>
    <templarg>UseIntrinsics</templarg>
    <templarg>Mask</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::TinyVec&lt; ValueType, N, UseIntrinsics, true &gt;</name>
    <filename>classStokhos_1_1TinyVec_3_01ValueType_00_01N_00_01UseIntrinsics_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg>N</templarg>
    <templarg>UseIntrinsics</templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::TotalOrderBasis</name>
    <filename>classStokhos_1_1TotalOrderBasis.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::ProductBasis</base>
    <member kind="function">
      <type></type>
      <name>TotalOrderBasis</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a7bf25015fb45f7f7ed3a743a506ea878</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt; &amp;bases, const value_type &amp;sparse_tol=1.0e-12, const coeff_compare_type &amp;coeff_compare=coeff_compare_type())</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TotalOrderBasis</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a1276bcb48de9ccda7d7cd8477478b539</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a740340d8a735ae88615484ebe1849c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ae12f6fb5a558d58fb3be519fbe72d029</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>afe3da4ec2453b95bae3bf25ded4c4ab9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a21b8fd94d291589bd4122f5d93af535a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>acdad34c8feb11ee32e3147e669f5406c</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a7a49e7fe48f05c4be05e56ef41ea2d91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>afa9f9f05ad4d197ed5c7268516587498</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>aa580ea5ac0341a81472ef907b0f0465f</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ad66340714db63541f65da3e108313e3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a56bbdd6bfaca86cc987202d5b49332d1</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a05e7fda5f1438a3b2d6d4e583bb8458e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a06585ab218390a35afa3db3f97b3b7f9</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a90f11e5100b282fac07c97443a86b81e</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a4bf4406aeb75d02f1c3fc788b2a4ba83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ab12ce6258bf6c18eba125329fefbf82c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>aab32e8d3c6239a1eac137ada9fc8b9fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>p</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a41df70d90628910e5b39d331d7d8d7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>d</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a2d1b1d58e7d1a7ccf8482fe3b866acbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>sz</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a1e0ff55c4513ddba81d30c46ec051767</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>bases</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a4ed6522c46c65dbd7ca1d8484f1a4d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>value_type</type>
      <name>sparse_tol</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a3d6c5e26d0fb5237bb8e82985e58fd81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a84a20eca0667aa74432cd130d3a37529</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_set_type</type>
      <name>basis_set</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a7dab8d01a242d3ab3c8109bc7e599b6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>coeff_map_type</type>
      <name>basis_map</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a847bcd886d7593e21f0bb39bc8d66a41</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; value_type &gt;</type>
      <name>norms</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a4fb4a2aa8aa46196f9d1b6c7b8924bd7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>basis_eval_tmp</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ae8aae2a0d0b56e1710b9169ae434d95a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>order</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a740340d8a735ae88615484ebe1849c11</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ae12f6fb5a558d58fb3be519fbe72d029</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>afe3da4ec2453b95bae3bf25ded4c4ab9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a21b8fd94d291589bd4122f5d93af535a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const value_type &amp;</type>
      <name>norm_squared</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>acdad34c8feb11ee32e3147e669f5406c</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a7a49e7fe48f05c4be05e56ef41ea2d91</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual Teuchos::RCP&lt; Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>computeLinearTripleProductTensor</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>afa9f9f05ad4d197ed5c7268516587498</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual value_type</type>
      <name>evaluateZero</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>aa580ea5ac0341a81472ef907b0f0465f</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluateBases</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ad66340714db63541f65da3e108313e3a</anchor>
      <arglist>(const Teuchos::ArrayView&lt; const value_type &gt; &amp;point, Teuchos::Array&lt; value_type &gt; &amp;basis_vals) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a56bbdd6bfaca86cc987202d5b49332d1</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a05e7fda5f1438a3b2d6d4e583bb8458e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const MultiIndex&lt; ordinal_type &gt; &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a06585ab218390a35afa3db3f97b3b7f9</anchor>
      <arglist>(ordinal_type i) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>index</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a90f11e5100b282fac07c97443a86b81e</anchor>
      <arglist>(const MultiIndex&lt; ordinal_type &gt; &amp;term) const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &gt;</type>
      <name>getCoordinateBases</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>a4bf4406aeb75d02f1c3fc788b2a4ba83</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual MultiIndex&lt; ordinal_type &gt;</type>
      <name>getMaxOrders</name>
      <anchorfile>classStokhos_1_1TotalOrderBasis.html</anchorfile>
      <anchor>ab12ce6258bf6c18eba125329fefbf82c</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TotalOrderIndexSet</name>
    <filename>classStokhos_1_1TotalOrderIndexSet.html</filename>
    <templarg></templarg>
    <class kind="class">Stokhos::TotalOrderIndexSet::Iterator</class>
    <member kind="function">
      <type></type>
      <name>TotalOrderIndexSet</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>ad6ae3a327c19c7e7014750bbc3d3a746</anchor>
      <arglist>(ordinal_type dim_, ordinal_type lower_, ordinal_type upper_)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TotalOrderIndexSet</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>ad9f123b0eec91b949f212169037d07e7</anchor>
      <arglist>(ordinal_type dim_, ordinal_type upper_)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>dimension</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>acb3f9feb7dccc20f9bb81cdd0f243a2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>multiindex_type</type>
      <name>max_orders</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>ad24846833f258c7675bd7e29949cc702</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>ad5ae3d757cddf10628ffd44f647a25ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>a8c22b0ffedfd72c13b430ea1e08d80ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>dim</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>a9c7a4301e287ea671446ef174277d2e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>lower</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>aca47d2630bd0b24a5b7d9316bca7ed86</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ordinal_type</type>
      <name>upper</name>
      <anchorfile>classStokhos_1_1TotalOrderIndexSet.html</anchorfile>
      <anchor>a6d48a32687a259c7916fcff11427f84d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Stokhos::TotalOrderLess</name>
    <filename>classStokhos_1_1TotalOrderLess.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>TotalOrderLess</name>
      <anchorfile>classStokhos_1_1TotalOrderLess.html</anchorfile>
      <anchor>a6356441a108188572eeedb99bcf26194</anchor>
      <arglist>(const compare_type &amp;cmp_=compare_type())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>equal</name>
      <anchorfile>classStokhos_1_1TotalOrderLess.html</anchorfile>
      <anchor>a4b05ad111a4c0272d851d048b74252b6</anchor>
      <arglist>(const element_type &amp;a, const element_type &amp;b) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>compare_type</type>
      <name>cmp</name>
      <anchorfile>classStokhos_1_1TotalOrderLess.html</anchorfile>
      <anchor>ae43d458b6fe73c5163c85fb190f9c5e9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Stokhos::TotalOrderPredicate</name>
    <filename>structStokhos_1_1TotalOrderPredicate.html</filename>
    <templarg>ordinal_type</templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::UnaryMinusOp</name>
    <filename>classSacado_1_1MP_1_1UnaryMinusOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; UnaryMinusOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::UnaryMinusOp</name>
    <filename>classSacado_1_1ETPCE_1_1UnaryMinusOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::UnaryPlusOp</name>
    <filename>classSacado_1_1MP_1_1UnaryPlusOp.html</filename>
    <templarg></templarg>
    <base>Expr&lt; UnaryPlusOp&lt; T &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Sacado::ETPCE::UnaryPlusOp</name>
    <filename>classSacado_1_1ETPCE_1_1UnaryPlusOp.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::UnpackArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           IdxView,           Op &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1UnpackArrayMultiColumn_3_01_01_01_01_01_01_01_01_01d0fd51db0b46a1768b3fcae831d966f7.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::UnpackArrayMultiColumn&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           IdxView,           Op &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1UnpackArrayMultiColumn_3_01_01_01_01_01_01_01_01_01656a6fef9f11b7bf7cc5fed84dfa6789.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::UnpackArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewMPVectorContiguous &gt;,           IdxView,           ColView,           Op &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1UnpackArrayMultiColumnVariableStride_3_01_01_01_01_593fabdd3e1b38d999ccff021d468844.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Tpetra::KokkosRefactor::Details::UnpackArrayMultiColumnVariableStride&lt;                  Kokkos::View&lt; DT, DL, DD, DM, Kokkos::Impl::ViewPCEContiguous &gt;,           Kokkos::View&lt; ST, SL, SD, SM, Kokkos::Impl::ViewPCEContiguous &gt;,           IdxView,           ColView,           Op &gt;</name>
    <filename>structTpetra_1_1KokkosRefactor_1_1Details_1_1UnpackArrayMultiColumnVariableStride_3_01_01_01_01_9ddc21632be61b8f0a6f8a58aee52e79.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::Update</name>
    <filename>classStokhos_1_1Update.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::UserDefinedQuadrature</name>
    <filename>classStokhos_1_1UserDefinedQuadrature.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Stokhos::Quadrature</base>
    <member kind="function">
      <type></type>
      <name>UserDefinedQuadrature</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a9eb58c15a3c18d68b12c4d41011c8a65</anchor>
      <arglist>(const Teuchos::RCP&lt; const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt; &amp;points, const Teuchos::RCP&lt; const Teuchos::Array&lt; value_type &gt; &gt; &amp;weights)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>UserDefinedQuadrature</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>ae302bfb9750da2fbda2336c3aaea6146</anchor>
      <arglist>(const Teuchos::RCP&lt; const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt; &amp;points, const Teuchos::RCP&lt; const Teuchos::Array&lt; value_type &gt; &gt; &amp;weights, const Teuchos::RCP&lt; const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt; &amp;values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~UserDefinedQuadrature</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a77677ffad593f37edcc5362daf73a27e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a869862d516b3f9af1e69f6aaa1b1f226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getQuadPoints</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a6b1a25ba53386be7e3269d2930582abf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; value_type &gt; &amp;</type>
      <name>getQuadWeights</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>abf6159f88742e5d3032bbc1e6800ed27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &amp;</type>
      <name>getBasisAtQuadPoints</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a689133279b86cbbf6b985a54143353b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>ac7b4210fa652ef52e3a798c9de62eb70</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt;</type>
      <name>quad_points</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>afa069c1d951c2a21c18e1cbe10ac346e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; value_type &gt; &gt;</type>
      <name>quad_weights</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a06c6f1f8f2d838ca9dcdb1a09f2fa67f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Teuchos::Array&lt; Teuchos::Array&lt; value_type &gt; &gt; &gt;</type>
      <name>quad_values</name>
      <anchorfile>classStokhos_1_1UserDefinedQuadrature.html</anchorfile>
      <anchor>a84324b56fbb019d25c21b51a744dab64</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::V_MultFunctor&lt;  Kokkos::View&lt; CT, CL, CD, CM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; AT, AL, AD, AM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; BT, BL, BD, BM, Kokkos::Impl::ViewPCEContiguous &gt;, scalar_ab, scalar_c, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1V__MultFunctor_3_01_01Kokkos_1_1View_3_01CT_00_01CL_00_01CD_00_01CM_80ae72a184fdf0d6743844f177966705.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>scalar_ab</templarg>
    <templarg>scalar_c</templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::V_Reciprocal_Functor&lt;  Kokkos::View&lt; RT, RL, RD, RM, Kokkos::Impl::ViewPCEContiguous &gt;, Kokkos::View&lt; XT, XL, XD, XM, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1V__Reciprocal__Functor_3_01_01Kokkos_1_1View_3_01RT_00_01RL_00_01RD_73175aee2a4532ad35d7332f7a5ab2b3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosBlas::Impl::V_ReciprocalSelf_Functor&lt;  Kokkos::View&lt; RT, RL, RD, RM, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structKokkosBlas_1_1Impl_1_1V__ReciprocalSelf__Functor_3_01_01Kokkos_1_1View_3_01RT_00_01RL_00_05b2a4e7cfb503e15269bd59e8ec2dc75.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::Details::V_ReciprocalThresholdSelfFunctor</name>
    <filename>structIfpack2_1_1Details_1_1V__ReciprocalThresholdSelfFunctor.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Ifpack2::Details::V_ReciprocalThresholdSelfFunctor&lt;  Kokkos::View&lt; T, L, D, M, Kokkos::Impl::ViewPCEContiguous &gt;, SizeType &gt;</name>
    <filename>structIfpack2_1_1Details_1_1V__ReciprocalThresholdSelfFunctor_3_01_01Kokkos_1_1View_3_01T_00_01Lfc9ba084dbe30d5da9060db2073da562.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::Value&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1Value_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; ETPCE::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01ETPCE_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; ETPCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01ETPCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; MP::Expr&lt; T &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01MP_1_1Expr_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; MP::Vector&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01MP_1_1Vector_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; PCE::OrthogPoly&lt; T, S &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01PCE_1_1OrthogPoly_3_01T_00_01S_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Sacado::ValueType&lt; UQ::PCE&lt; S &gt; &gt;</name>
    <filename>structSacado_1_1ValueType_3_01UQ_1_1PCE_3_01S_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Tpetra::Vector</name>
    <filename>classTpetra_1_1Vector.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Sacado::MP::Vector</name>
    <filename>classSacado_1_1MP_1_1Vector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Vector&lt; Stokhos::StaticFixedStorage&lt; Ord, Val, VecNum, Dev &gt; &gt;</name>
    <filename>classSacado_1_1MP_1_1Vector.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::PCEAllocation&lt; Sacado::UQ::PCE&lt; Storage &gt; &gt;::VectorInit</name>
    <filename>structKokkos_1_1Impl_1_1PCEAllocation_3_01Sacado_1_1UQ_1_1PCE_3_01Storage_01_4_01_4_1_1VectorInit.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::MPVectorAllocation&lt; Storage, false &gt;::VectorInit</name>
    <filename>structKokkos_1_1Impl_1_1MPVectorAllocation_3_01Storage_00_01false_01_4_1_1VectorInit.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::VectorOrthogPoly</name>
    <filename>classStokhos_1_1VectorOrthogPoly.html</filename>
    <templarg>coeff_type</templarg>
    <base virtualness="virtual">Stokhos::ProductContainer</base>
    <member kind="typedef">
      <type>ProductContainer&lt; coeff_type &gt;::traits_type</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a794b1e1091efa271c18e59eaa723c9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; coeff_type &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a97f8581d6ee43309f03f9fef34478765</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; coeff_type &gt;::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a38a1f9b8a9b96ce06d08176a88799151</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>abe42ca49f90b743f366d19240a29cb48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a7fd3d89ace167b015d2347fa5d49f910</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a48786b97d2e9e1cbe881a34e20195e18</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>aa7c7198aac84552c0ea2e016414132d1</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a58f8537b6bc9d0379c4ef761d030a443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2b955038721c85803335fb76dd5873d5</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6f68e4eb7c3b274545952dbc8b6d604b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;new_map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a4dce677734eb43917e881aa9ad130bcd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>coeff_type &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ad5073a0c2d53b71aca7497e8b5fe8a75</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const coeff_type &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6ce254c62628e3863b1506db9d1ef76f</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab8ff8fe54b7b81107d5c871d98a20fec</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;basis_values, coeff_type &amp;result) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoAllTerms</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2dd9a2ada750b038d828c956d15da253</anchor>
      <arglist>(const value_type &amp;weight, const Teuchos::Array&lt; value_type &gt; &amp;basis_values, const Teuchos::Array&lt; value_type &gt; &amp;basis_norms, const coeff_type &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>addda38783fb00c3504e973639b28114e</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab4abb623de46d8c5de0485db3dc19184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VectorOrthogPoly&lt; Epetra_MultiVector &gt;</name>
    <filename>classStokhos_1_1VectorOrthogPoly.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_MultiVector &gt;</base>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_MultiVector &gt;::traits_type</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a794b1e1091efa271c18e59eaa723c9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_MultiVector &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a97f8581d6ee43309f03f9fef34478765</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_MultiVector &gt;::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a38a1f9b8a9b96ce06d08176a88799151</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>abe42ca49f90b743f366d19240a29cb48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a7fd3d89ace167b015d2347fa5d49f910</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a48786b97d2e9e1cbe881a34e20195e18</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>aa7c7198aac84552c0ea2e016414132d1</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a58f8537b6bc9d0379c4ef761d030a443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2b955038721c85803335fb76dd5873d5</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6f68e4eb7c3b274545952dbc8b6d604b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;new_map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a4dce677734eb43917e881aa9ad130bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Epetra_MultiVector &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ad5073a0c2d53b71aca7497e8b5fe8a75</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_MultiVector &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6ce254c62628e3863b1506db9d1ef76f</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab8ff8fe54b7b81107d5c871d98a20fec</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;basis_values, Epetra_MultiVector &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoAllTerms</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2dd9a2ada750b038d828c956d15da253</anchor>
      <arglist>(const value_type &amp;weight, const Teuchos::Array&lt; value_type &gt; &amp;basis_values, const Teuchos::Array&lt; value_type &gt; &amp;basis_norms, const Epetra_MultiVector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>addda38783fb00c3504e973639b28114e</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab4abb623de46d8c5de0485db3dc19184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VectorOrthogPoly&lt; Epetra_Operator &gt;</name>
    <filename>classStokhos_1_1VectorOrthogPoly.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_Operator &gt;</base>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Operator &gt;::traits_type</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a794b1e1091efa271c18e59eaa723c9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Operator &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a97f8581d6ee43309f03f9fef34478765</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Operator &gt;::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a38a1f9b8a9b96ce06d08176a88799151</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>abe42ca49f90b743f366d19240a29cb48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a7fd3d89ace167b015d2347fa5d49f910</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a48786b97d2e9e1cbe881a34e20195e18</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>aa7c7198aac84552c0ea2e016414132d1</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a58f8537b6bc9d0379c4ef761d030a443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2b955038721c85803335fb76dd5873d5</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6f68e4eb7c3b274545952dbc8b6d604b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;new_map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a4dce677734eb43917e881aa9ad130bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Operator &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ad5073a0c2d53b71aca7497e8b5fe8a75</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Operator &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6ce254c62628e3863b1506db9d1ef76f</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab8ff8fe54b7b81107d5c871d98a20fec</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;basis_values, Epetra_Operator &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoAllTerms</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2dd9a2ada750b038d828c956d15da253</anchor>
      <arglist>(const value_type &amp;weight, const Teuchos::Array&lt; value_type &gt; &amp;basis_values, const Teuchos::Array&lt; value_type &gt; &amp;basis_norms, const Epetra_Operator &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>addda38783fb00c3504e973639b28114e</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab4abb623de46d8c5de0485db3dc19184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VectorOrthogPoly&lt; Epetra_Vector &gt;</name>
    <filename>classStokhos_1_1VectorOrthogPoly.html</filename>
    <base virtualness="virtual">ProductContainer&lt; Epetra_Vector &gt;</base>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Vector &gt;::traits_type</type>
      <name>traits_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a794b1e1091efa271c18e59eaa723c9a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Vector &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a97f8581d6ee43309f03f9fef34478765</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ProductContainer&lt; Epetra_Vector &gt;::ordinal_type</type>
      <name>ordinal_type</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a38a1f9b8a9b96ce06d08176a88799151</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>abe42ca49f90b743f366d19240a29cb48</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a7fd3d89ace167b015d2347fa5d49f910</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a48786b97d2e9e1cbe881a34e20195e18</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>aa7c7198aac84552c0ea2e016414132d1</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VectorOrthogPoly</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a58f8537b6bc9d0379c4ef761d030a443</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>VectorOrthogPoly &amp;</type>
      <name>operator=</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2b955038721c85803335fb76dd5873d5</anchor>
      <arglist>(const VectorOrthogPoly &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6f68e4eb7c3b274545952dbc8b6d604b</anchor>
      <arglist>(const Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt; &amp;new_basis, const Teuchos::RCP&lt; const Epetra_BlockMap &gt; &amp;new_map, const typename traits_type::cloner_type &amp;cloner)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a4dce677734eb43917e881aa9ad130bcd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Epetra_Vector &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ad5073a0c2d53b71aca7497e8b5fe8a75</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order)</arglist>
    </member>
    <member kind="function">
      <type>const Epetra_Vector &amp;</type>
      <name>term</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a6ce254c62628e3863b1506db9d1ef76f</anchor>
      <arglist>(ordinal_type dimension, ordinal_type order) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab8ff8fe54b7b81107d5c871d98a20fec</anchor>
      <arglist>(const Teuchos::Array&lt; value_type &gt; &amp;basis_values, Epetra_Vector &amp;result) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sumIntoAllTerms</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>a2dd9a2ada750b038d828c956d15da253</anchor>
      <arglist>(const value_type &amp;weight, const Teuchos::Array&lt; value_type &gt; &amp;basis_values, const Teuchos::Array&lt; value_type &gt; &amp;basis_norms, const Epetra_Vector &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>addda38783fb00c3504e973639b28114e</anchor>
      <arglist>(std::ostream &amp;os) const</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &gt;</type>
      <name>basis_</name>
      <anchorfile>classStokhos_1_1VectorOrthogPoly.html</anchorfile>
      <anchor>ab4abb623de46d8c5de0485db3dc19184</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kokkos::View&lt; DataType, Arg1Type, Arg2Type, Arg3Type, Impl::ViewMPVectorContiguous &gt;</name>
    <filename>classKokkos_1_1View_3_01DataType_00_01Arg1Type_00_01Arg2Type_00_01Arg3Type_00_01Impl_1_1ViewMPVectorContiguous_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>View</name>
      <anchorfile>classKokkos_1_1View_3_01DataType_00_01Arg1Type_00_01Arg2Type_00_01Arg3Type_00_01Impl_1_1ViewMPVectorContiguous_01_4.html</anchorfile>
      <anchor>ac34063565b02625b8acaedc8afff6c41</anchor>
      <arglist>(const View&lt; D, A1, A2, A3, Impl::ViewMPVectorContiguous &gt; &amp;src, const SubArg0_type &amp;arg0, const SubArg1_type &amp;arg1, const SubArg2_type &amp;arg2, const SubArg3_type &amp;arg3, const SubArg4_type &amp;arg4, const SubArg5_type &amp;arg5, const SubArg6_type &amp;arg6, const SubArg7_type &amp;arg7)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Kokkos::View&lt; DataType, Arg1Type, Arg2Type, Arg3Type, Impl::ViewMPVectorInterlaced &gt;</name>
    <filename>classKokkos_1_1View_3_01DataType_00_01Arg1Type_00_01Arg2Type_00_01Arg3Type_00_01Impl_1_1ViewMPVectorInterlaced_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Kokkos::View&lt; DataType, Arg1Type, Arg2Type, Arg3Type, Impl::ViewPCEContiguous &gt;</name>
    <filename>classKokkos_1_1View_3_01DataType_00_01Arg1Type_00_01Arg2Type_00_01Arg3Type_00_01Impl_1_1ViewPCEContiguous_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>View</name>
      <anchorfile>classKokkos_1_1View_3_01DataType_00_01Arg1Type_00_01Arg2Type_00_01Arg3Type_00_01Impl_1_1ViewPCEContiguous_01_4.html</anchorfile>
      <anchor>ac0c0ea5a8e64487197e0240d1d28d195</anchor>
      <arglist>(const View&lt; D, A1, A2, A3, Impl::ViewPCEContiguous &gt; &amp;src, const SubArg0_type &amp;arg0, const SubArg1_type &amp;arg1, const SubArg2_type &amp;arg2, const SubArg3_type &amp;arg3, const SubArg4_type &amp;arg4, const SubArg5_type &amp;arg5, const SubArg6_type &amp;arg6, const SubArg7_type &amp;arg7)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewDefault, ViewMPVectorContiguous, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewMPVectorContiguous_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>aac96e5efac3ac1f6fdc8c562e05c3277</anchor>
      <arglist>(typename View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt;::array_type &amp;dst, const View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a90abc6309683ca27c19e25a740af1478</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, ViewDefault &gt; &amp;dst, const View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt; &amp;src, typename enable_if&lt; (                       (is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::value_type,                                                                   typename View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt;::intrinsic_scalar_type &gt;::value||                               is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::non_const_value_type,                                                                   typename View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt;::intrinsic_scalar_type &gt;::value                           )&amp;&amp;                       is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::array_layout,                                                           typename View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt;::array_layout &gt;::value &amp;&amp;                       (unsigned(View&lt; DT, DL, DD, DM, ViewDefault &gt;::rank)==                               unsigned(View&lt; ST, SL, SD, SM, ViewMPVectorContiguous &gt;::rank))               ) &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewDefault, ViewMPVectorInterlaced, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewMPVectorInterlaced_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewMPVectorInterlaced_00_01void_01_4.html</anchorfile>
      <anchor>a2a16d1383e76fceeeb1b31f12ad9dfee</anchor>
      <arglist>(typename View&lt; ST, SL, SD, SM, ViewMPVectorInterlaced &gt;::array_type &amp;dst, const View&lt; ST, SL, SD, SM, ViewMPVectorInterlaced &gt; &amp;src)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewDefault, ViewPCEContiguous, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewPCEContiguous_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>aa38d449ad3d11af07f0a0d5071d1bd4b</anchor>
      <arglist>(typename View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt;::array_type &amp;dst, const View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewDefault_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>ab39e9699b88a055e44d2b45b0bece9b1</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, ViewDefault &gt; &amp;dst, const View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt; &amp;src, typename enable_if&lt; (                       (is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::value_type,                                                                   typename View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt;::intrinsic_scalar_type &gt;::value||                               is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::non_const_value_type,                                                                   typename View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt;::intrinsic_scalar_type &gt;::value                           )&amp;&amp;                       is_same&lt; typename View&lt; DT, DL, DD, DM, ViewDefault &gt;::array_layout,                                                           typename View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt;::array_layout &gt;::value &amp;&amp;                       (unsigned(View&lt; DT, DL, DD, DM, ViewDefault &gt;::rank)==                               unsigned(View&lt; ST, SL, SD, SM, ViewPCEContiguous &gt;::rank))               ) &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewMPVectorContiguous, ViewMPVectorContiguous, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a626821604eab8e2f921e20f55a74b9c8</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const typename enable_if&lt;(                                                                       ViewAssignable&lt; View&lt; DT, DL, DD, DM, specialize &gt;,                                                                                                                                       View&lt; ST, SL, SD, SM, specialize &gt; &gt;::value                                                                       )&gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a024397aa2116be7517c7ec7696336653</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, typename enable_if&lt;(                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::intrinsic_scalar_type,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::intrinsic_scalar_type &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::memory_space,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::memory_space &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::array_layout,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::array_layout &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       (unsigned(View&lt; DT, DL, DD, DM, specialize &gt;::Rank)==                                                                               unsigned(View&lt; ST, SL, SD, SM, specialize &gt;::Rank))                                                                       &amp;&amp;                                                                       
                                                                       !View&lt; DT, DL, DD, DM, specialize &gt;::is_managed                                                                       &amp;&amp;                                                                       
                                                                       (View&lt; DT, DL, DD, DM, specialize &gt;::is_static &amp;&amp;                                                                               View&lt; ST, SL, SD, SM, specialize &gt;::is_static)                                                               ), const Sacado::MP::VectorPartition&lt; 0 &gt; &amp; &gt;::type part)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>aaf676cfc839fdfa35c549ee8e58f1db8</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, typename enable_if&lt; (                                                                                               ViewAssignable&lt; View&lt; DT, DL, DD, DM, specialize &gt;,                                                                                                                                                               View&lt; ST, SL, SD, SM, specialize &gt; &gt;::value                                                                       &amp;&amp;                                                                                               (View&lt; ST, SL, SD, SM, specialize &gt;::rank==1)                                                                       &amp;&amp;                                                                                               (View&lt; DT, DL, DD, DM, specialize &gt;::rank==1)                                                                       &amp;&amp;                                                                                               (View&lt; DT, DL, DD, DM, specialize &gt;::rank_dynamic==1)                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a42cc9920401e3df5162868a3300ee089</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const ALL &amp;, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==1)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==1)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a3443f0923adbff1d78e8ef73996a21bb</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==1)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==1)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>aad7328ee88bf79425832711046a37c9e</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const ALL &amp;, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>abcdf7f437a3e1488bb2ac633111fa5c0</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a1b40eb3fbaae316cae7778148034c8a2</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, ALL, const std::pair&lt; iType, iType &gt; &amp;range1, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>ad0f52ace8352cbb084e078c8bbe611a7</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range0, ALL, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorContiguous_00_01ViewMPVectorContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a59172902e1ff23c3d57bd409901a2586</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType0, iType0 &gt; &amp;range0, const std::pair&lt; iType1, iType1 &gt; &amp;range1, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewMPVectorInterlaced, ViewMPVectorInterlaced, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorInterlaced_00_01ViewMPVectorInterlaced_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorInterlaced_00_01ViewMPVectorInterlaced_00_01void_01_4.html</anchorfile>
      <anchor>a942a5b24559d171c90c8c3e485987d54</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const typename enable_if&lt;(                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;,                                                                                                                                       ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       )&gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewMPVectorInterlaced_00_01ViewMPVectorInterlaced_00_01void_01_4.html</anchorfile>
      <anchor>a681507439d04da32bf2fc072e46dfbc0</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, typename enable_if&lt;(                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::intrinsic_scalar_type,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::intrinsic_scalar_type &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::memory_space,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::memory_space &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::array_layout,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::array_layout &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       (unsigned(View&lt; DT, DL, DD, DM, specialize &gt;::Rank)==                                                                               unsigned(View&lt; ST, SL, SD, SM, specialize &gt;::Rank))                                                                       &amp;&amp;                                                                       
                                                                       !View&lt; DT, DL, DD, DM, specialize &gt;::is_managed                                                               ), const Sacado::MP::VectorPartition &amp; &gt;::type part)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewAssignment&lt; ViewPCEContiguous, ViewPCEContiguous, void &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</filename>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a813257b66e32fb1022fef89dc7978802</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const typename enable_if&lt;(                                                                       ViewAssignable&lt; View&lt; DT, DL, DD, DM, specialize &gt;,                                                                                                                                       View&lt; ST, SL, SD, SM, specialize &gt; &gt;::value                                                                       )&gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>af3714725618e5aedaedb24fd668caa0c</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, typename enable_if&lt;(                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::intrinsic_scalar_type,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::intrinsic_scalar_type &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::memory_space,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::memory_space &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       is_same&lt; typename View&lt; DT, DL, DD, DM, specialize &gt;::array_layout,                                                                                                           typename View&lt; ST, SL, SD, SM, specialize &gt;::array_layout &gt;::value                                                                       &amp;&amp;                                                                       
                                                                       (unsigned(View&lt; DT, DL, DD, DM, specialize &gt;::Rank)==                                                                               unsigned(View&lt; ST, SL, SD, SM, specialize &gt;::Rank))                                                                       &amp;&amp;                                                                       
                                                                       !View&lt; DT, DL, DD, DM, specialize &gt;::is_managed                                                                       &amp;&amp;                                                                       
                                                                       (View&lt; DT, DL, DD, DM, specialize &gt;::is_static &amp;&amp;                                                                               View&lt; ST, SL, SD, SM, specialize &gt;::is_static)                                                               ), const Sacado::UQ::PCEPartition &amp; &gt;::type part)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>af7a5e0c3bb751be214645390af296c66</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, typename enable_if&lt; (                                                                                               ViewAssignable&lt; View&lt; DT, DL, DD, DM, specialize &gt;,                                                                                                                                                               View&lt; ST, SL, SD, SM, specialize &gt; &gt;::value                                                                       &amp;&amp;                                                                                               (View&lt; ST, SL, SD, SM, specialize &gt;::rank==1)                                                                       &amp;&amp;                                                                                               (View&lt; DT, DL, DD, DM, specialize &gt;::rank==1)                                                                       &amp;&amp;                                                                                               (View&lt; DT, DL, DD, DM, specialize &gt;::rank_dynamic==1)                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a33afa6cbd8874a7c3db89de2ea2e4025</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const ALL &amp;, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==1)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==1)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a4c00f55ba8826994e4f98f752ad35ed4</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==1)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==1)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a22f466eb8ca920dbd84d7f29280c3826</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const ALL &amp;, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>add49ff9606f3063bea6a908979a2337c</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range, const typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::assignable_value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       (ViewTraits&lt; ST, SL, SD, SM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2)                                                                       &amp;&amp;                                                                       (ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2)                                                               ), unsigned &gt;::type i1)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a00ff983624775859c5e5f95cb6ff0c16</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, ALL, const std::pair&lt; iType, iType &gt; &amp;range1, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>a044b61a180f8fcd28c375be3e79010df</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType, iType &gt; &amp;range0, ALL, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewAssignment</name>
      <anchorfile>structKokkos_1_1Impl_1_1ViewAssignment_3_01ViewPCEContiguous_00_01ViewPCEContiguous_00_01void_01_4.html</anchorfile>
      <anchor>afff2270ca6f61b2dd96c23d4e3a27899</anchor>
      <arglist>(View&lt; DT, DL, DD, DM, specialize &gt; &amp;dst, const View&lt; ST, SL, SD, SM, specialize &gt; &amp;src, const std::pair&lt; iType0, iType0 &gt; &amp;range0, const std::pair&lt; iType1, iType1 &gt; &amp;range1, typename enable_if&lt; (                                                                       ViewAssignable&lt; ViewTraits&lt; DT, DL, DD, DM &gt;, ViewTraits&lt; ST, SL, SD, SM &gt; &gt;::value                                                                       &amp;&amp;                                                                       is_same&lt; typename ViewTraits&lt; ST, SL, SD, SM &gt;::array_layout, LayoutLeft &gt;::value                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank==2                                                                       &amp;&amp;                                                                       ViewTraits&lt; DT, DL, DD, DM &gt;::rank_dynamic==2                                                               ) &gt;::type *=0)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewMPVectorContiguous</name>
    <filename>structKokkos_1_1Impl_1_1ViewMPVectorContiguous.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewMPVectorInterlaced</name>
    <filename>structKokkos_1_1Impl_1_1ViewMPVectorInterlaced.html</filename>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewPCEContiguous</name>
    <filename>structKokkos_1_1Impl_1_1ViewPCEContiguous.html</filename>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ViewRank</name>
    <filename>structStokhos_1_1ViewRank.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Stokhos::ViewRank&lt; std::vector&lt; T &gt; &gt;</name>
    <filename>structStokhos_1_1ViewRank_3_01std_1_1vector_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSpecialize&lt; ValueType, ViewMPVectorContiguous, Layout, MemorySpace, MemoryTraits &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSpecialize_3_01ValueType_00_01ViewMPVectorContiguous_00_01Layout_00_49446a88255dd0af9e10b46e68763ed9.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSpecialize&lt; ValueType, ViewMPVectorInterlaced, LayoutLeft, MemorySpace, MemoryTraits &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSpecialize_3_01ValueType_00_01ViewMPVectorInterlaced_00_01LayoutLeft591c94ff04e45299c92320d66fc71f73.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSpecialize&lt; ValueType, ViewMPVectorInterlaced, LayoutRight, MemorySpace, MemoryTraits &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSpecialize_3_01ValueType_00_01ViewMPVectorInterlaced_00_01LayoutRigh2e2678261bb59a6dd0f828d563708ccc.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSpecialize&lt; ValueType, ViewPCEContiguous, Layout, MemorySpace, MemoryTraits &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSpecialize_3_01ValueType_00_01ViewPCEContiguous_00_01Layout_00_01MemorySpace_00_01MemoryTraits_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::ViewStorage</name>
    <filename>classStokhos_1_1ViewStorage.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>static_length</templarg>
    <templarg>static_stride</templarg>
    <templarg></templarg>
    <class kind="struct">Stokhos::ViewStorage::apply</class>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>aace1cf5e38c3449be69a07f3dc4fa8a4</anchor>
      <arglist>(const error_storage_type_is_not_allocateable &amp;z=error_storage_type_is_not_allocateable(), const value_type &amp;x=value_type(0))</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a82f2ef473eee25aecc6d368667111888</anchor>
      <arglist>(pointer v, const ordinal_type &amp;arg_size=0, const ordinal_type &amp;arg_stride=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>ad1975185f364baaf0177ad1b5e69bc4f</anchor>
      <arglist>(const ordinal_type &amp;sz, const value_type *x)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>acd3af6e6883d473d280cbc9d9e076df0</anchor>
      <arglist>(const ordinal_type &amp;sz, pointer v, bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a77a945384370b814fd440c93dba31bf8</anchor>
      <arglist>(const ViewStorage &amp;s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION</type>
      <name>~ViewStorage</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a02d7a85ad8440a9636ac6ea31ab30d0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>aa5a22b87044a32f8d3b73fc7cf64aac2</anchor>
      <arglist>(const_reference v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>init</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a81c07efb4b1cdfcf15f187bb58abfb14</anchor>
      <arglist>(const_pointer v, const ordinal_type &amp;sz=0)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>load</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a03f3c640d9236d7d4bd87e5e6ec15439</anchor>
      <arglist>(pointer v)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>resize</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a30b11e2871b51f8b564f6050917b9e30</anchor>
      <arglist>(ordinal_type s)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION void</type>
      <name>shallowReset</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>aa255583c7d1515d3f4643f64e2cabba3</anchor>
      <arglist>(pointer v, const error_storage_type_is_not_resizeable &amp;, const error_storage_type_is_not_resizeable &amp;, const bool owned)</arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION ordinal_type</type>
      <name>size</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a92fa0bafb9d166612f4acbc2ab75c7c0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION reference</type>
      <name>operator[]</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>af1fa17f41f337f24a7a4747634600ed5</anchor>
      <arglist>(const ordinal_type &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION const_pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a5346785ce445e2a608a529c95d2b4a19</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>KOKKOS_INLINE_FUNCTION pointer</type>
      <name>coeff</name>
      <anchorfile>classStokhos_1_1ViewStorage.html</anchorfile>
      <anchor>a0d5d872fbb98dce79ba97fa8d7dee1f3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSubview&lt; View&lt; SrcDataType, SrcArg1Type, SrcArg2Type, SrcArg3Type, Impl::ViewMPVectorContiguous &gt;                                                                                                                           , SubArg0_type, SubArg1_type, SubArg2_type, SubArg3_type                                                                                                                           , SubArg4_type, SubArg5_type, SubArg6_type, SubArg7_type &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSubview_3_01View_3_01SrcDataType_00_01SrcArg1Type_00_01SrcArg2Type_06aff0f6407a33be403ab5aa80fe2166a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>Kokkos::Impl::ViewSubview&lt; View&lt; SrcDataType, SrcArg1Type, SrcArg2Type, SrcArg3Type, Impl::ViewPCEContiguous &gt;                                                                                                                           , SubArg0_type, SubArg1_type, SubArg2_type, SubArg3_type                                                                                                                           , SubArg4_type, SubArg5_type, SubArg6_type, SubArg7_type &gt;</name>
    <filename>structKokkos_1_1Impl_1_1ViewSubview_3_01View_3_01SrcDataType_00_01SrcArg1Type_00_01SrcArg2Type_0ac51baf7d26b216590142bea5e84cf29.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Stokhos::WeightedVectorSpace</name>
    <filename>classStokhos_1_1WeightedVectorSpace.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="struct">
    <name>KokkosClassic::WeightNormOp&lt; Sacado::PCE::OrthogPoly&lt; ScalarType, StorageType &gt; &gt;</name>
    <filename>structKokkosClassic_1_1WeightNormOp_3_01Sacado_1_1PCE_1_1OrthogPoly_3_01ScalarType_00_01StorageType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="namespace">
    <name>Stokhos</name>
    <filename>namespaceStokhos.html</filename>
    <namespace>Stokhos::KL</namespace>
    <class kind="class">Stokhos::AbstractPreconditionerFactory</class>
    <class kind="class">Stokhos::AdaptivityManager</class>
    <class kind="class">Stokhos::AlgebraicOrthogPolyExpansion</class>
    <class kind="class">Stokhos::aligned_allocator</class>
    <class kind="class">Stokhos::aligned_allocator&lt; const T &gt;</class>
    <class kind="class">Stokhos::AnisoSparseGridQuadrature</class>
    <class kind="class">Stokhos::AnisotropicTotalOrderIndexSet</class>
    <class kind="class">Stokhos::ApproxGaussSeidelPreconditioner</class>
    <class kind="class">Stokhos::ApproxJacobiPreconditioner</class>
    <class kind="class">Stokhos::ApproxSchurComplementPreconditioner</class>
    <class kind="class">Stokhos::BasisFactory</class>
    <class kind="class">Stokhos::BasisInteractionGraph</class>
    <class kind="class">Stokhos::BlockCrsMatrix</class>
    <class kind="class">Stokhos::BlockDiagonalOperator</class>
    <class kind="class">Stokhos::BlockMultiply</class>
    <class kind="class">Stokhos::BlockMultiply&lt; CooProductTensor&lt; ValueType, Device, Pack &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; CrsProductTensor&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; FlatSparse3Tensor&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; FlatSparse3Tensor_kji&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; LexicographicBlockSparse3Tensor&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; LinearSparse3Tensor&lt; ValueType, Device, BlockSize &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; SimpleTiledCrsProductTensor&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; StochasticProductTensor&lt; ValueType, TensorType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; SymmetricDiagonalSpec&lt; Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; SymmetricDiagonalSpec&lt; Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::BlockMultiply&lt; TiledCrsProductTensor&lt; ValueType, Device &gt; &gt;</class>
    <class kind="class">Stokhos::BlockPreconditioner</class>
    <class kind="class">Stokhos::CGDivisionExpansionStrategy</class>
    <class kind="struct">Stokhos::CijkData</class>
    <class kind="class">Stokhos::ClenshawCurtisExponentialGrowthRule</class>
    <class kind="class">Stokhos::ClenshawCurtisLegendreBasis</class>
    <class kind="class">Stokhos::CompletePolynomialBasis</class>
    <class kind="class">Stokhos::CompletePolynomialBasisUtils</class>
    <class kind="class">Stokhos::ConstantOrthogPolyExpansion</class>
    <class kind="class">Stokhos::CooProductTensor</class>
    <class kind="class">Stokhos::CooProductTensor&lt; ValueType, ExecutionSpace, false &gt;</class>
    <class kind="class">Stokhos::CooProductTensor&lt; ValueType, ExecutionSpace, true &gt;</class>
    <class kind="class">Stokhos::CrsMatrix</class>
    <class kind="class">Stokhos::CrsProductTensor</class>
    <class kind="class">Stokhos::DefaultMultiply</class>
    <class kind="struct">Stokhos::DefaultPointCompare</class>
    <class kind="class">Stokhos::Dense3Tensor</class>
    <class kind="class">Stokhos::DenseDirectDivisionExpansionStrategy</class>
    <class kind="class">Stokhos::DenseOperator</class>
    <class kind="class">Stokhos::DerivBasis</class>
    <class kind="class">Stokhos::DerivOrthogPolyExpansion</class>
    <class kind="struct">Stokhos::DeviceConfig</class>
    <class kind="struct">Stokhos::DeviceForNode</class>
    <class kind="struct">Stokhos::DeviceForNode2</class>
    <class kind="struct">Stokhos::DeviceForNode2&lt; Kokkos::Compat::KokkosDeviceWrapperNode&lt; Device &gt; &gt;</class>
    <class kind="class">Stokhos::DeviceProp</class>
    <class kind="class">Stokhos::DiagEpetraOp</class>
    <class kind="class">Stokhos::DiagonalOperator</class>
    <class kind="class">Stokhos::DiagPreconditioner</class>
    <class kind="class">Stokhos::DiscretizedStieltjesBasis</class>
    <class kind="class">Stokhos::DivisionExpansionStrategy</class>
    <class kind="struct">Stokhos::ds_array</class>
    <class kind="struct">Stokhos::ds_array&lt; T, true &gt;</class>
    <class kind="class">Stokhos::DynamicStorage</class>
    <class kind="class">Stokhos::DynamicStridedStorage</class>
    <class kind="class">Stokhos::DynamicThreadedStorage</class>
    <class kind="struct">Stokhos::DynArrayTraits</class>
    <class kind="struct">Stokhos::DynArrayTraits&lt; T, device_t, false &gt;</class>
    <class kind="class">Stokhos::EpetraCrsMatrixCloner</class>
    <class kind="class">Stokhos::EpetraMultiVectorCloner</class>
    <class kind="class">Stokhos::EpetraMultiVectorOperator</class>
    <class kind="class">Stokhos::EpetraMultiVectorOperatorOrthogPoly</class>
    <class kind="class">Stokhos::EpetraMultiVectorOrthogPoly</class>
    <class kind="class">Stokhos::EpetraOperatorCloner</class>
    <class kind="class">Stokhos::EpetraOperatorOrthogPoly</class>
    <class kind="class">Stokhos::EpetraSparse3Tensor</class>
    <class kind="class">Stokhos::EpetraVectorCloner</class>
    <class kind="class">Stokhos::EpetraVectorOrthogPoly</class>
    <class kind="struct">Stokhos::error_storage_type_is_not_allocateable</class>
    <class kind="struct">Stokhos::error_storage_type_is_not_resizeable</class>
    <class kind="class">Stokhos::EvenGrowthRule</class>
    <class kind="class">Stokhos::ExpansionFactory</class>
    <class kind="struct">Stokhos::FlatLTBSparse3Tensor</class>
    <class kind="struct">Stokhos::FlatLTBSparse3TensorNode</class>
    <class kind="class">Stokhos::FlatSparse3Tensor</class>
    <class kind="class">Stokhos::FlatSparse3Tensor_kji</class>
    <class kind="class">Stokhos::FloatingPointLess</class>
    <class kind="class">Stokhos::ForUQTKOrthogPolyExpansion</class>
    <class kind="class">Stokhos::FullyAssembledOperator</class>
    <class kind="class">Stokhos::FullyAssembledPreconditioner</class>
    <class kind="class">Stokhos::GaussPattersonExponentialGrowthRule</class>
    <class kind="class">Stokhos::GaussPattersonLegendreBasis</class>
    <class kind="class">Stokhos::GetMeanValsFunc</class>
    <class kind="class">Stokhos::GetMeanValsFunc&lt; Kokkos::View&lt; Sacado::MP::Vector&lt; Storage &gt; *,                                                                                                                                                                                                                                                                                                   Layout, Memory, Device &gt; &gt;</class>
    <class kind="class">Stokhos::GetMeanValsFunc&lt; Kokkos::View&lt; Sacado::UQ::PCE&lt; Storage &gt; *,                                                                                                                                                                                                                                                                                                   Layout, Memory, Device &gt; &gt;</class>
    <class kind="class">Stokhos::GMRESDivisionExpansionStrategy</class>
    <class kind="class">Stokhos::GramSchmidtBasis</class>
    <class kind="class">Stokhos::GrowthRule</class>
    <class kind="class">Stokhos::GSPreconditioner</class>
    <class kind="class">Stokhos::GSReducedPCEBasisBase</class>
    <class kind="class">Stokhos::HermiteBasis</class>
    <class kind="class">Stokhos::HouseTriDiagPCEBasis</class>
    <class kind="class">Stokhos::IdentityGrowthRule</class>
    <class kind="class">Stokhos::IfpackPreconditionerFactory</class>
    <class kind="class">Stokhos::IntegralRank</class>
    <class kind="class">Stokhos::InterlacedOperator</class>
    <class kind="class">Stokhos::InversePreconditioner</class>
    <class kind="struct">Stokhos::is_ViewStorage</class>
    <class kind="struct">Stokhos::is_ViewStorage&lt; ViewStorage&lt; ordinal_t, value_t, static_length, static_stride, device_t &gt; &gt;</class>
    <class kind="struct">Stokhos::IsScalarType</class>
    <class kind="struct">Stokhos::IsScalarType2</class>
    <class kind="struct">Stokhos::IsScalarType2&lt;  double &gt;</class>
    <class kind="struct">Stokhos::IsScalarType2&lt;  float &gt;</class>
    <class kind="struct">Stokhos::IsScalarType2&lt;  int &gt;</class>
    <class kind="struct">Stokhos::IsScalarType2&lt;  long &gt;</class>
    <class kind="struct">Stokhos::IsScalarType&lt;  double &gt;</class>
    <class kind="struct">Stokhos::IsScalarType&lt;  float &gt;</class>
    <class kind="struct">Stokhos::IsScalarType&lt;  int &gt;</class>
    <class kind="struct">Stokhos::IsScalarType&lt;  long &gt;</class>
    <class kind="class">Stokhos::JacobiBasis</class>
    <class kind="class">Stokhos::JacobiPreconditioner</class>
    <class kind="class">Stokhos::KLMatrixFreeOperator</class>
    <class kind="class">Stokhos::KLReducedMatrixFreeOperator</class>
    <class kind="class">Stokhos::KroneckerProductPreconditioner</class>
    <class kind="class">Stokhos::Lanczos</class>
    <class kind="class">Stokhos::LanczosPCEBasis</class>
    <class kind="class">Stokhos::LanczosProjPCEBasis</class>
    <class kind="class">Stokhos::LegendreBasis</class>
    <class kind="class">Stokhos::LexicographicBlockSparse3Tensor</class>
    <class kind="struct">Stokhos::LexicographicTreeBasisNode</class>
    <class kind="class">Stokhos::LexographicLess</class>
    <class kind="class">Stokhos::LinearGrowthRule</class>
    <class kind="class">Stokhos::LinearSparse3Tensor</class>
    <class kind="class">Stokhos::LTBSparse3Tensor</class>
    <class kind="class">Stokhos::MatrixFreeOperator</class>
    <class kind="class">Stokhos::MatrixMarketWriter</class>
    <class kind="class">Stokhos::MatrixMarketWriter&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt; &gt;</class>
    <class kind="class">Stokhos::MeanBasedDivisionExpansionStrategy</class>
    <class kind="class">Stokhos::MeanBasedPreconditioner</class>
    <class kind="class">Stokhos::MeanMultiply</class>
    <class kind="class">Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; **,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           InputDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; **,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           OutputDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;</class>
    <class kind="class">Stokhos::MeanMultiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                                                           &gt;</class>
    <class kind="struct">Stokhos::MemoryTraits</class>
    <class kind="struct">Stokhos::MemoryTraits&lt; Kokkos::HostSpace &gt;</class>
    <class kind="class">Stokhos::MLPreconditionerFactory</class>
    <class kind="class">Stokhos::MonomialGramSchmidtPCEBasis</class>
    <class kind="class">Stokhos::MonomialProjGramSchmidtPCEBasis</class>
    <class kind="class">Stokhos::MonomialProjGramSchmidtPCEBasis2</class>
    <class kind="class">Stokhos::MonoProjPCEBasis</class>
    <class kind="class">Stokhos::MortonZLess</class>
    <class kind="class">Stokhos::MPBlockDiagonalPreconditioner</class>
    <class kind="class">Stokhos::MPInverseModelEvaluator</class>
    <class kind="class">Stokhos::MPMeanBasedPreconditioner</class>
    <class kind="class">Stokhos::MPModelEvaluator</class>
    <class kind="class">Stokhos::MPModelEvaluatorAdapter</class>
    <class kind="class">Stokhos::MPPreconditioner</class>
    <class kind="class">Stokhos::MPPreconditionerFactory</class>
    <class kind="class">Stokhos::MultiIndex</class>
    <class kind="class">Stokhos::Multiply</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt;                  StochasticProductTensor&lt; TensorScalar, TensorType, Kokkos::Cuda &gt;,           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; BlockSpec, MatrixValue, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CooProductTensor&lt; TensorScalar, Kokkos::Cuda, Pack &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; CrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; FlatSparse3Tensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; FlatSparse3Tensor_kji&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LexicographicBlockSparse3Tensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; LinearSparse3Tensor&lt; TensorScalar, Kokkos::Cuda, BlockSize &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; SimpleTiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::OpenMP &gt;, Kokkos::OpenMP &gt;, MatrixValue, Kokkos::OpenMP &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::OpenMP &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::OpenMP &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::Serial &gt;, Kokkos::Serial &gt;, MatrixValue, Kokkos::Serial &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Serial &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Serial &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; StochasticProductTensor&lt; ValueType, CrsProductTensor&lt; ValueType, Kokkos::Threads &gt;, Kokkos::Threads &gt;, MatrixValue, Kokkos::Threads &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Threads &gt;, Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Kokkos::Threads &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt;  BlockCrsMatrix&lt; TiledCrsProductTensor&lt; TensorScalar, Kokkos::Cuda &gt;,                                                                                                                           MatrixScalar, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt;, Kokkos::View&lt; VectorScalar **, Kokkos::LayoutLeft, Kokkos::Cuda &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; BlockCrsMatrix&lt; BlockSpec, MatrixValue, Device &gt;,                                                                                                           Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Device &gt;,                                                                                                           Kokkos::View&lt; VectorValue **, Kokkos::LayoutLeft, Device &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputMultiVectorType,                                                                                                           OutputMultiVectorType,                                                                                                           std::vector&lt; OrdinalType &gt;,                                                                                                           IntegralRank&lt; 2 &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputMultiVectorType,                                                                                                           OutputMultiVectorType,                                                                                                           void,                                                                                                           IntegralRank&lt; 2 &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           InputVectorType,                                                                                                           OutputVectorType,                                                                                                           void,                                                                                                           IntegralRank&lt; 1 &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; CrsMatrix&lt; MatrixValue, Device, Layout &gt;,                                                                                                           std::vector&lt; InputViewType &gt;,                                                                                                           std::vector&lt; OutputViewType &gt;,                                                                                                           void,                                                                                                           IntegralRank&lt; 1 &gt; &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; **,                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; **,                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::MP::Vector&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; InputStorage &gt; *,                                                                                                                                                                                                                           InputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::MP::Vector&lt; OutputStorage &gt; *,                                                                                                                                                                                                                           OutputLayout,                                                                                                                                                                                                                           Device,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; **,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; **,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</class>
    <class kind="class">Stokhos::Multiply&lt; KokkosSparse::CrsMatrix&lt; Sacado::UQ::PCE&lt; MatrixStorage &gt;,                                                                                                                                                                                                                                                                   MatrixOrdinal,                                                                                                                                                                                                                                                                   Device,                                                                                                                                                                                                                                                                   MatrixMemory,                                                                                                                                                                                                                                                                   MatrixSize &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; InputStorage &gt; *,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                                                                   ViewDevice,                                                                                                                                                                                                                           InputMemory &gt;,                                                                                                           Kokkos::View&lt; Sacado::UQ::PCE&lt; OutputStorage &gt; *,                                                                                                                                                                                                                           Kokkos::LayoutLeft,                                                                                                                                                                                                                           ViewDevice,                                                                                                                                                                                                                           OutputMemory &gt;                                                                                                           &gt;</class>
    <class kind="class">Stokhos::MultiplyImpl</class>
    <class kind="class">Stokhos::OneDOrthogPolyBasis</class>
    <class kind="class">Stokhos::Operator</class>
    <class kind="class">Stokhos::OrthogonalizationFactory</class>
    <class kind="class">Stokhos::OrthogPolyApprox</class>
    <class kind="class">Stokhos::OrthogPolyBasis</class>
    <class kind="class">Stokhos::OrthogPolyExpansion</class>
    <class kind="class">Stokhos::OrthogPolyExpansionBase</class>
    <class kind="class">Stokhos::ParallelData</class>
    <class kind="class">Stokhos::PCECovarianceOp</class>
    <class kind="class">Stokhos::PecosOneDOrthogPolyBasis</class>
    <class kind="class">Stokhos::PreconditionerFactory</class>
    <class kind="class">Stokhos::ProductBasis</class>
    <class kind="class">Stokhos::ProductBasisUtils</class>
    <class kind="class">Stokhos::ProductContainer</class>
    <class kind="class">Stokhos::ProductContainerTraits</class>
    <class kind="class">Stokhos::ProductContainerTraits&lt; Epetra_CrsMatrix &gt;</class>
    <class kind="class">Stokhos::ProductContainerTraits&lt; Epetra_MultiVector &gt;</class>
    <class kind="class">Stokhos::ProductContainerTraits&lt; Epetra_Operator &gt;</class>
    <class kind="class">Stokhos::ProductContainerTraits&lt; Epetra_Vector &gt;</class>
    <class kind="class">Stokhos::ProductEpetraMultiVector</class>
    <class kind="class">Stokhos::ProductEpetraMultiVectorOperator</class>
    <class kind="class">Stokhos::ProductEpetraOperator</class>
    <class kind="class">Stokhos::ProductEpetraVector</class>
    <class kind="class">Stokhos::ProductLanczosGramSchmidtPCEBasis</class>
    <class kind="class">Stokhos::ProductLanczosPCEBasis</class>
    <class kind="class">Stokhos::PseudoSpectralOperator</class>
    <class kind="class">Stokhos::PseudoSpectralOperatorFactory</class>
    <class kind="class">Stokhos::PseudoSpectralOrthogPolyExpansion</class>
    <class kind="class">Stokhos::QuadOrthogPolyExpansion</class>
    <class kind="class">Stokhos::Quadrature</class>
    <class kind="class">Stokhos::QuadratureFactory</class>
    <class kind="class">Stokhos::QuadraturePseudoSpectralOperator</class>
    <class kind="class">Stokhos::RCB</class>
    <class kind="class">Stokhos::RecurrenceBasis</class>
    <class kind="class">Stokhos::ReducedBasisFactory</class>
    <class kind="class">Stokhos::ReducedPCEBasis</class>
    <class kind="class">Stokhos::ReducedQuadratureFactory</class>
    <class kind="class">Stokhos::ResponseStatisticModelEvaluator</class>
    <class kind="class">Stokhos::RysBasis</class>
    <class kind="class">Stokhos::SchurPreconditioner</class>
    <class kind="class">Stokhos::SGInverseModelEvaluator</class>
    <class kind="class">Stokhos::SGModelEvaluator</class>
    <class kind="class">Stokhos::SGModelEvaluator_Adaptive</class>
    <class kind="class">Stokhos::SGModelEvaluator_Interlaced</class>
    <class kind="class">Stokhos::SGOperator</class>
    <class kind="class">Stokhos::SGOperatorFactory</class>
    <class kind="class">Stokhos::SGPreconditioner</class>
    <class kind="class">Stokhos::SGPreconditionerFactory</class>
    <class kind="class">Stokhos::SGQuadModelEvaluator</class>
    <class kind="class">Stokhos::SGQuadMPModelEvaluator</class>
    <class kind="class">Stokhos::SimpleTiledCrsProductTensor</class>
    <class kind="class">Stokhos::SingleColumnMultivectorMultiply</class>
    <class kind="class">Stokhos::SmolyakBasis</class>
    <class kind="class">Stokhos::SmolyakPseudoSpectralOperator</class>
    <class kind="class">Stokhos::SmolyakSparseGridQuadrature</class>
    <class kind="class">Stokhos::Sparse3Tensor</class>
    <class kind="struct">Stokhos::SparseArray</class>
    <class kind="class">Stokhos::SparseArrayIterator</class>
    <class kind="class">Stokhos::SparseArrayReverseIterator</class>
    <class kind="class">Stokhos::SparseGridQuadrature</class>
    <class kind="class">Stokhos::SPDDenseDirectDivisionExpansionStrategy</class>
    <class kind="class">Stokhos::StandardStorage</class>
    <class kind="struct">Stokhos::StaticArrayTraits</class>
    <class kind="struct">Stokhos::StaticArrayTraits&lt; T, D, false &gt;</class>
    <class kind="struct">Stokhos::StaticArrayTraits&lt; T, D, true &gt;</class>
    <class kind="class">Stokhos::StaticFixedStandardStorage</class>
    <class kind="class">Stokhos::StaticFixedStorage</class>
    <class kind="class">Stokhos::StaticStandardStorage</class>
    <class kind="class">Stokhos::StaticStorage</class>
    <class kind="class">Stokhos::StieltjesBasis</class>
    <class kind="class">Stokhos::StieltjesGramSchmidtBuilder</class>
    <class kind="class">Stokhos::StieltjesPCEBasis</class>
    <class kind="class">Stokhos::StochasticProductTensor</class>
    <class kind="class">Stokhos::SymmetricDiagonalSpec</class>
    <class kind="class">Stokhos::TensorProductBasis</class>
    <class kind="class">Stokhos::TensorProductElement</class>
    <class kind="class">Stokhos::TensorProductIndexSet</class>
    <class kind="struct">Stokhos::TensorProductPredicate</class>
    <class kind="class">Stokhos::TensorProductPseudoSpectralOperator</class>
    <class kind="class">Stokhos::TensorProductQuadrature</class>
    <class kind="class">Stokhos::TiledCrsProductTensor</class>
    <class kind="class">Stokhos::TinyVec</class>
    <class kind="class">Stokhos::TinyVec&lt; ValueType, N, UseIntrinsics, true &gt;</class>
    <class kind="class">Stokhos::TotalOrderBasis</class>
    <class kind="class">Stokhos::TotalOrderIndexSet</class>
    <class kind="class">Stokhos::TotalOrderLess</class>
    <class kind="struct">Stokhos::TotalOrderPredicate</class>
    <class kind="class">Stokhos::Update</class>
    <class kind="class">Stokhos::UserDefinedQuadrature</class>
    <class kind="class">Stokhos::VectorOrthogPoly</class>
    <class kind="struct">Stokhos::ViewRank</class>
    <class kind="struct">Stokhos::ViewRank&lt; std::vector&lt; T &gt; &gt;</class>
    <class kind="class">Stokhos::ViewStorage</class>
    <class kind="class">Stokhos::WeightedVectorSpace</class>
    <member kind="enumeration">
      <type></type>
      <name>GrowthPolicy</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>af571bcc9a6bf13e521247f9af735202d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>sparse3Tensor2CrsGraph</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a1d719ca2b6168a19a0da643dc9103c7b</anchor>
      <arglist>(const Stokhos::OrthogPolyBasis&lt; ordinal_type, value_type &gt; &amp;basis, const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk, const Epetra_Comm &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Epetra_CrsGraph &gt;</type>
      <name>sparse3Tensor2CrsGraph</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a2935029e8be52222e2b5eeb9be9340eb</anchor>
      <arglist>(const Stokhos::Sparse3Tensor&lt; ordinal_type, value_type &gt; &amp;Cijk, const Epetra_BlockMap &amp;map)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ad43e307223c65de691659e7629e636c3</anchor>
      <arglist>(std::ostream &amp;os, const OneDOrthogPolyBasis&lt; ordinal_type, value_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>aaf1174592bfb7131c8fb9450124fc363</anchor>
      <arglist>(std::ostream &amp;os, const OrthogPolyApprox&lt; ordinal_type, value_type, node_type &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a9c16c40a531eee4e38d60ba431312921</anchor>
      <arglist>(std::ostream &amp;os, const OrthogPolyBasis&lt; ordinal_type, value_type &gt; &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>n_choose_k</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ad70f89ea85637a5dc9f7d31a27648764</anchor>
      <arglist>(const ordinal_type &amp;n, const ordinal_type &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a928f2e271f948b7db721e326e1e7bd91</anchor>
      <arglist>(std::ostream &amp;os, const Quadrature&lt; ordinal_type, value_type &gt; &amp;quad)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>vec_norm_inf</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a47e642c05f87c4b67f6c6af20c19aadd</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_CGS</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>abd78fc3c9830cd53e4483db17605d4ca</anchor>
      <arglist>(ordinal_type k, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_MGS</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a976da99a712c72b48f115a33a2b3cfe8</anchor>
      <arglist>(ordinal_type k, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_MGS2</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>aa27cfde568a781c27567661f4469c708</anchor>
      <arglist>(ordinal_type k, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>QR_Householder</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ac4266f5096a5376b56f41294035ac5dc</anchor>
      <arglist>(ordinal_type k, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CPQR_Householder</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ad1a4e32fa6fe414005b0da2086459694</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>CPQR_Householder3</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a7835553d789acd06de6a3509561424b1</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>CPQR_Householder_threshold</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a3b0aa77a0340112f76ca996a4e64d53e</anchor>
      <arglist>(const scalar_type &amp;rank_threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>CPQR_MGS_threshold</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a1d2ef8273fcb4ad7015db71bf40b455b</anchor>
      <arglist>(const scalar_type &amp;rank_threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>ordinal_type</type>
      <name>CPQR_MGS_reorthog_threshold</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a33aa8a89b7351fc5a86e2432192ce387</anchor>
      <arglist>(const scalar_type &amp;rank_threshold, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::Array&lt; scalar_type &gt; &amp;w, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>cond_R</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ab833cab36711cc6f143a9c254f96524c</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>weightedQROrthogonalizationError</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>aeedf09b409bead5914922fe0408a1af5</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, const Teuchos::Array&lt; scalar_type &gt; &amp;w)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>QROrthogonalizationError</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>ae4a79baff2e138fbfb804a374fa612ee</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>residualQRError</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a79f75e92ef4f2b241c8158929db724f2</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R)</arglist>
    </member>
    <member kind="function">
      <type>scalar_type</type>
      <name>residualCPQRError</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>a5a7b8599407eb1f166d13345e43ec7fe</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Q, const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;R, const Teuchos::Array&lt; ordinal_type &gt; &amp;piv)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>svd</name>
      <anchorfile>namespaceStokhos.html</anchorfile>
      <anchor>abafdfb05537516e2a14564ed26651838</anchor>
      <arglist>(const Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;A, Teuchos::Array&lt; scalar_type &gt; &amp;s, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;U, Teuchos::SerialDenseMatrix&lt; ordinal_type, scalar_type &gt; &amp;Vt)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Stokhos::KL</name>
    <filename>namespaceStokhos_1_1KL.html</filename>
    <class kind="class">Stokhos::KL::ExponentialOneDEigenFunction</class>
    <class kind="class">Stokhos::KL::ExponentialRandomField</class>
    <class kind="struct">Stokhos::KL::OneDEigenPair</class>
    <class kind="class">Stokhos::KL::OneDExponentialCovarianceFunction</class>
    <class kind="struct">Stokhos::KL::ProductEigenPair</class>
    <class kind="struct">Stokhos::KL::ProductEigenPairGreater</class>
  </compound>
  <compound kind="group">
    <name>iterative_solvers</name>
    <title>Iterative Solvers</title>
    <filename>group__iterative__solvers.html</filename>
    <subgroup>monitors</subgroup>
  </compound>
  <compound kind="group">
    <name>monitors</name>
    <title>Monitors</title>
    <filename>group__monitors.html</filename>
    <class kind="class">cusp::default_block_monitor</class>
  </compound>
  <compound kind="group">
    <name>preconditioners</name>
    <title>Preconditioners</title>
    <filename>group__preconditioners.html</filename>
    <class kind="struct">cusp::precond::aggregation::amg_container</class>
    <class kind="struct">cusp::precond::aggregation::amg_container&lt; IndexType, ValueType, cusp::host_memory &gt;</class>
    <class kind="struct">cusp::precond::aggregation::amg_container&lt; IndexType, ValueType, cusp::device_memory &gt;</class>
    <class kind="struct">cusp::precond::aggregation::sa_level</class>
    <class kind="class">cusp::precond::aggregation::block_smoothed_aggregation</class>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Stokhos:  Stochastic Galerkin Uncertainty Quantification Methods</title>
    <filename>index</filename>
    <docanchor file="index" title="Outline">stokhos_outline</docanchor>
    <docanchor file="index" title="Introduction">stokhos_intro</docanchor>
    <docanchor file="index" title="Third-Party Libraries">stokhos_tpl</docanchor>
    <docanchor file="index" title="Fortran UQ Toolkit">stokhos_foruqtk</docanchor>
    <docanchor file="index" title="Dakota">stokhos_dakota</docanchor>
    <docanchor file="index" title="Contacts">stokhos_contacts</docanchor>
  </compound>
</tagfile>
