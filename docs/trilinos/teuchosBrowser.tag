<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>AEvil.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>AEvil_8cpp</filename>
    <includes id="AEvil__decl_8hpp" name="AEvil_decl.hpp" local="yes" imported="no">AEvil_decl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>AEvil.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>AEvil_8hpp</filename>
    <includes id="AEvil__decl_8hpp" name="AEvil_decl.hpp" local="yes" imported="no">AEvil_decl.hpp</includes>
    <includes id="AEvil__def_8hpp" name="AEvil_def.hpp" local="yes" imported="no">AEvil_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>AEvil_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>AEvil__decl_8hpp</filename>
    <includes id="EvilBase__decl_8hpp" name="EvilBase_decl.hpp" local="yes" imported="no">EvilBase_decl.hpp</includes>
    <class kind="class">EvilPack::BEvil</class>
    <class kind="class">EvilPack::AEvil</class>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>AEvil_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>AEvil__def_8hpp</filename>
    <includes id="AEvil__decl_8hpp" name="AEvil_decl.hpp" local="yes" imported="no">AEvil_decl.hpp</includes>
    <includes id="EvilBase_8hpp" name="EvilBase.hpp" local="yes" imported="no">EvilBase.hpp</includes>
    <includes id="BEvil_8hpp" name="BEvil.hpp" local="yes" imported="no">BEvil.hpp</includes>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>AlgorithmA.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FancyOutputting/</path>
    <filename>AlgorithmA_8cpp</filename>
    <includes id="AlgorithmA_8hpp" name="AlgorithmA.hpp" local="yes" imported="no">AlgorithmA.hpp</includes>
    <includes id="Teuchos__VerboseObjectParameterListHelpers_8hpp" name="Teuchos_VerboseObjectParameterListHelpers.hpp" local="yes" imported="no">Teuchos_VerboseObjectParameterListHelpers.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>someDumbFunction</name>
      <anchorfile>AlgorithmA_8cpp.html</anchorfile>
      <anchor>ae1f451086c90b925e1e7bcbcfad946ad</anchor>
      <arglist>(std::ostream &amp;out, const std::string &amp;indentSpacer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>someLessDumbFunction</name>
      <anchorfile>AlgorithmA_8cpp.html</anchorfile>
      <anchor>ac4d308fd9f5d5777ed6634747880ae40</anchor>
      <arglist>(std::ostream &amp;out_arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AlgorithmA.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FancyOutputting/</path>
    <filename>AlgorithmA_8hpp</filename>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <class kind="class">AlgorithmA</class>
    <member kind="function">
      <type>void</type>
      <name>someDumbFunction</name>
      <anchorfile>AlgorithmA_8hpp.html</anchorfile>
      <anchor>ae1f451086c90b925e1e7bcbcfad946ad</anchor>
      <arglist>(std::ostream &amp;out, const std::string &amp;indentSpacer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>someLessDumbFunction</name>
      <anchorfile>AlgorithmA_8hpp.html</anchorfile>
      <anchor>ac4d308fd9f5d5777ed6634747880ae40</anchor>
      <arglist>(std::ostream &amp;out_arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Allocator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/Allocator/</path>
    <filename>Allocator_8cpp</filename>
    <includes id="Teuchos__Details__Allocator_8hpp" name="Teuchos_Details_Allocator.hpp" local="no" imported="no">Teuchos_Details_Allocator.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="no" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Allocator_atexit.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/Allocator/</path>
    <filename>Allocator__atexit_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Details__Allocator_8hpp" name="Teuchos_Details_Allocator.hpp" local="no" imported="no">Teuchos_Details_Allocator.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Allocator__atexit_8cpp.html</anchorfile>
      <anchor>a81ce304348a420752ee080480d2b3095</anchor>
      <arglist>(int, char *[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array_Performance_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Array__Performance__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__TabularOutputter_8hpp" name="Teuchos_TabularOutputter.hpp" local="yes" imported="no">Teuchos_TabularOutputter.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Array_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Array__test_8cpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__LocalTestingHelpers_8hpp" name="Teuchos_LocalTestingHelpers.hpp" local="yes" imported="no">Teuchos_LocalTestingHelpers.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <member kind="function">
      <type>bool</type>
      <name>testArray</name>
      <anchorfile>Array__test_8cpp.html</anchorfile>
      <anchor>a3f7ab70d00bfc8265ebce01fb94deb58</anchor>
      <arglist>(const int n, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testArrayOpaqueWithoutTNT</name>
      <anchorfile>Array__test_8cpp.html</anchorfile>
      <anchor>a2804031d4503d5ce77991cadf5a46d51</anchor>
      <arglist>(const std::string &amp;T_name, const int n, const T &amp;someValue, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testArrayOpaqueWithTNT</name>
      <anchorfile>Array__test_8cpp.html</anchorfile>
      <anchor>a95e5cb1cae98899d673556dd46937b62</anchor>
      <arglist>(const int n, const T &amp;someValue, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Array__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array_UnitTest_helpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Array__UnitTest__helpers_8cpp</filename>
    <includes id="Array__UnitTest__helpers_8hpp" name="Array_UnitTest_helpers.hpp" local="yes" imported="no">Array_UnitTest_helpers.hpp</includes>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>Array__UnitTest__helpers_8cpp.html</anchorfile>
      <anchor>a734d067ab84f2c184dac642041dad153</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array_UnitTest_helpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Array__UnitTest__helpers_8hpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>ArrayUnitTestHelpers</namespace>
    <member kind="function">
      <type>Teuchos::Array&lt; T &gt;</type>
      <name>generateArray</name>
      <anchorfile>namespaceArrayUnitTestHelpers.html</anchorfile>
      <anchor>a4a2206930101e13256de025f6001f5f8</anchor>
      <arglist>(const int n_in)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>namespaceArrayUnitTestHelpers.html</anchorfile>
      <anchor>ad2fde5b923c02868d88c73711b49b70c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Array_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Array__UnitTests_8cpp</filename>
    <includes id="Array__UnitTest__helpers_8hpp" name="Array_UnitTest_helpers.hpp" local="yes" imported="no">Array_UnitTest_helpers.hpp</includes>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>Array__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>Array__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayConversions_UnitTest_helpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayConversions__UnitTest__helpers_8hpp</filename>
    <namespace>ArrayConversionsUnitTestHelpers</namespace>
    <member kind="function">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>generateArrayRcp</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a594cfeb9ad7c42761698b1c8964ddb97</anchor>
      <arglist>(const Teuchos_Ordinal n_in)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>generateArrayRcpGen</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>ad4a32c295aeff89133e55c454513dcdd</anchor>
      <arglist>(const Teuchos_Ordinal n_in)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>testArrayViewInput</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>aa8751d27d721dac7e517de2148b1fcf3</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; const T &gt; &gt; &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testArrayViewOutput</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a62c6b8010774fdd52f79bdb8db8d75e8</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; T &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos_Ordinal</type>
      <name>n</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a8b482416ba121604b13bdbd5ad8be6b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayConversions_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayConversions__UnitTests_8cpp</filename>
    <includes id="Teuchos__ArrayConversions_8hpp" name="Teuchos_ArrayConversions.hpp" local="yes" imported="no">Teuchos_ArrayConversions.hpp</includes>
    <includes id="Teuchos__implicit__cast_8hpp" name="Teuchos_implicit_cast.hpp" local="yes" imported="no">Teuchos_implicit_cast.hpp</includes>
    <includes id="Array__UnitTest__helpers_8hpp" name="Array_UnitTest_helpers.hpp" local="yes" imported="no">Array_UnitTest_helpers.hpp</includes>
    <includes id="ArrayConversions__UnitTest__helpers_8hpp" name="ArrayConversions_UnitTest_helpers.hpp" local="yes" imported="no">ArrayConversions_UnitTest_helpers.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>ArrayConversions__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>ArrayConversions__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayRCP_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayRCP__test_8cpp</filename>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__LocalTestingHelpers_8hpp" name="Teuchos_LocalTestingHelpers.hpp" local="yes" imported="no">Teuchos_LocalTestingHelpers.hpp</includes>
    <member kind="function">
      <type>bool</type>
      <name>test_ArrayRCP_iterators</name>
      <anchorfile>ArrayRCP__test_8cpp.html</anchorfile>
      <anchor>a24818b5bc292c7491328e20142f30da6</anchor>
      <arglist>(const Teuchos::ArrayRCP&lt; T &gt; &amp;ptr, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>test_ArrayRCP</name>
      <anchorfile>ArrayRCP__test_8cpp.html</anchorfile>
      <anchor>a08a1603db0e7f4d57fb201b5700abd87</anchor>
      <arglist>(const Teuchos::ArrayRCP&lt; T &gt; &amp;ptr, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ArrayRCP__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayRCP_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayRCP__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Array__UnitTest__helpers_8hpp" name="Array_UnitTest_helpers.hpp" local="yes" imported="no">Array_UnitTest_helpers.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__implicit__cast_8hpp" name="Teuchos_implicit_cast.hpp" local="yes" imported="no">Teuchos_implicit_cast.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__getRawPtr_8hpp" name="Teuchos_getRawPtr.hpp" local="yes" imported="no">Teuchos_getRawPtr.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>ArrayRCP__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>ArrayRCP__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayView_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayView__test_8cpp</filename>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY_CONST</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a16faa3967480b850d744e47ce9bccbcf</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a271ec441ac1142dfb774bafdc85480c3</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ITER_EQUALITY</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>af3874a65ee5620009bead2b18cbadd8c</anchor>
      <arglist>(iter1, iter2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ARRAY_ELE_EQUALITY</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a89bd8a3f5197e70205549eabe7f0bb39</anchor>
      <arglist>(a, i, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>ae512a9514871155d6ebc86d69d5e7f6b</anchor>
      <arglist>(v1, comp, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE_ARRAYS</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a954afd05d9d3f2d0f874af90984923ea</anchor>
      <arglist>(a1, a2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_THROW</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>abcc027da0e0998e45818e918e91b0510</anchor>
      <arglist>(code, ExceptType )</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_NOTHROW</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a221e1ef2da7f1de85c3e4813062c5815</anchor>
      <arglist>(code )</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testArrayView</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a3c934328d421a9648e754e498c2cda95</anchor>
      <arglist>(const int n, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ArrayView__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ArrayView_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>ArrayView__UnitTests_8cpp</filename>
    <includes id="Array__UnitTest__helpers_8hpp" name="Array_UnitTest_helpers.hpp" local="yes" imported="no">Array_UnitTest_helpers.hpp</includes>
    <includes id="Teuchos__implicit__cast_8hpp" name="Teuchos_implicit_cast.hpp" local="yes" imported="no">Teuchos_implicit_cast.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>ArrayView__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>ArrayView__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>AssertAndThrow_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>AssertAndThrow__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>BEvil.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>BEvil_8cpp</filename>
    <includes id="BEvil__decl_8hpp" name="BEvil_decl.hpp" local="yes" imported="no">BEvil_decl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>BEvil.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>BEvil_8hpp</filename>
    <includes id="BEvil__decl_8hpp" name="BEvil_decl.hpp" local="yes" imported="no">BEvil_decl.hpp</includes>
    <includes id="BEvil__def_8hpp" name="BEvil_def.hpp" local="yes" imported="no">BEvil_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>BEvil_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>BEvil__decl_8hpp</filename>
    <includes id="EvilBase__decl_8hpp" name="EvilBase_decl.hpp" local="yes" imported="no">EvilBase_decl.hpp</includes>
    <class kind="class">EvilPack::AEvil</class>
    <class kind="class">EvilPack::BEvil</class>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>BEvil_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>BEvil__def_8hpp</filename>
    <includes id="BEvil__decl_8hpp" name="BEvil_decl.hpp" local="yes" imported="no">BEvil_decl.hpp</includes>
    <includes id="EvilBase_8hpp" name="EvilBase.hpp" local="yes" imported="no">EvilBase.hpp</includes>
    <includes id="AEvil_8hpp" name="AEvil.hpp" local="yes" imported="no">AEvil.hpp</includes>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>Comm_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Comm/</path>
    <filename>Comm__test_8cpp</filename>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <member kind="function">
      <type>bool</type>
      <name>checkSumResult</name>
      <anchorfile>Comm__test_8cpp.html</anchorfile>
      <anchor>a42faa810a72c9cf518f3ea872d89566c</anchor>
      <arglist>(const Teuchos::Comm&lt; Ordinal &gt; &amp;comm, const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;out, const bool result)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testComm</name>
      <anchorfile>Comm__test_8cpp.html</anchorfile>
      <anchor>a525cc21f6dc8116dfea0847bc0d5e00b</anchor>
      <arglist>(const Teuchos::Comm&lt; Ordinal &gt; &amp;comm, const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>masterTestComm</name>
      <anchorfile>Comm__test_8cpp.html</anchorfile>
      <anchor>a82101c22bb27b5ccd300143ad9e90e1b</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::FancyOStream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Comm__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Common.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>Common_8hpp</filename>
    <includes id="Trilinos__Details__LinearSolver_8hpp" name="Trilinos_Details_LinearSolver.hpp" local="yes" imported="no">Trilinos_Details_LinearSolver.hpp</includes>
    <includes id="Trilinos__Details__LinearSolverFactory_8hpp" name="Trilinos_Details_LinearSolverFactory.hpp" local="yes" imported="no">Trilinos_Details_LinearSolverFactory.hpp</includes>
    <class kind="class">Common::MultiVector</class>
    <class kind="class">Common::Operator</class>
    <class kind="class">Common::LinearSolverTestBase</class>
    <namespace>Common</namespace>
  </compound>
  <compound kind="file">
    <name>Condition_Serialization_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Conditions/</path>
    <filename>Condition__Serialization__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <includes id="Teuchos__ConditionXMLConverterDB_8hpp" name="Teuchos_ConditionXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__StandardConditionXMLConverters_8hpp" name="Teuchos_StandardConditionXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardConditionXMLConverters.hpp</includes>
    <includes id="Teuchos__XMLConditionExceptions_8hpp" name="Teuchos_XMLConditionExceptions.hpp" local="yes" imported="no">Teuchos_XMLConditionExceptions.hpp</includes>
    <includes id="Teuchos__XMLParameterListTestHelpers_8hpp" name="Teuchos_XMLParameterListTestHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListTestHelpers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>NUMBER_PARAM_TYPE_TEST</name>
      <anchorfile>Condition__Serialization__UnitTests_8cpp.html</anchorfile>
      <anchor>acabefc158c00074c77513d5e2eb86634</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>BIN_CON_TEST</name>
      <anchorfile>Condition__Serialization__UnitTests_8cpp.html</anchorfile>
      <anchor>ae7968e9d4eaada6026193167fc2cffba</anchor>
      <arglist>(BinCondition)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a578a055c185e7f09509399ab523b057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>ushort</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b98e8decf2025a17c4bc35d056b1d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>ulong</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a32e632bd910c2d7f22e9b583c1a1270d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaa1c4477b3b8ce501a09af85309bc685</anchor>
      <arglist>(Teuchos_Conditions, StringConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac7eb528b3381be9c754e9972ea71bf57</anchor>
      <arglist>(Teuchos_Conditions, BoolConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ce8302d8a070e04ca4d6e4d80caa83f</anchor>
      <arglist>(Teuchos_Conditions, NumberConditionSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7e9b412e75954722aa2cbd506bd35673</anchor>
      <arglist>(Teuchos_Conditions, BoolLogicConditionSerialization, BinCondition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a49e807e7c573f1e392d0869facb96074</anchor>
      <arglist>(Teuchos_Conditions, NotConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a975f44b3dd4077bbe9f7e4d3f19b2451</anchor>
      <arglist>(Teuchos_Conditions, ConditionSerializationExceptions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Condition_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Conditions/</path>
    <filename>Condition__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa058601b00a727d26ab11b297a1c994b</anchor>
      <arglist>(Teuchos_Conditions, testConditions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0dac549a8ad74768719666df2d543bdc</anchor>
      <arglist>(Teuchos_Conditions, testConditionGetterAndSetters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a398819585e03afef39f104e854f9fd33</anchor>
      <arglist>(Teuchos_Conditions, testConditionException)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ConstNonconstObjectContainer.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/Containers/</path>
    <filename>ConstNonconstObjectContainer_8cpp</filename>
    <includes id="Teuchos__ConstNonconstObjectContainer_8hpp" name="Teuchos_ConstNonconstObjectContainer.hpp" local="yes" imported="no">Teuchos_ConstNonconstObjectContainer.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86b5c1c6fd34b37cc2f83459d68aabb8</anchor>
      <arglist>(ConstNonconstObjectContainer, create)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a33fabcf3dcc7e911ee27a55114499694</anchor>
      <arglist>(ConstNonconstObjectContainer, DefaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa607fd8173fdc28027532e5d81889982</anchor>
      <arglist>(ConstNonconstObjectContainer, NonconstConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7f3a5cffbc22b6266d2def3ceff11c3f</anchor>
      <arglist>(ConstNonconstObjectContainer, ConstConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a970d28dea8b1996303196a6d6576d46a</anchor>
      <arglist>(ConstNonconstObjectContainer, NonconstInitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8f5ef8f63f52b7052b9fa5f63821b505</anchor>
      <arglist>(ConstNonconstObjectContainer, ConstInitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad537aa25100c4d10095ca1cfb87d6618</anchor>
      <arglist>(ConstNonconstObjectContainer, AssignmentFromRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac150286a4b943516bdababec89814c87</anchor>
      <arglist>(ConstNonconstObjectContainer, uninitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af407fab894bbc3a8fde8840995cff452</anchor>
      <arglist>(ConstNonconstObjectContainer, parens)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6024f08325d23ddfc36395c22548d873</anchor>
      <arglist>(ConstNonconstObjectContainer, arrow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a54cb235eca83e93f128a4030e757af71</anchor>
      <arglist>(ConstNonconstObjectContainer, arrowEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae0875b6ff6dfe6c3a0869edbc2e57a10</anchor>
      <arglist>(ConstNonconstObjectContainer, dereference)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7a65ccd0829448d24de8136174f9e17a</anchor>
      <arglist>(ConstNonconstObjectContainer, dereferenceEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab0cb085bf2a42f386900fb517a33308a</anchor>
      <arglist>(ConstNonconstObjectContainer, castToRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2524133be9b6da2ac71bdc02c261905d</anchor>
      <arglist>(ConstNonconstObjectContainer, castFromRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab9ef0413be81c609784f2ba45928117f</anchor>
      <arglist>(ConstNonconstObjectContainer, is_null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af2db1c14ec8810ffeffa8ff221f29a54</anchor>
      <arglist>(ConstNonconstObjectContainer, nonnull)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>custom_validator_xml.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/example/ParameterList/</path>
    <filename>custom__validator__xml_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardValidatorXMLConverters_8hpp" name="Teuchos_StandardValidatorXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardValidatorXMLConverters.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>custom__validator__xml_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/example/CommandLineProcessor/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/CommandLineProcessor/</path>
    <filename>core_2example_2CommandLineProcessor_2cxx__main_8cpp</filename>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__oblackholestream_8hpp" name="Teuchos_oblackholestream.hpp" local="yes" imported="no">Teuchos_oblackholestream.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <member kind="enumeration">
      <type></type>
      <name>ESpeed</name>
      <anchorfile>core_2example_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_SLOW</name>
      <anchorfile>core_2example_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82ac1d4c56fe55e217a20948e5dfdf15469</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_MEDIUM</name>
      <anchorfile>core_2example_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82a51f8ead8afe0763894e52050a22c8fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SPEED_FAST</name>
      <anchorfile>core_2example_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4aff8d4012282dad7889f55e4c81cd82a10e524d624d32a53f007da8032f61f59</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2example_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/example/RefCountPtr/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/RefCountPtr/</path>
    <filename>core_2example_2RefCountPtr_2cxx__main_8cpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <class kind="class">A</class>
    <class kind="class">B1</class>
    <class kind="class">B2</class>
    <class kind="class">C</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2example_2RefCountPtr_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/example/show_stack/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/show_stack/</path>
    <filename>core_2example_2show__stack_2cxx__main_8cpp</filename>
    <includes id="Teuchos__stacktrace_8hpp" name="Teuchos_stacktrace.hpp" local="yes" imported="no">Teuchos_stacktrace.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>g</name>
      <anchorfile>core_2example_2show__stack_2cxx__main_8cpp.html</anchorfile>
      <anchor>a89db5465c8320ec25b0e6401c052b871</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>f</name>
      <anchorfile>core_2example_2show__stack_2cxx__main_8cpp.html</anchorfile>
      <anchor>ad1351d85ffec3c1176dc31d8e8f8e28a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2example_2show__stack_2cxx__main_8cpp.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/test/CommandLineProcessor/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/CommandLineProcessor/</path>
    <filename>core_2test_2CommandLineProcessor_2cxx__main_8cpp</filename>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2test_2CommandLineProcessor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/test/dyn_cast/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/dyn_cast/</path>
    <filename>core_2test_2dyn__cast_2cxx__main_8cpp</filename>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <class kind="class">A</class>
    <class kind="class">B</class>
    <class kind="class">C</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2test_2dyn__cast_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>core/test/Workspace/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/Workspace/</path>
    <filename>core_2test_2Workspace_2cxx__main_8cpp</filename>
    <includes id="Teuchos__Workspace_8hpp" name="Teuchos_Workspace.hpp" local="yes" imported="no">Teuchos_Workspace.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <class kind="class">Transformer</class>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2test_2Workspace_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/example/ParameterList/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/example/ParameterList/</path>
    <filename>parameterlist_2example_2ParameterList_2cxx__main_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2example_2ParameterList_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/Conditions/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Conditions/</path>
    <filename>parameterlist_2test_2Conditions_2cxx__main_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2Conditions_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/Dependencies/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Dependencies/</path>
    <filename>parameterlist_2test_2Dependencies_2cxx__main_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2Dependencies_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/FunctionObjects/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FunctionObjects/</path>
    <filename>parameterlist_2test_2FunctionObjects_2cxx__main_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2FunctionObjects_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/ParameterList/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>parameterlist_2test_2ParameterList_2cxx__main_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <member kind="typedef">
      <type>ParameterList::PrintOptions</type>
      <name>PLPrintOptions</name>
      <anchorfile>parameterlist_2test_2ParameterList_2cxx__main_8cpp.html</anchorfile>
      <anchor>a43cd29f9be83c0cf196eed7f407da2fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print_break</name>
      <anchorfile>parameterlist_2test_2ParameterList_2cxx__main_8cpp.html</anchorfile>
      <anchor>a7904399f9fe6552a72a785db9212df64</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>Plus</name>
      <anchorfile>parameterlist_2test_2ParameterList_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0f4b700700609f5745750c6f3afe2046</anchor>
      <arglist>(double a, double b)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2ParameterList_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/Validators/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Validators/</path>
    <filename>parameterlist_2test_2Validators_2cxx__main_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2Validators_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/XML/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XML/</path>
    <filename>parameterlist_2test_2XML_2cxx__main_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2XML_2cxx__main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>comm/example/TimeMonitor/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/example/TimeMonitor/</path>
    <filename>comm_2example_2TimeMonitor_2cxx__main_8cpp</filename>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>double</type>
      <name>quadFunc</name>
      <anchorfile>comm_2example_2TimeMonitor_2cxx__main_8cpp.html</anchorfile>
      <anchor>adeb5e85841b5339c61063ca0d3702f14</anchor>
      <arglist>(double x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>factFunc</name>
      <anchorfile>comm_2example_2TimeMonitor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a05c79580a600954a18c8fb5fc433a2de</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>comm_2example_2TimeMonitor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Time &gt;</type>
      <name>CompTime</name>
      <anchorfile>comm_2example_2TimeMonitor_2cxx__main_8cpp.html</anchorfile>
      <anchor>ab098bdc1f5a3beabe0e219df7724ff7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Time &gt;</type>
      <name>FactTime</name>
      <anchorfile>comm_2example_2TimeMonitor_2cxx__main_8cpp.html</anchorfile>
      <anchor>a016160ba463278f8a1d7e6255f9b1a10</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>comm/test/Time/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Time/</path>
    <filename>comm_2test_2Time_2cxx__main_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>sqrtTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a58f1cd28ca214dde5e30e89f08c5b51d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>factTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a8e733bf08e3c8818c85da53f624426ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>exceptTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a7cb6a991f18e0df35f892e0fef8666df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>localTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>ad495759083f6166a129594e9a7e290ef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>anotherTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>ab14895b7e155d3c7d00a6fc3e1a08ab1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>yetAnotherTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>ab8594d9a5cd897c42fe9bcaca9f98206</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Time &amp;</type>
      <name>yetOneMoreTimer</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a2a6adacdb3d39ef409e04bebea8be154</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>sqrtFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>aab6d30a86e742c6f2fe98ece217003b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>factFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a05c79580a600954a18c8fb5fc433a2de</anchor>
      <arglist>(int x)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>exceptFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a7adf1485a18e22b286741df75705fa83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>localFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4a1636f56be74dd594eba69c21bcd0a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>anotherFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>adae851299a21fd338325ea31f1460fdd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yetAnotherFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a746d7506aba19706e228a96e22b3a6a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>yetOneMoreFunc</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a794f9303eff3b90e03bf18a0a09cde66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>comm_2test_2Time_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/example/BLAS/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/example/BLAS/</path>
    <filename>numerics_2example_2BLAS_2cxx__main_8cpp</filename>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2example_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/example/DenseMatrix/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/example/DenseMatrix/</path>
    <filename>numerics_2example_2DenseMatrix_2cxx__main_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseSolver_8hpp" name="Teuchos_SerialDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialDenseSolver.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2example_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/example/hilbert/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/example/hilbert/</path>
    <filename>numerics_2example_2hilbert_2cxx__main_8cpp</filename>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>SType1</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a87e18b3a26f2bee3229b8895cfc0e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SType2</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>ad00769ca507c00f51d80e0790a0f43ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OType</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a42efa53eb9a98f96276a71d7c1e1a821</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConstructHilbertMatrix</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a188484299bfb47c7ce1925008e535f1b</anchor>
      <arglist>(TYPE *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConstructHilbertSumVector</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>aa43c74788fe6abae34bcbe1cafa8e537</anchor>
      <arglist>(TYPE *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertHilbertMatrix</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a8b0dcab1ebebe855e4bcdb92ad447c36</anchor>
      <arglist>(TYPE1 *, TYPE2 *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ConvertHilbertSumVector</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a8890cc9f4e8c6c0fc77b379f16b13ffb</anchor>
      <arglist>(TYPE1 *, TYPE2 *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Cholesky</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a5c052a71153274a6aebac4f7f9eb7ee7</anchor>
      <arglist>(TYPE *, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>Solve</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a5b3bba1ff723cbdb481c344f323f45d9</anchor>
      <arglist>(int, TYPE *, TYPE *, TYPE *)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintArrayAsVector</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a409d02106b2d1f773c209d7f00ae837f</anchor>
      <arglist>(TYPE *, int)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintArrayAsMatrix</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a75ca10fa9d6efbe3de834fcdf12688f2</anchor>
      <arglist>(TYPE *, int, int)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2example_2hilbert_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/example/LAPACK/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/example/LAPACK/</path>
    <filename>numerics_2example_2LAPACK_2cxx__main_8cpp</filename>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2example_2LAPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/test/BLAS/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/BLAS/</path>
    <filename>numerics_2test_2BLAS_2cxx__main_8cpp</filename>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>SType1</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a87e18b3a26f2bee3229b8895cfc0e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SType2</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>ad00769ca507c00f51d80e0790a0f43ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OType</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a42efa53eb9a98f96276a71d7c1e1a821</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMIN</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a9801b5e868c57b1cfb694e3e5a3f8a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMAX</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a4ab52d9eeb257c529c0a6d82ef495479</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTGTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a3036e0adc29921305a6a929f544ba5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a838c0618664dfc686e38f6db672bc235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASUMTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>aef4e0377f121f4ed9219e8be1e9714fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AXPYTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a5c8520bd01ebaef9897064dc6faf61ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPYTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>ab6f75d67d9e8c0f746b4a9942aa6cec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOTTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a12f472a2b28adbaff0ae758a10cc7d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IAMAXTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a23c156d481ae8c95e106d607a7d85c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NRM2TESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a925aad9714e7df2ca35f68d3924d5452</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>ac32add93cc94c31d04e5ea0f70992e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMVTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a1469c5b729f471530d60b88eac7dee00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GERTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a9bf84cef90b2fa421836ebf7cea89c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMVTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>afb7733c837fe82ff1b3445283c69745e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMMTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>aefd02a7e135032b6d0a67cf7dc62a258</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMMTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a53f41c7ca9ed51a246b576023cd9cf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYRKTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>ac0536c0fd7ab04c79fb24583eec64ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMMTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a7f46c669d5fa93165d0cbef642c64e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRSMTESTS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a6a24da34756d04e9ac6f7a4ee31a5419</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintVector</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a79255f068bcc0a5a057ef2f268eb8333</anchor>
      <arglist>(TYPE *Vector, OType Size, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintMatrix</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a18be8bfde7412b772737f89bfc16b27f</anchor>
      <arglist>(TYPE *Matrix, OType Rows, OType Columns, OType LDM, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareScalars</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a71b7e0b29c99fb9d7791a520ff3a62f2</anchor>
      <arglist>(TYPE1 Scalar1, TYPE2 Scalar2, TYPE2 Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareVectors</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a6ae257326c71d5c64a58cf9260629e80</anchor>
      <arglist>(TYPE1 *Vector1, TYPE2 *Vector2, OType Size, TYPE2 Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareMatrices</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>ab594beda9d33acbcdc0da22cf3dbf668</anchor>
      <arglist>(TYPE1 *Matrix1, TYPE2 *Matrix2, OType Rows, OType Columns, OType LDM, TYPE2 Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>TYPE2</type>
      <name>ConvertType</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a64e3409f77a32213d354399aac17d0b1</anchor>
      <arglist>(TYPE1, TYPE2)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ESide</type>
      <name>RandomSIDE</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a5e3515baea4fb4ccc8fa4c9ff2163dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EUplo</type>
      <name>RandomUPLO</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>abe06e516c330fb9cd96abd6bece216c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ETransp</type>
      <name>RandomTRANS</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>abe938d21076aacf523d76486f88e5797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EDiag</type>
      <name>RandomDIAG</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a8771023133c6f9bcf821f0b2e9506739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2test_2BLAS_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/test/DenseMatrix/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>numerics_2test_2DenseMatrix_2cxx__main_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>double</type>
      <name>Real</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a445a5f0e2a34c9d97d69a3c2d1957907</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseVector&lt; int, std::complex&lt; Real &gt; &gt;</type>
      <name>DVector</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a05ab39bd55ab86fe50ab8f1a62074a52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseMatrix&lt; int, std::complex&lt; Real &gt; &gt;</type>
      <name>DMatrix</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a671e426381e3fdb0d1f010ee4f55db91</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2test_2DenseMatrix_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/test/LAPACK/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/LAPACK/</path>
    <filename>numerics_2test_2LAPACK_2cxx__main_8cpp</filename>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2test_2LAPACK_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>numerics/test/Polynomial/cxx_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/Polynomial/</path>
    <filename>numerics_2test_2Polynomial_2cxx__main_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>numerics_2test_2Polynomial_2cxx__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_main_band.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>cxx__main__band_8cpp</filename>
    <includes id="Teuchos__SerialBandDenseMatrix_8hpp" name="Teuchos_SerialBandDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialBandDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialBandDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>BDMatrix</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a1eeab9eb654c33baa2f708e0880b0261</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a9c7ae384cf8f2e4188a8056e715542b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a3c45b738d5389cabebf9d7d8f515cccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__main__band_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_main_band_solver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>cxx__main__band__solver_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialBandDenseMatrix_8hpp" name="Teuchos_SerialBandDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialBandDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__SerialBandDenseSolver_8hpp" name="Teuchos_SerialBandDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialBandDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a5977b0fff96ac50348dd3abb9ea51d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>aaa5c54ae6e023acf483f6e21547c8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialBandDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>BDMatrix</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>ad2812146c0a5de7e7007e885b5bf37e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; T &gt;</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>af78e8fc30431c8e98ad37db8ba88d143</anchor>
      <arglist>(std::complex&lt; T &gt;, std::complex&lt; T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DMatrix &gt;</type>
      <name>GetRandomBandedMatrix</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a0f0ee5673fe198043127caa992b2c5cd</anchor>
      <arglist>(int m, int n, int kl, int ku)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DVector &gt;</type>
      <name>GetRandomVector</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>ac9ca9adb7f41bb57e8abd039c9a94502</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>ac910dd32f432c10ef34555b4ff06dcf1</anchor>
      <arglist>(const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector1, const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector2, ScalarTraits&lt; STYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareMatrices</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>acde28f3dac4404099cc4a17807b295b8</anchor>
      <arglist>(const SerialDenseMatrix&lt; OTYPE, STYPE &gt; &amp;Matrix1, const SerialDenseMatrix&lt; OTYPE, STYPE &gt; &amp;Matrix2, ScalarTraits&lt; STYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__main__band__solver_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_main_qr_solver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>cxx__main__qr__solver_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__SerialQRDenseSolver_8hpp" name="Teuchos_SerialQRDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialQRDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a5977b0fff96ac50348dd3abb9ea51d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>aaa5c54ae6e023acf483f6e21547c8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; T &gt;</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>af78e8fc30431c8e98ad37db8ba88d143</anchor>
      <arglist>(std::complex&lt; T &gt;, std::complex&lt; T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DMatrix &gt;</type>
      <name>GetRandomMatrix</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a45db83713c16ec2f8224c09475acffb8</anchor>
      <arglist>(int m, int n)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DVector &gt;</type>
      <name>GetRandomVector</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a77cb5ca9cb34910a21cc78de78c3a805</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>ac910dd32f432c10ef34555b4ff06dcf1</anchor>
      <arglist>(const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector1, const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector2, ScalarTraits&lt; STYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__main__qr__solver_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_main_solver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>cxx__main__solver_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__SerialDenseSolver_8hpp" name="Teuchos_SerialDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a5977b0fff96ac50348dd3abb9ea51d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>aaa5c54ae6e023acf483f6e21547c8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; T &gt;</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>af78e8fc30431c8e98ad37db8ba88d143</anchor>
      <arglist>(std::complex&lt; T &gt;, std::complex&lt; T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DMatrix &gt;</type>
      <name>GetRandomMatrix</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>ac3b7d39c9cde9fceb08c3734102e1d38</anchor>
      <arglist>(int m, int n)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DVector &gt;</type>
      <name>GetRandomVector</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a77cb5ca9cb34910a21cc78de78c3a805</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>ac910dd32f432c10ef34555b4ff06dcf1</anchor>
      <arglist>(const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector1, const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector2, ScalarTraits&lt; STYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__main__solver_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_main_spd_solver.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>cxx__main__spd__solver_8cpp</filename>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__SerialSpdDenseSolver_8hpp" name="Teuchos_SerialSpdDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialSpdDenseSolver.hpp</includes>
    <includes id="Teuchos__SerialQRDenseSolver_8hpp" name="Teuchos_SerialQRDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialQRDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a5977b0fff96ac50348dd3abb9ea51d6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>aaa5c54ae6e023acf483f6e21547c8e0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>SerialSymDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>SDMatrix</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a968006ce242df626f5f66b038188a1ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; T &gt;</type>
      <name>GetRandom</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>af78e8fc30431c8e98ad37db8ba88d143</anchor>
      <arglist>(std::complex&lt; T &gt;, std::complex&lt; T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; SDMatrix &gt;</type>
      <name>GetRandomSpdMatrix</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a053a093f01df8b4a835922f6eee6ed5c</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DMatrix &gt;</type>
      <name>GetRandomMatrix</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>ac3b7d39c9cde9fceb08c3734102e1d38</anchor>
      <arglist>(int m, int n)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; DVector &gt;</type>
      <name>GetRandomVector</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a77cb5ca9cb34910a21cc78de78c3a805</anchor>
      <arglist>(int n)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>ac910dd32f432c10ef34555b4ff06dcf1</anchor>
      <arglist>(const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector1, const SerialDenseVector&lt; OTYPE, STYPE &gt; &amp;Vector2, ScalarTraits&lt; STYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__main__spd__solver_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>example/DenseMatrix/cxx_main_sym.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/example/DenseMatrix/</path>
    <filename>example_2DenseMatrix_2cxx__main__sym_8cpp</filename>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialSpdDenseSolver_8hpp" name="Teuchos_SerialSpdDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialSpdDenseSolver.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>example_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>test/DenseMatrix/cxx_main_sym.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/DenseMatrix/</path>
    <filename>test_2DenseMatrix_2cxx__main__sym_8cpp</filename>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <includes id="Teuchos__SerialDenseHelpers_8hpp" name="Teuchos_SerialDenseHelpers.hpp" local="yes" imported="no">Teuchos_SerialDenseHelpers.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>OTYPE</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a5e781bb3b5c5e90fdd564623c455e9f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STYPE</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a546ad68f1975392fb53928746dc3dd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialSymDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>SDMatrix</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a19d26b24d0a7d72130ea0ff00950a2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseMatrix&lt; OTYPE, STYPE &gt;</type>
      <name>DMatrix</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a9c7ae384cf8f2e4188a8056e715542b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::SerialDenseVector&lt; OTYPE, STYPE &gt;</type>
      <name>DVector</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a3c45b738d5389cabebf9d7d8f515cccf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>PrintTestResults</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a68329ad8048519c4c0028fc9de166c42</anchor>
      <arglist>(std::string, TYPE, TYPE, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>ReturnCodeCheck</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>ac73ad608bfaca4d0cceb620e644e9bc4</anchor>
      <arglist>(std::string, int, int, bool)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>test_2DenseMatrix_2cxx__main__sym_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_tmpl_main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/BLAS/</path>
    <filename>cxx__tmpl__main_8cpp</filename>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>SType1</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a87e18b3a26f2bee3229b8895cfc0e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SType2</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>ad00769ca507c00f51d80e0790a0f43ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OType</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a42efa53eb9a98f96276a71d7c1e1a821</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMIN</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a9801b5e868c57b1cfb694e3e5a3f8a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMAX</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a4ab52d9eeb257c529c0a6d82ef495479</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTGTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a3036e0adc29921305a6a929f544ba5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a838c0618664dfc686e38f6db672bc235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASUMTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>aef4e0377f121f4ed9219e8be1e9714fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AXPYTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a5c8520bd01ebaef9897064dc6faf61ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPYTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>ab6f75d67d9e8c0f746b4a9942aa6cec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOTTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a12f472a2b28adbaff0ae758a10cc7d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IAMAXTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a23c156d481ae8c95e106d607a7d85c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NRM2TESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a925aad9714e7df2ca35f68d3924d5452</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>ac32add93cc94c31d04e5ea0f70992e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMVTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a1469c5b729f471530d60b88eac7dee00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GERTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a9bf84cef90b2fa421836ebf7cea89c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMVTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>afb7733c837fe82ff1b3445283c69745e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMMTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>aefd02a7e135032b6d0a67cf7dc62a258</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMMTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a53f41c7ca9ed51a246b576023cd9cf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYRKTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>ac0536c0fd7ab04c79fb24583eec64ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMMTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a7f46c669d5fa93165d0cbef642c64e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRSMTESTS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a6a24da34756d04e9ac6f7a4ee31a5419</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintVector</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a79255f068bcc0a5a057ef2f268eb8333</anchor>
      <arglist>(TYPE *Vector, OType Size, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintMatrix</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a18be8bfde7412b772737f89bfc16b27f</anchor>
      <arglist>(TYPE *Matrix, OType Rows, OType Columns, OType LDM, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareScalars</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a81f82ee746939340c88fcb6912f45b0a</anchor>
      <arglist>(TYPE1 Scalar1, TYPE2 Scalar2, typename ScalarTraits&lt; TYPE2 &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a3b6e763bb376d70fe42ec4b99e54bfbf</anchor>
      <arglist>(TYPE1 *Vector1, TYPE2 *Vector2, OType Size, typename ScalarTraits&lt; TYPE2 &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareMatrices</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a73dc17a20f86f3dd8268b772affe8c58</anchor>
      <arglist>(TYPE1 *Matrix1, TYPE2 *Matrix2, OType Rows, OType Columns, OType LDM, typename ScalarTraits&lt; TYPE2 &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>TYPE2</type>
      <name>ConvertType</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a64e3409f77a32213d354399aac17d0b1</anchor>
      <arglist>(TYPE1, TYPE2)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ESide</type>
      <name>RandomSIDE</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a5e3515baea4fb4ccc8fa4c9ff2163dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EUplo</type>
      <name>RandomUPLO</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>abe06e516c330fb9cd96abd6bece216c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ETransp</type>
      <name>RandomTRANS</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>abe938d21076aacf523d76486f88e5797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EDiag</type>
      <name>RandomDIAG</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a8771023133c6f9bcf821f0b2e9506739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__tmpl__main_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>cxx_tmpl_main_comp.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/BLAS/</path>
    <filename>cxx__tmpl__main__comp_8cpp</filename>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>SType</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a6caa9f65f80fc336e608c12e48e3eab0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OType1</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aed55206e799ad6e429f575579121c085</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>OType2</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>af40319ea33260008d0eab94e50114d33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMIN</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a9801b5e868c57b1cfb694e3e5a3f8a70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MVMAX</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a4ab52d9eeb257c529c0a6d82ef495479</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALARMAX</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aa769086400d761f17ce27ea514b3ce43</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTGTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a3036e0adc29921305a6a929f544ba5ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ROTTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a838c0618664dfc686e38f6db672bc235</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ASUMTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aef4e0377f121f4ed9219e8be1e9714fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>AXPYTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a5c8520bd01ebaef9897064dc6faf61ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPYTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ab6f75d67d9e8c0f746b4a9942aa6cec1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DOTTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a12f472a2b28adbaff0ae758a10cc7d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IAMAXTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a23c156d481ae8c95e106d607a7d85c84</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NRM2TESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a925aad9714e7df2ca35f68d3924d5452</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCALTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ac32add93cc94c31d04e5ea0f70992e09</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMVTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a1469c5b729f471530d60b88eac7dee00</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GERTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a9bf84cef90b2fa421836ebf7cea89c88</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMVTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>afb7733c837fe82ff1b3445283c69745e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>GEMMTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aefd02a7e135032b6d0a67cf7dc62a258</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYMMTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a53f41c7ca9ed51a246b576023cd9cf54</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SYRKTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ac0536c0fd7ab04c79fb24583eec64ee3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRMMTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a7f46c669d5fa93165d0cbef642c64e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TRSMTESTS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a6a24da34756d04e9ac6f7a4ee31a5419</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TYPE</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a208e6cb670c98a810f7406ca3b67a0b2</anchor>
      <arglist>(TYPE, TYPE)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aab76c09fd7ff63959ab11a21ec1b9ade</anchor>
      <arglist>(int, int)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>aa21aed21604c9290035f8fe4ff7b4ace</anchor>
      <arglist>(double, double)</arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; T &gt;</type>
      <name>GetRandom</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a3f17fb519c8986a7190aa22428ff21d7</anchor>
      <arglist>(std::complex&lt; T &gt;, std::complex&lt; T &gt;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintVector</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ad1102b62a65b61f95a59ca1b5707d691</anchor>
      <arglist>(TYPE *Vector, OTYPE Size, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PrintMatrix</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a55291d41b755b2a15871ea677a5f7780</anchor>
      <arglist>(TYPE *Matrix, OTYPE Rows, OTYPE Columns, OTYPE LDM, std::string Name, bool Matlab=0)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareScalars</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a55305c478062b8c96566011e2e1a83e2</anchor>
      <arglist>(TYPE Scalar1, TYPE Scalar2, typename ScalarTraits&lt; TYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareVectors</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ae6a59da32e8f230192bd8681a20afcd9</anchor>
      <arglist>(TYPE *Vector1, OTYPE1 Size1, TYPE *Vector2, OTYPE2 Size2, typename ScalarTraits&lt; TYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>CompareMatrices</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>ae066efe888b6701be474a596a6179c44</anchor>
      <arglist>(TYPE *Matrix1, OTYPE1 Rows1, OTYPE1 Columns1, OTYPE1 LDM1, TYPE *Matrix2, OTYPE2 Rows2, OTYPE2 Columns2, OTYPE2 LDM2, typename ScalarTraits&lt; TYPE &gt;::magnitudeType Tolerance)</arglist>
    </member>
    <member kind="function">
      <type>OTYPE2</type>
      <name>ConvertType</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a4579a1902aca45bc1bf1d2b9765f81be</anchor>
      <arglist>(OTYPE1 T1, OTYPE2 T2)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ESide</type>
      <name>RandomSIDE</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a5e3515baea4fb4ccc8fa4c9ff2163dca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EUplo</type>
      <name>RandomUPLO</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>abe06e516c330fb9cd96abd6bece216c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ETransp</type>
      <name>RandomTRANS</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>abe938d21076aacf523d76486f88e5797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::EDiag</type>
      <name>RandomDIAG</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a8771023133c6f9bcf821f0b2e9506739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>cxx__tmpl__main__comp_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>default_blas_rot.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/BLAS/</path>
    <filename>default__blas__rot_8cpp</filename>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="no" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="no" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="no" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="no" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__oblackholestream_8hpp" name="Teuchos_oblackholestream.hpp" local="no" imported="no">Teuchos_oblackholestream.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>default__blas__rot_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultMpiComm_TagTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Comm/</path>
    <filename>DefaultMpiComm__TagTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__DefaultMpiComm_8hpp" name="Teuchos_DefaultMpiComm.hpp" local="yes" imported="no">Teuchos_DefaultMpiComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>std</namespace>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestd.html</anchorfile>
      <anchor>ab05b7b1449414a9ce0e6568a15738d9f</anchor>
      <arglist>(ostream &amp;os, const pair&lt; Packet, Packet &gt; &amp;arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>DefaultMpiComm_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Comm/</path>
    <filename>DefaultMpiComm__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__DefaultSerialComm_8hpp" name="Teuchos_DefaultSerialComm.hpp" local="yes" imported="no">Teuchos_DefaultSerialComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <class kind="struct">Teuchos::ScalarTraits&lt; std::pair&lt; Packet, Packet &gt; &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; std::pair&lt; Packet, Packet &gt;, ConvertToPacket &gt;</class>
    <namespace>std</namespace>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_TEMPLATE_2_INSTANT_COMPLEX_FLOAT</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a6a1e693ff28266786c7c2ba71cdf457f</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, ORDINAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_TEMPLATE_2_INSTANT_COMPLEX_DOUBLE</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a7ac55436c8179e5bf1f6443de18bb2f2</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, ORDINAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL_PACKET</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a60dc5774476a3dcfc56fd36619d4d626</anchor>
      <arglist>(ORDINAL, PACKET)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL_QD</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>ad6b77cbb8feb3d5f7704e52e0572df38</anchor>
      <arglist>(ORDINAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL_PAIROFPACKETS</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a67f93bf461c0c9bbae887f0c610b8483</anchor>
      <arglist>(ORDINAL, PAIROFPACKETS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL_SUBCOMMUNICATORS</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a1b9bc234cbf023ed96bad1b4e8f5f9b6</anchor>
      <arglist>(ORDINAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>a717ac25ef1a6c298d4479a5816e6d8eb</anchor>
      <arglist>(ORDINAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ORDINAL_WITH_PAIRS_AND_QD</name>
      <anchorfile>DefaultMpiComm__UnitTests_8cpp.html</anchorfile>
      <anchor>ab787a5a0a8b7b9b1f46423e0d1538cb5</anchor>
      <arglist>(ORDINAL)</arglist>
    </member>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestd.html</anchorfile>
      <anchor>ab05b7b1449414a9ce0e6568a15738d9f</anchor>
      <arglist>(ostream &amp;os, const pair&lt; Packet, Packet &gt; &amp;arg)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dependencies_SerializationTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Dependencies/</path>
    <filename>Dependencies__SerializationTests_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__DependencyXMLConverterDB_8hpp" name="Teuchos_DependencyXMLConverterDB.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardDependencyXMLConverters_8hpp" name="Teuchos_StandardDependencyXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardDependencyXMLConverters.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLParameterListTestHelpers_8hpp" name="Teuchos_XMLParameterListTestHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListTestHelpers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>BASIC_DEPENDENCY_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>ac440e7509848701b8f0077da745bdde5</anchor>
      <arglist>(DEPENDENCY, DEPTYPE, NUM_DEPENDEES, NUM_DEPENDENTS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a88fe543abfd78de3abfa83f072902612</anchor>
      <arglist>(DEPENDENCY, DEPENDENT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>VERIFY_DEPENDEE</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>aaf8d88a5df2e7a05382c9a105930190b</anchor>
      <arglist>(DEPENDENCY, DEPENDEE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CREATE_DEPENDEE</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a889c767550508066fa2db2ffdf92b859</anchor>
      <arglist>(POSTFIX, VALUE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CREATE_DEPENDENT</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a9b89e8469fb30150de2ba20537e0776d</anchor>
      <arglist>(POSTFIX, VALUE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>EXCEPTION_TEST_BOILERPLATE</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a9933e0971146f567ad35839e463e15fe</anchor>
      <arglist>(DEPENDEE_VAL, DEPENDENT_VAL)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CONVERT_DEP_TO_XML</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>acab443a8f33aed6173cc48bde0916ccf</anchor>
      <arglist>(DEPENDENCY)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TOO_MANY_DEPENDEE_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a23d18d78537fe32898e46197850c8571</anchor>
      <arglist>(DEPENDENCY)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>COPY_DEPTAG_WITHOUT_CHILD</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>aa14334c45f71b24f004386b7628f4632</anchor>
      <arglist>(TAG, CHILDTAG, NEWTAG)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>INSERT_VALIDATOR_TO_MAPS</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a549d240cef7d43f8d8f9d62ba58076de</anchor>
      <arglist>(VALIDATOR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUMBER_VIS_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a3aa7cce1a8ba8b65bbb312b00dd75fdd</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ArrayModifierTest</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>ae455f998444e0b5700aa2fe5df66f08e</anchor>
      <arglist>(DEPENDENCYTYPE, ARRAY_TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_ARRAY_LENGTH_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a543e4893dae0c59864314531e332281d</anchor>
      <arglist>(DependeeType, DependentType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NUM_ARRAY_LENGTH_TEST_GROUP</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>ad3d6982e1db5ce2f5d0a5fd329cce5dd</anchor>
      <arglist>(DependeeType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWODROW_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a915f60db2915e0f9c2c6de3906037a03</anchor>
      <arglist>(DependeeType, DependentType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWODROW_TEST_GROUP</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a08c1feb9ca7b80d536db65dc3e9239e8</anchor>
      <arglist>(DependeeType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWODCOL_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>ab047c73f1031dcfed6612e6089e482dc</anchor>
      <arglist>(DependeeType, DependentType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TWODCOL_TEST_GROUP</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>a5b09b514f8ae9cabe787ae329d67d929</anchor>
      <arglist>(DependeeType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>RANGE_VALIDATOR_TEST</name>
      <anchorfile>Dependencies__SerializationTests_8cpp.html</anchorfile>
      <anchor>aa4934fd13a7d57ed94f6930c84b90850</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>myString_t</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3c1f9118cb0e724a11c4cb9d4e0f508a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aef6ee4691244089377fced8469312de9</anchor>
      <arglist>(Teuchos_Dependencies, SerializationTestMacros)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af5c0447eec5bc66117dfed97ac55cca3</anchor>
      <arglist>(Teuchos_Dependencies, StringVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aad8b09ed0691e8fc2745e83dc2c21f87</anchor>
      <arglist>(Teuchos_Dependencies, BoolVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a74a7e6c3bd389c804015c8e10fe8b432</anchor>
      <arglist>(Teuchos_Dependencies, NumberVisualDepSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1a0a7c299ba31069e9d8be8789bb3ccd</anchor>
      <arglist>(Teuchos_Dependencies, ConditionVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayModifierTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af6ecd3641cf63eccda6a081639a9cd8c</anchor>
      <arglist>(NumberArrayLengthDependency, Array)                   ArrayModifierTest(TwoDRowDependency</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayModifierTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aae0f3620d7dcc63df796b608b12f9ff6</anchor>
      <arglist>(TwoDColDependency, TwoDArray)                   TEUCHOS_UNIT_TEST(Teuchos_Dependencies</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3234767934c41464f0fa452eb4e67511</anchor>
      <arglist>(dependee1,&quot;val1&quot;)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0d929be38bc1983a0131fac48d81de04</anchor>
      <arglist>(dependee2,&quot;val2&quot;)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8df4059596402d7b3d5608052597b404</anchor>
      <arglist>(dependent1, 2.0)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a83ca1b1433430ce68d8557797194a97f</anchor>
      <arglist>(dependent2, 3.0)</arglist>
    </member>
    <member kind="function">
      <type>dependentList</type>
      <name>insert</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae4088e4caac018b9978141a77ef1a8d9</anchor>
      <arglist>(myDepList.getEntryRCP(dependent1))</arglist>
    </member>
    <member kind="function">
      <type>dependentList</type>
      <name>insert</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae645bb8b80d8f521a58dd8ee94f2c9ab</anchor>
      <arglist>(myDepList.getEntryRCP(dependent2))</arglist>
    </member>
    <member kind="function">
      <type>myDepSheet</type>
      <name>addDependency</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a96d2a9b91b8c32534d60bc3dead78bb2</anchor>
      <arglist>(basicStringValiDep)</arglist>
    </member>
    <member kind="function">
      <type>myDepSheet</type>
      <name>addDependency</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aeaaa4e24ac63e663896a4c7fa4721d43</anchor>
      <arglist>(complexStringValiDep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BASIC_DEPENDENCY_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4772ce393c585ba4efeeb84a9fb99bde</anchor>
      <arglist>(readinDep1, StringValidatorDependency, 1, 1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDEE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8c921cbc908866832cf9831e2506c3ac</anchor>
      <arglist>(readinDep1, readinDependee1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a38ea376f60dc8e3400497058c56fbf13</anchor>
      <arglist>(readinDep1, readinDependent1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BASIC_DEPENDENCY_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2ac2eb24b2d8733c9e9e1423a91d1384</anchor>
      <arglist>(readinDep2, StringValidatorDependency, 1, 2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDEE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a10b54c69b04ec11eadb808f3c8ee7203</anchor>
      <arglist>(readinDep2, readinDependee2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af40901d641ffcbcdfc114e480d622be6</anchor>
      <arglist>(readinDep2, readinDependent1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a52a70eaa35f4fcd871eafbc9c9f3c1d8</anchor>
      <arglist>(readinDep2, readinDependent2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a518193176c269b6565bb86cb57d7eabd</anchor>
      <arglist>(castedDep1-&gt;getValuesAndValidators().size()==2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6bfb55e653cede21b40e586cc715da6f</anchor>
      <arglist>(castedDep2-&gt;getValuesAndValidators().size()==2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a808721cbfd9cf706a388ce681c0cd3eb</anchor>
      <arglist>(castedDep1-&gt;getDefaultValidator().is_null())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3682a70f5a0830ba92f2e8ea20493f6e</anchor>
      <arglist>(nonnull(castedDep2-&gt;getDefaultValidator()))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1e345920881c7e2afff8b07904e2869e</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep1-&gt;getValuesAndValidators().find(&quot;val1&quot;) -&gt;second, true) -&gt;getMax(), double1Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a502b96f39e291b48f0a242c689d45219</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getValuesAndValidators().find(&quot;val1&quot;) -&gt;second, true) -&gt;getMax(), double1Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a719d01e0f18f86631505ac8c7da9304c</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep1-&gt;getValuesAndValidators().find(&quot;val2&quot;) -&gt;second, true) -&gt;getMax(), double2Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a687d0cb18a9e11eb9092b135d0b5b436</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getValuesAndValidators().find(&quot;val2&quot;) -&gt;second, true) -&gt;getMax(), double2Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a19000dfb222063703344e210f2d921b0</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getDefaultValidator(), true) -&gt;getMax(), defaultVali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93cfce76de8d9b693c63be891c70386</anchor>
      <arglist>(Teuchos_Dependencies, BoolValidatorDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a966f4aaa9a97a71e2086e6ce5c19b9fa</anchor>
      <arglist>(Teuchos_Dependencies, RangeValidatorDepSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a356e01e1a71874a9e28227d21cc89c20</anchor>
      <arglist>(Teuchos_Dependencies, DependencySerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afebcae0d9ba657c35cbe303dc30236fe</anchor>
      <arglist>(Teuchos_Dependencies, NumberVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab196534e4107a103f132fa4de4179d91</anchor>
      <arglist>(Teuchos_Dependencies, BoolVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa5c6a4f18fc26343631e644717f11940</anchor>
      <arglist>(Teuchos_Dependencies, StringVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a382a4d3af676ff169b98bb7e83a936d8</anchor>
      <arglist>(Teuchos_Dependencies, ConditionVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3f70bd444846190255d9115889a3ebfa</anchor>
      <arglist>(Teuchos_Dependencies, BoolValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adf91fccb00f1348dbd4f77005513ecee</anchor>
      <arglist>(Teuchos_Dependencies, StringValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a222733e22ae39fcb70b2b618aefdca89</anchor>
      <arglist>(Teuchos_Dependencies, RangeValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a96b6da5bea013e78be0ea7be98c9e36c</anchor>
      <arglist>(Teuchos_Dependencies, NumArrayLengthDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a544cb37b497680195498d6f810c6e77d</anchor>
      <arglist>(Teuchos_Dependencies, DepSheetTests)</arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>StringValidatorDepSerialization</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a142583e4d30e9abeca011f4c9f3cfb40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependee2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a45a36f533015aa9b5923081c938dba6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependent1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa642e652bb46c800c8811a66dce64547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependent2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acbbe7b0458812725f9b8dc2391da141a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterList</type>
      <name>myDepList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a40c52c2e5e3a6040f58339a44cc9c569</anchor>
      <arglist>(&quot;String Vali Dep List&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; DependencySheet &gt;</type>
      <name>myDepSheet</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afa9a389e6a902cae9e19e20292862b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>double1Vali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9cd6803aee6315b84355c060a4e7b260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>double2Vali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69c6bd67e485f5518db74d0245c6f497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>defaultVali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5fcb5a7df12f957eb442c9e49ee3f35b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringValidatorDependency::ValueToValidatorMap</type>
      <name>valuesAndValidators</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a492d8e9c132761622d063c63af17b7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>basicStringValiDep</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7cf3b0eb6f68b5eaddcbb7407d3cbbb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Dependency::ParameterEntryList</type>
      <name>dependentList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2036a57196105a4a5bb3fb0dd84d54c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>complexStringValiDep</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ace2c9331583d7ace8083d738c790556e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; DependencySheet &gt;</type>
      <name>readInDepSheet</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7daf1a1f8d159eb49352a5dc7a714936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>XMLParameterListWriter</type>
      <name>plWriter</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac354c9c7db51f02797fc603a2eba7d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>XMLObject</type>
      <name>xmlOut</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe6be0b624eb9cee14780e788acb5a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>out&lt;&lt; xmlOut.toString();RCP&lt; ParameterList &gt;</type>
      <name>readInList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5c67218288063432c14e29595e4cd0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependee1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a90c8e19e8a0e5107952594aa4a4e3c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependent1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24ccd0223a691080793b402455468b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependee2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9437a6fcfaaf4ad8cb79eed5a6a0a583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependent2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abf5dc2b9a4515983ba97ab2e709e9e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Dependency &gt;</type>
      <name>readinDep1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acbb858ac5d984c0fc7fe475f3da01cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Dependency &gt;</type>
      <name>readinDep2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69033e4d140e6612336fbb7746a04b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>castedDep1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a92b9724ac3703606aa4b2a298e2847d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>castedDep2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a478c740fa7e59217fc5407a97ba99b15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Dependencies_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Dependencies/</path>
    <filename>Dependencies__UnitTests_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ade3136538635ffb5b50ce5ea0bce6f31</anchor>
      <arglist>(Teuchos_Dependencies, testValiDeps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2856ac452203356ddcad608ccb1a8067</anchor>
      <arglist>(Teuchos_Dependencies, testVisualDeps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9b972848d6774311ac91d2999429e825</anchor>
      <arglist>(Teuchos_Dependencies, testTwoDRowDependency)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a09b0d93a5acb82a5de55e4d2e19c4303</anchor>
      <arglist>(Teuchos_Dependencies, testTwoDColDependency)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae04a917766214ba83240b1814828eb77</anchor>
      <arglist>(Teuchos_Dependencies, testArrayLengthDep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a81ad34b3b21bf998be7240bdf20e1b53</anchor>
      <arglist>(Teuchos_Dependencies, testDepExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6728d3eea3d676198815a19463d855fa</anchor>
      <arglist>(Teuchos_Dependencies, DepSheetTest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>EvilBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>EvilBase_8cpp</filename>
    <includes id="EvilBase__decl_8hpp" name="EvilBase_decl.hpp" local="yes" imported="no">EvilBase_decl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>EvilBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>EvilBase_8hpp</filename>
    <includes id="EvilBase__decl_8hpp" name="EvilBase_decl.hpp" local="yes" imported="no">EvilBase_decl.hpp</includes>
    <includes id="EvilBase__def_8hpp" name="EvilBase_def.hpp" local="yes" imported="no">EvilBase_def.hpp</includes>
  </compound>
  <compound kind="file">
    <name>EvilBase_decl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>EvilBase__decl_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">EvilPack::EvilBase</class>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>EvilBase_def.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>EvilBase__def_8hpp</filename>
    <includes id="EvilBase__decl_8hpp" name="EvilBase_decl.hpp" local="yes" imported="no">EvilBase_decl.hpp</includes>
    <includes id="AEvil_8hpp" name="AEvil.hpp" local="yes" imported="no">AEvil.hpp</includes>
    <includes id="BEvil_8hpp" name="BEvil.hpp" local="yes" imported="no">BEvil.hpp</includes>
    <namespace>EvilPack</namespace>
  </compound>
  <compound kind="file">
    <name>evilMain.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/example/ExplicitInstantiation/four_files/</path>
    <filename>evilMain_8cpp</filename>
    <includes id="EvilBase_8hpp" name="EvilBase.hpp" local="yes" imported="no">EvilBase.hpp</includes>
    <includes id="AEvil_8hpp" name="AEvil.hpp" local="yes" imported="no">AEvil.hpp</includes>
    <includes id="BEvil_8hpp" name="BEvil.hpp" local="yes" imported="no">BEvil.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>testEvil</name>
      <anchorfile>evilMain_8cpp.html</anchorfile>
      <anchor>a7f9d6c05b241fb5da36d92033d6c151c</anchor>
      <arglist>(const T &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>evilMain_8cpp.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Failing_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>Failing__UnitTest_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>FancyOutputting_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FancyOutputting/</path>
    <filename>FancyOutputting__test_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="AlgorithmA_8hpp" name="AlgorithmA.hpp" local="yes" imported="no">AlgorithmA.hpp</includes>
    <class kind="class">TestVerboseObjectBaseInitialization</class>
    <member kind="function">
      <type>void</type>
      <name>doAlgorithmStuff</name>
      <anchorfile>FancyOutputting__test_8cpp.html</anchorfile>
      <anchor>a6338ee38e710ccc5271803fc2ad4337c</anchor>
      <arglist>(Teuchos::ParameterList *algoParams=0)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>FancyOutputting__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static TestVerboseObjectBaseInitialization</type>
      <name>testVerboseObjectBaseInitialization</name>
      <anchorfile>FancyOutputting__test_8cpp.html</anchorfile>
      <anchor>a8eff4d431d17c6099220b51e23d1a996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FilteredIterator_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/FilteredIterator/</path>
    <filename>FilteredIterator__UnitTests_8cpp</filename>
    <includes id="Teuchos__FilteredIterator_8hpp" name="Teuchos_FilteredIterator.hpp" local="yes" imported="no">Teuchos_FilteredIterator.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af1786434af5e043e0d5413c397bbc320</anchor>
      <arglist>(FilteredIterator, default_construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af249f8da862c8e04e6b8b91e715ff9b7</anchor>
      <arglist>(FilteredIterator, construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a09ee3c92d96511ef20e1b2eacd306376</anchor>
      <arglist>(FilteredIterator, deref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab6d48982893b662ee8918aa9dbd5411c</anchor>
      <arglist>(FilteredIterator, member_access)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1ae87d3a59aebfba9a119b0b4377630e</anchor>
      <arglist>(FilteredIterator, copy_construct_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8cf4ca65d0aa8cf0de90f08b3dfc5c82</anchor>
      <arglist>(FilteredIterator, copy_construct_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af4f2cd219733c8087a1a91e3a20615d8</anchor>
      <arglist>(FilteredIterator, assign_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abceb50782edd06e7a35436daa8156b1b</anchor>
      <arglist>(FilteredIterator, assign_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad70bccf3e5813dcd46e6b81cbc3527f5</anchor>
      <arglist>(FilteredIterator, equality_operators_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad9e9a43c66cec633bcc6039f2a236f3b</anchor>
      <arglist>(FilteredIterator, equality_operators_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9de4a686d2f7c5072b676ccaedc12bde</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36a221d22f723cc1a5f9064b86bd3e5c</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1403a72540245fd00f1a4b6d07593267</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab35e8f106f8332a2dfeaf6b8bac781bd</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad2e21ebbba0b2422558c4e6503253333</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a217e5d76799ce9c802ed5cb774856221</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ea0e370496982ecff448b306c91cbb6</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aab8bea31683f92d7a17ad5f3a322eb74</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab3166dfea1aef07fa60a60b79751d982</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9cdd1b6fc13826b334783f33ad562e89</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4e33286b9486ee2d918d28e721fc3375</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1e24114ef53c8b906789b723413a56fe</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_filter_odd)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>float128.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/ScalarTraits/</path>
    <filename>float128_8cpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>FunctionObject_Serialization_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FunctionObjects/</path>
    <filename>FunctionObject__Serialization__UnitTests_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <includes id="Teuchos__FunctionObjectXMLConverterDB_8hpp" name="Teuchos_FunctionObjectXMLConverterDB.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverterDB.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af8fbed22a50dd64c3ec0e3ff3ca72155</anchor>
      <arglist>(Teuchos_Functions, SubtractionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2aeb80a5b669a0f2e503085f21ebfb3a</anchor>
      <arglist>(Teuchos_Functions, AdditionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa2e034683948a8c41aba30e25706a65f</anchor>
      <arglist>(Teuchos_Functions, MultiplicationTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac85226b64bb8c22aad18516d7ffa147</anchor>
      <arglist>(Teuchos_Functions, DivisionTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FunctionObject_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/FunctionObjects/</path>
    <filename>FunctionObject__UnitTests_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af8fbed22a50dd64c3ec0e3ff3ca72155</anchor>
      <arglist>(Teuchos_Functions, SubtractionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2aeb80a5b669a0f2e503085f21ebfb3a</anchor>
      <arglist>(Teuchos_Functions, AdditionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa2e034683948a8c41aba30e25706a65f</anchor>
      <arglist>(Teuchos_Functions, MultiplicationTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac85226b64bb8c22aad18516d7ffa147</anchor>
      <arglist>(Teuchos_Functions, DivisionTests)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GCC_CheckedSTL_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>GCC__CheckedSTL__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>GetBaseObjVoidPtr_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>GetBaseObjVoidPtr__UnitTests_8cpp</filename>
    <includes id="Teuchos__getBaseObjVoidPtr_8hpp" name="Teuchos_getBaseObjVoidPtr.hpp" local="yes" imported="no">Teuchos_getBaseObjVoidPtr.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a026ae8c7d736af2617adf0311da2bebb</anchor>
      <arglist>(GetBaseObjVoidPtr, polymorphicClasses)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aafa922af07733e069abbeee8c998c986</anchor>
      <arglist>(GetBaseObjVoidPtr, nonPolymorphicClasses)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad838260d9f267f2018489a357e235c5d</anchor>
      <arglist>(GetBaseObjVoidPtr, nonPolymorphicBuiltInTypes)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>GlobalMPISession_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>GlobalMPISession__UnitTests_8cpp</filename>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>void</type>
      <name>globalReduceSuccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8425c5bc4900700509f4966aa62a1d35</anchor>
      <arglist>(bool &amp;success, FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae2224d8ff064701b4f0c23782b90a104</anchor>
      <arglist>(GlobalMPISession, basic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1dcace28a7a287c28226dcdeeca8b229</anchor>
      <arglist>(GlobalMPISession, barrier)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee9e07a2257a209a8aae96136575d914</anchor>
      <arglist>(GlobalMPISession, sum)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad60f0b286a318937a65a895822187f1e</anchor>
      <arglist>(GlobalMPISession, allGather)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Hashtable_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>Hashtable__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__Hashtable_8hpp" name="Teuchos_Hashtable.hpp" local="yes" imported="no">Teuchos_Hashtable.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>Hashtable__UnitTests_8cpp.html</anchorfile>
      <anchor>a381446e780207fd7b4d85d68633da759</anchor>
      <arglist>(K, V)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>index.doc</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/browser/doc/</path>
    <filename>index_8doc</filename>
  </compound>
  <compound kind="file">
    <name>Int_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>Int__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>main_8cpp</filename>
    <includes id="Common_8hpp" name="Common.hpp" local="yes" imported="no">Common.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>testSolvers</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>a2041e991f1565c9260833eca363b26fb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>ae66f6b31b5ad750f1fe042a706a4e3d4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MatrixMarket_Raw_InOutTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/MatrixMarket/</path>
    <filename>MatrixMarket__Raw__InOutTest_8cpp</filename>
    <includes id="Teuchos__MatrixMarket__Raw__Checker_8hpp" name="Teuchos_MatrixMarket_Raw_Checker.hpp" local="no" imported="no">Teuchos_MatrixMarket_Raw_Checker.hpp</includes>
    <includes id="Teuchos__MatrixMarket__Raw__Reader_8hpp" name="Teuchos_MatrixMarket_Raw_Reader.hpp" local="no" imported="no">Teuchos_MatrixMarket_Raw_Reader.hpp</includes>
    <includes id="Teuchos__MatrixMarket__Raw__Writer_8hpp" name="Teuchos_MatrixMarket_Raw_Writer.hpp" local="no" imported="no">Teuchos_MatrixMarket_Raw_Writer.hpp</includes>
    <includes id="Teuchos__MatrixMarket__SetScientific_8hpp" name="Teuchos_MatrixMarket_SetScientific.hpp" local="no" imported="no">Teuchos_MatrixMarket_SetScientific.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="no" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="no" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__oblackholestream_8hpp" name="Teuchos_oblackholestream.hpp" local="no" imported="no">Teuchos_oblackholestream.hpp</includes>
    <includes id="Teuchos__DefaultSerialComm_8hpp" name="Teuchos_DefaultSerialComm.hpp" local="no" imported="no">Teuchos_DefaultSerialComm.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="no" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>MatrixMarket__Raw__InOutTest_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ObjectBuilder_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ObjectBuilder/</path>
    <filename>ObjectBuilder__UnitTests_8cpp</filename>
    <includes id="Teuchos__ObjectBuilder_8hpp" name="Teuchos_ObjectBuilder.hpp" local="yes" imported="no">Teuchos_ObjectBuilder.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__ParameterListAcceptorHelpers_8hpp" name="Teuchos_ParameterListAcceptorHelpers.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptorHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <class kind="class">Teuchos::Foo</class>
    <class kind="class">Teuchos::FooA</class>
    <class kind="class">Teuchos::FooB</class>
    <class kind="class">Teuchos::FooC</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab08defe757e5a9163fadc3abc0fe4d51</anchor>
      <arglist>(Teuchos_ObjectBuilder, constructor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aca6659afffe33f27bcead7f4140dcb58</anchor>
      <arglist>(Teuchos_ObjectBuilder, setNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a95f3467170e59dff61fb6b68d69107bf</anchor>
      <arglist>(Teuchos_ObjectBuilder, setObjectFactory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa7b582ee425fffc30a94a7f6872f6ac9</anchor>
      <arglist>(Teuchos_ObjectBuilder, setObjectFactory_bad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30c1dacc4b523d36b033086f637654b</anchor>
      <arglist>(Teuchos_ObjectBuilder, getObjectName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46b3294d2b59c88cdfe1bffd57ceaded</anchor>
      <arglist>(Teuchos_ObjectBuilder, create)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4acd82acc93ca8b23456c9758034aefa</anchor>
      <arglist>(Teuchos_ObjectBuilder, setParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84355a93ee043fe81c6b9ff0e65fabc0</anchor>
      <arglist>(Teuchos_ObjectBuilder, getParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2f3a8ecab6934da2fb9891c5b912730a</anchor>
      <arglist>(Teuchos_ObjectBuilder, getNonconstParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab57640162c79ed6733c42619ce897d77</anchor>
      <arglist>(Teuchos_ObjectBuilder, unsetParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a4e24ff5f077e085ef1d87cb298c5b3</anchor>
      <arglist>(Teuchos_ObjectBuilder, getValidParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a896848bf63a0e625c765a867ec556012</anchor>
      <arglist>(Teuchos_ObjectBuilder, usedParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a35384e5e6503978051b8601cc7f3a9d8</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withOneUsePL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48384505063ff9c26ff276f973dabc49</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withMultipleUsePL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b27020d93f05a9a02334a62b4e93629</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withoutPL)</arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ObjectType_name</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a435bfa73b9c3faed4bedc54fd137d7a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PackageA.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageA_8cpp</filename>
    <includes id="PackageA_8hpp" name="PackageA.hpp" local="yes" imported="no">PackageA.hpp</includes>
    <class kind="class">A::RegisterFactoryA</class>
    <namespace>A</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INSTMACRO</name>
      <anchorfile>PackageA_8cpp.html</anchorfile>
      <anchor>a8142b3c03841624fa12f9e5cc804b8c9</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PackageA.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageA_8hpp</filename>
    <includes id="Common_8hpp" name="Common.hpp" local="yes" imported="no">Common.hpp</includes>
    <class kind="class">A::Solver1</class>
    <class kind="class">A::Solver2</class>
    <class kind="class">A::FactoryA</class>
    <namespace>A</namespace>
  </compound>
  <compound kind="file">
    <name>PackageB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageB_8cpp</filename>
    <includes id="PackageB_8hpp" name="PackageB.hpp" local="yes" imported="no">PackageB.hpp</includes>
    <class kind="class">B::RegisterFactoryB</class>
    <namespace>B</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INSTMACRO</name>
      <anchorfile>PackageB_8cpp.html</anchorfile>
      <anchor>a8142b3c03841624fa12f9e5cc804b8c9</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PackageB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageB_8hpp</filename>
    <includes id="Common_8hpp" name="Common.hpp" local="yes" imported="no">Common.hpp</includes>
    <class kind="class">B::Solver3</class>
    <class kind="class">B::Solver4</class>
    <class kind="class">B::FactoryB</class>
    <namespace>B</namespace>
  </compound>
  <compound kind="file">
    <name>PackageC.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageC_8cpp</filename>
    <includes id="PackageC_8hpp" name="PackageC.hpp" local="yes" imported="no">PackageC.hpp</includes>
    <class kind="class">C::RegisterFactoryC</class>
    <namespace>C</namespace>
    <member kind="define">
      <type>#define</type>
      <name>INSTMACRO</name>
      <anchorfile>PackageC_8cpp.html</anchorfile>
      <anchor>a8142b3c03841624fa12f9e5cc804b8c9</anchor>
      <arglist>(SCALAR)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>PackageC.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/example/SolverFactory/</path>
    <filename>PackageC_8hpp</filename>
    <includes id="Common_8hpp" name="Common.hpp" local="yes" imported="no">Common.hpp</includes>
    <class kind="class">C::Solver5</class>
    <class kind="class">C::Solver6</class>
    <class kind="class">C::FactoryC</class>
    <namespace>C</namespace>
  </compound>
  <compound kind="file">
    <name>ParameterEntry_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>ParameterEntry__UnitTest_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a0a9863405ea7c51f2e884139fc5cc1</anchor>
      <arglist>(Teuchos_ParameterEntry, testTypeFunctions)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ParameterList_SerializationTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>ParameterList__SerializationTest_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryXMLConverters_8hpp" name="Teuchos_StandardParameterEntryXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryXMLConverters.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardValidatorXMLConverters_8hpp" name="Teuchos_StandardValidatorXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardValidatorXMLConverters.hpp</includes>
    <includes id="Teuchos__StringInputStream_8hpp" name="Teuchos_StringInputStream.hpp" local="yes" imported="no">Teuchos_StringInputStream.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <includes id="Teuchos__XMLParameterListTestHelpers_8hpp" name="Teuchos_XMLParameterListTestHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListTestHelpers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>ADD_TYPE_PARAMETER</name>
      <anchorfile>ParameterList__SerializationTest_8cpp.html</anchorfile>
      <anchor>aa90d6e2be8173b30384db94e8ae162fb</anchor>
      <arglist>(T, VALUE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADD_ARRAY_TYPE_PARAMETER</name>
      <anchorfile>ParameterList__SerializationTest_8cpp.html</anchorfile>
      <anchor>ac5926b12675b700e5c0fa3aaeef11d79</anchor>
      <arglist>(T, VALUE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ADD_TYPE_AND_ARRAY_TYPE_PARAMETER</name>
      <anchorfile>ParameterList__SerializationTest_8cpp.html</anchorfile>
      <anchor>aef6451fb8b3bb1a96ae9695560467ab9</anchor>
      <arglist>(T, VALUE)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7aaa226d7023e6484a61472e893a2073</anchor>
      <arglist>(Teuchos_ParameterList, ADD_TYPE_AND_ARRAY_TYPE_PARAMETER)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a34a65782f318d29ef86321bc328833c4</anchor>
      <arglist>(Teuchos_ParameterList, parameterEntryXMLConverters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69622077710b13854c5f1ce335143d98</anchor>
      <arglist>(Teuchos_ParameterList, parameterEntryConverterExceptions)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>g_arraySize</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adab7c12a0ef2dcd5d365f2d121f5b7bc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ParameterList_UnitTest_Parallel.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/ParameterList/</path>
    <filename>ParameterList__UnitTest__Parallel_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLParameterListHelpers_8hpp" name="Teuchos_XMLParameterListHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaac05438e2b20a5ac766f180127ff4b5</anchor>
      <arglist>(Teuchos_ParameterList, xmlUpdateAndBroadcast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a15312f337b249035f2693ef18fa2895a</anchor>
      <arglist>(Teuchos_ParameterList, xmlUpdateAndBroadcastNoOverWrite)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ParameterList_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>ParameterList__UnitTests_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>ParameterList</type>
      <name>createMainPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa412d328a47b9c24b38bd4a1d6295ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ParameterList</type>
      <name>createValidMainPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae349214a1b1ca588fc214cbf113bab31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a54f18e4b7db4b4841ff69ec7419b225b</anchor>
      <arglist>(ParameterList, construct_default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3eb7097b3160f962114cd28dbde4a02a</anchor>
      <arglist>(ParameterList, construct_withName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab49c44968916bdcd3e5adc535723ef3f</anchor>
      <arglist>(ParameterList, createParameterList_empty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a15d88ec03e4afac00c16cdadcc74ef06</anchor>
      <arglist>(ParameterList, createParameterList_withName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5bde39629f13472e60335b5527d46cd6</anchor>
      <arglist>(ParameterList, set_get_int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad5fd7cd614123bfb1ff9e4777b8f3ede</anchor>
      <arglist>(ParameterList, param_isParameter_isSublist_isType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac4b9c97a002aca991cb00d31bed845dd</anchor>
      <arglist>(ParameterList, sublist_isParameter_isSublist_isType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb0aa71df091caad8fb92bc156ca86f7</anchor>
      <arglist>(ParameterList, set_doc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7880408efc2d85823902ea897b98d74d</anchor>
      <arglist>(ParameterList, set_doc_validator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afeb8325e24b158788121ef834f2b40bf</anchor>
      <arglist>(ParameterList, set_invalid_int_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae52f2b78b928e6dacdec5591804aa658</anchor>
      <arglist>(ParameterList, set_invalid_int_second)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0a098cb6f21857a38a921ee54dcda76b</anchor>
      <arglist>(ParameterList, set_get_entry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6d219f31e7bbcc85514265b457186654</anchor>
      <arglist>(ParameterList, set_int_twice_keep_validator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad45e7c7e54c6d80cdfeb9182860bb402</anchor>
      <arglist>(ParameterList, set_get_char_str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4392bdd9d7437c2270ea1c93d4fb0596</anchor>
      <arglist>(ParameterList, set_get_string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a04a63f8cba113668fc72a7b6708924dc</anchor>
      <arglist>(ParameterList, get_nonexisting_param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46b7818f53ea790fe7328c3b65022af0</anchor>
      <arglist>(ParameterList, get_existing_incorrect_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84526b2ee2d6988fa6b564907b4e9a18</anchor>
      <arglist>(ParameterList, getPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af96f70dafd5fb4183cd6104ff7362ece</anchor>
      <arglist>(ParameterList, getEntryRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1b5dee46c02a73548b99fa0a617ae343</anchor>
      <arglist>(ParameterList, get_default_then_change)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a63486d0554bd7919bbdf1127a77446c0</anchor>
      <arglist>(ParameterList, remove_1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86782a1874c8eb6a3235514ec0b14f2b</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aab2e4e23a4098fef2763b53dd7cd7671</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_docString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a26eaa3904a522eab9b30f0e97f8875f0</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_mustAlreadyExist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a10f38f964185992bcb89d69bda9c1b65</anchor>
      <arglist>(ParameterList, get_existing_sublist_nonsublist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0dd8c8c2042512e13de17588ac96aff</anchor>
      <arglist>(ParameterList, get_existing_sublist_nonconst)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2bdcb578f3f89d088f48686e32b1eb45</anchor>
      <arglist>(ParameterList, get_existing_sublist_const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a384d518bb2464da8436717ee32d30dd7</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac9ea4a680de02c2cfb3e53595d26f281</anchor>
      <arglist>(ParameterList, get_existing_sublist_const_nonsublist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa0b47ef9bf4ea3ca7dbd97d813ff2d15</anchor>
      <arglist>(ParameterList, sublist_add_2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad6d0850058f69aacedfb6f5fa84bbeb9</anchor>
      <arglist>(ParameterList, sublist_scenario_1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adab6f75a8cfd2fa63fe02790c12a9c2c</anchor>
      <arglist>(ParameterList, copy_constructor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7ed51f622879cbef738a8d3d1c5f2a0e</anchor>
      <arglist>(ParameterList, assignment_operator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad447917a485ec3d5f3b73a439c9135e5</anchor>
      <arglist>(ParameterList, iterator_params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abf4c1c9529d92cab7958978ab210576d</anchor>
      <arglist>(ParameterList, iterator_params_sublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abcab1de5ffd755e16b070ffdb0c86591</anchor>
      <arglist>(ParameterList, operatorEqualityWithEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9fadb85f5500c60fff8dee5c181bcbca</anchor>
      <arglist>(ParameterList, operatorEqualityDifferentSublistNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9158681c63058127eb113cd159f09e9d</anchor>
      <arglist>(ParameterList, operatorEqualityDifferentLengths)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa211da9bf6a28a575080cec53c8056f7</anchor>
      <arglist>(ParameterList, haveSameValuesWithEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a68e5c133db9d146a6bc9dfa80a0ca429</anchor>
      <arglist>(ParameterList, haveSameValuesDifferentSublistNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36b71cfe6eec24d853dd68299cbc1a12</anchor>
      <arglist>(ParameterList, validateAgainstSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9b6610a8881152a23bd12bfb899bf97a</anchor>
      <arglist>(ParameterList, validateParametersAndSetDefaults)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa574513b4b6135564b0e4212edff6047</anchor>
      <arglist>(ParameterList, getIntegralValue_int)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ParameterList_XMLDuplicateSublists.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>ParameterList__XMLDuplicateSublists_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8d6105adcd460c51cc7efda298a358ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae43a208f99bce6d40cd11a5aaff5e8c4</anchor>
      <arglist>(ParameterList, ExistingSublistIsOkay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a709147d8fbf86bb71e972e3861ca217f</anchor>
      <arglist>(ParameterList, XMLDuplicatedSublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ffd9b0d9c7e740a826655877920b111</anchor>
      <arglist>(XMLParameterListReader, XMLDuplicatedSublistsThrowsError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a672081b28db3e8e6b0971a16a5cda6af</anchor>
      <arglist>(XMLParameterListReader, XMLDuplicatedSublistsBackwardsCompatible)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>ParameterList__XMLDuplicateSublists_8cpp.html</anchorfile>
      <anchor>ae80f820219e45772366a2a68de6a54c4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Polynomial_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/test/Polynomial/</path>
    <filename>Polynomial__UnitTest_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__Polynomial_8hpp" name="Teuchos_Polynomial.hpp" local="yes" imported="no">Teuchos_Polynomial.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>a8a6248b2feed38d71cc74773169fb602</anchor>
      <arglist>(Teuchos_Polynomial, create)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>a38b45e6445d1a40eb1978189ce90a784</anchor>
      <arglist>(Teuchos_Polynomial, degrees)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>a8593ec88c74f6ffac1661ae979a3b439</anchor>
      <arglist>(Teuchos_Polynomial, coeffs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>ac700384a77b3173420b7ab30e8cebfb1</anchor>
      <arglist>(Teuchos_Polynomial, coeffsPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>a116befcae667d01944e836d089e739e8</anchor>
      <arglist>(Teuchos_Polynomial, RCPcoeffs)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Polynomial__UnitTest_8cpp.html</anchorfile>
      <anchor>ac144b83f9db44bd889f7c37e2d9359e5</anchor>
      <arglist>(Teuchos_Polynomial, evaluate)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ptr_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Ptr__test_8cpp</filename>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Ptr__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Ptr_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Ptr__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Range1D_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>Range1D__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__Range1D_8hpp" name="Teuchos_Range1D.hpp" local="yes" imported="no">Teuchos_Range1D.hpp</includes>
  </compound>
  <compound kind="file">
    <name>RCP_ForwardDeclUnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCP__ForwardDeclUnitTests_8cpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>DummyNS</namespace>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad16fc2055934ce032d9cc102ab42264d</anchor>
      <arglist>(DummyNS::UndefinedType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCP_Performance_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCP__Performance__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__TabularOutputter_8hpp" name="Teuchos_TabularOutputter.hpp" local="yes" imported="no">Teuchos_TabularOutputter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>RCP_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCP__test_8cpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__oblackholestream_8hpp" name="Teuchos_oblackholestream.hpp" local="yes" imported="no">Teuchos_oblackholestream.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>SHOW_RUN_TIME_ERROR_VIRTUAL_BASE_CLASS</name>
      <anchorfile>RCP__test_8cpp.html</anchorfile>
      <anchor>a4e508b62a2bf3267583c4422149e6322</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHOW_RUN_TIME_ERROR_VIRTUAL_BASE_CLASS_PRINT</name>
      <anchorfile>RCP__test_8cpp.html</anchorfile>
      <anchor>a2b33ed7626059da798290bd52f5378d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>RCP__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCP_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCP__UnitTests_8cpp</filename>
    <includes id="TeuchosCore__ConfigDefs_8hpp" name="TeuchosCore_ConfigDefs.hpp" local="yes" imported="no">TeuchosCore_ConfigDefs.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__getBaseObjVoidPtr_8hpp" name="Teuchos_getBaseObjVoidPtr.hpp" local="yes" imported="no">Teuchos_getBaseObjVoidPtr.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>RCP__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>RCP__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCPNodeHandle_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCPNodeHandle__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <class kind="class">Teuchos::MockRCP</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>RCPNodeHandle__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>RCPNodeHandle__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>basicRCPNodeNoAlloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46455d6045092efbfadb5bd3efa8d511</anchor>
      <arglist>(T *p, const bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>basicRCPNode</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe6047e078d17782d704d066016d42f2</anchor>
      <arglist>(const bool has_ownership, T **p_out=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRCPNode</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a34a52ad9755a97f8b9b34703411174d2</anchor>
      <arglist>(RCPNode **node)</arglist>
    </member>
    <member kind="function">
      <type>RCPNodeHandle</type>
      <name>basicRCPNodeHandle</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a198f3ecf3325a3f4fa4b18ffc3a3322a</anchor>
      <arglist>(const bool has_ownership, T **p_out=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8d6105adcd460c51cc7efda298a358ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab3b72226a34262ec0edf4e993e344155</anchor>
      <arglist>(RCPNodeHandle, assignSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8de70bc42bb091f81571db49c80cbae0</anchor>
      <arglist>(RCPNodeHandle, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac2df677c9000a71932c4f0ffb604999</anchor>
      <arglist>(RCPNodeHandle, basicConstruct_owns_mem, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af89a8e725cc3f19c9fb0336d8694ee69</anchor>
      <arglist>(RCPNodeHandle, basicConstruct_no_owns_mem, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aacb487036d4b38099dbac35e2c50191d</anchor>
      <arglist>(RCPNodeHandle, weakPtr_basic_1, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad41322d315b7dbba7109f8d552399a39</anchor>
      <arglist>(RCPNodeHandle, weakPtr_basic_2, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a49ff1d9cf5dd953ce5d37bcbc1bc2cb9</anchor>
      <arglist>(RCPNodeHandle, copyConstruct, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb80e00e44389fa5af5d9311a4972d3d</anchor>
      <arglist>(RCPNodeHandle, assignmentOperator, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a620801152f74bc2d38926f7b103deef6</anchor>
      <arglist>(RCPNodeHandle, extraData_basic, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8be04199c2988e11cc93d2114119d787</anchor>
      <arglist>(RCPNodeHandle, extraData_basic_const, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a60920cc3e0c8a6d728866221d500b6ed</anchor>
      <arglist>(RCPNodeHandle, extraData_failed, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afd92a0ea690d30b1e0f789b803001330</anchor>
      <arglist>(RCPNodeHandle, extraData_failed_const, T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>RCPNodeTracer_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>RCPNodeTracer__UnitTests_8cpp</filename>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>reduce.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Comm/</path>
    <filename>reduce_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="function">
      <type>bool</type>
      <name>testReduceSum</name>
      <anchorfile>reduce_8cpp.html</anchorfile>
      <anchor>aa58f19454e2d1883e6799eb5a2311aab</anchor>
      <arglist>(bool &amp;success, std::ostream &amp;out, const int root, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>reduce_8cpp.html</anchorfile>
      <anchor>a047c6a816eabe6aca42483de01e2dacb</anchor>
      <arglist>(Comm, ReduceSum, PacketType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>ScalarTraits_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/ScalarTraits/</path>
    <filename>ScalarTraits__test_8cpp</filename>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__TypeTraits_8hpp" name="Teuchos_TypeTraits.hpp" local="yes" imported="no">Teuchos_TypeTraits.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>ScalarTraits__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>scatter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Comm/</path>
    <filename>scatter_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="function">
      <type>bool</type>
      <name>testScatter</name>
      <anchorfile>scatter_8cpp.html</anchorfile>
      <anchor>a6acd4314c089a46fa49703c64aac1fc6</anchor>
      <arglist>(bool &amp;success, std::ostream &amp;out, const int root, const Teuchos::Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>scatter_8cpp.html</anchorfile>
      <anchor>a14fc54233902b1b45411b76dbee3426f</anchor>
      <arglist>(Comm, Scatter, PacketType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimpleObjectDB_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>SimpleObjectDB__UnitTests_8cpp</filename>
    <includes id="Teuchos__SimpleObjectDB_8hpp" name="Teuchos_SimpleObjectDB.hpp" local="yes" imported="no">Teuchos_SimpleObjectDB.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>SimpleObjectDB__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_PAIR</name>
      <anchorfile>SimpleObjectDB__UnitTests_8cpp.html</anchorfile>
      <anchor>aeede8a34059c1871f8d93ad3c629a9e5</anchor>
      <arglist>(T1, T2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_PAIR_SYM</name>
      <anchorfile>SimpleObjectDB__UnitTests_8cpp.html</anchorfile>
      <anchor>a3aa9c5c5c31c941a4d93025013c3241a</anchor>
      <arglist>(T1, T2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimpleObjTbl_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>SimpleObjTbl__UnitTests_8cpp</filename>
    <includes id="Teuchos__SimpleObjectTable_8hpp" name="Teuchos_SimpleObjectTable.hpp" local="yes" imported="no">Teuchos_SimpleObjectTable.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>DEBUG_UNIT_TEST_GROUP</name>
      <anchorfile>SimpleObjTbl__UnitTests_8cpp.html</anchorfile>
      <anchor>aceb69c03cffafa893fe32ffdc2749f3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>SimpleObjTbl__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_PAIR</name>
      <anchorfile>SimpleObjTbl__UnitTests_8cpp.html</anchorfile>
      <anchor>aeede8a34059c1871f8d93ad3c629a9e5</anchor>
      <arglist>(T1, T2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_PAIR_SYM</name>
      <anchorfile>SimpleObjTbl__UnitTests_8cpp.html</anchorfile>
      <anchor>a3aa9c5c5c31c941a4d93025013c3241a</anchor>
      <arglist>(T1, T2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimpleThrowFunctions.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>SimpleThrowFunctions_8cpp</filename>
    <includes id="SimpleThrowFunctions_8hpp" name="SimpleThrowFunctions.hpp" local="yes" imported="no">SimpleThrowFunctions.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>func_a</name>
      <anchorfile>SimpleThrowFunctions_8cpp.html</anchorfile>
      <anchor>a0f7edd10a46a6952e8ade2ebb720d57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_b</name>
      <anchorfile>SimpleThrowFunctions_8cpp.html</anchorfile>
      <anchor>a11444c1625337496514a97149db41938</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SimpleThrowFunctions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>SimpleThrowFunctions_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="function">
      <type>void</type>
      <name>func_a</name>
      <anchorfile>SimpleThrowFunctions_8hpp.html</anchorfile>
      <anchor>a0f7edd10a46a6952e8ade2ebb720d57d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>func_b</name>
      <anchorfile>SimpleThrowFunctions_8hpp.html</anchorfile>
      <anchor>a11444c1625337496514a97149db41938</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>SolverFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/test/SolverFactory/</path>
    <filename>SolverFactory_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>someCFunc.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/CWrapperSupport/</path>
    <filename>someCFunc_8cpp</filename>
    <includes id="Teuchos__CWrapperSupport__Cpp_8hpp" name="Teuchos_CWrapperSupport_Cpp.hpp" local="yes" imported="no">Teuchos_CWrapperSupport_Cpp.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>someCFunc</name>
      <anchorfile>someCFunc_8cpp.html</anchorfile>
      <anchor>adf49a4bec215b853539fcb8cb3db30e8</anchor>
      <arglist>(int input, int *ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>someCFunc.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/CWrapperSupport/</path>
    <filename>someCFunc_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>someCFunc</name>
      <anchorfile>someCFunc_8h.html</anchorfile>
      <anchor>adf49a4bec215b853539fcb8cb3db30e8</anchor>
      <arglist>(int input, int *ierr)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StringIndexedOrderedValueObjectContainer_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>StringIndexedOrderedValueObjectContainer__UnitTests_8cpp</filename>
    <includes id="Teuchos__StringIndexedOrderedValueObjectContainer_8hpp" name="Teuchos_StringIndexedOrderedValueObjectContainer.hpp" local="yes" imported="no">Teuchos_StringIndexedOrderedValueObjectContainer.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a576a6a6f7c709f32cdb3fb5e85d64ff2</anchor>
      <arglist>(OrdinalIndex, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7dfa574fd71acff4ef4722d4b869b167</anchor>
      <arglist>(OrdinalIndex, construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7095fd8620dfacf427cd66312e69295b</anchor>
      <arglist>(KeyObjectPair, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab03d8f4105268ff85c94e8db4ada4dca</anchor>
      <arglist>(KeyObjectPair, construct_default_isActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3558c4267abd28af4886aaedc963d194</anchor>
      <arglist>(KeyObjectPair, makeInvalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a91525ae755a4a2bd663742278a59ca8b</anchor>
      <arglist>(KeyObjectPair, construct_set_isActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa444b0aadd14cc0bbfe61825fca7e794</anchor>
      <arglist>(KeyObjectPair, copyConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adbb1df237c97647daa2c920fd1e72395</anchor>
      <arglist>(KeyObjectPair, assign)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5ba16971b3e130f47e6a797aec09a6fe</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a370c3e39e7cb63fa2c4061c4e238828c</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basic_set_get)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7eb9de446c5886c0bc88411811788605</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, set_two_keep_ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d14489e2200b767150d97536677adf9</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjOrdinalIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab8183f44accba2ed01b116b7c45f8800</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, set_and_set_again)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a297aa9780db23a19137c077037bbaa55</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basicNonconstIterators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1f110d6356489b5cbcb02fbc9f13ade5</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basicConstIterators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5208bd4b60e8a22544c76726fb616dd2</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5f4b7fb02937d0942c5039d68af226dd</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae54e1a7f2b8374f248a3de8b859566be</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_middle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aec9c8847b98a3c96570f7ae29f6a190d</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_middle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5dc676d2cd11d1414593e03813b75748</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1eee1fee41870bdf98dfdf56dad60c94</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1ccd0611ad70b7a6a8d7174f7879a0ff</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getNonconstObjPtr_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2e974804bae2fa38047010aaea2271c7</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjPtr_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86a1c573c4a2caec156661c458f7b0d3</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7fd98e12409e2b263f0e8d5bc7a2ca12</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getNonconstObjPtr_key_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af26ce1f88bdbec7156ae440fe0bdba87</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjPtr_key_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a81e492e2c8b4bfc2c261fb44fb02d1a8</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_invalid)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TabularOutputter_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/TabularOutputter/</path>
    <filename>TabularOutputter__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__TabularOutputter_8hpp" name="Teuchos_TabularOutputter.hpp" local="yes" imported="no">Teuchos_TabularOutputter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>TemplateFunc_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>TemplateFunc__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <member kind="function">
      <type>T</type>
      <name>someFunc</name>
      <anchorfile>TemplateFunc__UnitTests_8cpp.html</anchorfile>
      <anchor>aa5905a2b9842779e344b7a86864d6b1d</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestClasses.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>TestClasses_8cpp</filename>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <class kind="struct">UndefinedType</class>
    <class kind="struct">UndefinedType2</class>
    <member kind="function">
      <type>void</type>
      <name>deallocA</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>a67a513fa23a57f8d3aed1fd40eda441a</anchor>
      <arglist>(A *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocHandleA</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>afc2807eb2dc9bfe46e491c7bc1c96406</anchor>
      <arglist>(A **handle)</arglist>
    </member>
    <member kind="function">
      <type>Opaque_handle</type>
      <name>createOpaque</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>a23fcf87a504fb1385ffae24502abd7be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOpaqueValue</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>a3e76430318c6b76bd26b4026436bc8a5</anchor>
      <arglist>(Opaque_handle opaque)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyOpaque</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>a0bb504f4d334a194560393c7de062bb3</anchor>
      <arglist>(Opaque_handle *opaque)</arglist>
    </member>
    <member kind="function">
      <type>Opaque2_handle</type>
      <name>createOpaque2</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>aa39e12c8dde9eef051438fce84d7afa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOpaque2Value</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>a9d648bffb7754fa9299283b2e88cfa76</anchor>
      <arglist>(Opaque2_handle opaque)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyOpaque2</name>
      <anchorfile>TestClasses_8cpp.html</anchorfile>
      <anchor>aa44a3954e514982ffdbdffb6cd3572b9</anchor>
      <arglist>(Opaque2_handle *opaque)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestClasses.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>TestClasses_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">A</class>
    <class kind="class">B1</class>
    <class kind="class">B2</class>
    <class kind="class">C</class>
    <class kind="class">Get_A_f_return</class>
    <class kind="class">D</class>
    <class kind="class">E</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; UndefinedType2 &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; Opaque3_handle &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="typedef">
      <type>UndefinedType *</type>
      <name>Opaque_handle</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>abed172e800bb533a732fb9d764bafb4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UndefinedType2 *</type>
      <name>Opaque2_handle</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a178567673bbcb63c0f8cafb6439bc29c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>UndefinedType3 *</type>
      <name>Opaque3_handle</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a1bef153155bfc28502ed227f49678a27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocA</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a67a513fa23a57f8d3aed1fd40eda441a</anchor>
      <arglist>(A *ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocHandleA</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>afc2807eb2dc9bfe46e491c7bc1c96406</anchor>
      <arglist>(A **handle)</arglist>
    </member>
    <member kind="function">
      <type>Opaque_handle</type>
      <name>createOpaque</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a23fcf87a504fb1385ffae24502abd7be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOpaqueValue</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a3e76430318c6b76bd26b4026436bc8a5</anchor>
      <arglist>(Opaque_handle opaque)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyOpaque</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a0bb504f4d334a194560393c7de062bb3</anchor>
      <arglist>(Opaque_handle *opaque)</arglist>
    </member>
    <member kind="function">
      <type>Opaque2_handle</type>
      <name>createOpaque2</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>aa39e12c8dde9eef051438fce84d7afa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOpaque2Value</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a9d648bffb7754fa9299283b2e88cfa76</anchor>
      <arglist>(Opaque2_handle opaque)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroyOpaque2</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>aa44a3954e514982ffdbdffb6cd3572b9</anchor>
      <arglist>(Opaque2_handle *opaque)</arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>A_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>ac2aef16a88c2b5336dc8a6720937c4db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>A_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a4989cfa0044a447584c22454582f22b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>B1_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>afbb204232bd2acbd7ea744bdfdc152b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>B1_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a7ccd7dc820e2b9040887861c151048a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>B2_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>ad6969cdc4b03955ffd28f0b658303b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>B2_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>aac41725b5402a98920e22558fa2917f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>C_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>ad9f5327fa738e752a2441cf12e21063e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>C_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a51724d87204051285888d8254a91cb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>D_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a0089803f395daa754e8933609c6a69ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>D_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a266fda9db80cb59ff00123732447e9b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>E_g_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a45a29bfb34c3277c2231c780f6eb5373</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>E_f_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>af165a2e4176c03c1ca551f682000580d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Opaque_handle</type>
      <name>OPAQUE_HANDLE_NULL</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a260abd5735dbfe7d8d59b6c342046e55</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>getOpaqueValue_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a578c1af2d2d61eefa7a2adef6b0d8e15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Opaque2_handle</type>
      <name>OPAQUE2_HANDLE_NULL</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>ad19edad39ad335bc9e2ea7487eb5c9be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>getOpaque2Value_return</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a4275e03d7be0f189bc66713582cab35e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const Opaque3_handle</type>
      <name>OPAQUE3_HANDLE_NULL</name>
      <anchorfile>TestClasses_8hpp.html</anchorfile>
      <anchor>a86d877366f8e22a1fcbb3dd6fa3e4b4d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>testDisablePrintActiveRcpNodesOnExit.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>testDisablePrintActiveRcpNodesOnExit_8cpp</filename>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="TestClasses_8hpp" name="TestClasses.hpp" local="yes" imported="no">TestClasses.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>testDisablePrintActiveRcpNodesOnExit_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TestForException_throwTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>TestForException__throwTest_8cpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="SimpleThrowFunctions_8hpp" name="SimpleThrowFunctions.hpp" local="yes" imported="no">SimpleThrowFunctions.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>TestForException__throwTest_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_AbstractFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__AbstractFactory_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::AbstractFactory</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_AbstractFactoryStd.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__AbstractFactoryStd_8hpp</filename>
    <includes id="Teuchos__AbstractFactory_8hpp" name="Teuchos_AbstractFactory.hpp" local="yes" imported="no">Teuchos_AbstractFactory.hpp</includes>
    <class kind="class">Teuchos::PostModNothing</class>
    <class kind="class">Teuchos::AllocatorNew</class>
    <class kind="class">Teuchos::AbstractFactoryStd</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_any.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__any_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <class kind="class">Teuchos::any</class>
    <class kind="class">Teuchos::bad_any_cast</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Array.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Array_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <class kind="class">Teuchos::InvalidArrayStringRepresentation</class>
    <class kind="class">Teuchos::Array</class>
    <class kind="class">Teuchos::Array</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; Array&lt; T &gt; &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_arrayArg.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__arrayArg_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::ArrayArg</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 1, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga9fc0e1264c2081d2b8f2b22549785c47</anchor>
      <arglist>(T t1)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 2, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gad25b43a1cbe9e99069e5c08c26a8574d</anchor>
      <arglist>(T t1, T t2)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 3, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gac2527f96b0a457afe639f594cba50f7c</anchor>
      <arglist>(T t1, T t2, T t3)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 4, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga57a5810259c0fc3afb78c9e449fbdb59</anchor>
      <arglist>(T t1, T t2, T t3, T t4)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 5, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga326c9fe20c12a9d913feebddd0f5b387</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 6, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga445a2817e0b2aefec6529e0d6ea2a641</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5, T t6)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayConversions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayConversions_8hpp</filename>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>void</type>
      <name>arrayViewPtrConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a016dd4a3036a8935bd55bcd2489ce70c</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in, const ArrayView&lt; Ptr&lt; T_out &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayViewRcpConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac2bb4fa3638dc5c034a1d085468d2842</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in, const ArrayView&lt; RCP&lt; T_out &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Ptr&lt; T_out &gt; &gt;</type>
      <name>arrayPtrConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad60f8e7a4a47c671645a2e447cab2358</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; RCP&lt; T_out &gt; &gt;</type>
      <name>arrayRcpConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a876267d20c280b7523ddae96a5d2d170</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Ptr&lt; const T &gt; &gt;</type>
      <name>arrayConstPtrConstCast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a634fa5232d8697ec2f2c119b2c9a3af6</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; T &gt; &gt; &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const RCP&lt; const T &gt; &gt;</type>
      <name>arrayConstRcpConstCast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a00f21e8ef9c2d82fbce2c761a464f2ae</anchor>
      <arglist>(const ArrayView&lt; const RCP&lt; T &gt; &gt; &amp;a_in)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayRCP.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayRCP_8hpp</filename>
    <includes id="Teuchos__ArrayRCPDecl_8hpp" name="Teuchos_ArrayRCPDecl.hpp" local="yes" imported="no">Teuchos_ArrayRCPDecl.hpp</includes>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <class kind="class">Teuchos::ArcpReinterpretCastEmbeddedObj</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Utilities</namespace>
    <member kind="function">
      <type>RCPNode *</type>
      <name>ArrayRCP_createNewRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa4c6c3788d366ac07a8a011bcd6ef0e2</anchor>
      <arglist>(T *p, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>ArrayRCP_createNewDeallocRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae79131ac1288d62996f957dde2deb859</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_shares_resource</name>
      <anchorfile>namespaceTeuchos_1_1Utilities.html</anchorfile>
      <anchor>a6abfd67310adb5e17e07c930a1a696d6</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayRCPDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayRCPDecl_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <includes id="Teuchos__ArrayViewDecl_8hpp" name="Teuchos_ArrayViewDecl.hpp" local="yes" imported="no">Teuchos_ArrayViewDecl.hpp</includes>
    <class kind="class">Teuchos::ArrayRCP</class>
    <class kind="class">Teuchos::ArrayRCP&lt; const T &gt;</class>
    <class kind="class">Teuchos::ArrayRCP&lt; void &gt;</class>
    <class kind="class">Teuchos::ArrayRCP&lt; const void &gt;</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; ArrayRCP&lt; T &gt; &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayView.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayView_8cpp</filename>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="no" imported="no">Teuchos_ArrayView.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayView.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayView_8hpp</filename>
    <includes id="Teuchos__ArrayViewDecl_8hpp" name="Teuchos_ArrayViewDecl.hpp" local="yes" imported="no">Teuchos_ArrayViewDecl.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ArrayViewDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ArrayViewDecl_8hpp</filename>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="Teuchos__ENull_8hpp" name="Teuchos_ENull.hpp" local="yes" imported="no">Teuchos_ENull.hpp</includes>
    <includes id="Teuchos__NullIteratorTraits_8hpp" name="Teuchos_NullIteratorTraits.hpp" local="yes" imported="no">Teuchos_NullIteratorTraits.hpp</includes>
    <includes id="Teuchos__ConstTypeTraits_8hpp" name="Teuchos_ConstTypeTraits.hpp" local="yes" imported="no">Teuchos_ConstTypeTraits.hpp</includes>
    <class kind="class">Teuchos::ArrayRCP</class>
    <class kind="class">Teuchos::ArrayView</class>
    <class kind="class">Teuchos::ArrayView&lt; const T &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_as.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__as_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::ValueTypeConversionTraits</class>
    <class kind="class">Teuchos::asFunc</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; OutType, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; double, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long double, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, long double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; double, long double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, unsigned short &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, short &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, unsigned int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, unsigned int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; std::string, char[N]&gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TypeTo</type>
      <name>as</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0d92fda6dfdcb3b3c4cae5d0596ac9f2</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
      <docanchor file="namespaceTeuchos" title="User documentation">Teuchos_as_User</docanchor>
      <docanchor file="namespaceTeuchos" title="Developer documentation">Teuchos_as_Dev</docanchor>
    </member>
    <member kind="function">
      <type>TypeTo</type>
      <name>asSafe</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1eaf9982de1935ecdb910a41e1dbe53e</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
      <docanchor file="namespaceTeuchos" title="User documentation">Teuchos_asSafe_User</docanchor>
      <docanchor file="namespaceTeuchos" title="Developer documentation">Teuchos_asSafe_Dev</docanchor>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Assert.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Assert_8hpp</filename>
    <includes id="Teuchos__TestForException_8hpp" name="Teuchos_TestForException.hpp" local="yes" imported="no">Teuchos_TestForException.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga01866f80ce83dda7221b83844edeff22</anchor>
      <arglist>(assertion_test)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_IN_RANGE_UPPER_EXCLUSIVE</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga68fb3eb00592518a99cddeea3cbe4f93</anchor>
      <arglist>(index, lower_inclusive, upper_exclusive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_EQUALITY</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gae4bd9380ee7849faf0e0ecc7a611019c</anchor>
      <arglist>(val1, val2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_INEQUALITY</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gaccac59b1a49e9d1b9d814f5a331c726a</anchor>
      <arglist>(val1, comp, val2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_basic_oblackholestream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__basic__oblackholestream_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::basic_oblackholestream</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_BLAS.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__BLAS_8cpp</filename>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__BLAS__wrappers_8hpp" name="Teuchos_BLAS_wrappers.hpp" local="yes" imported="no">Teuchos_BLAS_wrappers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CHAR_MACRO</name>
      <anchorfile>Teuchos__BLAS_8cpp.html</anchorfile>
      <anchor>a4851db723cbdcc37d751d15536baa2cd</anchor>
      <arglist>(char_var)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_BLAS.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__BLAS_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <includes id="Teuchos__BLAS__types_8hpp" name="Teuchos_BLAS_types.hpp" local="yes" imported="no">Teuchos_BLAS_types.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::details::GivensRotator</class>
    <class kind="class">Teuchos::DefaultBLASImpl</class>
    <class kind="class">Teuchos::BLAS</class>
    <class kind="class">Teuchos::details::MagValue</class>
    <class kind="class">Teuchos::details::MagValue&lt; ScalarType, true &gt;</class>
    <class kind="class">Teuchos::details::MagValue&lt; ScalarType, false &gt;</class>
    <class kind="class">Teuchos::details::GivensRotator</class>
    <class kind="class">Teuchos::details::GivensRotator&lt; ScalarType, true &gt;</class>
    <class kind="class">Teuchos::details::GivensRotator&lt; ScalarType, false &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, float &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, double &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, std::complex&lt; float &gt; &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, std::complex&lt; double &gt; &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::details</namespace>
    <namespace>details</namespace>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ESideChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae938c31c866c88acd4ac74647bcf2a85</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ETranspChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a26d6f15883b04e291e8771d8ea75f805</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>EUploChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3c3e3b18a6f91859a1945dcd5c077e37</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>EDiagChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab4b7992ec12626f680891608390ef33b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ETypeChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a640e69651a3c03a0d32b93d863a3b523</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_BLAS_types.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__BLAS__types_8hpp</filename>
    <namespace>Teuchos</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ESide</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_SIDE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91a913227215c7326bc8ad7e00ce0100889</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_SIDE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91af01e44b3bfce7cb55b7537f0b1e23bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ETransp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35a3547883feb9e2f4240a9ba8c959bb7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35aeeeb6f6229ae1b1d1b23760f0b8f53ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONJ_TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35a24bf0d8a616611a5e996d407846b3bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EUplo</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73aa84fe52e8c0ebbb2e4bb5028a511cfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73a942e55befb1773096e415ca844449b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEF_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73acb49eaa664e06a55d79fe64967d96807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EDiag</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_DIAG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97ad4fae874351ccad12cb53a0a381635a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_UNIT_DIAG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97a5be3acb18d58a3898346dd569d38c39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EType</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a91f06e11f663d1ca593cb4d7a74bc574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48acb5f81f0cb9718fc9e4518df47e7bf9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48aa6017626eaf4bd915387ba64545db211</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HESSENBERG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48ad98f768c2788b39e794e491163316c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYM_BAND_L</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48ac7892f275142e4ab3162b32416964b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYM_BAND_U</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a34da43ca96650b7115b350096ce59abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAND</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a30a5a490532dea841dec764f007571cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_BLAS_wrappers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__BLAS__wrappers_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PREFIX</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>add51b53e8b628f95078327028dccb20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Teuchos_fcd</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ac4a885500a90ae259fb8a8ced4ae75a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DROTG_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a9deda6cfc894056ba8fd9748684cd5b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DROT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ada56041caa7ffd9acb91a219733e75c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DASUM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a0271173b7c23a92ce1ac7cae7b927a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DAXPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a036920f22c4dc03808c385fb4c88c2b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DCOPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ae4f899e0b077ef91898383ccecd83dc8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DDOT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a454290a6af42804b3e804d4d9f367eb7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DNRM2_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a11b47bc6b3c269a0696b015968c3138b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSCAL_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>addfa27314f361925468c3303e230b587</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>IDAMAX_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a0e31933e8f129231e1c9f07a129f23f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>acfdc99fe8188a77fd84a46d84539f2f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGER_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>adf07e85c49b305c03cf38df5f216bb6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ad4f87f0031f27d87c678c155d09cb9da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a25c53349e8068a3b05df1913859ffbdf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSWAP_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a431ab572f45f049c2e1a767f12725528</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSYMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a008525a871e4f2dde8f04d80709ea47d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSYRK_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a62b85b2eaeb3d348943350403fa4dc07</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ad314a138d76c7e85a3a75da29b9bf7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRSM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a674a2cc842c95d1225d7113c850aaad1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SROTG_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a05f2f13df7ea067a96c8626eabb0d8dd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SROT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a08fd208ec7c15dce0ef84afa7eacc0df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSCAL_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>aba5072abdc3055b34c2b47e66649a9e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SCOPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a92b042ed35681c050dde208def46b477</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SAXPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a95f82ce13bf3c46dac8b59bf403f3134</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SDOT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a0e207464f9eedeb49eacc94b7c200514</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SNRM2_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a915fd8e8118b917f4d033d7f3ea221c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SASUM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ac0d1045bd13e639bd55987ba38f7630c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ISAMAX_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>aaf763147bfc27142555a560b37dccdd4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ab8aeb3f187004d59f4ed8576030de5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGER_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>acd851ff57409c2812f69f92bcdb08ca0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a137fdf2f652663a5dc1517916356224b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a36f3accdb2a2b3fa10e33b5f6d4d9297</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSWAP_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>af48700b157d0facaacab5b8eeb1d1946</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSYMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>afa5588be7b2399476ad9b956e2c4611b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSYRK_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a62856765b292a81f9eccf4cbf90eb2df</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a4f2c95dd5f3b490826e8ddd48325fac9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRSM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ab75fec78e295b73599adf07042dcdcb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DROTG_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ac954600044479d00acc1bccf8e0f4d7c</anchor>
      <arglist>(double *da, double *db, double *c, double *s)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DROT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ac554db9c6940f7856da93f8dc9bc3c67</anchor>
      <arglist>(const int *n, double *dx, const int *incx, double *dy, const int *incy, double *c, double *s)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DASUM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a9f2905f3fc7748d68ab0e0007e68d19d</anchor>
      <arglist>(const int *n, const double x[], const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DAXPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a7076713e2c49a01d83ce57aa5b58eb37</anchor>
      <arglist>(const int *n, const double *alpha, const double x[], const int *incx, double y[], const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DCOPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a639af1e0e540f481262702b0f33cd6cb</anchor>
      <arglist>(const int *n, const double *x, const int *incx, double *y, const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DDOT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>aea802194a0d776d6a7d92039736c281b</anchor>
      <arglist>(const int *n, const double x[], const int *incx, const double y[], const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DNRM2_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ab9a6cb4ffae1dba5830fbd0c01ebf748</anchor>
      <arglist>(const int *n, const double x[], const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSCAL_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a8fa99b9a1ebcda3cbaefc66c9ee9468a</anchor>
      <arglist>(const int *n, const double *alpha, double *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSWAP_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a74eecfc46e63ffc579dda5af38ff50ca</anchor>
      <arglist>(const int *const n, double *const x, const int *const incx, double *const y, const int *const incy)</arglist>
    </member>
    <member kind="function">
      <type>int PREFIX</type>
      <name>IDAMAX_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ae4466d1be9cc0aaa44c17828af5c03a6</anchor>
      <arglist>(const int *n, const double *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SROTG_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a4296bd017b391f2743efb8c47a0cabc0</anchor>
      <arglist>(float *da, float *db, float *c, float *s)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SROT_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ab163842d119f181ffba7f9c01971c7d7</anchor>
      <arglist>(const int *n, float *dx, const int *incx, float *dy, const int *incy, float *c, float *s)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SAXPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>aab387b2b5360c0da41d72e9fab93bf02</anchor>
      <arglist>(const int *n, const float *alpha, const float x[], const int *incx, float y[], const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SCOPY_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>af932d11ed5d618f7bf7ee5f5585b117a</anchor>
      <arglist>(const int *n, const float *x, const int *incx, float *y, const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSCAL_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ac9aab7eeaf57004e0f4876878b30ea9e</anchor>
      <arglist>(const int *n, const float *alpha, float *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSWAP_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>adfde0b3dd999580bf8981f4fcfee4203</anchor>
      <arglist>(const int *const n, float *const x, const int *const incx, float *const y, const int *const incy)</arglist>
    </member>
    <member kind="function">
      <type>int PREFIX</type>
      <name>ISAMAX_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>af542fe0234c9aebb3d1378fba598a42b</anchor>
      <arglist>(const int *n, const float *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a9463cb3e29c21e5b8226da6f25eccd78</anchor>
      <arglist>(Teuchos_fcd, const int *m, const int *n, const double *alpha, const double A[], const int *lda, const double x[], const int *incx, const double *beta, double y[], const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>acfefd00530258528ea125d5eb028c613</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, const double *a, const int *lda, double *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGER_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a2e6ea52a0a70fd8f6b2096fe1ebf2ef3</anchor>
      <arglist>(const int *m, const int *n, const double *alpha, const double *x, const int *incx, const double *y, const int *incy, double *a, const int *lda)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a54c03a83a27f6620f8ce966678cebf65</anchor>
      <arglist>(Teuchos_fcd, const int *m, const int *n, const float *alpha, const float A[], const int *lda, const float x[], const int *incx, const float *beta, float y[], const int *incy)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRMV_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a6a43025bb1e9db3c954ba9798f3a16ff</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, const float *a, const int *lda, float *x, const int *incx)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGER_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a45670649740e3e6e0895b07ddb0ce22e</anchor>
      <arglist>(const int *m, const int *n, const float *alpha, const float *x, const int *incx, const float *y, const int *incy, float *a, const int *lda)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a58ed6ac948a71833054f889974965022</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *k, const double *alpha, const double *a, const int *lda, const double *b, const int *ldb, const double *beta, double *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSYMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a2144bf9afedf2004a2db2706f6536294</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const double *alpha, const double *a, const int *lda, const double *b, const int *ldb, const double *beta, double *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSYRK_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a5661f26a6dd5b200750c629ef58f8572</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *k, const double *alpha, const double *a, const int *lda, const double *beta, double *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>acc2579b636e0cbf2df7e72a8b5979ae5</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const double *alpha, const double *a, const int *lda, double *b, const int *ldb)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRSM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a8034482309197056f1ad7d47e900ac88</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const double *alpha, const double *a, const int *lda, double *b, const int *ldb)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a8b085b5a07bd5a0b771afdfc0c2611de</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *k, const float *alpha, const float *a, const int *lda, const float *b, const int *ldb, const float *beta, float *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSYMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a3708e84986a1e73a923861faaa4aee24</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const float *alpha, const float *a, const int *lda, const float *b, const int *ldb, const float *beta, float *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSYRK_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a68dcb1b34f9b9bfd8de5a1bffd9e01a0</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *k, const float *alpha, const float *a, const int *lda, const float *beta, float *c, const int *ldc)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRMM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>ad87985b6f72978cdbd0e74d5b0be5f5d</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const float *alpha, const float *a, const int *lda, float *b, const int *ldb)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRSM_F77</name>
      <anchorfile>Teuchos__BLAS__wrappers_8hpp.html</anchorfile>
      <anchor>a4779ff1e1c5387e379ead6bc78108ddc</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const float *alpha, const float *a, const int *lda, float *b, const int *ldb)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Comm.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__Comm_8hpp</filename>
    <includes id="Teuchos__ReductionOp_8hpp" name="Teuchos_ReductionOp.hpp" local="yes" imported="no">Teuchos_ReductionOp.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <class kind="class">Teuchos::CommStatus</class>
    <class kind="class">Teuchos::Comm</class>
    <class kind="class">Teuchos::CommRequest</class>
    <class kind="class">Teuchos::Comm</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CommandLineProcessor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__CommandLineProcessor_8cpp</filename>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CLP_ERR_MSG</name>
      <anchorfile>Teuchos__CommandLineProcessor_8cpp.html</anchorfile>
      <anchor>a5d660d6f1442e37a8f4567419f49e2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLP_ERR_MSG</name>
      <anchorfile>Teuchos__CommandLineProcessor_8cpp.html</anchorfile>
      <anchor>a5d660d6f1442e37a8f4567419f49e2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLP_ERR_MSG</name>
      <anchorfile>Teuchos__CommandLineProcessor_8cpp.html</anchorfile>
      <anchor>a5d660d6f1442e37a8f4567419f49e2c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>CLP_ERR_MSG</name>
      <anchorfile>Teuchos__CommandLineProcessor_8cpp.html</anchorfile>
      <anchor>a5d660d6f1442e37a8f4567419f49e2c9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CommandLineProcessor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__CommandLineProcessor_8hpp</filename>
    <includes id="Teuchos__map_8hpp" name="Teuchos_map.hpp" local="yes" imported="no">Teuchos_map.hpp</includes>
    <includes id="Teuchos__any_8hpp" name="Teuchos_any.hpp" local="yes" imported="no">Teuchos_any.hpp</includes>
    <includes id="Teuchos__CompileTimeAssert_8hpp" name="Teuchos_CompileTimeAssert.hpp" local="yes" imported="no">Teuchos_CompileTimeAssert.hpp</includes>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <class kind="class">Teuchos::CommandLineProcessor</class>
    <class kind="class">Teuchos::CommandLineProcessor::ParseError</class>
    <class kind="class">Teuchos::CommandLineProcessor::HelpPrinted</class>
    <class kind="class">Teuchos::CommandLineProcessor::UnrecognizedOption</class>
    <class kind="struct">Teuchos::CommandLineProcessor::opt_val_val_t</class>
    <class kind="struct">Teuchos::CommandLineProcessor::opt_doc_t</class>
    <class kind="struct">Teuchos::CommandLineProcessor::enum_opt_data_t</class>
    <class kind="class">Teuchos::CommandLineProcessor::TimeMonitorSurrogate</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CommHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__CommHelpers_8cpp</filename>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a74fc3ddc7fbfe445af63ee8b8f6ee232</anchor>
      <arglist>(const EReductionType reductType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a27916aae479af3a854007be89019edc6</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const double sendBuffer[], double globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a27e604e725078402d79daf512fff8c73</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a758a81b0d72dc75471e148835e187ba7</anchor>
      <arglist>(const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1715516b1409760b7c23a3e69f81214e</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const double sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aedc86442bf24a32f6ebfbdd1151f3a00</anchor>
      <arglist>(const double sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac49d54dfc1d67d314cf930485a7280a</anchor>
      <arglist>(const ArrayRCP&lt; const double &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b31ac87d62add3712ee4553db2c72e7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const float sendBuffer[], float globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab9283a4f3c6b100940ced15f957f2c38</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaab5a1f6d96ea51d8c2d3999e46d0390</anchor>
      <arglist>(const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1c23b932ca3e341bb5b34d330378924b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const float sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9c0b3c7693b3452545bce7cfd8e0dc82</anchor>
      <arglist>(const float sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aba9ddf334a6b5afc39f3174a054bdf5e</anchor>
      <arglist>(const ArrayRCP&lt; const float &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa09bb1b26b97f3ea48d6597971e46101</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b396e0116c8c2eb8bad8b03f839efe5</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5ef967e459242d295a446cc2d5e26c38</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const long sendBuffer[], long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8db7a8d30b11130e344bb57f8911a73f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa18b161c12fe88f4b695de8b6ad1f708</anchor>
      <arglist>(const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6aeb6546a09b242afa840fc210ccefba</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a90e48fe686108359fb3f1830f4545b69</anchor>
      <arglist>(const long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad045d311dd73ea8b31796bd65174b81b</anchor>
      <arglist>(const ArrayRCP&lt; const long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a137a8cf4c3fcecf4f2f91921e22c499c</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a138042fb29ebefd5aca4c1b2abf42eb6</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a216017e15c616d7ff8d3ee814d11c3e9</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned long sendBuffer[], unsigned long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7bd975526427945c1f975b61666b6645</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9016dabcec7d3ca9b54925567effedd4</anchor>
      <arglist>(const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa5cfdc7584771cc05438e37e53b30c26</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84eee9a6a39d5e55be7fc34abf68de39</anchor>
      <arglist>(const unsigned long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3fb29eae10dc116d37c4decf052d2ca7</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1643e34d1931c5bd6c8cd9e44f9b7336</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aff205bd6057e66154f9b5744d25bffc5</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab8d9ec7760a93ece862603a6d22faf36</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3a740f5a3e8f81e968a7f14352c3e28c</anchor>
      <arglist>(const int sendBuf[], int recvBuf[], const int count, const EReductionType reductType, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a77a609f08b122ab2327051a3952c2a79</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const int sendBuffer[], int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e3e96176e7f2ca006f1ac2a1ffb591f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaabd7376099a952af0fb65769bbf2e44</anchor>
      <arglist>(const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb1845239b5d47aef6777f75d077b77d</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a300fba806f354cbed3e6539fc39673d5</anchor>
      <arglist>(const int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a11976239bc025c837b3a003c8b62a55a</anchor>
      <arglist>(const ArrayRCP&lt; const int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1af860a0e1eed42604029a72322867f9</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af424c82b352d575e00db202315dacf9b</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0aac06648db7f59357cf24f6c1f39cf8</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned int sendBuffer[], unsigned int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9400dee58781cb5dd2cd77ed3306175a</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aff1e7705b594f12c2f5ad174d024758c</anchor>
      <arglist>(const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a32b37607b7b926510aedb1171acf7ea1</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab340cab560cf42a83ff4bb75a77fdb1d</anchor>
      <arglist>(const unsigned int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab26cf7255d6c04abd0c4c7a16515d0dd</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9eef002fe30ae1a013eaf7176792b834</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aeef24732ab76793f37ed3868006302be</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a80bb8e5a4c8c7cb1a0fb71b96d48719b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const short sendBuffer[], short globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2ca43164a01f2b6fafd53920e4fcfd08</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae1fb9c74805cd0f45a3c63be58e4835b</anchor>
      <arglist>(const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb2c5481befcbd6ce317248c1659d4f5</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const short sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad3dd4850eabc7c8f90f8ba8d7dcb00f2</anchor>
      <arglist>(const short sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae668fac97a225ccb40891fb047dd3cff</anchor>
      <arglist>(const ArrayRCP&lt; const short &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CommHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__CommHelpers_8hpp</filename>
    <includes id="Teuchos__Comm_8hpp" name="Teuchos_Comm.hpp" local="yes" imported="no">Teuchos_Comm.hpp</includes>
    <includes id="Teuchos__CommUtilities_8hpp" name="Teuchos_CommUtilities.hpp" local="yes" imported="no">Teuchos_CommUtilities.hpp</includes>
    <includes id="Teuchos__SerializationTraitsHelpers_8hpp" name="Teuchos_SerializationTraitsHelpers.hpp" local="yes" imported="no">Teuchos_SerializationTraitsHelpers.hpp</includes>
    <includes id="Teuchos__ReductionOpHelpers_8hpp" name="Teuchos_ReductionOpHelpers.hpp" local="yes" imported="no">Teuchos_ReductionOpHelpers.hpp</includes>
    <includes id="Teuchos__SerializerHelpers_8hpp" name="Teuchos_SerializerHelpers.hpp" local="yes" imported="no">Teuchos_SerializerHelpers.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__Workspace_8hpp" name="Teuchos_Workspace.hpp" local="yes" imported="no">Teuchos_Workspace.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__DefaultSerialComm_8hpp" name="Teuchos_DefaultSerialComm.hpp" local="yes" imported="no">Teuchos_DefaultSerialComm.hpp</includes>
    <class kind="class">Teuchos::SumValueReductionOp</class>
    <class kind="class">Teuchos::MinValueReductionOp</class>
    <class kind="class">Teuchos::MaxValueReductionOp</class>
    <class kind="class">Teuchos::ANDValueReductionOp</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min&lt; true, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min&lt; false, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max&lt; true, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max&lt; false, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::AND</class>
    <class kind="class">Teuchos::MixMaxUtilities::AND&lt; true, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::AND&lt; false, Ordinal, Packet &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MixMaxUtilities</namespace>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED void</type>
      <name>reduceAll</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a73421d39e556e6006c677e0d3ed0bd88</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, Packet *globalReduct)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED void</type>
      <name>scan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6e89ec4ec75fe3902d934b8881532f0</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, Packet *scanReduct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acfd014f1b77797750fc62bf031dd93a9</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ssend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a120e026584caa61a58ae4deace44ce58</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readySend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a29ed792d55caa3483b4ae3bdd58dcc79</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a0e340840bed50a4ddc29deb736d239</anchor>
      <arglist>(const ArrayRCP&lt; const Packet &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2dca8fd69afa4c6dd9e0dce57f83a2a3</anchor>
      <arglist>(const ArrayRCP&lt; Packet &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>ValueTypeReductionOp&lt; Ordinal, Packet &gt; *</type>
      <name>createOp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a23cccf08fd5b4c8d8cfab900c5a147c4</anchor>
      <arglist>(const EReductionType reductType)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb033006fe5aea2188e20c32fda9bed8</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const double sendBuffer[], double globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af01b1d2c30fa89952f2edb3223d98f3f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac452abadd669bd41a7074c4533e0eb97</anchor>
      <arglist>(const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac85acd10c7a23636cf20df29767299bf</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const double sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4973758acd41245e630083fe48c3f51f</anchor>
      <arglist>(const double sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a674fa529d7fccd7cfa7f96f4c34a8101</anchor>
      <arglist>(const ArrayRCP&lt; const double &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2d02e21ab2bb278f564d7f2f057ab53e</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const float sendBuffer[], float globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ada1017347a3b2b3924cd32146734b97b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e6e9b8a369ca56828d2bbb34805bc63</anchor>
      <arglist>(const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7bf149e99cd44f6d885d0adb8de0a5d2</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const float sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f17c00822711733e103ec90fb418e64</anchor>
      <arglist>(const float sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3000167b0252363ff6813ed2606759c3</anchor>
      <arglist>(const ArrayRCP&lt; const float &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6e8efcf065704762afd70965b836e520</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaf20da523a7c607eb719a5733f95eaa4</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a18eaf96c3139f81bcad808c06e2e06c7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const long sendBuffer[], long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac2aa3a815bc9ae1da544a3af29b94c8f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af973cd8bdb261a58f3d26ec9d73b2247</anchor>
      <arglist>(const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f94027c076383e0914cef7822e3de3b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a07d9759584944d86df135b6cfe841b92</anchor>
      <arglist>(const long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a97ccf4f0e036645afe82d0c385ba169f</anchor>
      <arglist>(const ArrayRCP&lt; const long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1df6caa415d24f954a7485e7c1eefdb9</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae72482daffe00460048dc114745cd332</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0853e8932f826fb4fd4ab755075e6097</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned long sendBuffer[], unsigned long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3ec7cd7da616d115344a34d897425e09</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0608ce793cc27e1f6eb07e3744f75e1</anchor>
      <arglist>(const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afee74c42e4d4b6a008c658f686925786</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b27d7f78c829cdd3691198cad2268b1</anchor>
      <arglist>(const unsigned long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4fd70db0fa7d0a43c61a51757c60ea16</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0473db97d4770f3eb46ec6869f823b26</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab03029b8b29a1486bd7aa8728d0ebeba</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>scatter</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4b82b1e889e64a52d36351bee82c34b1</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduce&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad17610323ac8ac90537120c0724cd2af</anchor>
      <arglist>(const int sendBuf[], int recvBuf[], const int count, const EReductionType reductType, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0f561e62c24b16223220790872534609</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const int sendBuffer[], int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad59d4ce846eef2f45dcbaccaf2b1bc79</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af773d402988cda3417be2579f656e838</anchor>
      <arglist>(const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6632f665a311b58f27492a540c961ea</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae542a56a78773b2f29c5ba6e68b9f571</anchor>
      <arglist>(const int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7123c626e9a0f0602cd38449a85e9394</anchor>
      <arglist>(const ArrayRCP&lt; const int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad6a9b2e0b6d9c5089571e85c990abf29</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a72db82e8755c103d56b02e65896ba73d</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0fd339bc9ce6bd8465d4b55b87f2fab7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned int sendBuffer[], unsigned int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a03e2b95a1f5cdaf9eec0e6c4e72eaf01</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a97069f547a0361f139f2a71acff905e3</anchor>
      <arglist>(const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a25e88cc03b73efa3b03ba6fc8249b430</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6098a55af07cc04cbac96f7499ba9865</anchor>
      <arglist>(const unsigned int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a812bb2e544a07bba6add0edaf45ccf</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a164b89894d8bfa3422a9a5fef9f0d5c4</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8b6b99dd97d99563b940e1c39a08bcee</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a92288cbb987235fa5990bed7479e73</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const short sendBuffer[], short globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71d8c8e5b268560b5b9e55d734da2d87</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4aacc7c72b8c6a5625e4af017a4652b2</anchor>
      <arglist>(const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8a89d76ea32562ba797498881a878973</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const short sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0e9c135427dee151d8c1db3d22b5989c</anchor>
      <arglist>(const short sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a282623718a638b15498784a3b38432ca</anchor>
      <arglist>(const ArrayRCP&lt; const short &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CommUtilities.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__CommUtilities_8hpp</filename>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_COMM_TIME_MONITOR</name>
      <anchorfile>Teuchos__CommUtilities_8hpp.html</anchorfile>
      <anchor>af340c2d79ec103f6ece79768c02aac5f</anchor>
      <arglist>(FUNCNAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CompileTimeAssert.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__CompileTimeAssert_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::CompileTimeAssert</class>
    <class kind="class">Teuchos::CompileTimeAssert&lt; 0 &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CompObject.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__CompObject_8cpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CompObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__CompObject_8hpp</filename>
    <includes id="Teuchos__Object_8hpp" name="Teuchos_Object.hpp" local="yes" imported="no">Teuchos_Object.hpp</includes>
    <includes id="Teuchos__Flops_8hpp" name="Teuchos_Flops.hpp" local="yes" imported="no">Teuchos_Flops.hpp</includes>
    <class kind="class">Teuchos::CompObject</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Condition.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__Condition_8hpp</filename>
    <includes id="Teuchos__Dependency_8hpp" name="Teuchos_Dependency.hpp" local="yes" imported="no">Teuchos_Dependency.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <class kind="class">Teuchos::Condition</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConditionXMLConverter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ConditionXMLConverter_8cpp</filename>
    <includes id="Teuchos__ConditionXMLConverter_8hpp" name="Teuchos_ConditionXMLConverter.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverter.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConditionXMLConverter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ConditionXMLConverter_8hpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__Condition_8hpp" name="Teuchos_Condition.hpp" local="yes" imported="no">Teuchos_Condition.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <class kind="class">Teuchos::ConditionXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConditionXMLConverterDB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ConditionXMLConverterDB_8cpp</filename>
    <includes id="Teuchos__ConditionXMLConverterDB_8hpp" name="Teuchos_ConditionXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLConditionExceptions_8hpp" name="Teuchos_XMLConditionExceptions.hpp" local="yes" imported="no">Teuchos_XMLConditionExceptions.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConditionXMLConverterDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ConditionXMLConverterDB_8hpp</filename>
    <includes id="Teuchos__StandardConditionXMLConverters_8hpp" name="Teuchos_StandardConditionXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardConditionXMLConverters.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <class kind="class">Teuchos::ConditionXMLConverterDB</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_NUMBERCONDITION_CONVERTER</name>
      <anchorfile>Teuchos__ConditionXMLConverterDB_8hpp.html</anchorfile>
      <anchor>aa2f3dc35c7758b655ca9d5090ad8d9c3</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ConfigDefs_8hpp</filename>
    <includes id="Teuchos__DLLExportMacro_8h" name="Teuchos_DLLExportMacro.h" local="yes" imported="no">Teuchos_DLLExportMacro.h</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CHK_ERR</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>afe2d8f6b4b96bf343e4a27d85c99bc09</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CHK_PTR</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a2fbf65a20ac4b530293ffa3cd5063854</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CHK_REF</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a31e30f19f39b76f8ec341915e57dc54e</anchor>
      <arglist>(a)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MAX</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a8f0a131d7a00872a1218ec442b417563</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MIN</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a46393ec6dd1cf8b6ad9ee70124ea1807</anchor>
      <arglist>(x, y)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_SGN</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>acb407a47bda2f40028b7af29184e083d</anchor>
      <arglist>(x)  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_DISABLED</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a82bbfc642e574b328b60817fcbd6155e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>TEUCHOS_ORDINAL_TYPE</type>
      <name>Teuchos_Ordinal</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>a739d6f269a9043611f58e6cf85d491cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOS_DEPRECATED typedef Teuchos_Ordinal</type>
      <name>Teuchos_Index</name>
      <anchorfile>Teuchos__ConfigDefs_8hpp.html</anchorfile>
      <anchor>adaf487e4ed34a64b0fff613f477f9156</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConstNonconstObjectContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ConstNonconstObjectContainer_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::ConstNonconstObjectContainer</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ConstTypeTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ConstTypeTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::ConstTypeTraits</class>
    <class kind="struct">Teuchos::ConstTypeTraits::UnConst</class>
    <class kind="struct">Teuchos::ConstTypeTraits::UnConst&lt; const U &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CTimeMonitor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__CTimeMonitor_8cpp</filename>
    <includes id="Teuchos__CTimeMonitor_8h" name="Teuchos_CTimeMonitor.h" local="yes" imported="no">Teuchos_CTimeMonitor.h</includes>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__implicit__cast_8hpp" name="Teuchos_implicit_cast.hpp" local="yes" imported="no">Teuchos_implicit_cast.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>Teuchos_startTimer</name>
      <anchorfile>Teuchos__CTimeMonitor_8cpp.html</anchorfile>
      <anchor>a3a2e17bd72297288b93fd94c3718944c</anchor>
      <arglist>(char timerName[], int timerID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Teuchos_stopTimer</name>
      <anchorfile>Teuchos__CTimeMonitor_8cpp.html</anchorfile>
      <anchor>a3d2eab84e8551624b3a85bbc5bf7a917</anchor>
      <arglist>(int timerID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CTimeMonitor.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__CTimeMonitor_8h</filename>
    <member kind="function">
      <type>int</type>
      <name>Teuchos_startTimer</name>
      <anchorfile>Teuchos__CTimeMonitor_8h.html</anchorfile>
      <anchor>a3a2e17bd72297288b93fd94c3718944c</anchor>
      <arglist>(char timerName[], int timerID)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Teuchos_stopTimer</name>
      <anchorfile>Teuchos__CTimeMonitor_8h.html</anchorfile>
      <anchor>a3d2eab84e8551624b3a85bbc5bf7a917</anchor>
      <arglist>(int timerID)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CWrapperSupport.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__CWrapperSupport_8cpp</filename>
    <includes id="Teuchos__CWrapperSupport__Cpp_8hpp" name="Teuchos_CWrapperSupport_Cpp.hpp" local="yes" imported="no">Teuchos_CWrapperSupport_Cpp.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_CWrapperSupport_Cpp.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__CWrapperSupport__Cpp_8hpp</filename>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <class kind="class">Teuchos::CWrapperErrorHandling</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_TRY</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga3819f2b13f3a265afcbd49dd60b57d4d</anchor>
      <arglist>(IERR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_CATCH_ERROR_CODE</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga0ad516d8c779d46f8ac74204a94a98d5</anchor>
      <arglist>(IERR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_SET_ERROR_CODE</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga1c8dbaf2c2cd6988c26510ce173d43d2</anchor>
      <arglist>(IERR, IERR_VALUE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_CWrapperSupport_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/CWrapperSupport/</path>
    <filename>Teuchos__CWrapperSupport__UnitTests_8cpp</filename>
    <includes id="Teuchos__CWrapperSupport__Cpp_8hpp" name="Teuchos_CWrapperSupport_Cpp.hpp" local="yes" imported="no">Teuchos_CWrapperSupport_Cpp.hpp</includes>
    <includes id="someCFunc_8h" name="someCFunc.h" local="yes" imported="no">someCFunc.h</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_DataAccess.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__DataAccess_8hpp</filename>
    <namespace>Teuchos</namespace>
    <member kind="enumeration">
      <type></type>
      <name>DataAccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Copy</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5dba75cf60991c46575a971b238ed126e17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>View</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5dba0cf5f6737707c4da692702573bd1335d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_DebugDefaultAsserts.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__DebugDefaultAsserts_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_SWITCH_DEFAULT_DEBUG_ASSERT</name>
      <anchorfile>Teuchos__DebugDefaultAsserts_8hpp.html</anchorfile>
      <anchor>ab562e3daf52ac14fee1bc5d52b0b3e02</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_IF_ELSE_DEBUG_ASSERT</name>
      <anchorfile>Teuchos__DebugDefaultAsserts_8hpp.html</anchorfile>
      <anchor>aaf8b3b026bd124b44831cd469d5879b0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_DefaultComm.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__DefaultComm_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__DefaultSerialComm_8hpp" name="Teuchos_DefaultSerialComm.hpp" local="yes" imported="no">Teuchos_DefaultSerialComm.hpp</includes>
    <class kind="class">Teuchos::DefaultComm</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DefaultMpiComm.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__DefaultMpiComm_8cpp</filename>
    <includes id="Teuchos__DefaultMpiComm_8hpp" name="Teuchos_DefaultMpiComm.hpp" local="no" imported="no">Teuchos_DefaultMpiComm.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_DefaultMpiComm.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__DefaultMpiComm_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_DefaultSerialComm.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__DefaultSerialComm_8hpp</filename>
    <includes id="Teuchos__Comm_8hpp" name="Teuchos_Comm.hpp" local="yes" imported="no">Teuchos_Comm.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <class kind="class">Teuchos::SerialCommStatus</class>
    <class kind="class">Teuchos::SerialComm</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Dependency.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__Dependency_8cpp</filename>
    <includes id="Teuchos__Dependency_8hpp" name="Teuchos_Dependency.hpp" local="yes" imported="no">Teuchos_Dependency.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Dependency.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__Dependency_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__InvalidDependencyException_8hpp" name="Teuchos_InvalidDependencyException.hpp" local="yes" imported="no">Teuchos_InvalidDependencyException.hpp</includes>
    <class kind="class">Teuchos::Dependency</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencySheet.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencySheet_8cpp</filename>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencySheet.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencySheet_8hpp</filename>
    <includes id="Teuchos__Dependency_8hpp" name="Teuchos_Dependency.hpp" local="yes" imported="no">Teuchos_Dependency.hpp</includes>
    <class kind="class">Teuchos::DependencySheet</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencyXMLConverter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencyXMLConverter_8cpp</filename>
    <includes id="Teuchos__DependencyXMLConverter_8hpp" name="Teuchos_DependencyXMLConverter.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverter.hpp</includes>
    <includes id="Teuchos__XMLDependencyExceptions_8hpp" name="Teuchos_XMLDependencyExceptions.hpp" local="yes" imported="no">Teuchos_XMLDependencyExceptions.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencyXMLConverter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencyXMLConverter_8hpp</filename>
    <includes id="Teuchos__Dependency_8hpp" name="Teuchos_Dependency.hpp" local="yes" imported="no">Teuchos_Dependency.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <class kind="class">Teuchos::DependencyXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencyXMLConverterDB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencyXMLConverterDB_8cpp</filename>
    <includes id="Teuchos__DependencyXMLConverterDB_8hpp" name="Teuchos_DependencyXMLConverterDB.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_DependencyXMLConverterDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DependencyXMLConverterDB_8hpp</filename>
    <includes id="Teuchos__StandardDependencyXMLConverters_8hpp" name="Teuchos_StandardDependencyXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardDependencyXMLConverters.hpp</includes>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <class kind="class">Teuchos::DependencyXMLConverterDB</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_DEP_CONVERTER</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>abb30f8a0c5c80c2d357ba358cf8dd7f0</anchor>
      <arglist>(DEP_TYPE, CONVERTER)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_TEMPLATED_NUMBER_DEPS</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>acebee3e0423db8fa3fc7e575cfc7ad32</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_NUMBER_VISUAL_DEP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>acb47f03a240d0c0ceb4233cd7555fbbf</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_RANGE_VALIDATOR_DEP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>aae753680a91e3636fb905046791e97f4</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_NUMBER_ARRAY_LENGTH_DEP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a1410133a72cec822af49e108d3d8208e</anchor>
      <arglist>(DEPENDEE_TYPE, DEPENDENT_TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_TWODROW_DEP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a74cf751ae92233afad6bb29ee3696ff8</anchor>
      <arglist>(DEPENDEE_TYPE, DEPENDENT_TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_TWODCOL_DEP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a29e4d10a7f0bdcd8690f717071e2d6bc</anchor>
      <arglist>(DEPENDEE_TYPE, DEPENDENT_TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_ARRAY_MODIFIER_DEP_GROUP</name>
      <anchorfile>Teuchos__DependencyXMLConverterDB_8hpp.html</anchorfile>
      <anchor>abf97f49d059a103a9d2c216f2c05d079</anchor>
      <arglist>(DEPENDEE_TYPE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Describable.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Describable_8cpp</filename>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Describable.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Describable_8hpp</filename>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__LabeledObject_8hpp" name="Teuchos_LabeledObject.hpp" local="yes" imported="no">Teuchos_LabeledObject.hpp</includes>
    <class kind="class">Teuchos::Describable</class>
    <class kind="struct">Teuchos::DescribableStreamManipulatorState</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_Allocator.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Details__Allocator_8cpp</filename>
    <includes id="Teuchos__Details__Allocator_8hpp" name="Teuchos_Details_Allocator.hpp" local="no" imported="no">Teuchos_Details_Allocator.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Details</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_Allocator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Details__Allocator_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::Details::AllocationLogger</class>
    <class kind="class">Teuchos::Details::Allocator</class>
    <class kind="struct">Teuchos::Details::Allocator::rebind</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Details</namespace>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>aff5f2714a8998bb9f68f840b99190bec</anchor>
      <arglist>(const Allocator&lt; T &gt; &amp;, const Allocator&lt; U &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>ac9c1a30d9a4e3a2ec39f2e57b97cc63f</anchor>
      <arglist>(const Allocator&lt; T &gt; &amp;a_t, const Allocator&lt; U &gt; &amp;a_u)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_Lapack128.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Details__Lapack128_8cpp</filename>
    <includes id="Teuchos__Details__Lapack128_8hpp" name="Teuchos_Details_Lapack128.hpp" local="yes" imported="no">Teuchos_Details_Lapack128.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_Lapack128.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Details__Lapack128_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_MpiCommRequest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__Details__MpiCommRequest_8cpp</filename>
    <includes id="Teuchos__Details__MpiCommRequest_8hpp" name="Teuchos_Details_MpiCommRequest.hpp" local="no" imported="no">Teuchos_Details_MpiCommRequest.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Details</namespace>
    <member kind="function">
      <type>RCP&lt; MpiCommRequest &gt;</type>
      <name>mpiCommRequest</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>a419c34349e7c72727bddcd394b68babf</anchor>
      <arglist>(MPI_Request rawMpiRequest, const ArrayRCP&lt; const char &gt; &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Details_MpiCommRequest.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__Details__MpiCommRequest_8hpp</filename>
    <includes id="Teuchos__DefaultMpiComm_8hpp" name="Teuchos_DefaultMpiComm.hpp" local="yes" imported="no">Teuchos_DefaultMpiComm.hpp</includes>
    <class kind="class">Teuchos::Details::MpiCommRequest</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Details</namespace>
    <member kind="function">
      <type>RCP&lt; MpiCommRequest &gt;</type>
      <name>mpiCommRequest</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>a419c34349e7c72727bddcd394b68babf</anchor>
      <arglist>(MPI_Request rawMpiRequest, const ArrayRCP&lt; const char &gt; &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_DLLExportMacro.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__DLLExportMacro_8h</filename>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOSCORE_LIB_DLL_EXPORT</name>
      <anchorfile>Teuchos__DLLExportMacro_8h.html</anchorfile>
      <anchor>a5199707e28f13bc7b787051400ebb5c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOSCOMM_LIB_DLL_EXPORT</name>
      <anchorfile>Teuchos__DLLExportMacro_8h.html</anchorfile>
      <anchor>a15df1ffce0721581af42d7a6c9a605d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT</name>
      <anchorfile>Teuchos__DLLExportMacro_8h.html</anchorfile>
      <anchor>aa43ddf8603c0c096e0931961f667c853</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOSNUMERICS_LIB_DLL_EXPORT</name>
      <anchorfile>Teuchos__DLLExportMacro_8h.html</anchorfile>
      <anchor>af323aba7deb530ea3dc6e0d506c22df7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_LIB_DLL_EXPORT</name>
      <anchorfile>Teuchos__DLLExportMacro_8h.html</anchorfile>
      <anchor>a4e8e65af3393fa1a822936d677bc5151</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_DummyObjectGetter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__DummyObjectGetter_8hpp</filename>
    <class kind="class">Teuchos::DummyObjectGetter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_dyn_cast.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__dyn__cast_8cpp</filename>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_dyn_cast.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__dyn__cast_8hpp</filename>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <class kind="class">Teuchos::m_bad_cast</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>dyn_cast_throw_exception</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adb103dd25f872805d11b8da2d03e754a</anchor>
      <arglist>(const std::string &amp;T_from, const std::string &amp;T_from_concr, const std::string &amp;T_to)</arglist>
    </member>
    <member kind="function">
      <type>T_To &amp;</type>
      <name>dyn_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a83b8843eaab7fa2229416838a4776932</anchor>
      <arglist>(T_From &amp;from)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ENull.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ENull_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Exceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Exceptions_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::ExceptionBase</class>
    <class kind="class">Teuchos::DuplicateOwningRCPError</class>
    <class kind="class">Teuchos::NullReferenceError</class>
    <class kind="class">Teuchos::NonconstAccessError</class>
    <class kind="class">Teuchos::RangeError</class>
    <class kind="class">Teuchos::DanglingReferenceError</class>
    <class kind="class">Teuchos::IncompatibleIteratorsError</class>
    <class kind="class">Teuchos::DuplicateParameterSublist</class>
    <class kind="class">Teuchos::DuplicateParameterEntryException</class>
    <class kind="class">Teuchos::DuplicateParameterEntryIDException</class>
    <class kind="class">Teuchos::DuplicateValidatorIDException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ExpandScalarTypeMacros.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__ExpandScalarTypeMacros_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_FLOAT</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>aeadb879f21d85a544c337396b82e56fd</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_FLOAT</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>a22cd9e7057fac0e5d8c2801b7d54867b</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_DOUBLE</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>aa665247bb55a3745e760d39415137da7</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_DOUBLE</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>afe5fa44f376924f2530b7df1444695fe</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_COMPLEX_FLOAT</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>aebdb5d2d40f3b417f91687437ede0634</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_COMPLEX_FLOAT</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>aab4b6aab6bd0c5198a774523c78a9ee4</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_COMPLEX_DOUBLE</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>acbac13588f8c8a15c1c807439f755304</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_COMPLEX_DOUBLE</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>a1e30b213bd6232530adcc18f1ce97b1e</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_REAL_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>aba4b045eadf4fd362e07085a0a78b10e</anchor>
      <arglist>(MACRONAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_EXPAND_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExpandScalarTypeMacros_8hpp.html</anchorfile>
      <anchor>a44f14eea5a073342d2fa0342a5f1a03b</anchor>
      <arglist>(MACRONAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ExpatHandlerAdapter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ExpatHandlerAdapter_8cpp</filename>
    <includes id="Teuchos__ExpatHandlerAdapter_8hpp" name="Teuchos_ExpatHandlerAdapter.hpp" local="yes" imported="no">Teuchos_ExpatHandlerAdapter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_ExpatHandlerAdapter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ExpatHandlerAdapter_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_ExplicitInstantiationHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ExplicitInstantiationHelpers_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_FLOAT</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>acc8991dcf24d1100bda463be6e3cf62e</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_FLOAT</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a22cd9e7057fac0e5d8c2801b7d54867b</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_DOUBLE</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a8e79f9d51b2c9fe331d8ed3c750be68a</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_DOUBLE</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>afe5fa44f376924f2530b7df1444695fe</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_COMPLEX_FLOAT</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a81bff7c558553bd2cd46845ca8b969ff</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_COMPLEX_FLOAT</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>aab4b6aab6bd0c5198a774523c78a9ee4</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_COMPLEX_DOUBLE</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a411a6b030b7a94680a54342e7d8f8eb7</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_COMPLEX_DOUBLE</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a1e30b213bd6232530adcc18f1ce97b1e</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_FLOAT128</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a5fe853147a26b5b94b2f36316d37c4bb</anchor>
      <arglist>(INSTANT_MACRO)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_FLOAT128</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a51bb646b722a80cfc7f8d370154c5c5d</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_REAL_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a545b1d76b1931d6823cbc5214b359ab2</anchor>
      <arglist>(MACRONAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_MACRO_TEMPLATE_INSTANT_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a10bbad60ffba6ed4a76b0276dbaaf2e6</anchor>
      <arglist>(MACRONAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_REAL_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>a2e6d338b333437e926d428dac02a8e56</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CLASS_TEMPLATE_INSTANT_SCALAR_TYPES</name>
      <anchorfile>Teuchos__ExplicitInstantiationHelpers_8hpp.html</anchorfile>
      <anchor>acb0c67ff90baff72e0e7f6744ab879b9</anchor>
      <arglist>(CLASSNAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_F77_wrappers.h</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__F77__wrappers_8h</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>F77_CALL_PREFIX</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a63350bcc13088dd0467cf409bd388ed3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_CHAR_1_ARG</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>aa60036891b11cc816b2fb663195209e5</anchor>
      <arglist>(ARG_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_CONST_CHAR_1_ARG</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a23ac3cddcb95cc42330cb7a5e069dbe5</anchor>
      <arglist>(ARG_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_CHAR_1_ARG_CALL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a34b7be53c6a4855102a8c7aad34634eb</anchor>
      <arglist>(ARG_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_NAME_UL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>af80a4df0f1b2f28c562e56cffdd5170a</anchor>
      <arglist>(UNAME, LNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_DECL_UL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>ae25623e67ebeea0e7faed2234663dcae</anchor>
      <arglist>(TYPE, UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_CALL_UL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>aeb612c3cddba482f09c908e4b5f7cd69</anchor>
      <arglist>(UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_PTR_DECL_UL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>aac886f99c3da3bfd3a31a19e7c450d00</anchor>
      <arglist>(TYPE, UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_COMMMON_BLOCK_NAME_UL</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>afefb752bbe24d53e9bc8101c6898ed4e</anchor>
      <arglist>(UNAME, LNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_NAME_UL_</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>aff530149693af9b36b61f1d21c128b6c</anchor>
      <arglist>(UNAME, LNAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_DECL_UL_</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a824ecad88f1fbbebe75f4d65715a006d</anchor>
      <arglist>(TYPE, UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_CALL_UL_</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>acfca1b9de71476694e7a06326779176e</anchor>
      <arglist>(UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_FUNC_PTR_DECL_UL_</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a2629f38f336b794a2cc885122f5993ed</anchor>
      <arglist>(TYPE, UFUNC_NAME, LFUNC_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>FORTRAN_COMMMON_BLOCK_NAME_UL_</name>
      <anchorfile>Teuchos__F77__wrappers_8h.html</anchorfile>
      <anchor>a98858331e5eeda91e513bf51134a4805</anchor>
      <arglist>(UNAME, LNAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_FancyOStream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__FancyOStream_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__oblackholestream_8hpp" name="Teuchos_oblackholestream.hpp" local="yes" imported="no">Teuchos_oblackholestream.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <class kind="class">Teuchos::basic_FancyOStream_buf</class>
    <class kind="class">Teuchos::basic_FancyOStream</class>
    <class kind="class">Teuchos::basic_OSTab</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_OSTAB</name>
      <anchorfile>Teuchos__FancyOStream_8hpp.html</anchorfile>
      <anchor>a88183fc5fc3d35e1a66a45c95cfe4bb4</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_OSTAB_DIFF</name>
      <anchorfile>Teuchos__FancyOStream_8hpp.html</anchorfile>
      <anchor>a10be96b1bac58af584d8a2787ef1c50d</anchor>
      <arglist>(DIFF)</arglist>
    </member>
    <member kind="typedef">
      <type>basic_FancyOStream&lt; char &gt;</type>
      <name>FancyOStream</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a348df63f6befd76c5cfad4f13414b2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_OSTab&lt; char &gt;</type>
      <name>OSTab</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3d005da0acbcb4901c360164f8945cf4</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_FileInputSource.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FileInputSource_8cpp</filename>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__FileInputStream_8hpp" name="Teuchos_FileInputStream.hpp" local="yes" imported="no">Teuchos_FileInputStream.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_FileInputSource.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FileInputSource_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLInputSource_8hpp" name="Teuchos_XMLInputSource.hpp" local="yes" imported="no">Teuchos_XMLInputSource.hpp</includes>
    <class kind="class">Teuchos::FileInputSource</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FileInputStream.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FileInputStream_8cpp</filename>
    <includes id="Teuchos__FileInputStream_8hpp" name="Teuchos_FileInputStream.hpp" local="yes" imported="no">Teuchos_FileInputStream.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_FileInputStream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FileInputStream_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLInputStream_8hpp" name="Teuchos_XMLInputStream.hpp" local="yes" imported="no">Teuchos_XMLInputStream.hpp</includes>
    <class kind="class">Teuchos::FileInputStream</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FILEstream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__FILEstream_8hpp</filename>
    <class kind="class">Teuchos::FILEstream</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FilteredIterator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__FilteredIterator_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <class kind="class">Teuchos::FilteredIterator</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FloatingPointTrap.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__FloatingPointTrap_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Teuchos_FloatingPointTrap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__FloatingPointTrap_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>void</type>
      <name>doFloatingPointTrap</name>
      <anchorfile>group__Teuchos__FloatingPointTrap__grp.html</anchorfile>
      <anchor>ga34e4d04211025e5f620ef214fb40bc9e</anchor>
      <arglist>(bool enableTrap)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Flops.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Flops_8cpp</filename>
    <includes id="Teuchos__Flops_8hpp" name="Teuchos_Flops.hpp" local="yes" imported="no">Teuchos_Flops.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Flops.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Flops_8hpp</filename>
    <class kind="class">Teuchos::Flops</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FunctionObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FunctionObject_8hpp</filename>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <class kind="class">Teuchos::FunctionObject</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FunctionObjectXMLConverter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FunctionObjectXMLConverter_8cpp</filename>
    <includes id="Teuchos__FunctionObjectXMLConverter_8hpp" name="Teuchos_FunctionObjectXMLConverter.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverter.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FunctionObjectXMLConverter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FunctionObjectXMLConverter_8hpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__FunctionObject_8hpp" name="Teuchos_FunctionObject.hpp" local="yes" imported="no">Teuchos_FunctionObject.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <class kind="class">Teuchos::FunctionObjectXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FunctionObjectXMLConverterDB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FunctionObjectXMLConverterDB_8cpp</filename>
    <includes id="Teuchos__FunctionObjectXMLConverterDB_8hpp" name="Teuchos_FunctionObjectXMLConverterDB.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <includes id="Teuchos__XMLFunctionObjectExceptions_8hpp" name="Teuchos_XMLFunctionObjectExceptions.hpp" local="yes" imported="no">Teuchos_XMLFunctionObjectExceptions.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_FunctionObjectXMLConverterDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__FunctionObjectXMLConverterDB_8hpp</filename>
    <includes id="Teuchos__StandardFunctionObjectXMLConverters_8hpp" name="Teuchos_StandardFunctionObjectXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjectXMLConverters.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <includes id="Teuchos__DummyObjectGetter_8hpp" name="Teuchos_DummyObjectGetter.hpp" local="yes" imported="no">Teuchos_DummyObjectGetter.hpp</includes>
    <class kind="class">Teuchos::FunctionObjectXMLConverterDB</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_SIMPLEFUNCTIONCONVERTERS</name>
      <anchorfile>Teuchos__FunctionObjectXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a5f0fca5662dc15c9d914147936aaca28</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_getBaseObjVoidPtr.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__getBaseObjVoidPtr_8hpp</filename>
    <includes id="TeuchosCore__ConfigDefs_8hpp" name="TeuchosCore_ConfigDefs.hpp" local="yes" imported="no">TeuchosCore_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_getConst.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__getConst_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getConst</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af559355eca0b1f227caf7c40dd72ecbf</anchor>
      <arglist>(T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_getRawPtr.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__getRawPtr_8hpp</filename>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <class kind="class">Teuchos::RawPointerConversionTraits</class>
    <class kind="class">Teuchos::RawPointerConversionTraits&lt; RawType * &gt;</class>
    <class kind="class">Teuchos::RawPointerConversionTraits&lt; ArrayRCP&lt; T &gt; &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>RawPointerConversionTraits&lt; Container &gt;::Ptr_t</type>
      <name>getRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0a7e20aa835720fafc0e709c93b358a8</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_GlobalMPISession.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__GlobalMPISession_8cpp</filename>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_GlobalMPISession.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__GlobalMPISession_8hpp</filename>
    <includes id="TeuchosCore__ConfigDefs_8hpp" name="TeuchosCore_ConfigDefs.hpp" local="yes" imported="no">TeuchosCore_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <class kind="class">Teuchos::GlobalMPISession</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Handle.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__Handle_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__Handleable_8hpp" name="Teuchos_Handleable.hpp" local="yes" imported="no">Teuchos_Handleable.hpp</includes>
    <class kind="class">Teuchos::ConstHandle</class>
    <class kind="class">Teuchos::Handle</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_HANDLE_CTORS</name>
      <anchorfile>Teuchos__Handle_8hpp.html</anchorfile>
      <anchor>a12a31bf81c8230ba8deab42a148fa387</anchor>
      <arglist>(handle, contents)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CONST_HANDLE_CTORS</name>
      <anchorfile>Teuchos__Handle_8hpp.html</anchorfile>
      <anchor>a1492ce537d645ef80c576fb1c4460c31</anchor>
      <arglist>(handle, contents)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Handleable.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__Handleable_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::ConstHandleable</class>
    <class kind="class">Teuchos::Handleable</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_GET_RCP</name>
      <anchorfile>Teuchos__Handleable_8hpp.html</anchorfile>
      <anchor>a01e92044908234bf7e708b09b86a43c0</anchor>
      <arglist>(Base)                                                                                  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_GET_CONST_RCP</name>
      <anchorfile>Teuchos__Handleable_8hpp.html</anchorfile>
      <anchor>a27f8fe5e9324ffa32c6c5c07a4555dfd</anchor>
      <arglist>(Base)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_HashSet.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__HashSet_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__HashUtils_8hpp" name="Teuchos_HashUtils.hpp" local="yes" imported="no">Teuchos_HashUtils.hpp</includes>
    <class kind="class">Teuchos::HashSet</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a82b1aac238579bd6c4eea4496a3a1e28</anchor>
      <arglist>(const HashSet&lt; Key &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a287ec9ca6414e3d490cde6832a0f0e48</anchor>
      <arglist>(std::ostream &amp;os, const HashSet&lt; Key &gt; &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Hashtable.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Hashtable_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__HashUtils_8hpp" name="Teuchos_HashUtils.hpp" local="yes" imported="no">Teuchos_HashUtils.hpp</includes>
    <class kind="class">Teuchos::HashPair</class>
    <class kind="class">Teuchos::Hashtable</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1d42ecd3b77d84f0a7ed1c5d241aeec4</anchor>
      <arglist>(const Hashtable&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9233ded94b66e0d758650582a04ae04a</anchor>
      <arglist>(std::ostream &amp;os, const Hashtable&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_HashUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__HashUtils_8cpp</filename>
    <includes id="Teuchos__HashUtils_8hpp" name="Teuchos_HashUtils.hpp" local="yes" imported="no">Teuchos_HashUtils.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_HashUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__HashUtils_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::HashUtils</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_implicit_cast.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__implicit__cast_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TypeTo</type>
      <name>implicit_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2375d9db50e699e24bcecdb41ea44ebe</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo &amp;</type>
      <name>implicit_ref_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8072d95b3ba7f4783625eedb75a4be7b</anchor>
      <arglist>(TypeFrom &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo *</type>
      <name>implicit_ptr_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a315f995bbc0d0cff4dd38440c48177ea</anchor>
      <arglist>(TypeFrom *t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_InvalidConditionException.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__InvalidConditionException_8hpp</filename>
    <class kind="class">Teuchos::InvalidConditionException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_InvalidDependencyException.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__InvalidDependencyException_8hpp</filename>
    <class kind="class">Teuchos::InvalidDependencyException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_iostream_helpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__iostream__helpers_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ENUM_INPUT_STREAM_OPERATOR</name>
      <anchorfile>Teuchos__iostream__helpers_8hpp.html</anchorfile>
      <anchor>a9a944b90cead1c0eeebf9c7a5b33bd5a</anchor>
      <arglist>(ENUMTYPE)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>enumIstreamExtractor</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1f7acb270bef70f008cf22d16e3e992b</anchor>
      <arglist>(std::istream &amp;std_is, EnumType &amp;enum_value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_LabeledObject.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__LabeledObject_8cpp</filename>
    <includes id="Teuchos__LabeledObject_8hpp" name="Teuchos_LabeledObject.hpp" local="yes" imported="no">Teuchos_LabeledObject.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_LabeledObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__LabeledObject_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::LabeledObject</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_LAPACK.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__LAPACK_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__LAPACK__wrappers_8hpp" name="Teuchos_LAPACK_wrappers.hpp" local="yes" imported="no">Teuchos_LAPACK_wrappers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>CHAR_MACRO</name>
      <anchorfile>Teuchos__LAPACK_8cpp.html</anchorfile>
      <anchor>a4851db723cbdcc37d751d15536baa2cd</anchor>
      <arglist>(char_var)</arglist>
    </member>
    <member kind="typedef">
      <type>int(*</type>
      <name>gees_nullfptr_t</name>
      <anchorfile>Teuchos__LAPACK_8cpp.html</anchorfile>
      <anchor>a62f810d86d176847a3384f881e0fa446</anchor>
      <arglist>)(double *, double *)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_LAPACK.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__LAPACK_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="struct">Teuchos::UndefinedLAPACKRoutine</class>
    <class kind="class">Teuchos::LAPACK</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_LAPACK_wrappers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__LAPACK__wrappers_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>PREFIX</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>add51b53e8b628f95078327028dccb20c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>Teuchos_fcd</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac4a885500a90ae259fb8a8ced4ae75a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEQRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2b25482ef5a53854a9593986c1c5dbb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEQR2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a39df0fa8b02b46c1dd76dc4ddc49931a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGETRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8d16f73dad99b3ad3153292c8e812f71</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGETRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aec2ec12f5f6992919a40828bc0074e76</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLASCL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9cfd1844690b35f45120fb76451a1919</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLASWP_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad3a97617f8ece73e061401a0257fb5ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGBTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8cf363d2a2dcbf8949b06c57d653c7ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGBTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a580ca3e0292cc5a8a150641bf2377513</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8fb80e04b4d9135039a9fd539a04d299</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0fc88ca3d90db0f0163530d16182eaa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae2ee815a3838b56cec9d1213dd8fada6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5053e21a8090974da2e3fa470da2df06</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGETRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab2482aaf8536f4f91a2b3d2495a2448c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGERFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3ece36f3d4a60cf40c4a353686cd4531</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGBRFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac571a6e3d02c73a7c5a5cd4a93f04927</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLATRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2349acf654df4411d8a728b3f093f61f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGECON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af991879275eca0da0d0d05b45c9f2da8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGBCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae810db5f3cfab6da41fcdc970a3a5c68</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLANGB_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a685b227422580432f3240484bc4eed1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGESVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac97f405a39ba3f3c8e0ef1e772e869cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGESV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7654300da70ed865552060f6344217da</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acb2906929702447e8a153acc7aa7fdaf</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGBEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad84e452611f50d3ae4301b15bfff9de5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSYTRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab23b0326f04611f78f98e0f7b2ab6f64</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa709c86ba017ef44acd34fee2e3a859c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8eb76a227861434773cb716ada3feff1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2b07f4fb39565114b9bb43ca6b6e72c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adee247502f8ce1d9f0aef353e804fbf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOSV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2f18772771365aa25c9b6a24c57984c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a555c497d093324476853f7a6525605af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPORFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a73c3932504a105fc969a0fb04adf0f5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DPOSVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae13b25353336cbfe214c99b9b1da9302</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adef46d5c75ac6535979d9ca794c87415</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a46776a6356d8a4dd3dc55f4a4f424a55</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLAMCH_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa36e3a34b935617fc725e0bf3334d6f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGELS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0229bcb2073f45d575e6a39a9cf0cafa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGELSS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a687d820cc3c781cf1897d83a675a0d34</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGGLSE_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa7d274e5c845f9118ec13ec2da2a8653</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a47feef6eacf5263b2c3c2994037f027b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGESVD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abe81fd3d7a08ff67636a2c76e004ac1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGGEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6c6df2fd80c2f06a95bf1367b50c2d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGGES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac10b7b4bbe294a62dd065f9fed4ab0be</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTRSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8a9894f6bc5d9ac1355bb62497932fcc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTGSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af109eb624315d42091f6c48d12a1212e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a511dc0d16fcb9824c3932f4c6d013d32</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGGEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3e0476d73e667c76aa59fa27081ff8c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEHRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a660a2425988831732996f1578293019f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DHSEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abd62422e9d3d535f0b85fc0ca8893a40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DORGHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a04af55c977d33c98ffcfaa75c3de66b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DORGQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a45c9189d0310a09368aeec170534536b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DORMHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a57b1e4566b7cffb23287e33614872680</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DORMQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab87b7b6c1275f14aac0baebe63d2a6fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DORM2R_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6fb34f72069ac6070b5f80a537e915f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTREVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>afa7afaed6ee77ebd4e45bf376c82df08</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTREXC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8569f3bb41d932ec2175e275c33ae7ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DTGEVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5440f77ae4718ef38c219076f395153b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a237c46ba68352eeac7e839a41f94f962</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSPEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7a6d772b77a53352f8350b0b2a874d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSYEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6441fc0f6a67e7ffc739e453bf135e72</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSYGV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af77440f9c458c47d4c650cf1f15a0ded</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DSTEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a507c64c13776fb181b05a63ae0ebcd0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLAPY2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4ba9720ae60c7b38c9fc5abd0748b31e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLARND_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aca53a18cd8afee383f4ff2cfbf7b3c33</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLARNV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a28eb8016f11adb6c90f370a4decb6f3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEBAL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab87852ecbc6bda328219a84a6d2ff971</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEBAK_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2ec846b89c29475748f41c397cffedfc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLARTG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a67c3a256771c4913dfd9bfbc7e6f93ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DLARFG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5f07fc596b6bc65a983b54e1806a1e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>ILAENV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac7851295da6083fb5727ecc6dae5f734</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>DGEQP3_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3661dd54266a6e7d8db9c21014601f70</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEQRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6b718dfec0a2a125722c3204f3e9f5af</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEQR2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8bd9af2345a079c2b78751937bac1966</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGETRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a74d110a71f0360236cefd048e7abc905</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGETRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acaa471ec24fedae6b6caa1c74714dace</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLASCL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a008915867520388bfba4a987ef6100a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLASWP_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a604de3319ebf9eeb069593fd678ebf97</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGBTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac0fe5f9dcee0a73697706bfc98e9ec93</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGBTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a58eeefa92b21b6d5ad0f9890d6386d2e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac47df39d2b167469773136757dd1150d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0131ba3cc8beea929afe8d431efe743d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac3cd3d7c5ea5225a4d3bf29b84a5be86</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5dc85354784d9de1ad0d2276e2a6af40</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGETRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adece5a181b0a12b50613062b37bdd4e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGERFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a373f0ccf627235abeaab0d8910ff69d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGBRFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9c66268beeb814a9a3c687b54ab8eb5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLATRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8a6e8edba0215c878de0f3070d904aa6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGECON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a29fdc315eebfa3be3dce91d3590b797c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGBCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a490bd3b82626f4dcde8bfa9253305ca5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLANGB_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a03a010c46a8463ccc0de5441fb59d325</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGESVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a68145bd72f345024af35220e9ad90053</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGESV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5dbc2883c8af700735d81abf33839070</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7cbfbb5c0082dd91788fd8373a4aa254</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGBEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a006d9b8ecb9e06b91129c96df6b2e198</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSYTRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae2047672066e0ed805a420d5efca263f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae755d0f43bbc3cfa0041d82d9a634c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4bfd220ee2511749d03d5ce6c3edbebd</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a81bc952560c5e404e52dc5ca92be6139</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8f2f5b669ecc5a1e586235142a8710fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOSV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adb3ee5b5b86a7d853a2debfe7b8e4ead</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7e2b827e4d2b741a19b3f81012d3f2a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPORFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a41aa7f91d8a359876d2fa9a4b348c79b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SPOSVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a17743b0e38a1abec8622c9729ea0b536</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4af4831870260c89c582e5fb32e9eeb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad921d46396a3cf96d58d7d96bc7f1f6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGELS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7deecc5a8845f60d90767fc5f9811965</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGELSS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a69a7ca30a69e05707044365f38d0d6b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGGLSE_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a378dc21ef7b2e42d73b09f853bfe87b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a1f74d3579881f3e7e3cfa7060194d7f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGESVD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abb983146a06a71c13abb5a8abf6ee114</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGGEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a559f1c7b619fe2c8e785d097f5f775ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGGES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ace0e8904df972652592d8fe4fb82877d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STRSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7267cbb81bac2301d8b1b470213b8e4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STGSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae12039dcc6838c6a19eda3ffc417441d</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a49c2722b310da838d707b1d01a73e32f</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGGEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae020a45cf273788cb7b8eeadadc63713</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEHRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab747f0ee91a283171ef4fe1d983c3cb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SHSEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0217f2880a5bbf247eec9ac6143a3f19</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORGHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9755ee220236dbe95f81226c626fde4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORGQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae9c521167fc127bebf334e724f585fdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORMHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a61709b7e17f41cad667a6350c6e4b293</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORMQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac847ed1be8adf81c2e040aa88bd251ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SORM2R_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a58313f6a7f0a06939b20717c5485a448</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STREVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a40d0ade7b8853f3a92cdf91026c65afa</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STREXC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a66fbb548b695ac638e0e3b118fe626bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STGEVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aea96a0b7ceccdcb1ac301f7dd45f359c</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLAMCH_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a65d1104bac5630a03631ac2233d07bbc</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a448adbcd7c6d47c3c33e4feebe897844</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSPEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8ec48767ba1e4fd60d591d2b686d08f6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSYEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3006e2d85e77855d1bcf4e8873b4b0b3</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSYGV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a20081474dcf450289babc3dfe9859f62</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SSTEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad833494bc6838845ff1f28eaae7088e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLARTG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af52bd86e2ba47407810ee8f955f15e82</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLARFG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af87306b964852fbc6b4206220d6f63d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEBAL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a70cb6573c3088b197b01b3b613c52a6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEBAK_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a944c6830d7cd81e4c6243c3145369e65</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLARND_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6508757d8d3133e5a5faf0e812efce26</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SLARNV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7c925293f051c5d549db6a63d5dda561</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SGEQP3_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3defebc4076751a60ea038e173ac83bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGELS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a339dde9336aee733f11eb2a486c98835</anchor>
      <arglist>(Teuchos_fcd ch, const int *m, const int *n, const int *nrhs, double *a, const int *lda, double *b, const int *ldb, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGELSS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a396f9cf863ce85339072e6ca757b155d</anchor>
      <arglist>(const int *m, const int *n, const int *nrhs, double *a, const int *lda, double *b, const int *ldb, double *s, const double *rcond, int *rank, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGGLSE_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab5321ef88b984186fe44a8bf59c383cd</anchor>
      <arglist>(const int *m, const int *n, const int *p, double *a, const int *lda, double *b, const int *ldb, double *c, double *d, double *x, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEQRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9b712bb32d7795fb8baea8f1a71d274e</anchor>
      <arglist>(const int *m, const int *n, double *a, const int *lda, double *tau, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEQR2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a111152407a7673f00b60eebd43951686</anchor>
      <arglist>(const int *const m, const int *const n, double a[], const int *const lda, double tau[], double work[], int *const info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGETRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8c410f492a434ee1fdd031f8abd87615</anchor>
      <arglist>(const int *m, const int *n, double *a, const int *lda, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGETRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>afa7dd9ac942cbb290e3bfaf5e76dc13d</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const double *a, const int *lda, const int *ipiv, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLASCL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aaf8546dec31c43501b0c6d9686f57da4</anchor>
      <arglist>(Teuchos_fcd, const int *kl, const int *ku, const double *cfrom, const double *cto, const int *m, const int *n, const double *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLASWP_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af66c857d83117ce2daddf9b4a75a2f4d</anchor>
      <arglist>(const int *N, double A[], const int *LDA, const int *K1, const int *K2, const int IPIV[], const int *INCX)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGBTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a1a57b05bd6a2e61afaa8d51f944d9fc4</anchor>
      <arglist>(const int *m, const int *n, const int *kl, const int *ku, double *a, const int *lda, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGBTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa09bf573e699b165ee5d56b1e8509c10</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *kl, const int *ku, const int *nrhs, const double *a, const int *lda, const int *ipiv, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a416854dee20c34343206e4e5e5f2e030</anchor>
      <arglist>(const int *n, double *dl, double *d, double *du, double *du2, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7a3a4206651f8d04d9a54af7f41e125a</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const double *dl, const double *d, const double *du, const double *du2, const int *ipiv, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac610cb8a862768b654a96d2ca14faa37</anchor>
      <arglist>(const int *n, double *d, double *e, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad9e9170426a0fa7a4a68b1befc9cdbd5</anchor>
      <arglist>(const int *n, const int *nrhs, const double *d, const double *e, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGETRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a45fa2e96d71a81e1ff5244c9dd6a3455</anchor>
      <arglist>(const int *n, double *a, const int *lda, const int *ipiv, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLATRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a31d783324ce6793b4c5e0c6ddf8e3b72</anchor>
      <arglist>(Teuchos_fcd UPLO, Teuchos_fcd TRANS, Teuchos_fcd DIAG, Teuchos_fcd NORMIN, const int *N, double *A, const int *LDA, double *X, double *SCALE, double *CNORM, int *INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGECON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae04e34280d44c1025dfc1a8f18a6a864</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const double *a, const int *lda, const double *anorm, double *rcond, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGBCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad2bd5cd5445b69bde06d523f32c9d7a9</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const int *kl, const int *ku, const double *a, const int *lda, int *IPIV, const double *anorm, double *rcond, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DLANGB_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a654c606603f5eec3051dce324b20a1da</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const int *kl, const int *ku, const double *a, const int *lda, double *work)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGESV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac6b5c4de42a00060b771abc0f7741265</anchor>
      <arglist>(const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a622b72a4e5a0d3ac32f58db9c5c24802</anchor>
      <arglist>(const int *m, const int *n, const double *a, const int *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGBEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a34fe046aee35a4ae5b6872d0bc03d7f6</anchor>
      <arglist>(const int *m, const int *n, const int *kl, const int *ku, const double *a, const int *lda, double *r, double *c, double *rowcnd, double *colcnd, double *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGERFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0fec95d67c96725514ff2a4d867d3c94</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const double *a, const int *lda, const double *af, const int *ldaf, const int *ipiv, const double *b, const int *ldb, double *x, const int *ldx, double *ferr, double *berr, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGBRFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af703faf83597665a5348fb6a56d38e0f</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *kl, const int *ku, const int *nrhs, const double *a, const int *lda, const double *af, const int *ldaf, const int *ipiv, const double *b, const int *ldb, double *x, const int *ldx, double *ferr, double *berr, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGESVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a09b8e3a8872bff51601e229c768dbf16</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, double *a, const int *lda, double *af, const int *ldaf, int *ipiv, Teuchos_fcd, double *r, double *c, double *b, const int *ldb, double *x, const int *ldx, double *rcond, double *ferr, double *berr, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSYTRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3284365fc9d11a0677c42582817ca035</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *a, const int *lda, double *D, double *E, double *tau, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8997a44653daf6bc53e61857c670467c</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a282bec48aa3989cd88c68252de486e28</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const double *a, const int *lda, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af784e938f651a29da8b96b5353ecfe17</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a46f3743467efe042ccfc6cc8e22e407f</anchor>
      <arglist>(Teuchos_fcd, const int *n, const double *a, const int *lda, const double *anorm, double *rcond, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOSV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af731481431679ba0c3460331b80b93b5</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, double *a, const int *lda, double *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aac0c2edaed456178fa63aa46b96380cc</anchor>
      <arglist>(const int *n, const double *a, const int *lda, double *s, double *scond, double *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPORFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a87074a716b72cd91b331e13c469f010b</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, double *a, const int *lda, const double *af, const int *ldaf, const double *b, const int *ldb, double *x, const int *ldx, double *ferr, double *berr, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DPOSVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adb4dd25e5dc399fd0b7195bbc9afda90</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, double *a, const int *lda, double *af, const int *ldaf, Teuchos_fcd, double *s, double *b, const int *ldb, double *x, const int *ldx, double *rcond, double *ferr, double *berr, double *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a696bf6d5fff7f6355c50303badd0a402</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, const double *a, const int *lda, double *b, const int *ldb, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6acac9c83419ad6c472dbb76815c2c2a</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const double *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEQP3_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>adabd75a89d129eef2eeea75d603224b4</anchor>
      <arglist>(const int *M, const int *N, double *A, const int *LDA, int *JPVT, double *TAU, double *WORK, const int *LWORK, int *INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGELS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa4f005122180e58c7d7800b27a31018c</anchor>
      <arglist>(Teuchos_fcd ch, const int *m, const int *n, const int *nrhs, float *a, const int *lda, float *b, const int *ldb, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGELSS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a652557d7f392000efee154494e75ad94</anchor>
      <arglist>(const int *m, const int *n, const int *nrhs, float *a, const int *lda, float *b, const int *ldb, float *s, const float *rcond, int *rank, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGGLSE_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aefc7ff3b6f1a7019fd18f1af6d7095e5</anchor>
      <arglist>(const int *m, const int *n, const int *p, float *a, const int *lda, float *b, const int *ldb, float *c, float *d, float *x, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEQRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a96c54945d3c07da4568722a4be17b2ae</anchor>
      <arglist>(const int *m, const int *n, float *a, const int *lda, float *tau, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEQR2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a17dc97bb9020dbd54a9649d0a34434ed</anchor>
      <arglist>(const int *const m, const int *const n, float a[], const int *const lda, float tau[], float work[], int *const info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGETRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a94f9cd283071d9d7966141854a9c38f8</anchor>
      <arglist>(const int *m, const int *n, float *a, const int *lda, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGETRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a418937cca08678f03af5778de519f0fa</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const float *a, const int *lda, const int *ipiv, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLASCL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a5ff1814d9e3d8aeb2cd974f840a82b73</anchor>
      <arglist>(Teuchos_fcd, const int *kl, const int *ku, const float *cfrom, const float *cto, const int *m, const int *n, const float *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLASWP_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9ac2169bd947c5bcc95f1a1752e06287</anchor>
      <arglist>(const int *N, float A[], const int *LDA, const int *K1, const int *K2, const int IPIV[], const int *INCX)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGBTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a936a943f673a8cb0d7ca25376c783e23</anchor>
      <arglist>(const int *m, const int *n, const int *kl, const int *ku, float *a, const int *lda, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGBTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a089e165ac3be2574ebe2bfb80d2d0328</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *kl, const int *ku, const int *nrhs, const float *a, const int *lda, const int *ipiv, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a777aac809976d5edc1c1c9eeb0941b98</anchor>
      <arglist>(const int *n, float *dl, float *d, float *du, float *du2, int *ipiv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abcba8ab6e6b9d31abbf6499e14f337b5</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const float *dl, const float *d, const float *du, const float *du2, const int *ipiv, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPTTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae777c323505dfabaf01b99c9302c3803</anchor>
      <arglist>(const int *n, float *d, float *e, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPTTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aef9196d18a0cb6501b57137ec1e0c028</anchor>
      <arglist>(const int *n, const int *nrhs, const float *d, const float *e, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGETRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a11cd143c583688df8d54319a2a4554f0</anchor>
      <arglist>(const int *n, float *a, const int *lda, const int *ipiv, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLATRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8730117cab8c591c195202b6350edfd6</anchor>
      <arglist>(Teuchos_fcd UPLO, Teuchos_fcd TRANS, Teuchos_fcd DIAG, Teuchos_fcd NORMIN, const int *N, float *A, const int *LDA, float *X, float *SCALE, float *CNORM, int *INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGECON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac7114298774cac033c4d5b30c261744f</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const float *a, const int *lda, const float *anorm, float *rcond, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGBCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acef927087121496f0de7607ea6539454</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const int *kl, const int *ku, const float *a, const int *lda, int *IPIV, const float *anorm, float *rcond, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>float PREFIX</type>
      <name>SLANGB_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a76fe5c1af38c0b52a439d8d48aa161b5</anchor>
      <arglist>(Teuchos_fcd norm, const int *n, const int *kl, const int *ku, const float *a, const int *lda, float *work)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGESV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa6acf0bec48c70a369414f426fb99e97</anchor>
      <arglist>(const int *n, const int *nrhs, float *a, const int *lda, int *ipiv, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af41eb831c5c523ee311747cbc7384320</anchor>
      <arglist>(const int *m, const int *n, const float *a, const int *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGBEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a2411615a15229e6e4cc3a3dd5b9b79d7</anchor>
      <arglist>(const int *m, const int *n, const int *kl, const int *ku, const float *a, const int *lda, float *r, float *c, float *rowcnd, float *colcnd, float *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGERFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7fdc6351c0389bd52f097cb4937f3383</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const float *a, const int *lda, const float *af, const int *ldaf, const int *ipiv, const float *b, const int *ldb, float *x, const int *ldx, float *ferr, float *berr, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGBRFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a1262dab6b950e7cbb362443aa32e15c5</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *kl, const int *ku, const int *nrhs, const float *a, const int *lda, const float *af, const int *ldaf, const int *ipiv, const float *b, const int *ldb, float *x, const int *ldx, float *ferr, float *berr, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGESVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acc1b2a384ce088e9f0a923c772eada1b</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, float *a, const int *lda, float *af, const int *ldaf, int *ipiv, Teuchos_fcd, float *r, float *c, float *b, const int *ldb, float *x, const int *ldx, float *rcond, float *ferr, float *berr, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSYTRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acc8996f396cd485345ab97a86bc3e66e</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *a, const int *lda, float *D, float *E, float *tau, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOTRF_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abdee778e73e4370e711b037d26dcc5c5</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aca9aa36f119f7b913aea5242db795b2c</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, const float *a, const int *lda, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a43f2017e28cb83b6f9a93f9368398650</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOCON_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ace8e7349bb32fecb1f822079799d4344</anchor>
      <arglist>(Teuchos_fcd, const int *n, const float *a, const int *lda, const float *anorm, float *rcond, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOSV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae3c94c4b2cbff5ccdfcf9317398ffe42</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, float *a, const int *lda, float *x, const int *ldx, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOEQU_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa0d0395a914dc740eb627d4d33c43b3f</anchor>
      <arglist>(const int *n, const float *a, const int *lda, float *s, float *scond, float *amax, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPORFS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3b0c774b8208b6faa6617816cc3385b2</anchor>
      <arglist>(Teuchos_fcd, const int *n, const int *nrhs, float *a, const int *lda, const float *af, const int *ldaf, const float *b, const int *ldb, float *x, const int *ldx, float *ferr, float *berr, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SPOSVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ab2e458baf8e2bb94d071a07e917d45cd</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, float *a, const int *lda, float *af, const int *ldaf, Teuchos_fcd, float *s, float *b, const int *ldb, float *x, const int *ldx, float *rcond, float *ferr, float *berr, float *work, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRTRS_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a24979ca2d5c49c9054c7ae96260ac1d0</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, const int *nrhs, const float *a, const int *lda, float *b, const int *ldb, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRTRI_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>acdbf85928809a760b2e1d0e1872ebe54</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const float *a, const int *lda, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEQP3_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad362bde9ca4dcef264efb84244c5dc08</anchor>
      <arglist>(const int *M, const int *N, float *A, const int *LDA, int *JPVT, float *TAU, float *WORK, const int *LWORK, int *INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSPEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3160430d080a7187b55a72bba55c5a7c</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, double *ap, double *w, double *z, const int *ldz, double *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSYEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a54c5dd5b7fbc6471f367e31ceae9f87a</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, double *a, const int *lda, double *w, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSYGV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7c55adde07e98d2e1b85fcf6146cec9a</anchor>
      <arglist>(const int *itype, Teuchos_fcd, Teuchos_fcd, const int *n, double *a, const int *lda, double *B, const int *ldb, double *w, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DSTEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aed6c7b58ec73171a23c14781cd9d5ec7</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *D, double *E, double *Z, const int *ldz, double *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a91882e6fb86a1e6d885d4b7aa7445b96</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, double *a, const int *lda, double *wr, double *wi, double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGGEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a6c28d4958cd9db71ca51cfdde3133388</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, double *A, const int *lda, double *B, const int *ldb, double *alphar, double *alphai, double *beta, double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGGES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4735ea1734e7435126e28b03621aa4a3</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, int(*ptr2func)(double *, double *, double *), const int *n, double *A, const int *lda, double *B, const int *ldb, int *sdim, double *alphar, double *alphai, double *beta, double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTRSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4ec5acb16f213c26db811ca7c5e39f73</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *select, const int *n, double *t, const int *ldt, double *q, const int *ldq, double *wr, double *wi, int *m, double *s, double *sep, double *work, const int *lwork, int *iwork, const int *liwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTGSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a1246b2bc9d764f02c6accc34456ef130</anchor>
      <arglist>(const int *ijob, const int *wantq, const int *wantz, const int *select, const int *n, double *a, const int *lda, double *b, const int *ldb, double *alphar, double *alphai, double *beta, double *q, const int *ldq, double *z, const int *ldz, int *m, double *pl, double *pr, double *dif, double *work, const int *lwork, int *iwork, const int *liwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGESVD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a806f270324ef16538f4e714f24d4160f</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, double *a, const int *lda, double *s, double *u, const int *ldu, double *v, const int *ldv, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGGEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af7e956818f58da6763b3ab7765993517</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, double *a, const int *lda, double *b, const int *ldb, double *alphar, double *alphai, double *beta, double *vl, const int *ldvl, double *vr, const int *ldvr, int *ilo, int *ihi, double *lscale, double *rscale, double *abnrm, double *bbnrm, double *rconde, double *rcondv, double *work, const int *lwork, int *iwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac4cefc140572ed68703a1835dd86ab8b</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, double *a, const int *lda, double *alphar, double *alphai, double *vl, const int *ldvl, double *vr, const int *ldvr, int *ilo, int *ihi, double *scale, double *abnrm, double *rconde, double *rcondv, double *work, const int *lwork, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEHRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a4fe5a40ced08e4492040e817c72f1deb</anchor>
      <arglist>(const int *n, const int *ilo, const int *ihi, double *A, const int *lda, double *tau, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DHSEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aee275f11dc7b6e40935c7cdd7bf7539f</anchor>
      <arglist>(Teuchos_fcd job, Teuchos_fcd, const int *n, const int *ilo, const int *ihi, double *h, const int *ldh, double *wr, double *wi, double *z, const int *ldz, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa60c0ebc7f84271f6dc503a85d12762d</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, int(*ptr2func)(double *, double *), const int *n, double *a, const int *lda, int *sdim, double *wr, double *wi, double *vs, const int *ldvs, double *work, const int *lwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DORGHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac57afbe2377d57e51d90d289159bf553</anchor>
      <arglist>(const int *n, const int *ilo, const int *ihi, double *a, const int *lda, const double *tau, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DORMHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8b2cb4daaeff127e949c18d8f42f5650</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *ilo, const int *ihi, const double *a, const int *lda, const double *tau, double *c, const int *ldc, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DORGQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a31be7ecbac7031b7018b8b6fa6ef129d</anchor>
      <arglist>(const int *m, const int *n, const int *k, double *a, const int *lda, const double *tau, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DORMQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a1f0195fa5ecd16398a90125b58b9085d</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *k, double *a, const int *lda, const double *tau, double *C, const int *ldc, double *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DORM2R_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a026b51a72db29549fc6b304b440902e1</anchor>
      <arglist>(Teuchos_fcd SIDE, Teuchos_fcd TRANS, const int *const M, const int *const N, const int *const K, const double A[], const int *const LDA, const double TAU[], double C[], const int *const LDC, double WORK[], int *const INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTREVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac3bbd466c4a67ff5c3d0eb6dfc631990</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, int *select, const int *n, const double *t, const int *ldt, double *vl, const int *ldvl, double *vr, const int *ldvr, const int *mm, int *m, double *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTREXC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af5d2ba409a18ea73f2acfca9c6df410e</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *t, const int *ldt, double *q, const int *ldq, int *ifst, int *ilst, double *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DTGEVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a00a8897c02162e2891f4c9e085df274c</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *select, const int *n, double *s, const int *lds, double *p, const int *ldp, double *vl, const int *ldvl, double *vr, const int *ldvr, const int *mm, int *m, double *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSPEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a33eab0fd144aadc25c3560da36492cfe</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, float *ap, float *w, float *z, const int *ldz, float *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSYEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a85c71c78b7d485203230559104ad7625</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, float *a, const int *lda, float *w, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSYGV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a061ccfaf3007d68f009e05378b4ec44e</anchor>
      <arglist>(const int *itype, Teuchos_fcd, Teuchos_fcd, const int *n, float *a, const int *lda, float *B, const int *ldb, float *w, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SSTEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3cde41b6fd3a0dce0e9a3e4cfba61ea4</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *D, float *E, float *Z, const int *ldz, float *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a9f7cda50c6b163b0c84e165b6c1953cc</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, float *a, const int *lda, float *wr, float *wi, float *vl, const int *ldvl, float *vr, const int *ldvr, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGGEV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8efb30d89c6d496099a28a5d02f9d24c</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, float *A, const int *lda, float *B, const int *ldb, float *alphar, float *alphai, float *beta, float *vl, const int *ldvl, float *vr, const int *ldvr, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGGES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a8b8de5906ecdcb9c9a5a4252a81fac4d</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, int(*ptr2func)(float *, float *, float *), const int *n, float *A, const int *lda, float *B, const int *ldb, int *sdim, float *alphar, float *alphai, float *beta, float *vl, const int *ldvl, float *vr, const int *ldvr, float *work, const int *lwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STRSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa2738f04155fcc198f933a8a6c10cc9b</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *select, const int *n, float *t, const int *ldt, float *q, const int *ldq, float *wr, float *wi, int *m, float *s, float *sep, float *work, const int *lwork, int *iwork, const int *liwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STGSEN_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a3de0330e3315d24829be3ddbae796eba</anchor>
      <arglist>(const int *ijob, const int *wantq, const int *wantz, const int *select, const int *n, float *a, const int *lda, float *b, const int *ldb, float *alphar, float *alphai, float *beta, float *q, const int *ldq, float *z, const int *ldz, int *m, float *pl, float *pr, float *dif, float *work, const int *lwork, int *iwork, const int *liwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGESVD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae1abf37b69c05f0c60ea694f580a1a20</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, float *a, const int *lda, float *s, float *u, const int *ldu, float *v, const int *ldv, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGGEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>abe1dc241c4614b87037b8ade305b2c8e</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, float *a, const int *lda, float *b, const int *ldb, float *alphar, float *alphai, float *beta, float *vl, const int *ldvl, float *vr, const int *ldvr, int *ilo, int *ihi, float *lscale, float *rscale, float *abnrm, float *bbnrm, float *rconde, float *rcondv, float *work, const int *lwork, int *iwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEEVX_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a45a6b0cb8bb3dee3473d47122bf6c4e6</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, Teuchos_fcd, const int *n, float *a, const int *lda, float *wr, float *wi, float *vl, const int *ldvl, float *vr, const int *ldvr, int *ilo, int *ihi, float *scale, float *abnrm, float *rconde, float *rcondv, float *work, const int *lwork, int *iwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEHRD_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af806900e272b808dd98fed81b0ac7eef</anchor>
      <arglist>(const int *n, const int *ilo, const int *ihi, float *A, const int *lda, float *tau, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SHSEQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7ce169c111e4d32d2c08207b2186273c</anchor>
      <arglist>(Teuchos_fcd job, Teuchos_fcd, const int *n, const int *ilo, const int *ihi, float *h, const int *ldh, float *wr, float *wi, float *z, const int *ldz, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEES_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac590aeb16a8ea3928fe755c79384c5d0</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, int(*ptr2func)(float *, float *), const int *n, float *a, const int *lda, int *sdim, float *wr, float *wi, float *vs, const int *ldvs, float *work, const int *lwork, int *bwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SORGHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af7e859bf26d9673aa8bcff752ee2a65e</anchor>
      <arglist>(const int *n, const int *ilo, const int *ihi, float *a, const int *lda, const float *tau, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SORMHR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac548cbb7b9175f3f610ad6d4e338a8b0</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *ilo, const int *ihi, const float *a, const int *lda, const float *tau, float *c, const int *ldc, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SORGQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aad18ed022da9f66270a74424b1a15e41</anchor>
      <arglist>(const int *m, const int *n, const int *k, float *a, const int *lda, const float *tau, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SORMQR_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>af711b9c7d8d16336aa2f284066624667</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *m, const int *n, const int *k, float *a, const int *lda, const float *tau, float *C, const int *ldc, float *work, const int *lwork, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SORM2R_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad3502827a70eff93b6f0705f53367b64</anchor>
      <arglist>(Teuchos_fcd SIDE, Teuchos_fcd TRANS, const int *const M, const int *const N, const int *const K, const float A[], const int *const LDA, const float TAU[], float C[], const int *const LDC, float WORK[], int *const INFO)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STREVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a7bea5e279e58285c0db0ba99e6d97c42</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, int *select, const int *n, const float *t, const int *ldt, float *vl, const int *ldvl, float *vr, const int *ldvr, const int *mm, int *m, float *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STREXC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a786230a5adfc6ed709233325be380932</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *t, const int *ldt, float *q, const int *ldq, int *ifst, int *ilst, float *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>STGEVC_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a30224b73f76ef546c9788be2302c87bd</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *select, const int *n, float *s, const int *lds, float *p, const int *ldp, float *vl, const int *ldvl, float *vr, const int *ldvr, const int *mm, int *m, float *work, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLARTG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aee6735e02cbbef3af30532be535acad4</anchor>
      <arglist>(const float *f, const float *g, float *c, float *s, float *r)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLARTG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aab9b3f6f20b12e875be8845228ea6be5</anchor>
      <arglist>(const double *f, const double *g, double *c, double *s, double *r)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLARFG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a56c7bc6913b3a6c13fd2482df174ea1b</anchor>
      <arglist>(const int *n, float *alpha, float *x, const int *incx, float *tau)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLARFG_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a12df54156c06d6ba68f8e17b7f68976f</anchor>
      <arglist>(const int *n, double *alpha, double *x, const int *incx, double *tau)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEBAL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aa15aa91d57e2aa9bab51fb33c61bc0f3</anchor>
      <arglist>(Teuchos_fcd, const int *n, float *a, const int *lda, int *ilo, int *ihi, float *scale, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SGEBAK_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0a690701e6bc2fb6874131aaa270d660</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *ilo, const int *ihi, const float *scale, const int *m, float *V, const int *ldv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEBAL_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ae2eb4e9a76ee854b6aa30aa71f6241b5</anchor>
      <arglist>(Teuchos_fcd, const int *n, double *a, const int *lda, int *ilo, int *ihi, double *scale, int *info)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DGEBAK_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a52ddf40f476fc51bcf990ac596d68351</anchor>
      <arglist>(Teuchos_fcd, Teuchos_fcd, const int *n, const int *ilo, const int *ihi, const double *scale, const int *m, double *V, const int *ldv, int *info)</arglist>
    </member>
    <member kind="function">
      <type>float PREFIX</type>
      <name>SLARND_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a76726e67773f8636ab5951ca1d9d93ce</anchor>
      <arglist>(const int *idist, int *seed)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DLARND_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad76cea30e2686ae80afb296c0702f430</anchor>
      <arglist>(const int *idist, int *seed)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>SLARNV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a25291fabda33727d02a767ee208a306c</anchor>
      <arglist>(const int *idist, int *seed, const int *n, float *v)</arglist>
    </member>
    <member kind="function">
      <type>void PREFIX</type>
      <name>DLARNV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ac36cd4dec08b7a715d4fad94ee9f7e71</anchor>
      <arglist>(const int *idist, int *seed, const int *n, double *v)</arglist>
    </member>
    <member kind="function">
      <type>float PREFIX</type>
      <name>SLAMCH_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>aeba7cfdf82529ded17bf2a8975ed0f2c</anchor>
      <arglist>(Teuchos_fcd)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DLAMCH_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a646c98ccd4f10d34fc2102bf63d3023e</anchor>
      <arglist>(Teuchos_fcd)</arglist>
    </member>
    <member kind="function">
      <type>int PREFIX</type>
      <name>ILAENV_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>a0d6aa1ddc51d2b6410e244cb363a096a</anchor>
      <arglist>(const int *ispec, const char *name, const char *opts, const int *N1, const int *N2, const int *N3, const int *N4, unsigned int name_length, unsigned int opts_length)</arglist>
    </member>
    <member kind="function">
      <type>double PREFIX</type>
      <name>DLAPY2_F77</name>
      <anchorfile>Teuchos__LAPACK__wrappers_8hpp.html</anchorfile>
      <anchor>ad4760584cb3c782a9f59152da866bbd9</anchor>
      <arglist>(const double *x, const double *y)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Libxml2HandlerAdapter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__Libxml2HandlerAdapter_8cpp</filename>
    <includes id="Teuchos__Libxml2HandlerAdapter_8hpp" name="Teuchos_Libxml2HandlerAdapter.hpp" local="yes" imported="no">Teuchos_Libxml2HandlerAdapter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_Libxml2HandlerAdapter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__Libxml2HandlerAdapter_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_LocalTestingHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__LocalTestingHelpers_8hpp</filename>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>ECHO</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>ae9c7a31125aae74c09f3fa2c156e4ad3</anchor>
      <arglist>(statement)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ASSERT</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a0794ff7d415d63cb6a741ecc7829d544</anchor>
      <arglist>(v1)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY_CONST</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a16faa3967480b850d744e47ce9bccbcf</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a271ec441ac1142dfb774bafdc85480c3</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_INEQUALITY_CONST</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a09ef4477a5d6191e6ded23c6e4bc2042</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_INEQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>aa04abcef97b814582e3df284fd1a1010</anchor>
      <arglist>(v1, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_FLOATING_EQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>aa60899c51ae9ffa9e76ca5cb41d7a0eb</anchor>
      <arglist>(v1, v2, tol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ITER_EQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>af3874a65ee5620009bead2b18cbadd8c</anchor>
      <arglist>(iter1, iter2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ITER_INEQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>abbba668602401488782a62f122e6fd64</anchor>
      <arglist>(iter1, iter2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ARRAY_ELE_EQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a89bd8a3f5197e70205549eabe7f0bb39</anchor>
      <arglist>(a, i, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ARRAY_ELE_INEQUALITY</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a13bc9dee082e160d4c075ef36ea28cae</anchor>
      <arglist>(a, i, val)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>ae512a9514871155d6ebc86d69d5e7f6b</anchor>
      <arglist>(v1, comp, v2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE_ARRAYS</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a954afd05d9d3f2d0f874af90984923ea</anchor>
      <arglist>(a1, a2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE_FLOATING_ARRAYS</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>ad3fb79c9811b4beac9b8b67821d7ca75</anchor>
      <arglist>(a1, a2, tol)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_THROW</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>abcc027da0e0998e45818e918e91b0510</anchor>
      <arglist>(code, ExceptType )</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_NOTHROW</name>
      <anchorfile>Teuchos__LocalTestingHelpers_8hpp.html</anchorfile>
      <anchor>a221e1ef2da7f1de85c3e4813062c5815</anchor>
      <arglist>(code )</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_map.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__map_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_assignScalar.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__assignScalar_8hpp</filename>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="no" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="no" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::details::ScalarAssigner</class>
    <class kind="class">Teuchos::MatrixMarket::details::ScalarAssigner&lt; RealType, false &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::details</namespace>
    <member kind="function">
      <type>void</type>
      <name>assignScalar</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a49905c03285cff67e0c01f58e3649894</anchor>
      <arglist>(Scalar &amp;val, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;real, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;imag)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Banner.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Banner_8cpp</filename>
    <includes id="Teuchos__MatrixMarket__Banner_8hpp" name="Teuchos_MatrixMarket_Banner.hpp" local="yes" imported="no">Teuchos_MatrixMarket_Banner.hpp</includes>
    <includes id="Teuchos__MatrixMarket__split_8hpp" name="Teuchos_MatrixMarket_split.hpp" local="yes" imported="no">Teuchos_MatrixMarket_split.hpp</includes>
    <includes id="Teuchos__TestForException_8hpp" name="Teuchos_TestForException.hpp" local="yes" imported="no">Teuchos_TestForException.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a6f567c999cdcb01b40e045467b9552fa</anchor>
      <arglist>(std::ostream &amp;out, const Banner &amp;banner)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Banner.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Banner_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Banner</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a6f567c999cdcb01b40e045467b9552fa</anchor>
      <arglist>(std::ostream &amp;out, const Banner &amp;banner)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_CoordDataReader.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__CoordDataReader_8hpp</filename>
    <includes id="Teuchos__MatrixMarket__generic_8hpp" name="Teuchos_MatrixMarket_generic.hpp" local="yes" imported="no">Teuchos_MatrixMarket_generic.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReaderBase</class>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReader</class>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReader&lt; Callback, Ordinal, Scalar, false &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::CoordPatternReader</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_generic.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__generic_8cpp</filename>
    <includes id="Teuchos__MatrixMarket__generic_8hpp" name="Teuchos_MatrixMarket_generic.hpp" local="yes" imported="no">Teuchos_MatrixMarket_generic.hpp</includes>
    <includes id="Teuchos__MatrixMarket__split_8hpp" name="Teuchos_MatrixMarket_split.hpp" local="yes" imported="no">Teuchos_MatrixMarket_split.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="function">
      <type>int</type>
      <name>maxLineLength</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>abb30e328d1df0e6f796f8828ac4ab664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCommentLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a4bd717b41090f13b7e9e5819e95d452d</anchor>
      <arglist>(const std::string &amp;line, size_t &amp;start, size_t &amp;size, const size_t lineNumber, const bool tolerant, const bool maybeBannerLine=false)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_generic.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__generic_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="function">
      <type>int</type>
      <name>maxLineLength</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>abb30e328d1df0e6f796f8828ac4ab664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCommentLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a4bd717b41090f13b7e9e5819e95d452d</anchor>
      <arglist>(const std::string &amp;line, size_t &amp;start, size_t &amp;size, const size_t lineNumber, const bool tolerant, const bool maybeBannerLine=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readPatternData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a219a3b506797c69cd6c3ccf1a432c49d</anchor>
      <arglist>(std::istream &amp;istr, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readRealData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>af3e287675a627409418a15ef51e181c4</anchor>
      <arglist>(std::istream &amp;istr, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, Real &amp;realValue, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readPatternLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>ace524f6918b3bbeb29b894730bd3ca3e</anchor>
      <arglist>(const std::string &amp;line, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readRealLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>ac4743cd282619c49f47dd390552755cd</anchor>
      <arglist>(const std::string &amp;line, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, Real &amp;realValue, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, std::vector&lt; size_t &gt; &gt;</type>
      <name>readPatternCoordinateData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a64b6cf6bcc7e265171f314b4ac82bdc6</anchor>
      <arglist>(std::istream &amp;in, PatternCallback add, const size_t startingLineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readCoordinateDimensions</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a0b4516b195f7d45db476c1a674a05cdd</anchor>
      <arglist>(std::istream &amp;in, Ordinal &amp;numRows, Ordinal &amp;numCols, Ordinal &amp;numNonzeros, size_t &amp;lineNumber, const bool tolerant)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Raw_Adder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Raw__Adder_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__MatrixMarket__Banner_8hpp" name="Teuchos_MatrixMarket_Banner.hpp" local="yes" imported="no">Teuchos_MatrixMarket_Banner.hpp</includes>
    <includes id="Teuchos__MatrixMarket__CoordDataReader_8hpp" name="Teuchos_MatrixMarket_CoordDataReader.hpp" local="yes" imported="no">Teuchos_MatrixMarket_CoordDataReader.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Raw::Element</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::Adder</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1Raw.html</anchorfile>
      <anchor>a046b191164be939cbd23a0e35544729f</anchor>
      <arglist>(std::ostream &amp;out, const Element&lt; Scalar, Ordinal &gt; &amp;elt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Raw_Checker.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Raw__Checker_8hpp</filename>
    <includes id="Teuchos__MatrixMarket__Raw__Adder_8hpp" name="Teuchos_MatrixMarket_Raw_Adder.hpp" local="yes" imported="no">Teuchos_MatrixMarket_Raw_Adder.hpp</includes>
    <includes id="Teuchos__MatrixMarket__SymmetrizingAdder_8hpp" name="Teuchos_MatrixMarket_SymmetrizingAdder.hpp" local="yes" imported="no">Teuchos_MatrixMarket_SymmetrizingAdder.hpp</includes>
    <includes id="Teuchos__MatrixMarket__CoordDataReader_8hpp" name="Teuchos_MatrixMarket_CoordDataReader.hpp" local="yes" imported="no">Teuchos_MatrixMarket_CoordDataReader.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Raw::Checker</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Raw_Graph_Adder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Raw__Graph__Adder_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ArrayRCP_8hpp" name="Teuchos_ArrayRCP.hpp" local="yes" imported="no">Teuchos_ArrayRCP.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__MatrixMarket__Banner_8hpp" name="Teuchos_MatrixMarket_Banner.hpp" local="yes" imported="no">Teuchos_MatrixMarket_Banner.hpp</includes>
    <includes id="Teuchos__MatrixMarket__CoordDataReader_8hpp" name="Teuchos_MatrixMarket_CoordDataReader.hpp" local="yes" imported="no">Teuchos_MatrixMarket_CoordDataReader.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Raw::GraphElement</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::GraphAdder</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1Raw.html</anchorfile>
      <anchor>a31f9015a3cc8229e80536f5be23127f0</anchor>
      <arglist>(std::ostream &amp;out, const GraphElement&lt; Ordinal &gt; &amp;elt)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Raw_Reader.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Raw__Reader_8hpp</filename>
    <includes id="Teuchos__MatrixMarket__Raw__Adder_8hpp" name="Teuchos_MatrixMarket_Raw_Adder.hpp" local="yes" imported="no">Teuchos_MatrixMarket_Raw_Adder.hpp</includes>
    <includes id="Teuchos__MatrixMarket__SymmetrizingAdder_8hpp" name="Teuchos_MatrixMarket_SymmetrizingAdder.hpp" local="yes" imported="no">Teuchos_MatrixMarket_SymmetrizingAdder.hpp</includes>
    <includes id="Teuchos__MatrixMarket__CoordDataReader_8hpp" name="Teuchos_MatrixMarket_CoordDataReader.hpp" local="yes" imported="no">Teuchos_MatrixMarket_CoordDataReader.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Raw::Reader</class>
    <namespace>Teuchos</namespace>
    <namespace>MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Raw</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_Raw_Writer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__Raw__Writer_8hpp</filename>
    <includes id="Teuchos__MatrixMarket__SetScientific_8hpp" name="Teuchos_MatrixMarket_SetScientific.hpp" local="yes" imported="no">Teuchos_MatrixMarket_SetScientific.hpp</includes>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::Raw::Writer</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_SetScientific.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__SetScientific_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="no" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="no" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, true &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, false &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientific</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::details</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_split.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__split_8cpp</filename>
    <includes id="Teuchos__MatrixMarket__split_8hpp" name="Teuchos_MatrixMarket_split.hpp" local="yes" imported="no">Teuchos_MatrixMarket_split.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::details</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>ab24597d8633896c0edf54bc205de91f1</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a5ac6e44cf74b0bfe0adff0028d901e13</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim_and_lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>aa111ea03e0279d14e49664d05cd3610a</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>endToken</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a1151389080490fde796d6d0af2970fe7</anchor>
      <arglist>(const std::pair&lt; size_t, size_t &gt; &amp;range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; size_t, size_t &gt;</type>
      <name>nextToken</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a309e62a15084f859fd4564304e373643</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delimiters, const size_t start, const size_t size)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a11dd907e7fdd7f5e49304173a3bc68cf</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delimiters, const size_t start=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_split.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__split_8hpp</filename>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MatrixMarket::details</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>ab24597d8633896c0edf54bc205de91f1</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a5ac6e44cf74b0bfe0adff0028d901e13</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim_and_lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>aa111ea03e0279d14e49664d05cd3610a</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a11dd907e7fdd7f5e49304173a3bc68cf</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delimiters, const size_t start=0)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_SymmetrizingAdder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__SymmetrizingAdder_8hpp</filename>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="no" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="no" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::SymmetrizingAdder</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TRILINOS_UNUSED_FUNCTION</name>
      <anchorfile>Teuchos__MatrixMarket__SymmetrizingAdder_8hpp.html</anchorfile>
      <anchor>a6d5e45cb566e03500d26a2f9644448e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MatrixMarket_SymmetrizingGraphAdder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__MatrixMarket__SymmetrizingGraphAdder_8hpp</filename>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="no" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="no" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::MatrixMarket::SymmetrizingGraphAdder</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TRILINOS_UNUSED_FUNCTION</name>
      <anchorfile>Teuchos__MatrixMarket__SymmetrizingGraphAdder_8hpp.html</anchorfile>
      <anchor>a6d5e45cb566e03500d26a2f9644448e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_MpiReductionOpSetter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__MpiReductionOpSetter_8cpp</filename>
    <includes id="Teuchos__MpiReductionOpSetter_8hpp" name="Teuchos_MpiReductionOpSetter.hpp" local="yes" imported="no">Teuchos_MpiReductionOpSetter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_MpiReductionOpSetter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__MpiReductionOpSetter_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_MPITraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__MPITraits_8hpp</filename>
    <class kind="class">Teuchos::MPITraits</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_NullIteratorTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__NullIteratorTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::NullIteratorTraits</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; std::reverse_iterator&lt; Iter &gt; &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Object.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Object_8cpp</filename>
    <includes id="Teuchos__Object_8hpp" name="Teuchos_Object.hpp" local="yes" imported="no">Teuchos_Object.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3d91983b560dd687b96c6950dff7a945</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Object &amp;obj)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Object.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Object_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <class kind="class">Teuchos::Object</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ObjectBuilder.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ObjectBuilder_8hpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <includes id="Teuchos__AbstractFactoryStd_8hpp" name="Teuchos_AbstractFactoryStd.hpp" local="yes" imported="no">Teuchos_AbstractFactoryStd.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <class kind="class">Teuchos::ObjectBuilder</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>RCP&lt; ObjectBuilder&lt; ObjectType &gt; &gt;</type>
      <name>objectBuilder</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aca8c0977ded0bdb1da41969c06805155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ObjectBuilder&lt; ObjectType &gt; &gt;</type>
      <name>objectBuilder</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a499bea0be0538b955d28d7c61614cd9e</anchor>
      <arglist>(const std::string &amp;objectName, const std::string &amp;objectTypeName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_oblackholestream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__oblackholestream_8hpp</filename>
    <includes id="Teuchos__basic__oblackholestream_8hpp" name="Teuchos_basic_oblackholestream.hpp" local="yes" imported="no">Teuchos_basic_oblackholestream.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="typedef">
      <type>basic_oblackholestream&lt; char, std::char_traits&lt; char &gt; &gt;</type>
      <name>oblackholestream</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0e0501e9c74a9fadd6e741c26456393</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_OpaqueWrapper.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__OpaqueWrapper_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::OpaqueWrapper</class>
    <class kind="class">Teuchos::OpaqueWrapperWithFree</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_OrdinalTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__OrdinalTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="struct">Teuchos::UndefinedOrdinalTraits</class>
    <class kind="struct">Teuchos::OrdinalTraits</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntry.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntry_8cpp</filename>
    <includes id="Teuchos__ParameterEntry_8hpp" name="Teuchos_ParameterEntry.hpp" local="yes" imported="no">Teuchos_ParameterEntry.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntry.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntry_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__any_8hpp" name="Teuchos_any.hpp" local="yes" imported="no">Teuchos_any.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ParameterEntryValidator_8hpp" name="Teuchos_ParameterEntryValidator.hpp" local="yes" imported="no">Teuchos_ParameterEntryValidator.hpp</includes>
    <class kind="class">Teuchos::ParameterEntry</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntryValidator.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntryValidator_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <class kind="class">Teuchos::ParameterEntryValidator</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntryXMLConverter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntryXMLConverter_8cpp</filename>
    <includes id="Teuchos__ParameterEntryXMLConverter_8hpp" name="Teuchos_ParameterEntryXMLConverter.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverter.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverter_8hpp" name="Teuchos_ValidatorXMLConverter.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverter.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntryXMLConverter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntryXMLConverter_8hpp</filename>
    <includes id="Teuchos__ParameterEntry_8hpp" name="Teuchos_ParameterEntry.hpp" local="yes" imported="no">Teuchos_ParameterEntry.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <class kind="class">Teuchos::ParameterEntryXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntryXMLConverterDB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntryXMLConverterDB_8cpp</filename>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterEntryXMLConverterDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterEntryXMLConverterDB_8hpp</filename>
    <includes id="Teuchos__StandardParameterEntryXMLConverters_8hpp" name="Teuchos_StandardParameterEntryXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryXMLConverters.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <class kind="class">Teuchos::ParameterEntryXMLConverterDB</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_TYPE_CONVERTER</name>
      <anchorfile>Teuchos__ParameterEntryXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a339c9174d4e5c837d62ec1234a3bbda3</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_ARRAYTYPE_CONVERTER</name>
      <anchorfile>Teuchos__ParameterEntryXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a820a44d4bbc1890c160be54e7423ea1a</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_TYPE_AND_ARRAYTYPE_CONVERTER</name>
      <anchorfile>Teuchos__ParameterEntryXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a778a487950302ec3f2a058ee33bc9f14</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterList.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterList_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterList.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterList_8hpp</filename>
    <includes id="Teuchos__ParameterListExceptions_8hpp" name="Teuchos_ParameterListExceptions.hpp" local="yes" imported="no">Teuchos_ParameterListExceptions.hpp</includes>
    <includes id="Teuchos__ParameterEntry_8hpp" name="Teuchos_ParameterEntry.hpp" local="yes" imported="no">Teuchos_ParameterEntry.hpp</includes>
    <includes id="Teuchos__StringIndexedOrderedValueObjectContainer_8hpp" name="Teuchos_StringIndexedOrderedValueObjectContainer.hpp" local="yes" imported="no">Teuchos_StringIndexedOrderedValueObjectContainer.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__map_8hpp" name="Teuchos_map.hpp" local="yes" imported="no">Teuchos_map.hpp</includes>
    <class kind="class">Teuchos::ParameterList</class>
    <class kind="class">Teuchos::ParameterList::PrintOptions</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; ParameterList &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptor_8cpp</filename>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptor_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::RCP</class>
    <class kind="class">Teuchos::ParameterListAcceptor</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptorDefaultBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptorDefaultBase_8cpp</filename>
    <includes id="Teuchos__ParameterListAcceptorDefaultBase_8hpp" name="Teuchos_ParameterListAcceptorDefaultBase.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptorDefaultBase.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptorDefaultBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptorDefaultBase_8hpp</filename>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <class kind="class">Teuchos::ParameterListAcceptorDefaultBase</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptorHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptorHelpers_8cpp</filename>
    <includes id="Teuchos__ParameterListAcceptorHelpers_8hpp" name="Teuchos_ParameterListAcceptorHelpers.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptorHelpers.hpp</includes>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListAcceptorHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListAcceptorHelpers_8hpp</filename>
    <includes id="Teuchos__ParameterListAcceptor_8hpp" name="Teuchos_ParameterListAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptor.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>printValidParameters</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9a5fa1d8b51e6181bd2d1836b4fc5622</anchor>
      <arglist>(const ParameterListAcceptor &amp;paramListAccpetor, std::ostream &amp;out, const bool showDoc=true)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListExceptions_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::Exceptions::InvalidParameter</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterName</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterType</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterValue</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::Exceptions</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListNonAcceptor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListNonAcceptor_8cpp</filename>
    <includes id="Teuchos__ParameterListNonAcceptor_8hpp" name="Teuchos_ParameterListNonAcceptor.hpp" local="yes" imported="no">Teuchos_ParameterListNonAcceptor.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterListNonAcceptor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterListNonAcceptor_8hpp</filename>
    <includes id="Teuchos__ParameterListAcceptorDefaultBase_8hpp" name="Teuchos_ParameterListAcceptorDefaultBase.hpp" local="yes" imported="no">Teuchos_ParameterListAcceptorDefaultBase.hpp</includes>
    <class kind="class">Teuchos::ParameterListNonAcceptor</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterXMLFileReader.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterXMLFileReader_8cpp</filename>
    <includes id="Teuchos__ParameterXMLFileReader_8hpp" name="Teuchos_ParameterXMLFileReader.hpp" local="yes" imported="no">Teuchos_ParameterXMLFileReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ParameterXMLFileReader.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ParameterXMLFileReader_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <class kind="class">Teuchos::ParameterXMLFileReader</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_PerformanceMonitorBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__PerformanceMonitorBase_8cpp</filename>
    <includes id="Teuchos__PerformanceMonitorBase_8hpp" name="Teuchos_PerformanceMonitorBase.hpp" local="yes" imported="no">Teuchos_PerformanceMonitorBase.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>void</type>
      <name>mergeCounterNames</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48c93abd49d2b687f88608aa5d60c0d9</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const Array&lt; std::string &gt; &amp;localNames, Array&lt; std::string &gt; &amp;globalNames, const ECounterSetOp setOp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_PerformanceMonitorBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__PerformanceMonitorBase_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Comm_8hpp" name="Teuchos_Comm.hpp" local="yes" imported="no">Teuchos_Comm.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__TableFormat_8hpp" name="Teuchos_TableFormat.hpp" local="yes" imported="no">Teuchos_TableFormat.hpp</includes>
    <class kind="class">Teuchos::PerformanceMonitorBase</class>
    <namespace>Teuchos</namespace>
    <member kind="enumeration">
      <type></type>
      <name>ECounterSetOp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Intersection</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0aa1c321efb274d7f24cc5d4e3c3d37518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Union</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0a52b4ee5629feffaaf2de6ca3510f3def</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeCounterNames</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48c93abd49d2b687f88608aa5d60c0d9</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const Array&lt; std::string &gt; &amp;localNames, Array&lt; std::string &gt; &amp;globalNames, const ECounterSetOp setOp)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Polynomial.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__Polynomial_8hpp</filename>
    <includes id="Teuchos__PolynomialDecl_8hpp" name="Teuchos_PolynomialDecl.hpp" local="yes" imported="no">Teuchos_PolynomialDecl.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_PolynomialDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__PolynomialDecl_8hpp</filename>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__PolynomialTraits_8hpp" name="Teuchos_PolynomialTraits.hpp" local="yes" imported="no">Teuchos_PolynomialTraits.hpp</includes>
    <class kind="class">Teuchos::Polynomial</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_PolynomialTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__PolynomialTraits_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::PolynomialTraits</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_PromotionTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__PromotionTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::PromotionTraits</class>
    <class kind="class">Teuchos::PromotionTraits&lt; T, T &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>PT_SPEC</name>
      <anchorfile>Teuchos__PromotionTraits_8hpp.html</anchorfile>
      <anchor>a9e6c026deb620068d98e1f92c582fbd2</anchor>
      <arglist>(type1, type2, type3)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Ptr.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Ptr_8cpp</filename>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_Ptr.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Ptr_8hpp</filename>
    <includes id="Teuchos__PtrDecl_8hpp" name="Teuchos_PtrDecl.hpp" local="yes" imported="no">Teuchos_PtrDecl.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::PtrPrivateUtilityPack</namespace>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>throw_null</name>
      <anchorfile>namespaceTeuchos_1_1PtrPrivateUtilityPack.html</anchorfile>
      <anchor>a060e9d144429537066ba7e5eb3523b11</anchor>
      <arglist>(const std::string &amp;type_name)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_PtrDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__PtrDecl_8hpp</filename>
    <includes id="Teuchos__RCPDecl_8hpp" name="Teuchos_RCPDecl.hpp" local="yes" imported="no">Teuchos_RCPDecl.hpp</includes>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <class kind="class">Teuchos::Ptr</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Range1D.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Range1D_8cpp</filename>
    <includes id="Teuchos__Range1D_8hpp" name="Teuchos_Range1D.hpp" local="yes" imported="no">Teuchos_Range1D.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Range1D.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Range1D_8hpp</filename>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::Range1D</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCP.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCP_8hpp</filename>
    <includes id="Teuchos__RCPDecl_8hpp" name="Teuchos_RCPDecl.hpp" local="yes" imported="no">Teuchos_RCPDecl.hpp</includes>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
    <includes id="Teuchos__map_8hpp" name="Teuchos_map.hpp" local="yes" imported="no">Teuchos_map.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtrNonowned</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a02bdd9df30334d97c1d1a802b5b76dc1</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtrNonownedUndefined</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a11bcd808c00455fda270c69021707900</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac482d77c6e0c03d3f2ab302ee8da265c</anchor>
      <arglist>(T *p, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewDeallocRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad8823f0e2031d68b8ee3eb4262550eb7</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewDeallocRCPNodeRawPtrUndefined</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a38048fc5f602807d69b7c7edf01aeb79</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPBoostSharedPtrConversions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPBoostSharedPtrConversions_8hpp</filename>
    <includes id="Teuchos__RCPBoostSharedPtrConversionsDecl_8hpp" name="Teuchos_RCPBoostSharedPtrConversionsDecl.hpp" local="yes" imported="no">Teuchos_RCPBoostSharedPtrConversionsDecl.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPBoostSharedPtrConversionsDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPBoostSharedPtrConversionsDecl_8hpp</filename>
    <includes id="Teuchos__RCPDecl_8hpp" name="Teuchos_RCPDecl.hpp" local="yes" imported="no">Teuchos_RCPDecl.hpp</includes>
    <class kind="class">Teuchos::DeallocBoostSharedPtr</class>
    <class kind="class">Teuchos::RCPDeleter</class>
    <namespace>Teuchos</namespace>
    <namespace>boost</namespace>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>ga0148db5a21456be8682284228f04ad13</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaf28c8123a4b74115276d34ed1a256de7</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPDecl_8hpp</filename>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="Teuchos__ENull_8hpp" name="Teuchos_ENull.hpp" local="yes" imported="no">Teuchos_ENull.hpp</includes>
    <includes id="Teuchos__NullIteratorTraits_8hpp" name="Teuchos_NullIteratorTraits.hpp" local="yes" imported="no">Teuchos_NullIteratorTraits.hpp</includes>
    <class kind="class">Teuchos::Ptr</class>
    <class kind="class">Teuchos::RCP</class>
    <class kind="struct">Teuchos::RCPComp</class>
    <class kind="struct">Teuchos::RCPConstComp</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; RCP&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::DeallocNull</class>
    <class kind="class">Teuchos::DeallocDelete</class>
    <class kind="class">Teuchos::DeallocArrayDelete</class>
    <class kind="class">Teuchos::DeallocFunctorDelete</class>
    <class kind="class">Teuchos::DeallocFunctorHandleDelete</class>
    <class kind="class">Teuchos::EmbeddedObjDealloc</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>REFCOUNTPTR_INLINE</name>
      <anchorfile>Teuchos__RCPDecl_8hpp.html</anchorfile>
      <anchor>ab1681a1dcf04ba2d3add538d42a65a29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPWeakNoDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe4e0a5f1f28e1d1bf8a53ed592577b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_WEAK_NO_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe4e0a5f1f28e1d1bf8a53ed592577b7a4cb66e281ce104594bbbd800e5b70688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPUndefinedWeakNoDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa56083deb6b6d324e46507d78b24af36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_UNDEFINED_WEAK_NO_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa56083deb6b6d324e46507d78b24af36a77a75a97af5d158ee2991d5c6b81b093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPUndefinedWithDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af166bb83c46add7a33fb7ad5fa9e2be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_UNDEFINED_WITH_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af166bb83c46add7a33fb7ad5fa9e2be6a281b31ffed917f6d2b982e0b41fa1714</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED RCP&lt; T &gt;</type>
      <name>rcp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8ce99105ee4c7203a1ecb670a198671a</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool owns_mem)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParentT &gt;</type>
      <name>getInvertedObjOwnershipParent</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36781a62aaf40511a8eb5a8c8d3914f9</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;invertedChild)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPNode.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPNode_8cpp</filename>
    <includes id="Teuchos__RCPNode_8hpp" name="Teuchos_RCPNode.hpp" local="yes" imported="no">Teuchos_RCPNode.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_RCPNODE_REMOVE_RCPNODE</name>
      <anchorfile>Teuchos__RCPNode_8cpp.html</anchorfile>
      <anchor>a994ba2e3149f61abd6d8549dac2e47c1</anchor>
      <arglist>(CONDITION, RCPNODE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPNode.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPNode_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__any_8hpp" name="Teuchos_any.hpp" local="yes" imported="no">Teuchos_any.hpp</includes>
    <includes id="Teuchos__map_8hpp" name="Teuchos_map.hpp" local="yes" imported="no">Teuchos_map.hpp</includes>
    <includes id="Teuchos__ENull_8hpp" name="Teuchos_ENull.hpp" local="yes" imported="no">Teuchos_ENull.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__toString_8hpp" name="Teuchos_toString.hpp" local="yes" imported="no">Teuchos_toString.hpp</includes>
    <includes id="Teuchos__getBaseObjVoidPtr_8hpp" name="Teuchos_getBaseObjVoidPtr.hpp" local="yes" imported="no">Teuchos_getBaseObjVoidPtr.hpp</includes>
    <class kind="class">Teuchos::ToStringTraits&lt; ERCPStrength &gt;</class>
    <class kind="class">Teuchos::RCPNode</class>
    <class kind="struct">Teuchos::RCPNode::extra_data_entry_t</class>
    <class kind="class">Teuchos::RCPNodeTracer</class>
    <class kind="struct">Teuchos::RCPNodeTracer::RCPNodeStatistics</class>
    <class kind="class">Teuchos::RCPNodeTmpl</class>
    <class kind="class">Teuchos::ActiveRCPNodesSetup</class>
    <class kind="class">Teuchos::RCPNodeHandle</class>
    <class kind="class">Teuchos::RCPNodeThrowDeleter</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_RCP_INSERION_NUMBER_STR</name>
      <anchorfile>Teuchos__RCPNode_8hpp.html</anchorfile>
      <anchor>aff03fc171affa3e16374fabaf4676464</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>SET_RCPNODE_TRACING</name>
      <anchorfile>Teuchos__RCPNode_8hpp.html</anchorfile>
      <anchor>a3ac2ccdbd17f83ed07ca0d41e74653df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EPrePostDestruction</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRE_DESTROY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5ea137b75ca558f38176c94f7fd980f16eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POST_DESTROY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5eae0bb1ca8f32aa497ec560b532465bf29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPStrength</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_STRONG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49ac664a561b20fcc5ce606a699cafd95c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_WEAK</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49a1bbc487ae206c2ccc0bfcdc26df61d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPNodeLookup</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_ENABLE_NODE_LOOKUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202a70e305eaba39e6dfddaa4a8e3d5f0afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_DISABLE_NODE_LOOKUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202a04e7fe4bc84362777c19851919324049</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugAssertStrength</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abcad1d07ecdbfa7a0014fb24aa495e62</anchor>
      <arglist>(ERCPStrength strength)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPStdSharedPtrConversions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPStdSharedPtrConversions_8hpp</filename>
    <includes id="Teuchos__RCPStdSharedPtrConversionsDecl_8hpp" name="Teuchos_RCPStdSharedPtrConversionsDecl.hpp" local="yes" imported="no">Teuchos_RCPStdSharedPtrConversionsDecl.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_RCPStdSharedPtrConversionsDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RCPStdSharedPtrConversionsDecl_8hpp</filename>
    <includes id="Teuchos__RCPDecl_8hpp" name="Teuchos_RCPDecl.hpp" local="yes" imported="no">Teuchos_RCPDecl.hpp</includes>
    <class kind="class">Teuchos::DeallocStdSharedPtr</class>
    <class kind="class">Teuchos::StdSharedPtrRCPDeleter</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gade66554b0078fdf9b134723ef5da551f</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaecc73655aad3c6aaa1de138d2427426c</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ReductionOp.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__ReductionOp_8hpp</filename>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <class kind="class">Teuchos::ValueTypeReductionOp</class>
    <class kind="class">Teuchos::ReferenceTypeReductionOp</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ReductionOpHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__ReductionOpHelpers_8hpp</filename>
    <includes id="Teuchos__ReductionOp_8hpp" name="Teuchos_ReductionOp.hpp" local="yes" imported="no">Teuchos_ReductionOp.hpp</includes>
    <includes id="Teuchos__SerializationTraitsHelpers_8hpp" name="Teuchos_SerializationTraitsHelpers.hpp" local="yes" imported="no">Teuchos_SerializationTraitsHelpers.hpp</includes>
    <includes id="Teuchos__SerializerHelpers_8hpp" name="Teuchos_SerializerHelpers.hpp" local="yes" imported="no">Teuchos_SerializerHelpers.hpp</includes>
    <class kind="class">Teuchos::CharToValueTypeReductionOpImp</class>
    <class kind="class">Teuchos::CharToValueTypeReductionOp</class>
    <class kind="class">Teuchos::CharToValueTypeReductionOp&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::CharToReferenceTypeReductionOp</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_RefCountPtr.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RefCountPtr_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__RefCountPtrDecl_8hpp" name="Teuchos_RefCountPtrDecl.hpp" local="yes" imported="no">Teuchos_RefCountPtrDecl.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_RefCountPtrDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__RefCountPtrDecl_8hpp</filename>
    <includes id="Teuchos__RCPDecl_8hpp" name="Teuchos_RCPDecl.hpp" local="yes" imported="no">Teuchos_RCPDecl.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>RefCountPtr</name>
      <anchorfile>Teuchos__RefCountPtrDecl_8hpp.html</anchorfile>
      <anchor>aceffff7d2dca0ce03ade7f892d609f0a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ScalarTraits.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ScalarTraits_8cpp</filename>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="variable">
      <type>const float</type>
      <name>flt_nan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1b3a566bb79a9d600d69386a06aa27de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dbl_nan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1d90b2ea410d23afbe81140232d89e42</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_ScalarTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ScalarTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ScalarTraitsDecl_8hpp" name="Teuchos_ScalarTraitsDecl.hpp" local="yes" imported="no">Teuchos_ScalarTraitsDecl.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ScalarTraitsCUDA.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ScalarTraitsCUDA_8hpp</filename>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_ScalarTraitsDecl.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__ScalarTraitsDecl_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="struct">Teuchos::UndefinedScalarTraits</class>
    <class kind="struct">Teuchos::ScalarTraits</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialBandDenseMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialBandDenseMatrix_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::SerialBandDenseMatrix</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialBandDenseSolver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialBandDenseSolver_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialBandDenseMatrix_8hpp" name="Teuchos_SerialBandDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialBandDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseSolver_8hpp" name="Teuchos_SerialDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::SerialBandDenseSolver</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialDenseHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialDenseHelpers_8hpp</filename>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialBandDenseMatrix_8hpp" name="Teuchos_SerialBandDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialBandDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseVector_8hpp" name="Teuchos_SerialDenseVector.hpp" local="yes" imported="no">Teuchos_SerialDenseVector.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialDenseMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialDenseMatrix_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <class kind="class">Teuchos::SerialDenseMatrix</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialDenseSolver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialDenseSolver_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::SerialDenseSolver</class>
    <class kind="struct">Teuchos::details::lapack_traits</class>
    <class kind="struct">Teuchos::details::lapack_traits&lt; std::complex&lt; T &gt; &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::details</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialDenseVector.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialDenseVector_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Object_8hpp" name="Teuchos_Object.hpp" local="yes" imported="no">Teuchos_Object.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <class kind="class">Teuchos::SerialDenseVector</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerializationTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__SerializationTraits_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__TestForException_8hpp" name="Teuchos_TestForException.hpp" local="yes" imported="no">Teuchos_TestForException.hpp</includes>
    <class kind="class">Teuchos::UndefinedSerializationTraits</class>
    <class kind="class">Teuchos::SerializationTraits</class>
    <class kind="class">Teuchos::ValueTypeSerializer</class>
    <class kind="class">Teuchos::DirectSerializationTraits</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, signed char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, short int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned short int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, long int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned long int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, float &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, double &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, std::pair&lt; P1, P2 &gt; &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerializationTraitsHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__SerializationTraitsHelpers_8hpp</filename>
    <includes id="Teuchos__SerializationTraits_8hpp" name="Teuchos_SerializationTraits.hpp" local="yes" imported="no">Teuchos_SerializationTraits.hpp</includes>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::DefaultSerializer</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ValueTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Serializer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__Serializer_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::Serializer</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerializerHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__SerializerHelpers_8hpp</filename>
    <includes id="Teuchos__Serializer_8hpp" name="Teuchos_Serializer.hpp" local="yes" imported="no">Teuchos_Serializer.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::ReferenceTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ConstReferenceTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ReferenceTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ConstReferenceTypeDeserializationBuffer</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialQRDenseSolver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialQRDenseSolver_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseSolver_8hpp" name="Teuchos_SerialDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialDenseSolver.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::SerialQRDenseSolver</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialSpdDenseSolver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialSpdDenseSolver_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__LAPACK_8hpp" name="Teuchos_LAPACK.hpp" local="yes" imported="no">Teuchos_LAPACK.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__SerialSymDenseMatrix_8hpp" name="Teuchos_SerialSymDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialSymDenseMatrix.hpp</includes>
    <includes id="Teuchos__SerialDenseSolver_8hpp" name="Teuchos_SerialDenseSolver.hpp" local="yes" imported="no">Teuchos_SerialDenseSolver.hpp</includes>
    <includes id="Teuchos__SerialDenseMatrix_8hpp" name="Teuchos_SerialDenseMatrix.hpp" local="yes" imported="no">Teuchos_SerialDenseMatrix.hpp</includes>
    <class kind="class">Teuchos::SerialSpdDenseSolver</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialSymDenseMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialSymDenseMatrix_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::SerialSymDenseMatrix</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SerialTriDiMatrix.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/numerics/src/</path>
    <filename>Teuchos__SerialTriDiMatrix_8hpp</filename>
    <includes id="Teuchos__CompObject_8hpp" name="Teuchos_CompObject.hpp" local="yes" imported="no">Teuchos_CompObject.hpp</includes>
    <includes id="Teuchos__BLAS_8hpp" name="Teuchos_BLAS.hpp" local="yes" imported="no">Teuchos_BLAS.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__DataAccess_8hpp" name="Teuchos_DataAccess.hpp" local="yes" imported="no">Teuchos_DataAccess.hpp</includes>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::SerialTriDiMatrix</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SharedAccessPolicy.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__SharedAccessPolicy_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::ThreadLock</class>
    <class kind="class">Teuchos::ScopedThreadLock</class>
    <class kind="class">Teuchos::SharedAccessPolicy</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_SimpleObjectDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__SimpleObjectDB_8hpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__ConstNonconstObjectContainer_8hpp" name="Teuchos_ConstNonconstObjectContainer.hpp" local="yes" imported="no">Teuchos_ConstNonconstObjectContainer.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <class kind="class">Teuchos::SimpleObjectDB</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>RCP&lt; SimpleObjectDB&lt; T &gt; &gt;</type>
      <name>createSimpleObjectDB</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab04cd11b1d4766619f134452434e96c9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_SimpleObjectTable.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__SimpleObjectTable_8hpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::SimpleObjectTable</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_stacktrace.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__stacktrace_8cpp</filename>
    <includes id="Teuchos__stacktrace_8hpp" name="Teuchos_stacktrace.hpp" local="yes" imported="no">Teuchos_stacktrace.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_stacktrace.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__stacktrace_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardCatchMacros.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StandardCatchMacros_8hpp</filename>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__stacktrace_8hpp" name="Teuchos_stacktrace.hpp" local="yes" imported="no">Teuchos_stacktrace.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_GET_STORED_STACKTRACE</name>
      <anchorfile>Teuchos__StandardCatchMacros_8hpp.html</anchorfile>
      <anchor>ae5f3205dadf00a45cffcae92e0e0ce55</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_STANDARD_CATCH_STATEMENTS_IMPL</name>
      <anchorfile>Teuchos__StandardCatchMacros_8hpp.html</anchorfile>
      <anchor>a2496ad7b3882266618d5e834f2067e0e</anchor>
      <arglist>(VERBOSE, ERR_STREAM, SHOW_STACK_TRACE, SUCCESS_FLAG   )</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_STANDARD_CATCH_STATEMENTS</name>
      <anchorfile>Teuchos__StandardCatchMacros_8hpp.html</anchorfile>
      <anchor>ab3394c84cafa46db953af08c021aadc2</anchor>
      <arglist>(VERBOSE, ERR_STREAM, SUCCESS_FLAG)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardCompositionMacros.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StandardCompositionMacros_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>STANDARD_COMPOSITION_MEMBERS</name>
      <anchorfile>Teuchos__StandardCompositionMacros_8hpp.html</anchorfile>
      <anchor>a64d8b21846db2e96443f6c93d2986a67</anchor>
      <arglist>(TYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STANDARD_NONCONST_COMPOSITION_MEMBERS</name>
      <anchorfile>Teuchos__StandardCompositionMacros_8hpp.html</anchorfile>
      <anchor>a370f7278f1be42f902ae5dfc7f4bc8ad</anchor>
      <arglist>(TYPE, NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>STANDARD_CONST_COMPOSITION_MEMBERS</name>
      <anchorfile>Teuchos__StandardCompositionMacros_8hpp.html</anchorfile>
      <anchor>ab7f5017ed98fd53fb8f18128d3d0f819</anchor>
      <arglist>(TYPE, NAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardConditions.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardConditions_8cpp</filename>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardConditions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardConditions_8hpp</filename>
    <includes id="Teuchos__Condition_8hpp" name="Teuchos_Condition.hpp" local="yes" imported="no">Teuchos_Condition.hpp</includes>
    <includes id="Teuchos__InvalidConditionException_8hpp" name="Teuchos_InvalidConditionException.hpp" local="yes" imported="no">Teuchos_InvalidConditionException.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <includes id="Teuchos__DummyObjectGetter_8hpp" name="Teuchos_DummyObjectGetter.hpp" local="yes" imported="no">Teuchos_DummyObjectGetter.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::ParameterCondition</class>
    <class kind="class">Teuchos::StringCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringCondition &gt;</class>
    <class kind="class">Teuchos::NumberCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberCondition&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::BoolCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolCondition &gt;</class>
    <class kind="class">Teuchos::BoolLogicCondition</class>
    <class kind="class">Teuchos::OrCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; OrCondition &gt;</class>
    <class kind="class">Teuchos::AndCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; AndCondition &gt;</class>
    <class kind="class">Teuchos::EqualsCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; EqualsCondition &gt;</class>
    <class kind="class">Teuchos::NotCondition</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NotCondition &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardConditionXMLConverters.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardConditionXMLConverters_8cpp</filename>
    <includes id="Teuchos__StandardConditionXMLConverters_8hpp" name="Teuchos_StandardConditionXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardConditionXMLConverters.hpp</includes>
    <includes id="Teuchos__ConditionXMLConverterDB_8hpp" name="Teuchos_ConditionXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLConditionExceptions_8hpp" name="Teuchos_XMLConditionExceptions.hpp" local="yes" imported="no">Teuchos_XMLConditionExceptions.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardConditionXMLConverters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardConditionXMLConverters_8hpp</filename>
    <includes id="Teuchos__FunctionObjectXMLConverterDB_8hpp" name="Teuchos_FunctionObjectXMLConverterDB.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverterDB.hpp</includes>
    <includes id="Teuchos__ConditionXMLConverter_8hpp" name="Teuchos_ConditionXMLConverter.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverter.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <class kind="class">Teuchos::BoolLogicConditionConverter</class>
    <class kind="class">Teuchos::OrConditionConverter</class>
    <class kind="class">Teuchos::AndConditionConverter</class>
    <class kind="class">Teuchos::EqualsConditionConverter</class>
    <class kind="class">Teuchos::NotConditionConverter</class>
    <class kind="class">Teuchos::ParameterConditionConverter</class>
    <class kind="class">Teuchos::StringConditionConverter</class>
    <class kind="class">Teuchos::BoolConditionConverter</class>
    <class kind="class">Teuchos::NumberConditionConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardDependencies.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardDependencies_8cpp</filename>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardDependencies.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardDependencies_8hpp</filename>
    <includes id="Teuchos__Dependency_8hpp" name="Teuchos_Dependency.hpp" local="yes" imported="no">Teuchos_Dependency.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__StandardConditions_8hpp" name="Teuchos_StandardConditions.hpp" local="yes" imported="no">Teuchos_StandardConditions.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__OrdinalTraits_8hpp" name="Teuchos_OrdinalTraits.hpp" local="yes" imported="no">Teuchos_OrdinalTraits.hpp</includes>
    <class kind="class">Teuchos::VisualDependency</class>
    <class kind="class">Teuchos::ValidatorDependency</class>
    <class kind="class">Teuchos::StringVisualDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringVisualDependency &gt;</class>
    <class kind="class">Teuchos::BoolVisualDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolVisualDependency &gt;</class>
    <class kind="class">Teuchos::ConditionVisualDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; ConditionVisualDependency &gt;</class>
    <class kind="class">Teuchos::NumberVisualDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberVisualDependency&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::ArrayModifierDependency</class>
    <class kind="class">Teuchos::NumberArrayLengthDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberArrayLengthDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <class kind="class">Teuchos::StringValidatorDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringValidatorDependency &gt;</class>
    <class kind="class">Teuchos::BoolValidatorDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolValidatorDependency &gt;</class>
    <class kind="class">Teuchos::RangeValidatorDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; RangeValidatorDependency&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::TwoDArrayModifierDependency</class>
    <class kind="class">Teuchos::TwoDRowDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDRowDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <class kind="class">Teuchos::TwoDColDependency</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDColDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardDependencyXMLConverters.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardDependencyXMLConverters_8cpp</filename>
    <includes id="Teuchos__StandardDependencyXMLConverters_8hpp" name="Teuchos_StandardDependencyXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardDependencyXMLConverters.hpp</includes>
    <includes id="Teuchos__ConditionXMLConverterDB_8hpp" name="Teuchos_ConditionXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ConditionXMLConverterDB.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardDependencyXMLConverters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardDependencyXMLConverters_8hpp</filename>
    <includes id="Teuchos__DependencyXMLConverter_8hpp" name="Teuchos_DependencyXMLConverter.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverter.hpp</includes>
    <includes id="Teuchos__StandardDependencies_8hpp" name="Teuchos_StandardDependencies.hpp" local="yes" imported="no">Teuchos_StandardDependencies.hpp</includes>
    <includes id="Teuchos__XMLDependencyExceptions_8hpp" name="Teuchos_XMLDependencyExceptions.hpp" local="yes" imported="no">Teuchos_XMLDependencyExceptions.hpp</includes>
    <includes id="Teuchos__FunctionObjectXMLConverterDB_8hpp" name="Teuchos_FunctionObjectXMLConverterDB.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverterDB.hpp</includes>
    <class kind="class">Teuchos::VisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::ValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::StringVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::BoolVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::NumberVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::ConditionVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::StringValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::BoolValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::RangeValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::ArrayModifierDependencyXMLConverter</class>
    <class kind="class">Teuchos::NumberArrayLengthDependencyXMLConverter</class>
    <class kind="class">Teuchos::TwoDRowDependencyXMLConverter</class>
    <class kind="class">Teuchos::TwoDColDependencyXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardFunctionObjects.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardFunctionObjects_8hpp</filename>
    <includes id="Teuchos__FunctionObject_8hpp" name="Teuchos_FunctionObject.hpp" local="yes" imported="no">Teuchos_FunctionObject.hpp</includes>
    <class kind="class">Teuchos::SimpleFunctionObject</class>
    <class kind="class">Teuchos::SubtractionFunction</class>
    <class kind="class">Teuchos::AdditionFunction</class>
    <class kind="class">Teuchos::MultiplicationFunction</class>
    <class kind="class">Teuchos::DivisionFunction</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardFunctionObjectXMLConverters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardFunctionObjectXMLConverters_8hpp</filename>
    <includes id="Teuchos__FunctionObjectXMLConverter_8hpp" name="Teuchos_FunctionObjectXMLConverter.hpp" local="yes" imported="no">Teuchos_FunctionObjectXMLConverter.hpp</includes>
    <includes id="Teuchos__StandardFunctionObjects_8hpp" name="Teuchos_StandardFunctionObjects.hpp" local="yes" imported="no">Teuchos_StandardFunctionObjects.hpp</includes>
    <class kind="class">Teuchos::SimpleFunctionXMLConverter</class>
    <class kind="class">Teuchos::SubtractionFunctionXMLConverter</class>
    <class kind="class">Teuchos::AdditionFunctionXMLConverter</class>
    <class kind="class">Teuchos::MultiplicationFunctionXMLConverter</class>
    <class kind="class">Teuchos::DivisionFunctionXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardMemberCompositionMacros.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StandardMemberCompositionMacros_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>STANDARD_MEMBER_COMPOSITION_MEMBERS</name>
      <anchorfile>Teuchos__StandardMemberCompositionMacros_8hpp.html</anchorfile>
      <anchor>ac5c805a3c36077c91d0cae271c4d6dff</anchor>
      <arglist>(TYPE, NAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardParallelUnitTestMain.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/UnitTesting/</path>
    <filename>Teuchos__StandardParallelUnitTestMain_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Teuchos__StandardParallelUnitTestMain_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardParameterEntryValidators.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardParameterEntryValidators_8cpp</filename>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardParameterEntryValidators.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardParameterEntryValidators_8hpp</filename>
    <includes id="Teuchos__ParameterEntryValidator_8hpp" name="Teuchos_ParameterEntryValidator.hpp" local="yes" imported="no">Teuchos_ParameterEntryValidator.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__ParameterListExceptions_8hpp" name="Teuchos_ParameterListExceptions.hpp" local="yes" imported="no">Teuchos_ParameterListExceptions.hpp</includes>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__DummyObjectGetter_8hpp" name="Teuchos_DummyObjectGetter.hpp" local="yes" imported="no">Teuchos_DummyObjectGetter.hpp</includes>
    <class kind="class">Teuchos::StringToIntegralParameterEntryValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</class>
    <class kind="class">Teuchos::AnyNumberParameterEntryValidator</class>
    <class kind="class">Teuchos::AnyNumberParameterEntryValidator::AcceptedTypes</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; AnyNumberParameterEntryValidator &gt;</class>
    <class kind="struct">Teuchos::UndefinedEnhancedNumberTraits</class>
    <class kind="class">Teuchos::EnhancedNumberTraits</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; short int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; short unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; long int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; long unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; double &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; float &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; EnhancedNumberValidator&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::FileNameValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; FileNameValidator &gt;</class>
    <class kind="class">Teuchos::StringValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringValidator &gt;</class>
    <class kind="class">Teuchos::AbstractArrayValidator</class>
    <class kind="class">Teuchos::TwoDArrayValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</class>
    <class kind="class">Teuchos::TwoDArrayStringValidator</class>
    <class kind="class">Teuchos::TwoDArrayFileNameValidator</class>
    <class kind="class">Teuchos::TwoDArrayNumberValidator</class>
    <class kind="class">Teuchos::ArrayValidator</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; ArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</class>
    <class kind="class">Teuchos::ArrayStringValidator</class>
    <class kind="class">Teuchos::ArrayFileNameValidator</class>
    <class kind="class">Teuchos::ArrayNumberValidator</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>RCP&lt; const StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>getStringToIntegralParameterEntryValidator</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a223ac535aec7c1ab673df9062f13fa87</anchor>
      <arglist>(ParameterEntry const &amp;entry, ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardParameterEntryXMLConverters.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardParameterEntryXMLConverters_8cpp</filename>
    <includes id="Teuchos__StandardParameterEntryXMLConverters_8hpp" name="Teuchos_StandardParameterEntryXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryXMLConverters.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardParameterEntryXMLConverters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardParameterEntryXMLConverters_8hpp</filename>
    <includes id="Teuchos__ParameterEntryXMLConverter_8hpp" name="Teuchos_ParameterEntryXMLConverter.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverter.hpp</includes>
    <class kind="class">Teuchos::AnyParameterEntryConverter</class>
    <class kind="class">Teuchos::StandardTemplatedParameterConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>core/test/UnitTest/Teuchos_StandardUnitTestMain.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>core_2test_2UnitTest_2Teuchos__StandardUnitTestMain_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>core_2test_2UnitTest_2Teuchos__StandardUnitTestMain_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/ObjectBuilder/Teuchos_StandardUnitTestMain.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ObjectBuilder/</path>
    <filename>parameterlist_2test_2ObjectBuilder_2Teuchos__StandardUnitTestMain_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2ObjectBuilder_2Teuchos__StandardUnitTestMain_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>parameterlist/test/ParameterList/Teuchos_StandardUnitTestMain.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>parameterlist_2test_2ParameterList_2Teuchos__StandardUnitTestMain_8cpp</filename>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>parameterlist_2test_2ParameterList_2Teuchos__StandardUnitTestMain_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardValidatorXMLConverters.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardValidatorXMLConverters_8cpp</filename>
    <includes id="Teuchos__StandardValidatorXMLConverters_8hpp" name="Teuchos_StandardValidatorXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardValidatorXMLConverters.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StandardValidatorXMLConverters.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StandardValidatorXMLConverters_8hpp</filename>
    <includes id="Teuchos__ValidatorXMLConverter_8hpp" name="Teuchos_ValidatorXMLConverter.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverter.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__DummyObjectGetter_8hpp" name="Teuchos_DummyObjectGetter.hpp" local="yes" imported="no">Teuchos_DummyObjectGetter.hpp</includes>
    <class kind="class">Teuchos::StringToIntegralValidatorXMLConverter</class>
    <class kind="class">Teuchos::AnyNumberValidatorXMLConverter</class>
    <class kind="class">Teuchos::EnhancedNumberValidatorXMLConverter</class>
    <class kind="class">Teuchos::FileNameValidatorXMLConverter</class>
    <class kind="class">Teuchos::StringValidatorXMLConverter</class>
    <class kind="class">Teuchos::AbstractArrayValidatorXMLConverter</class>
    <class kind="class">Teuchos::ArrayValidatorXMLConverter</class>
    <class kind="class">Teuchos::TwoDArrayValidatorXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StaticSetupMacro.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StaticSetupMacro_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>Teuchos__StaticSetupMacro_8hpp.html</anchorfile>
      <anchor>a6ee25d26a2df61723409c5add5acba07</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringIndexedOrderedValueObjectContainer.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StringIndexedOrderedValueObjectContainer_8hpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__FilteredIterator_8hpp" name="Teuchos_FilteredIterator.hpp" local="yes" imported="no">Teuchos_FilteredIterator.hpp</includes>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::OrdinalIndex</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::KeyObjectPair</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::SelectActive</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidOrdinalIndexError</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidKeyError</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainer</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringInputSource.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StringInputSource_8cpp</filename>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__StringInputStream_8hpp" name="Teuchos_StringInputStream.hpp" local="yes" imported="no">Teuchos_StringInputStream.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringInputSource.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StringInputSource_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLInputSource_8hpp" name="Teuchos_XMLInputSource.hpp" local="yes" imported="no">Teuchos_XMLInputSource.hpp</includes>
    <class kind="class">Teuchos::StringInputSource</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringInputStream.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StringInputStream_8cpp</filename>
    <includes id="Teuchos__StringInputStream_8hpp" name="Teuchos_StringInputStream.hpp" local="yes" imported="no">Teuchos_StringInputStream.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringInputStream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__StringInputStream_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLInputStream_8hpp" name="Teuchos_XMLInputStream.hpp" local="yes" imported="no">Teuchos_XMLInputStream.hpp</includes>
    <class kind="class">Teuchos::StringInputStream</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringToIntMap.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__StringToIntMap_8cpp</filename>
    <includes id="Teuchos__StringToIntMap_8hpp" name="Teuchos_StringToIntMap.hpp" local="yes" imported="no">Teuchos_StringToIntMap.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StringToIntMap.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Teuchos__StringToIntMap_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::StringToIntMap</class>
    <class kind="class">Teuchos::StringToIntMap::AlreadyExists</class>
    <class kind="class">Teuchos::StringToIntMap::DoesNotExist</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StrUtils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StrUtils_8cpp</filename>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_StrUtils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__StrUtils_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::StrUtils</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableColumn.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableColumn_8cpp</filename>
    <includes id="Teuchos__TableColumn_8hpp" name="Teuchos_TableColumn.hpp" local="yes" imported="no">Teuchos_TableColumn.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableColumn.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableColumn_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__TableEntry_8hpp" name="Teuchos_TableEntry.hpp" local="yes" imported="no">Teuchos_TableEntry.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::TableColumn</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableEntry.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableEntry_8cpp</filename>
    <includes id="Teuchos__TableEntry_8hpp" name="Teuchos_TableEntry.hpp" local="yes" imported="no">Teuchos_TableEntry.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableEntry.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableEntry_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::TableEntry</class>
    <class kind="class">Teuchos::DoubleEntry</class>
    <class kind="class">Teuchos::IntEntry</class>
    <class kind="class">Teuchos::StringEntry</class>
    <class kind="class">Teuchos::CompoundEntryWithParentheses</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableFormat.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableFormat_8cpp</filename>
    <includes id="Teuchos__TableFormat_8hpp" name="Teuchos_TableFormat.hpp" local="yes" imported="no">Teuchos_TableFormat.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TableFormat.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TableFormat_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__TableColumn_8hpp" name="Teuchos_TableColumn.hpp" local="yes" imported="no">Teuchos_TableColumn.hpp</includes>
    <class kind="class">Teuchos::TableFormat</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TabularOutputter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TabularOutputter_8cpp</filename>
    <includes id="Teuchos__TabularOutputter_8hpp" name="Teuchos_TabularOutputter.hpp" local="yes" imported="no">Teuchos_TabularOutputter.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TabularOutputter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TabularOutputter_8hpp</filename>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__Exceptions_8hpp" name="Teuchos_Exceptions.hpp" local="yes" imported="no">Teuchos_Exceptions.hpp</includes>
    <class kind="class">Teuchos::TabularOutputter</class>
    <class kind="class">Teuchos::TabularOutputter::MissingFieldsError</class>
    <class kind="class">Teuchos::TabularOutputter::InvalidFieldSpecError</class>
    <class kind="class">Teuchos::TabularOutputter::MissingHeaderError</class>
    <class kind="class">Teuchos::TabularOutputter::InvalidFieldOutputError</class>
    <class kind="struct">Teuchos::TabularOutputter::FieldSpec</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_START_PERF_OUTPUT_TIMER</name>
      <anchorfile>Teuchos__TabularOutputter_8hpp.html</anchorfile>
      <anchor>ab751c3bb3149e86c4af0cddb21af05f9</anchor>
      <arglist>(OUTPUTTER, NUMLOOPS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_START_PERF_OUTPUT_TIMER_INNERLOOP</name>
      <anchorfile>Teuchos__TabularOutputter_8hpp.html</anchorfile>
      <anchor>abfe09084e3982c0907756f565d70d63a</anchor>
      <arglist>(OUTPUTTER, NUMLOOPS, NUMINNERLOOPS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_START_PERF_OUTPUT_TIMER_INNERLOOP</name>
      <anchorfile>Teuchos__TabularOutputter_8hpp.html</anchorfile>
      <anchor>abfe09084e3982c0907756f565d70d63a</anchor>
      <arglist>(OUTPUTTER, NUMLOOPS, NUMINNERLOOPS)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_END_PERF_OUTPUT_TIMER</name>
      <anchorfile>Teuchos__TabularOutputter_8hpp.html</anchorfile>
      <anchor>a62efadd309cca435c7c6ada060337d32</anchor>
      <arglist>(OUTPUTTER, VARNAME)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TestForException.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TestForException_8cpp</filename>
    <includes id="Teuchos__TestForException_8hpp" name="Teuchos_TestForException.hpp" local="yes" imported="no">Teuchos_TestForException.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TestForException.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TestForException_8hpp</filename>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__stacktrace_8hpp" name="Teuchos_stacktrace.hpp" local="yes" imported="no">Teuchos_stacktrace.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_STORE_STACKTRACE</name>
      <anchorfile>Teuchos__TestForException_8hpp.html</anchorfile>
      <anchor>a089f18fec40c09ee4d36084082b7453e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gaadb9556c5c1ba7da1c141e7529a8ebdf</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_CLASS_FUNC</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga91a1a9a9d6195f127f2c31e0351f5bac</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_PURE_MSG</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga310a73e502ce663691fb1d3d6b32e62f</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_PRINT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gafd089effc4cb919a9e3dd400c3033d44</anchor>
      <arglist>(throw_exception_test, Exception, msg, out_ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga904c9f821383ba177d6c5de1fdc787a1</anchor>
      <arglist>(throw_exception_test)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT_MSG</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga61953b78b3ca85763029f4cc5e68371e</anchor>
      <arglist>(throw_exception_test, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT_PRINT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga74e157f99451d49198d64907bf9dc61d</anchor>
      <arglist>(throw_exception_test, out_ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TRACE</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga53c0f43801689c025182e783b651605c</anchor>
      <arglist>(exc)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_incrThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gac044ac48009404ffe538f4b7669083e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT int</type>
      <name>TestForException_getThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga053257c97eae8c526bd0cbe46e23209d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_break</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga2f43578ce3790815568a4d115a69e1ab</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_setEnableStacktrace</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga3198d526f9102bc157f200b82a9483c8</anchor>
      <arglist>(bool enableStrackTrace)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT bool</type>
      <name>TestForException_getEnableStacktrace</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a23f627e2e567dcad96f95b92eb1b36db</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TestingHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TestingHelpers_8cpp</filename>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <includes id="Teuchos__toString_8hpp" name="Teuchos_toString.hpp" local="yes" imported="no">Teuchos_toString.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TestingHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TestingHelpers_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <class kind="class">Teuchos::RelErrSmallNumber</class>
    <class kind="class">Teuchos::RelErrSmallNumber&lt; false, Scalar &gt;</class>
    <class kind="class">Teuchos::RelErrSmallNumber&lt; true, Scalar &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_PASS_FAIL</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a6fd3f2c57a1eb96af6b2ebafb9b32f1e</anchor>
      <arglist>(RESULT)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ECHO</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a656fddc9996e79bfd9f41e97aaf9330c</anchor>
      <arglist>(statement, out)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_EQUALITY_CONST</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>ac4a56afb38478e32ae52f36467016b77</anchor>
      <arglist>(v1, v2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_ASSERT</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a56372ab62b0ebeec236f6c477e28b269</anchor>
      <arglist>(v1, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a1a8a82e89d55d294cd029e70e2b172cb</anchor>
      <arglist>(v1, v2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_INEQUALITY_CONST</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a87802f4d49f363dadd1bcb772a41a1b3</anchor>
      <arglist>(v1, v2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_INEQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a757ab7e58f074faa314fa98390c321ff</anchor>
      <arglist>(v1, v2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FLOATING_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a4decda7dbeda1c827ea68ff442dfb551</anchor>
      <arglist>(v1, v2, tol, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_ITER_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>af3ec5c2fbc075df16d4686de34b96d59</anchor>
      <arglist>(iter1, iter2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_ITER_INEQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a379f5a6457eb197f515c03779f4f462e</anchor>
      <arglist>(iter1, iter2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_ARRAY_ELE_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>af835c8debeeebbf4fc16bc25412504f2</anchor>
      <arglist>(a, i, val, printPass, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_ARRAY_ELE_INEQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>afef09e61aca879f58a42fe58d70ba9e1</anchor>
      <arglist>(a, i, val, printPass, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_MATRIX_ELE_FLOATING_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a12f23cf569698819fbf73e129a301d93</anchor>
      <arglist>(a, i, j, val, tol, printPass, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_MATRIX_ELE_EQUALITY</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a682b6af58bf03877ecec21b42ef30704</anchor>
      <arglist>(a, i, j, val, printPass, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_COMPARE</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>a5d574a9a582a18b1723b7c775eca053d</anchor>
      <arglist>(v1, comp, v2, out, success)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_THROW</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>af9a1419507adc1280f76510edc039c91</anchor>
      <arglist>(code, ExceptType, out, success )</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_NOTHROW</name>
      <anchorfile>Teuchos__TestingHelpers_8hpp.html</anchorfile>
      <anchor>ac32da5d07e901bcf0e18a29707c27196</anchor>
      <arglist>(code, out, success )</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSuccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac6f1b3601783d0a411dcccc410755b29</anchor>
      <arglist>(const bool result, bool &amp;success)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>passfail</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab606d9963b2776124c0e373748b96dee</anchor>
      <arglist>(const bool result)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT const std::string</type>
      <name>passfail_with_location</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a175c5c14e319058f2caa225ad78867ac</anchor>
      <arglist>(const bool result, const std::string &amp;file, const int lineNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showTestFailureLocation</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abaa47cec7e4a8962d7763ba4c987ae5a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showTestFailureLocation</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8cd3fa3198b28e2f70eef5c7e87cfccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>defaultSmallNumber</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af9fe95973effcacca1b1b174a05351fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>relErr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a05763969641f810d9e9b6c94237ba404</anchor>
      <arglist>(const Scalar &amp;s1, const Scalar &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testRelErr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9c0d90104626382fb9e0b9d663871e0c</anchor>
      <arglist>(const std::string &amp;v1_name, const Scalar &amp;v1, const std::string &amp;v2_name, const Scalar &amp;v2, const std::string &amp;maxRelErr_error_name, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;maxRelErr_error, const std::string &amp;maxRelErr_warning_name, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;maxRelErr_warning, const Ptr&lt; std::ostream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareArrays</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a237bd5964518ff157cff1f7e59aa46</anchor>
      <arglist>(const Array1 &amp;a1, const std::string &amp;a1_name, const Array2 &amp;a2, const std::string &amp;a2_name, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareFloatingArrays</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6c68ba291316447349637a3e8098b749</anchor>
      <arglist>(const Array1 &amp;a1, const std::string &amp;a1_name, const Array2 &amp;a2, const std::string &amp;a2_name, const ScalarMag &amp;tol, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Time.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Time_8cpp</filename>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Time.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Time_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::Time</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TimeMonitor.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TimeMonitor_8cpp</filename>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__TableColumn_8hpp" name="Teuchos_TableColumn.hpp" local="yes" imported="no">Teuchos_TableColumn.hpp</includes>
    <includes id="Teuchos__TableFormat_8hpp" name="Teuchos_TableFormat.hpp" local="yes" imported="no">Teuchos_TableFormat.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__ScalarTraits_8hpp" name="Teuchos_ScalarTraits.hpp" local="yes" imported="no">Teuchos_ScalarTraits.hpp</includes>
    <class kind="class">Teuchos::MaxLoc</class>
    <class kind="class">Teuchos::MaxLoc&lt; Ordinal, double, int &gt;</class>
    <class kind="class">Teuchos::MinLoc</class>
    <class kind="class">Teuchos::MinLoc&lt; Ordinal, double, int &gt;</class>
    <class kind="class">Teuchos::MinLocNonzero</class>
    <class kind="class">Teuchos::MinLocNonzero&lt; Ordinal, double, int &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::pair&lt; double, int &gt; &gt;</type>
      <name>timer_map_t</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48624f8dac89d769d3af6f26104e9a4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TimeMonitor.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__TimeMonitor_8hpp</filename>
    <includes id="Teuchos__PerformanceMonitorBase_8hpp" name="Teuchos_PerformanceMonitorBase.hpp" local="yes" imported="no">Teuchos_PerformanceMonitorBase.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__Comm_8hpp" name="Teuchos_Comm.hpp" local="yes" imported="no">Teuchos_Comm.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <class kind="class">Teuchos::TimeMonitor</class>
    <class kind="class">Teuchos::TimeMonitorSurrogateImpl</class>
    <class kind="class">Teuchos::TimeMonitorSurrogateImplInserter</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TIMER</name>
      <anchorfile>Teuchos__TimeMonitor_8hpp.html</anchorfile>
      <anchor>a6c9ccc97c7fa2e4a55b02e7f194683b0</anchor>
      <arglist>(funcName, strName)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_FUNC_TIME_MONITOR_DIFF</name>
      <anchorfile>Teuchos__TimeMonitor_8hpp.html</anchorfile>
      <anchor>ab67f3b8868069b309cd7c7ef7200a13c</anchor>
      <arglist>(FUNCNAME, DIFF)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_FUNC_TIME_MONITOR</name>
      <anchorfile>Teuchos__TimeMonitor_8hpp.html</anchorfile>
      <anchor>ab4d97171996bcdc486fb027fd61eb2aa</anchor>
      <arglist>(FUNCNAME)</arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
      <name>stat_map_type</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b9d5ac516b67471bf9ab8da897e803a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_toString.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__toString_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::ToStringTraits</class>
    <class kind="class">Teuchos::ToStringTraits&lt; bool &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; std::string &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; double &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; float &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; std::pair&lt; T1, T2 &gt; &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb1a0d897682d59e225760fdaff60ca5</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TreeBuildingXMLHandler.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__TreeBuildingXMLHandler_8cpp</filename>
    <includes id="Teuchos__TreeBuildingXMLHandler_8hpp" name="Teuchos_TreeBuildingXMLHandler.hpp" local="yes" imported="no">Teuchos_TreeBuildingXMLHandler.hpp</includes>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TreeBuildingXMLHandler.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__TreeBuildingXMLHandler_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <class kind="class">Teuchos::TreeBuildingXMLHandler</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Tuple.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Tuple_8hpp</filename>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <class kind="class">Teuchos::Tuple</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_TwoDArray.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TwoDArray_8hpp</filename>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <class kind="class">Teuchos::TwoDArray</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; TwoDArray&lt; T &gt; &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::TwoDDetails</namespace>
    <member kind="function">
      <type>std::istringstream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8e6202fa40418680dd1047b9f13e1431</anchor>
      <arglist>(std::istringstream &amp;in, TwoDArray&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae120dec3b31080ab5cad9f8918df2ef9</anchor>
      <arglist>(std::ostream &amp;os, const TwoDArray&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>symmetricCompare</name>
      <anchorfile>namespaceTeuchos_1_1TwoDDetails.html</anchorfile>
      <anchor>a7683bf476b4e43e8350a1463bce8415f</anchor>
      <arglist>(const TwoDArray&lt; T &gt; &amp;a1, const TwoDArray&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a41e9372c2fde8d3e0610348a475fd86b</anchor>
      <arglist>(const TwoDArray&lt; T &gt; &amp;a1, const TwoDArray&lt; T &gt; &amp;a2)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TypeNameTraits.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TypeNameTraits_8cpp</filename>
    <includes id="Teuchos__TypeNameTraits_8hpp" name="Teuchos_TypeNameTraits.hpp" local="yes" imported="no">Teuchos_TypeNameTraits.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_TypeNameTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TypeNameTraits_8hpp</filename>
    <includes id="Teuchos__ConstTypeTraits_8hpp" name="Teuchos_ConstTypeTraits.hpp" local="yes" imported="no">Teuchos_ConstTypeTraits.hpp</includes>
    <class kind="class">Teuchos::TypeNameTraits</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; T * &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; std::string &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; void * &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; void &gt;</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>Teuchos__TypeNameTraits_8hpp.html</anchorfile>
      <anchor>ae70651a8edb8229305a41c67b971a29f</anchor>
      <arglist>(TYPE)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>demangleName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab51ffd2f72e19eea6eb568cf76539e47</anchor>
      <arglist>(const std::string &amp;mangledName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a25c8477479b9eef2988edbb7b967476a</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>concreteTypeName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a44bbd7d1fa58fc840ac087bccb6d86fe</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a72831cbb5902c3f0a1f512b4b4b4f825</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab6efaee9beb69dd9a72cae163418e3af</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93a6d74ca6048a6440dc6cc9efb1278</anchor>
      <arglist>(signed char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4ca38f5b1631f82bcad26dfa025a1d63</anchor>
      <arglist>(unsigned char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a446f86d4318d8551d97df8e436cdc26a</anchor>
      <arglist>(short int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad5dc35ea9348f03cf2db32094bd0a7c0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adf9bdcba0c79121f9fdd0c006d63eb75</anchor>
      <arglist>(long int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a95da106e27f5af42525f8ad72921edbc</anchor>
      <arglist>(unsigned short int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2caba3fb86ba9f4409c5975d4bf4d18b</anchor>
      <arglist>(unsigned long int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a99fa123ce309c8d7496399e61bbadd89</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e7abafc1577f2d359ddc17fa4cfba6d</anchor>
      <arglist>(double)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_TypeTraits.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__TypeTraits_8hpp</filename>
    <class kind="struct">Teuchos::TypeTraits::is_same</class>
    <class kind="struct">Teuchos::TypeTraits::is_same&lt; T, T &gt;</class>
    <namespace>Teuchos</namespace>
    <namespace>Teuchos::TypeTraits</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestBase.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestBase_8cpp</filename>
    <includes id="Teuchos__UnitTestBase_8hpp" name="Teuchos_UnitTestBase.hpp" local="yes" imported="no">Teuchos_UnitTestBase.hpp</includes>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestBase.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestBase_8hpp</filename>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <class kind="class">Teuchos::UnitTestBase</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestHarness.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestHarness_8hpp</filename>
    <includes id="Teuchos__UnitTestBase_8hpp" name="Teuchos_UnitTestBase.hpp" local="yes" imported="no">Teuchos_UnitTestBase.hpp</includes>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__UnitTestHelpers_8hpp" name="Teuchos_UnitTestHelpers.hpp" local="yes" imported="no">Teuchos_UnitTestHelpers.hpp</includes>
    <includes id="Teuchos__LocalTestingHelpers_8hpp" name="Teuchos_LocalTestingHelpers.hpp" local="yes" imported="no">Teuchos_LocalTestingHelpers.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestHelpers_8hpp</filename>
    <includes id="Teuchos__UnitTestBase_8hpp" name="Teuchos_UnitTestBase.hpp" local="yes" imported="no">Teuchos_UnitTestBase.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>aef175e3dd2c6b88499f4ac3c66234a5b</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a061cdf392ee76923f1d8d7fee98c586a</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>ae2e0ab156466c99eabf74c3210beaa5c</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_FLOAT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a601e63c35f2107186f8d18b47b1177ac</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_DOUBLE</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a26ea1329f799a815581e403711348e4c</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_COMPLEX_FLOAT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a821576b0c36c6e2da26e4311f52cdca3</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_COMPLEX_DOUBLE</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>aa2d73d70e3c837002b6f7b4a5c332c40</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_REAL_SCALAR_TYPES</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>aa161ff2e0b5f8eb1a29650e4547828c0</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_INSTANT_SCALAR_TYPES</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>ad62d2ff0f36e11c9e8e59890840b73a2</anchor>
      <arglist>(TEST_GROUP, TEST_NAME)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_2_DECL</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>ac8774758ef1f4d0d8e1b06bbecb85f45</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_2_INSTANT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>aedbb2182994534c90b18160e519def67</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_3_DECL</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a9c1573038634352f2e1ff4c5a2ee058e</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2, TYPE3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_3_INSTANT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a60e51e9c157596f0b81fb9ddd95a88bd</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2, TYPE3)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_4_DECL</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a1de30af4c911da22031b27358819dddd</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2, TYPE3, TYPE4)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_4_INSTANT</name>
      <anchorfile>Teuchos__UnitTestHelpers_8hpp.html</anchorfile>
      <anchor>a319d4809dc01c87082a935090e30c94e</anchor>
      <arglist>(TEST_GROUP, TEST_NAME, TYPE1, TYPE2, TYPE3, TYPE4)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestRepository.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestRepository_8cpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__UnitTestRepository_8hpp" name="Teuchos_UnitTestRepository.hpp" local="yes" imported="no">Teuchos_UnitTestRepository.hpp</includes>
    <includes id="Teuchos__UnitTestBase_8hpp" name="Teuchos_UnitTestBase.hpp" local="yes" imported="no">Teuchos_UnitTestBase.hpp</includes>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__Time_8hpp" name="Teuchos_Time.hpp" local="yes" imported="no">Teuchos_Time.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <class kind="struct">Teuchos::UnitTestData</class>
    <class kind="class">Teuchos::UnitTestRepository::InstanceData</class>
    <namespace>Teuchos</namespace>
    <member kind="enumeration">
      <type></type>
      <name>EShowTestDetails</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_ALL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525aa6ab02cb53475e76d6bf03cf9e2e88d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_TEST_NAMES</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525a8b77f8fa15ca2c89da9b31ef38fe097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_FINAL_RESULTS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525ad6c32b68d8153816b94c1e122a4b76d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb513a70d45e866a1be080237483a13b</anchor>
      <arglist>(const UnitTestData &amp;a, const UnitTestData &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUnitTestName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71f6a29a905112005a23f1a485c6c843</anchor>
      <arglist>(const std::string groupName, const std::string testName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>strMatch</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a58f9e88426384df4a26b3495858f41f2</anchor>
      <arglist>(const std::string &amp;fullMatchStr, const std::string &amp;str)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_UnitTestRepository.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__UnitTestRepository_8hpp</filename>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__StandardMemberCompositionMacros_8hpp" name="Teuchos_StandardMemberCompositionMacros.hpp" local="yes" imported="no">Teuchos_StandardMemberCompositionMacros.hpp</includes>
    <includes id="Teuchos__Ptr_8hpp" name="Teuchos_Ptr.hpp" local="yes" imported="no">Teuchos_Ptr.hpp</includes>
    <class kind="class">Teuchos::UnitTestRepository</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Utils.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Utils_8cpp</filename>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Utils.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Utils_8hpp</filename>
    <includes id="Teuchos__toString_8hpp" name="Teuchos_toString.hpp" local="yes" imported="no">Teuchos_toString.hpp</includes>
    <class kind="class">Teuchos::Utils</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorFactory_8cpp</filename>
    <includes id="Teuchos__ValidatorFactory_8hpp" name="Teuchos_ValidatorFactory.hpp" local="yes" imported="no">Teuchos_ValidatorFactory.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorFactory_8hpp</filename>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <class kind="class">Teuchos::ValidatorFactory</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorMaps.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorMaps_8cpp</filename>
    <includes id="Teuchos__ValidatorMaps_8hpp" name="Teuchos_ValidatorMaps.hpp" local="yes" imported="no">Teuchos_ValidatorMaps.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorMaps.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorMaps_8hpp</filename>
    <includes id="Teuchos__ParameterEntryValidator_8hpp" name="Teuchos_ParameterEntryValidator.hpp" local="yes" imported="no">Teuchos_ParameterEntryValidator.hpp</includes>
    <includes id="Teuchos__ValidatorMaps_8hpp" name="Teuchos_ValidatorMaps.hpp" local="yes" imported="no">Teuchos_ValidatorMaps.hpp</includes>
    <class kind="class">Teuchos::IDtoValidatorMap</class>
    <class kind="class">Teuchos::ValidatortoIDMap</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorXMLConverter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorXMLConverter_8cpp</filename>
    <includes id="Teuchos__ValidatorXMLConverter_8hpp" name="Teuchos_ValidatorXMLConverter.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverter.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorXMLConverter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorXMLConverter_8hpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Describable_8hpp" name="Teuchos_Describable.hpp" local="yes" imported="no">Teuchos_Describable.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__ParameterEntryValidator_8hpp" name="Teuchos_ParameterEntryValidator.hpp" local="yes" imported="no">Teuchos_ParameterEntryValidator.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <class kind="class">Teuchos::ValidatorXMLConverter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorXMLConverterDB.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorXMLConverterDB_8cpp</filename>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <includes id="Teuchos__StaticSetupMacro_8hpp" name="Teuchos_StaticSetupMacro.hpp" local="yes" imported="no">Teuchos_StaticSetupMacro.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_ValidatorXMLConverterDB.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__ValidatorXMLConverterDB_8hpp</filename>
    <includes id="Teuchos__ValidatorXMLConverter_8hpp" name="Teuchos_ValidatorXMLConverter.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverter.hpp</includes>
    <includes id="Teuchos__StandardValidatorXMLConverters_8hpp" name="Teuchos_StandardValidatorXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardValidatorXMLConverters.hpp</includes>
    <class kind="class">Teuchos::ValidatorXMLConverterDB</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_STRINGTOINTEGRALVALIDATOR_CONVERTER</name>
      <anchorfile>Teuchos__ValidatorXMLConverterDB_8hpp.html</anchorfile>
      <anchor>acdd24edbb4616941d0b69ea7b523eec2</anchor>
      <arglist>(INTEGRALTYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_ENHANCEDNUMBERVALIDATOR_CONVERTER</name>
      <anchorfile>Teuchos__ValidatorXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a4245fc4a3586c0f8a2770befc0f565d4</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_ARRAYVALIDATOR_CONVERTER</name>
      <anchorfile>Teuchos__ValidatorXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a2f333422b218fd063e944d175f583ebe</anchor>
      <arglist>(VALIDATORTYPE, ENTRYTYPE)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_NUMBERTYPE_VALIDATOR_CONVERTERS</name>
      <anchorfile>Teuchos__ValidatorXMLConverterDB_8hpp.html</anchorfile>
      <anchor>ac834255ee5ab865af8d17f6acebde82d</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ADD_VALIDATOR_CONVERTER</name>
      <anchorfile>Teuchos__ValidatorXMLConverterDB_8hpp.html</anchorfile>
      <anchor>a63ebfbfbb237752ec10803eb6e9751af</anchor>
      <arglist>(VALIDATOR_TYPE, CONVERTER_TYPE)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerboseObject.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__VerboseObject_8cpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerboseObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__VerboseObject_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__FancyOStream_8hpp" name="Teuchos_FancyOStream.hpp" local="yes" imported="no">Teuchos_FancyOStream.hpp</includes>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <class kind="class">Teuchos::VerboseObjectBase</class>
    <class kind="class">Teuchos::VerboseObject</class>
    <class kind="class">Teuchos::VerboseObjectTempState</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerboseObjectParameterListHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__VerboseObjectParameterListHelpers_8cpp</filename>
    <includes id="Teuchos__VerboseObjectParameterListHelpers_8hpp" name="Teuchos_VerboseObjectParameterListHelpers.hpp" local="yes" imported="no">Teuchos_VerboseObjectParameterListHelpers.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerboseObjectParameterListHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__VerboseObjectParameterListHelpers_8hpp</filename>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerbosityLevel.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__VerbosityLevel_8cpp</filename>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerbosityLevel.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__VerbosityLevel_8hpp</filename>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__iostream__helpers_8hpp" name="Teuchos_iostream_helpers.hpp" local="yes" imported="no">Teuchos_iostream_helpers.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="enumeration">
      <type></type>
      <name>EVerbosityLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_DEFAULT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fdaccb47191b0d1f808d367e807e4f20882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_NONE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda8d918a74f650d850a81c8f3a6e8d74a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_LOW</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fdad51bbaaddacc51f90e8a6d69a033a05b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_MEDIUM</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda478aa593777b1f7b0d68ed69cbf01562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_HIGH</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda58629ea5d434a164ee03377a586c6d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_EXTREME</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda880d1aeb26ce3710eba0095b3c3becc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adb0f540330fd1652a344e3c048de6701</anchor>
      <arglist>(const EVerbosityLevel verbLevel)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT bool</type>
      <name>includesVerbLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8ab53557f886a129cbbc82ce0156f904</anchor>
      <arglist>(const EVerbosityLevel verbLevel, const EVerbosityLevel requestedVerbLevel, const bool isDefaultLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT EVerbosityLevel</type>
      <name>incrVerbLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab57bc2e2b1b8582eb5e8ca4693834c02</anchor>
      <arglist>(const EVerbosityLevel inputVerbLevel, const int numLevels)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerbosityLevelCommandLineProcessorHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__VerbosityLevelCommandLineProcessorHelpers_8cpp</filename>
    <includes id="Teuchos__VerbosityLevelCommandLineProcessorHelpers_8hpp" name="Teuchos_VerbosityLevelCommandLineProcessorHelpers.hpp" local="yes" imported="no">Teuchos_VerbosityLevelCommandLineProcessorHelpers.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__implicit__cast_8hpp" name="Teuchos_implicit_cast.hpp" local="yes" imported="no">Teuchos_implicit_cast.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_VerbosityLevelCommandLineProcessorHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__VerbosityLevelCommandLineProcessorHelpers_8hpp</filename>
    <includes id="Teuchos__VerbosityLevel_8hpp" name="Teuchos_VerbosityLevel.hpp" local="yes" imported="no">Teuchos_VerbosityLevel.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Version.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Version_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>Teuchos_Version</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af543b117c61d1cf52e2b464f2c618309</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_Workspace.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Workspace_8cpp</filename>
    <includes id="Teuchos__Workspace_8hpp" name="Teuchos_Workspace.hpp" local="yes" imported="no">Teuchos_Workspace.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_Workspace.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>Teuchos__Workspace_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <includes id="Teuchos__ArrayView_8hpp" name="Teuchos_ArrayView.hpp" local="yes" imported="no">Teuchos_ArrayView.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <class kind="class">Teuchos::RawWorkspace</class>
    <class kind="class">Teuchos::Workspace</class>
    <class kind="class">Teuchos::WorkspaceStore</class>
    <class kind="class">Teuchos::WorkspaceStoreInitializeable</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>set_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>gaca2f084f86654404e05467a423676242</anchor>
      <arglist>(const Teuchos::RCP&lt; WorkspaceStore &gt; &amp;default_workspace_store)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT Teuchos::RCP&lt; WorkspaceStore &gt;</type>
      <name>get_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga779918e84bc90004f7543acbccc70b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>print_memory_usage_stats</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga620281f771e65332f55ced465a0f3ce9</anchor>
      <arglist>(const WorkspaceStore *workspace_store, std::ostream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLConditionExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLConditionExceptions_8hpp</filename>
    <class kind="class">Teuchos::MissingValuesTagException</class>
    <class kind="class">Teuchos::CantFindConditionConverterException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLDependencyExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLDependencyExceptions_8hpp</filename>
    <class kind="class">Teuchos::MissingDependeeException</class>
    <class kind="class">Teuchos::MissingDependentException</class>
    <class kind="class">Teuchos::MissingDependeesException</class>
    <class kind="class">Teuchos::MissingDependentsException</class>
    <class kind="class">Teuchos::TooManyDependeesException</class>
    <class kind="class">Teuchos::ValuesTagMissingException</class>
    <class kind="class">Teuchos::MissingRangesAndValidatorsTagException</class>
    <class kind="class">Teuchos::MissingValuesAndValidatorsTagException</class>
    <class kind="class">Teuchos::MissingConditionTagException</class>
    <class kind="class">Teuchos::MissingValidatorException</class>
    <class kind="class">Teuchos::CantFindDependencyConverterException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLFunctionObjectExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLFunctionObjectExceptions_8hpp</filename>
    <class kind="class">Teuchos::CantFindFunctionObjectConverterException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLInputSource.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLInputSource_8cpp</filename>
    <includes id="Teuchos__XMLInputSource_8hpp" name="Teuchos_XMLInputSource.hpp" local="yes" imported="no">Teuchos_XMLInputSource.hpp</includes>
    <includes id="Teuchos__TreeBuildingXMLHandler_8hpp" name="Teuchos_TreeBuildingXMLHandler.hpp" local="yes" imported="no">Teuchos_TreeBuildingXMLHandler.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLInputSource.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLInputSource_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__XMLInputStream_8hpp" name="Teuchos_XMLInputStream.hpp" local="yes" imported="no">Teuchos_XMLInputStream.hpp</includes>
    <class kind="class">Teuchos::XMLInputSource</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLInputStream.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLInputStream_8cpp</filename>
    <includes id="Teuchos__XMLInputStream_8hpp" name="Teuchos_XMLInputStream.hpp" local="yes" imported="no">Teuchos_XMLInputStream.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLInputStream.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLInputStream_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <class kind="class">Teuchos::XMLInputStream</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLObject.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLObject_8cpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>std::string</type>
      <name>XMLObject::getRequired&lt; std::string &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3cd664de83f670df19627549fc174fac</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>XMLObject::addAttribute&lt; const std::string &amp; &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7c544080dce5f3e2ffb195c6340a4c00</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLObject.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLObject_8hpp</filename>
    <includes id="Teuchos__XMLObjectImplem_8hpp" name="Teuchos_XMLObjectImplem.hpp" local="yes" imported="no">Teuchos_XMLObjectImplem.hpp</includes>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <class kind="class">Teuchos::EmptyXMLError</class>
    <class kind="class">Teuchos::XMLObject</class>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT std::string</type>
      <name>XMLObject::getRequired&lt; std::string &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af0b2adfaf095908375cc6ade14208cd6</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>XMLObject::addAttribute&lt; const std::string &amp; &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3a1c5189d97ea51b7be1cdeb40758762</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLObjectImplem.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLObjectImplem_8cpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__StrUtils_8hpp" name="Teuchos_StrUtils.hpp" local="yes" imported="no">Teuchos_StrUtils.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLObjectImplem.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLObjectImplem_8hpp</filename>
    <includes id="Teuchos__map_8hpp" name="Teuchos_map.hpp" local="yes" imported="no">Teuchos_map.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Teuchos::XMLObjectImplem</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListCoreHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListCoreHelpers_8cpp</filename>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListCoreHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListCoreHelpers_8hpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListExceptions.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListExceptions_8hpp</filename>
    <class kind="class">Teuchos::CantFindParameterEntryConverterException</class>
    <class kind="class">Teuchos::DuplicateValidatorIDsException</class>
    <class kind="class">Teuchos::DuplicateParameterIDsException</class>
    <class kind="class">Teuchos::BadValidatorXMLConverterException</class>
    <class kind="class">Teuchos::CantFindValidatorConverterException</class>
    <class kind="class">Teuchos::BadParameterEntryXMLConverterTypeException</class>
    <class kind="class">Teuchos::NoValueAttributeExecption</class>
    <class kind="class">Teuchos::NoTypeAttributeExecption</class>
    <class kind="class">Teuchos::NoNameAttributeExecption</class>
    <class kind="class">Teuchos::BadParameterListElementException</class>
    <class kind="class">Teuchos::BadXMLParameterListRootElementException</class>
    <class kind="class">Teuchos::MissingValidatorDefinitionException</class>
    <class kind="class">Teuchos::MissingParameterEntryDefinitionException</class>
    <class kind="class">Teuchos::BadTagException</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__XMLParameterListHelpers_8cpp</filename>
    <includes id="Teuchos__XMLParameterListHelpers_8hpp" name="Teuchos_XMLParameterListHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListHelpers.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/src/</path>
    <filename>Teuchos__XMLParameterListHelpers_8hpp</filename>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__Comm_8hpp" name="Teuchos_Comm.hpp" local="yes" imported="no">Teuchos_Comm.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListReader.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListReader_8cpp</filename>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__DependencyXMLConverterDB_8hpp" name="Teuchos_DependencyXMLConverterDB.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverterDB.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListReader.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListReader_8hpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <includes id="Teuchos__ValidatorMaps_8hpp" name="Teuchos_ValidatorMaps.hpp" local="yes" imported="no">Teuchos_ValidatorMaps.hpp</includes>
    <class kind="class">Teuchos::XMLParameterListReader</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListTestHelpers.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>Teuchos__XMLParameterListTestHelpers_8cpp</filename>
    <includes id="Teuchos__XMLParameterListTestHelpers_8hpp" name="Teuchos_XMLParameterListTestHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListTestHelpers.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListTestHelpers.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/ParameterList/</path>
    <filename>Teuchos__XMLParameterListTestHelpers_8hpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>writeThenReadPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad49389b0f0d0745e2b09ea28458155b2</anchor>
      <arglist>(ParameterList &amp;myList)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>writeThenReadPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>add76c8b2f1e3d097e2ebf3eb7f318fa6</anchor>
      <arglist>(ParameterList &amp;myList, RCP&lt; DependencySheet &gt; depSheetIn, RCP&lt; DependencySheet &gt; depSheetOut)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListWriter.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListWriter_8cpp</filename>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__DependencyXMLConverterDB_8hpp" name="Teuchos_DependencyXMLConverterDB.hpp" local="yes" imported="no">Teuchos_DependencyXMLConverterDB.hpp</includes>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParameterListWriter.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParameterListWriter_8hpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__Utils_8hpp" name="Teuchos_Utils.hpp" local="yes" imported="no">Teuchos_Utils.hpp</includes>
    <includes id="Teuchos__DependencySheet_8hpp" name="Teuchos_DependencySheet.hpp" local="yes" imported="no">Teuchos_DependencySheet.hpp</includes>
    <includes id="Teuchos__ValidatorMaps_8hpp" name="Teuchos_ValidatorMaps.hpp" local="yes" imported="no">Teuchos_ValidatorMaps.hpp</includes>
    <class kind="class">Teuchos::XMLParameterListWriter</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParser.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParser_8cpp</filename>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__TreeBuildingXMLHandler_8hpp" name="Teuchos_TreeBuildingXMLHandler.hpp" local="yes" imported="no">Teuchos_TreeBuildingXMLHandler.hpp</includes>
    <includes id="Teuchos__Assert_8hpp" name="Teuchos_Assert.hpp" local="yes" imported="no">Teuchos_Assert.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>XMLPARSER_TFE</name>
      <anchorfile>Teuchos__XMLParser_8cpp.html</anchorfile>
      <anchor>a470eb7cd8bdaaacb9a73b0a4da5e92c7</anchor>
      <arglist>(T, S)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLParser.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLParser_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="yes" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="yes" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__XMLInputStream_8hpp" name="Teuchos_XMLInputStream.hpp" local="yes" imported="no">Teuchos_XMLInputStream.hpp</includes>
    <class kind="class">Teuchos::XMLParser</class>
    <namespace>Teuchos</namespace>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLPerfTestArchive.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLPerfTestArchive_8cpp</filename>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="no" imported="no">Teuchos_XMLObject.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="no" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLPerfTestArchive_8hpp" name="Teuchos_XMLPerfTestArchive.hpp" local="no" imported="no">Teuchos_XMLPerfTestArchive.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>XMLTestNode</type>
      <name>PerfTest_MachineConfig</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a06b128170a8b3f07c278ec7e529a8b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PerfTestResult</type>
      <name>PerfTest_CheckOrAdd_Test</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad1ca056055a458f2d45c0d81f81fa1f3</anchor>
      <arglist>(XMLTestNode machine_config, XMLTestNode new_test, const std::string filename, const std::string ext_hostname=std::string())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Teuchos_XMLPerfTestArchive.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/src/</path>
    <filename>Teuchos__XMLPerfTestArchive_8hpp</filename>
    <includes id="Teuchos__ConfigDefs_8hpp" name="Teuchos_ConfigDefs.hpp" local="no" imported="no">Teuchos_ConfigDefs.hpp</includes>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="no" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLObject_8hpp" name="Teuchos_XMLObject.hpp" local="no" imported="no">Teuchos_XMLObject.hpp</includes>
    <class kind="struct">Teuchos::ValueTolerance</class>
    <class kind="class">Teuchos::XMLTestNode</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_COMPILER_NAME</name>
      <anchorfile>Teuchos__XMLPerfTestArchive_8hpp.html</anchorfile>
      <anchor>ac88bbbda61b6581d357dc7896f31764b</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_COMPILER_VERSION</name>
      <anchorfile>Teuchos__XMLPerfTestArchive_8hpp.html</anchorfile>
      <anchor>ad4c7a223b1175640fae1e8c031b1b967</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_DEVICE_COMPILER_NAME</name>
      <anchorfile>Teuchos__XMLPerfTestArchive_8hpp.html</anchorfile>
      <anchor>ab94baf91c026c7c3eea46b24927fb806</anchor>
      <arglist></arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_DEVICE_COMPILER_VERSION</name>
      <anchorfile>Teuchos__XMLPerfTestArchive_8hpp.html</anchorfile>
      <anchor>ab955ccf655a4f1565376282ff3a09ef8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerfTestResult</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestFailed</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a62d337d66fec93ea7732e1e3b19ec990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestPassed</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a8bf9637f5fd8eb6b2623a1b966166d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewMachine</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a9d1a31fe880b6d5110bee7ea78675cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewConfiguration</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a263d2ceb00aefc21d0dcc89cac76a5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13ab407ef2ed65f2f8a39046498b2720045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewTestConfiguration</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a3d6151b0722b0468b795724414ebb443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestUpdatedTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a1453929e3179bdcc65423d54510af70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>XMLTestNode</type>
      <name>PerfTest_MachineConfig</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a06b128170a8b3f07c278ec7e529a8b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PerfTestResult</type>
      <name>PerfTest_CheckOrAdd_Test</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad1ca056055a458f2d45c0d81f81fa1f3</anchor>
      <arglist>(XMLTestNode machine_config, XMLTestNode new_test, const std::string filename, const std::string ext_hostname=std::string())</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TeuchosCore_ConfigDefs.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/src/</path>
    <filename>TeuchosCore__ConfigDefs_8hpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_NOEXCEPT_FALSE</name>
      <anchorfile>TeuchosCore__ConfigDefs_8hpp.html</anchorfile>
      <anchor>aad36d312fc014e0370cba253a4ae109f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TimeMonitor_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/Time/</path>
    <filename>TimeMonitor__UnitTests_8cpp</filename>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4400bee931aa5782b50b7d98157c8eff</anchor>
      <arglist>(TimeMonitor, FUNC_TIME_MONITOR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a62ada1473236680dffdedb5ece4c54d2</anchor>
      <arglist>(TimeMonitor, enableTimer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71f6623169cea8961406b7d75b62e371</anchor>
      <arglist>(TimeMonitor, YamlLabelQuoting)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a008d57970d233707693fb02413e24d3e</anchor>
      <arglist>(TimeMonitor, TimerLabelFiltering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a682f5c609f3511b3b1022387960a5265</anchor>
      <arglist>(TimeMonitor, FUNC_TIME_MONITOR_tested)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a68cd056969dfbdde28929fb0fcdcbabe</anchor>
      <arglist>(TimeMonitor, SUMMARIZE_diffTimerSets)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36899dffe2905df1607ad155d879dddf</anchor>
      <arglist>(TimeMonitor, FILTER_ZERO_TIMERS_sameParallelCallCounts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa761125d9efeb266687f72ea5e6aee17</anchor>
      <arglist>(TimeMonitor, FILTER_ZERO_TIMERS_differentParallelCallCounts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6be2b0421b378c9467fafb4caaab7ed0</anchor>
      <arglist>(TimeMonitor, IgnoreMissingTimers)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>onitor/TimeMonitor_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/TimeMonitor/</path>
    <filename>onitor_2TimeMonitor__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__TimeMonitor_8hpp" name="Teuchos_TimeMonitor.hpp" local="yes" imported="no">Teuchos_TimeMonitor.hpp</includes>
  </compound>
  <compound kind="file">
    <name>Trilinos_Details_LinearSolver.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Trilinos__Details__LinearSolver_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Trilinos::Details::LinearSolver</class>
    <namespace>Teuchos</namespace>
    <namespace>Trilinos</namespace>
    <namespace>Details</namespace>
    <namespace>Trilinos::Details</namespace>
  </compound>
  <compound kind="file">
    <name>Trilinos_Details_LinearSolverFactory.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Trilinos__Details__LinearSolverFactory_8cpp</filename>
    <includes id="Trilinos__Details__LinearSolverFactory_8hpp" name="Trilinos_Details_LinearSolverFactory.hpp" local="yes" imported="no">Trilinos_Details_LinearSolverFactory.hpp</includes>
    <namespace>Trilinos</namespace>
    <namespace>Trilinos::Details</namespace>
    <namespace>Trilinos::Details::Impl</namespace>
    <member kind="function">
      <type>bool</type>
      <name>rememberRegisteredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a9c8ad7745636b91916c33cbee631786b</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registeredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a8e34bcac649f747449516c541143e313</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLinearSolverFactoryRunTimeRegistration</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>ab87a2c478b3b3c6596992532b2cecf48</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Trilinos_Details_LinearSolverFactory.hpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/remainder/src/</path>
    <filename>Trilinos__Details__LinearSolverFactory_8hpp</filename>
    <includes id="Teuchos__RCP_8hpp" name="Teuchos_RCP.hpp" local="yes" imported="no">Teuchos_RCP.hpp</includes>
    <class kind="class">Trilinos::Details::LinearSolver</class>
    <class kind="class">Trilinos::Details::LinearSolverFactory</class>
    <class kind="class">Trilinos::Details::Impl::LinearSolverFactoryRepository</class>
    <namespace>Trilinos</namespace>
    <namespace>Details</namespace>
    <namespace>Trilinos::Details</namespace>
    <namespace>Trilinos::Details::Impl</namespace>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>namespaceTrilinos_1_1Details.html</anchorfile>
      <anchor>a2a0bb5612b70d57694084eb739b9f141</anchor>
      <arglist>(const std::string &amp;packageName, const std::string &amp;solverName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details.html</anchorfile>
      <anchor>a1753005d87a3117c49301cca7d0b276c</anchor>
      <arglist>(const std::string &amp;packageName, const Teuchos::RCP&lt; LinearSolverFactory&lt; MV, OP, NormType &gt; &gt; &amp;factory)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>rememberRegisteredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a9c8ad7745636b91916c33cbee631786b</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registeredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a8e34bcac649f747449516c541143e313</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLinearSolverFactoryRunTimeRegistration</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>ab87a2c478b3b3c6596992532b2cecf48</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Tuple_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/MemoryManagement/</path>
    <filename>Tuple__test_8cpp</filename>
    <includes id="Teuchos__Tuple_8hpp" name="Teuchos_Tuple.hpp" local="yes" imported="no">Teuchos_Tuple.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__TestingHelpers_8hpp" name="Teuchos_TestingHelpers.hpp" local="yes" imported="no">Teuchos_TestingHelpers.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY_CONST</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a11837f2dd2222117f08234397a4f894c</anchor>
      <arglist>(v1, v2)                                  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_EQUALITY</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a3546fc38f2c009643e5df704ef0a6505</anchor>
      <arglist>(v1, v2)                              </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ITER_EQUALITY</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>ad679ad9010ec71bf3fc5dc6a608e4555</anchor>
      <arglist>(iter1, iter2)                                        </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_ARRAY_ELE_EQUALITY</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>afebf321f65a8ab306997ce837f8da1f7</anchor>
      <arglist>(a, i, val)                                                    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a07803f1600bad63a4e73be9b7ee74016</anchor>
      <arglist>(v1, comp, v2)                                    </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_COMPARE_ARRAYS</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a80e61b84be627da499176759b9d4a132</anchor>
      <arglist>(a1, a2)                                                  </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_THROW</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a2012f14e022f7b1ead3d61396bea0395</anchor>
      <arglist>(code, ExceptType )                              </arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEST_NOTHROW</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a795a242c19c3719ddfcf733806bbf04b</anchor>
      <arglist>(code )                                  </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testTuple</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>aec546897e7028f1f041a4b394d1bce4b</anchor>
      <arglist>(Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>Tuple__test_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TwoDArray_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/TwoDArray/</path>
    <filename>TwoDArray__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__TwoDArray_8hpp" name="Teuchos_TwoDArray.hpp" local="yes" imported="no">Teuchos_TwoDArray.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type>TwoDArray&lt; int &gt;</type>
      <name>getSimpleTestTwoDArray</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af2e153e1fc45b89a01632cc68c072c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a19a0306ace91a132d9158d8474924b07</anchor>
      <arglist>(Teuchos_TwoDArrays, simpleTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a31661340ccdfbba03017e2a07ee2143d</anchor>
      <arglist>(Teuchos_TwoDArrays, stringFunctions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad9a6bd1aabb5d5bda7dead6117734c83</anchor>
      <arglist>(Teuchos_TwoDArrays, emptyTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0cd78bf1578cf33cee66e3d78797a2f6</anchor>
      <arglist>(Teuchos_TwoDArrays, streamTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab14ea79bb367052a2aab414ef58b6bff</anchor>
      <arglist>(Teuchos_TwoDArray, clearTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a8a4fe55fbd552267eb5f1f799fc9bd</anchor>
      <arglist>(Teuchos_TwoDArray, resizeTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8eeedda3df92a3fcb459032dd15f0469</anchor>
      <arglist>(Teuchos_TwoDArray, symmetryTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab92ea5d64a330687b241fdb845b4a797</anchor>
      <arglist>(Teuchos_TwoDArray, symmetrySerialization)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>TypeConversions_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/TypeConversions/</path>
    <filename>TypeConversions__UnitTest_8cpp</filename>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>TEST_NOTHROW_WITH_MESSAGE</name>
      <anchorfile>TypeConversions__UnitTest_8cpp.html</anchorfile>
      <anchor>a02a4ffa703c34dc5025aa5f539fdae2b</anchor>
      <arglist>(code)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_ANY_INTEGER</name>
      <anchorfile>TypeConversions__UnitTest_8cpp.html</anchorfile>
      <anchor>a39cb77feb133036b6da3a12b9546ef63</anchor>
      <arglist>(AnyIntegerType)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP_SIGNED_INTEGER</name>
      <anchorfile>TypeConversions__UnitTest_8cpp.html</anchorfile>
      <anchor>a1751b1d9b67eac4000f13cce94389e78</anchor>
      <arglist>(SignedIntegerType)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>UnitTest_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>UnitTest__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__dyn__cast_8hpp" name="Teuchos_dyn_cast.hpp" local="yes" imported="no">Teuchos_dyn_cast.hpp</includes>
  </compound>
  <compound kind="file">
    <name>UnitTestHarness_Parallel_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/comm/test/UnitTesting/</path>
    <filename>UnitTestHarness__Parallel__UnitTests_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLParameterListHelpers_8hpp" name="Teuchos_XMLParameterListHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListHelpers.hpp</includes>
    <includes id="Teuchos__DefaultComm_8hpp" name="Teuchos_DefaultComm.hpp" local="yes" imported="no">Teuchos_DefaultComm.hpp</includes>
    <includes id="Teuchos__CommHelpers_8hpp" name="Teuchos_CommHelpers.hpp" local="yes" imported="no">Teuchos_CommHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aae70d4e1dbc4b3843b5c6b7f4a85530e</anchor>
      <arglist>(UnitTestHarness, nonRootFails)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a541046d1cdfae4649f4e96427b446174</anchor>
      <arglist>(UnitTestHarness, nonRootThrowsTeuchosExcept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a331322dbc062c64362538d3091babd8d</anchor>
      <arglist>(UnitTestHarness, nonRootThrowsIntExcept)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Validator_SerializationTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Validators/</path>
    <filename>Validator__SerializationTest_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__ValidatorXMLConverterDB_8hpp" name="Teuchos_ValidatorXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ValidatorXMLConverterDB.hpp</includes>
    <includes id="Teuchos__StandardValidatorXMLConverters_8hpp" name="Teuchos_StandardValidatorXMLConverters.hpp" local="yes" imported="no">Teuchos_StandardValidatorXMLConverters.hpp</includes>
    <includes id="Teuchos__XMLParameterListTestHelpers_8hpp" name="Teuchos_XMLParameterListTestHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListTestHelpers.hpp</includes>
    <class kind="class">Teuchos::UNDEFINED_PARAMETERENTRY_VALIDATOR</class>
    <namespace>Teuchos</namespace>
    <member kind="define">
      <type>#define</type>
      <name>FULL_NUMBER_TYPE_TEST</name>
      <anchorfile>Validator__SerializationTest_8cpp.html</anchorfile>
      <anchor>aea425d631abf175c351199f6060b3d3c</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>NONINTEGRAL_NUMBER_TYPE_TEST</name>
      <anchorfile>Validator__SerializationTest_8cpp.html</anchorfile>
      <anchor>aff639c47e0e59584419cc88609b63858</anchor>
      <arglist>(T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f185922a055f563457aa4cb5200d1a3</anchor>
      <arglist>(Teuchos_Validator, exceptionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a91ff8e9d20de4874ed8dafb904c54e63</anchor>
      <arglist>(Teuchos_Validator, fileNameValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad217ea375a04d05d6b5610e5393dbbe8</anchor>
      <arglist>(Teuchos_Validator, stringValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa4d132f1429abfab5bb1569a76064691</anchor>
      <arglist>(Teuchos_Validator, anynumberValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac28359fcd7229b774c2c4cbf63fb9a77</anchor>
      <arglist>(Teuchos_Validator, EnhancedNumberValidatorConverter, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2f4618d01f061926520603b3f5d1ec22</anchor>
      <arglist>(Teuchos_Validator, NumberArrayValidatorConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a751d3e9399749b0540cc390c0362c9f0</anchor>
      <arglist>(Teuchos_Validator, TwoDArrayNumberValidatorConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93623a79a764a688dededdd30f4ec67</anchor>
      <arglist>(Teuchos_Validator, StringToIntegralConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae1f878e1594480a19fc19f1ec1a3b3d9</anchor>
      <arglist>(Teuchos_Validator, existingPrototypeTest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Validator_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/Validators/</path>
    <filename>Validator__UnitTest_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__VerboseObject_8hpp" name="Teuchos_VerboseObject.hpp" local="yes" imported="no">Teuchos_VerboseObject.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__StandardParameterEntryValidators_8hpp" name="Teuchos_StandardParameterEntryValidators.hpp" local="yes" imported="no">Teuchos_StandardParameterEntryValidators.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a235f8f165eeb496f4101b7461a75b416</anchor>
      <arglist>(Teuchos_Validators, numberValidators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afc65f4fb8347460e5b0d8f1bf8ca50c1</anchor>
      <arglist>(Teuchos_Validators, stringValidator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af48bb85147b14af4b02222f6c5b610b8</anchor>
      <arglist>(Teuchos_Validators, fileNameValidator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a78827beb4056f5fe16d93cb3b4782c5d</anchor>
      <arglist>(Teuchos_Validators, arrayValidators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af69455b4d75e9b7478ff12de7841f2aa</anchor>
      <arglist>(Teuchos_Validators, twoDArrayValidators)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>vector_UnitTests.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/core/test/UnitTest/</path>
    <filename>vector__UnitTests_8cpp</filename>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__getConst_8hpp" name="Teuchos_getConst.hpp" local="yes" imported="no">Teuchos_getConst.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <member kind="define">
      <type>#define</type>
      <name>UNIT_TEST_GROUP</name>
      <anchorfile>vector__UnitTests_8cpp.html</anchorfile>
      <anchor>a02c775740141a85dea5f29e2f68722e9</anchor>
      <arglist>(T)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>xml_data_types.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/example/ParameterList/</path>
    <filename>xml__data__types_8cpp</filename>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__Array_8hpp" name="Teuchos_Array.hpp" local="yes" imported="no">Teuchos_Array.hpp</includes>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__ParameterEntryXMLConverterDB_8hpp" name="Teuchos_ParameterEntryXMLConverterDB.hpp" local="yes" imported="no">Teuchos_ParameterEntryXMLConverterDB.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__as_8hpp" name="Teuchos_as.hpp" local="yes" imported="no">Teuchos_as.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <class kind="class">CustomDataType</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>xml__data__types_8cpp.html</anchorfile>
      <anchor>a17c6d5e96d8b2f551ecfa5c710e0dc67</anchor>
      <arglist>(std::ostream &amp;out, const CustomDataType &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>xml__data__types_8cpp.html</anchorfile>
      <anchor>a640b77094c0f994affd40c8e533dc3e3</anchor>
      <arglist>(std::istream &amp;in, CustomDataType &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>xml__data__types_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParameterListHelpers_AnonSublists.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XML/</path>
    <filename>XMLParameterListHelpers__AnonSublists_8cpp</filename>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <includes id="Teuchos__XMLParameterListExceptions_8hpp" name="Teuchos_XMLParameterListExceptions.hpp" local="yes" imported="no">Teuchos_XMLParameterListExceptions.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7e407983091cfd23824bcc8e72e2b0bc</anchor>
      <arglist>(XMLParameterListHelpers, anonymousSublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2cfd76ea7aad31fe58deb7c7f4541035</anchor>
      <arglist>(XMLParameterListHelpers, anonymousParam)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParameterListHelpers_UnitTest.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XML/</path>
    <filename>XMLParameterListHelpers__UnitTest_8cpp</filename>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8e2136cf3b5fcd80b154624cb22bcf95</anchor>
      <arglist>(XMLParameterListHelpers, toFromFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aadca1f44f8652d00963f9abf941a23d6</anchor>
      <arglist>(XMLParameterListHelpers, OverwriteTest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParser_ordered.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XMLParser/</path>
    <filename>XMLParser__ordered_8cpp</filename>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab537b3c801d548d612cd85d092d1ea8a</anchor>
      <arglist>(XMLParser, orderedWriteRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a03930220d22d0402d7eb2b2a5c36b0a4</anchor>
      <arglist>(XMLParser, simpleOrderedRead)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParser_ParseFileForError.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XMLParser/</path>
    <filename>XMLParser__ParseFileForError_8cpp</filename>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8d6105adcd460c51cc7efda298a358ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af273c01a1542cbf1f794d8e19a18ea0a</anchor>
      <arglist>(XMLParser, ParseFile)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>XMLParser__ParseFileForError_8cpp.html</anchorfile>
      <anchor>ae80f820219e45772366a2a68de6a54c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>XMLParser__ParseFileForError_8cpp.html</anchorfile>
      <anchor>a8c94119e5bd6fbde0680ef83f01c9685</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParser_ParseWithoutFailing.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XMLParser/</path>
    <filename>XMLParser__ParseWithoutFailing_8cpp</filename>
    <includes id="Teuchos__FileInputSource_8hpp" name="Teuchos_FileInputSource.hpp" local="yes" imported="no">Teuchos_FileInputSource.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8d6105adcd460c51cc7efda298a358ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae87c243f58ce0980b49c949b4f245ed6</anchor>
      <arglist>(XMLParser, IgnoreDeclarations)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>filename</name>
      <anchorfile>XMLParser__ParseWithoutFailing_8cpp.html</anchorfile>
      <anchor>ae80f820219e45772366a2a68de6a54c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>error</name>
      <anchorfile>XMLParser__ParseWithoutFailing_8cpp.html</anchorfile>
      <anchor>a8c94119e5bd6fbde0680ef83f01c9685</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XMLParser_test.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/test/XMLParser/</path>
    <filename>XMLParser__test_8cpp</filename>
    <includes id="Teuchos__XMLParameterListWriter_8hpp" name="Teuchos_XMLParameterListWriter.hpp" local="yes" imported="no">Teuchos_XMLParameterListWriter.hpp</includes>
    <includes id="Teuchos__XMLParameterListReader_8hpp" name="Teuchos_XMLParameterListReader.hpp" local="yes" imported="no">Teuchos_XMLParameterListReader.hpp</includes>
    <includes id="Teuchos__StringInputSource_8hpp" name="Teuchos_StringInputSource.hpp" local="yes" imported="no">Teuchos_StringInputSource.hpp</includes>
    <includes id="Teuchos__XMLParser_8hpp" name="Teuchos_XMLParser.hpp" local="yes" imported="no">Teuchos_XMLParser.hpp</includes>
    <includes id="Teuchos__UnitTestHarness_8hpp" name="Teuchos_UnitTestHarness.hpp" local="yes" imported="no">Teuchos_UnitTestHarness.hpp</includes>
    <namespace>Teuchos</namespace>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6fff75aeedfb38885770eeb348303fb</anchor>
      <arglist>(XMLParser, simpletest)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>XmlToParameterList.cpp</name>
    <path>/Users/sscoll/dist/trilinos/packages/teuchos/parameterlist/example/XML/</path>
    <filename>XmlToParameterList_8cpp</filename>
    <includes id="Teuchos__Version_8hpp" name="Teuchos_Version.hpp" local="yes" imported="no">Teuchos_Version.hpp</includes>
    <includes id="Teuchos__GlobalMPISession_8hpp" name="Teuchos_GlobalMPISession.hpp" local="yes" imported="no">Teuchos_GlobalMPISession.hpp</includes>
    <includes id="Teuchos__CommandLineProcessor_8hpp" name="Teuchos_CommandLineProcessor.hpp" local="yes" imported="no">Teuchos_CommandLineProcessor.hpp</includes>
    <includes id="Teuchos__StandardCatchMacros_8hpp" name="Teuchos_StandardCatchMacros.hpp" local="yes" imported="no">Teuchos_StandardCatchMacros.hpp</includes>
    <includes id="Teuchos__ParameterList_8hpp" name="Teuchos_ParameterList.hpp" local="yes" imported="no">Teuchos_ParameterList.hpp</includes>
    <includes id="Teuchos__XMLParameterListCoreHelpers_8hpp" name="Teuchos_XMLParameterListCoreHelpers.hpp" local="yes" imported="no">Teuchos_XMLParameterListCoreHelpers.hpp</includes>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>XmlToParameterList_8cpp.html</anchorfile>
      <anchor>a0ddf1224851353fc92bfbff6f499fa97</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>A</name>
    <filename>classA.html</filename>
    <class kind="class">A::FactoryA</class>
    <class kind="class">A::RegisterFactoryA</class>
    <class kind="class">A::Solver1</class>
    <class kind="class">A::Solver2</class>
    <member kind="function">
      <type></type>
      <name>A</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a4142862ec27f2f3d8deb026d51a5c5a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~A</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a8d74412b1ff05d7493b4c546795bf405</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>f</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a4568a90d407ebae1b5ae9155dbc263af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~A</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a95ca2450d3c41c6fe2838d601ecbf81c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>A</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a4142862ec27f2f3d8deb026d51a5c5a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~A</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a12e867d812e5575ae6812f5bac37ce7f</anchor>
      <arglist>() TEUCHOS_NOEXCEPT_FALSE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>A_g</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a39652fe0c81e051030929629642c5275</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>A_f</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a5d1b40fa147e132df13c490863ac275e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>call_C_f</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a3e34e37dac32dc73009a6a29ea31efa4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_C</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a577baeccc1dc3864f009094d4dfdb308</anchor>
      <arglist>(const Teuchos::RCP&lt; C &gt; &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; A &gt;</type>
      <name>create</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a583592809b4f2c0309ffea558c66e736</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>A_g_</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a502214a8c93e8066f8b9e846f0c23046</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>A_f_</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>ab4a02fa820379231793fbd5a8bb0935b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; C &gt;</type>
      <name>c_</name>
      <anchorfile>classA.html</anchorfile>
      <anchor>a30387992d36c5e92f33ab1e534709c14</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AbstractArrayValidator</name>
    <filename>classTeuchos_1_1AbstractArrayValidator.html</filename>
    <templarg>ValidatorType</templarg>
    <templarg>EntryType</templarg>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="function">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a98653af9a92835a519d5715afd6767e8</anchor>
      <arglist>(RCP&lt; const ValidatorType &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ValidatorType &gt;</type>
      <name>getPrototype</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>abf4f053340e7e4c1c04c040a24624eb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a36b7b4c43827f2d2b09c9c1f409712bc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ValidatorType &gt;</type>
      <name>prototypeValidator_</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a8d8c053d042caeb9fc8e0ab899a0639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>ac3f167b4094eaa1cb679a1049cfe76d2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</name>
    <filename>classTeuchos_1_1AbstractArrayValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>prototypeValidator_</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a8d8c053d042caeb9fc8e0ab899a0639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>ac3f167b4094eaa1cb679a1049cfe76d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a98653af9a92835a519d5715afd6767e8</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>getPrototype</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>abf4f053340e7e4c1c04c040a24624eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a36b7b4c43827f2d2b09c9c1f409712bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractArrayValidator&lt; FileNameValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1AbstractArrayValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; const FileNameValidator &gt;</type>
      <name>prototypeValidator_</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a8d8c053d042caeb9fc8e0ab899a0639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>ac3f167b4094eaa1cb679a1049cfe76d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a98653af9a92835a519d5715afd6767e8</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const FileNameValidator &gt;</type>
      <name>getPrototype</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>abf4f053340e7e4c1c04c040a24624eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a36b7b4c43827f2d2b09c9c1f409712bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractArrayValidator&lt; StringValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1AbstractArrayValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; const StringValidator &gt;</type>
      <name>prototypeValidator_</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a8d8c053d042caeb9fc8e0ab899a0639e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>ac3f167b4094eaa1cb679a1049cfe76d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractArrayValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a98653af9a92835a519d5715afd6767e8</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringValidator &gt;</type>
      <name>getPrototype</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>abf4f053340e7e4c1c04c040a24624eb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidator.html</anchorfile>
      <anchor>a36b7b4c43827f2d2b09c9c1f409712bc</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AbstractArrayValidatorXMLConverter</name>
    <filename>classTeuchos_1_1AbstractArrayValidatorXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidatorXMLConverter.html</anchorfile>
      <anchor>a05fec3fb0a8c8299c84c54cb066bdd88</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidatorXMLConverter.html</anchorfile>
      <anchor>added1018fec1fcd9b9df0605f3a6efb6</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; AbstractArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</type>
      <name>getConcreteValidator</name>
      <anchorfile>classTeuchos_1_1AbstractArrayValidatorXMLConverter.html</anchorfile>
      <anchor>a0eb1785c720c25d2b2247fbb33184c71</anchor>
      <arglist>(RCP&lt; ValidatorType &gt; prototypeValidator) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AbstractFactory</name>
    <filename>classTeuchos_1_1AbstractFactory.html</filename>
    <templarg>T</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractFactory</name>
      <anchorfile>classTeuchos_1_1AbstractFactory.html</anchorfile>
      <anchor>a271c617acf053572a4df12aa88d6734f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual obj_ptr_t</type>
      <name>create</name>
      <anchorfile>classTeuchos_1_1AbstractFactory.html</anchorfile>
      <anchor>a119588dfbf5ceb9b343cd4964e8943bb</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AbstractFactory&lt; T_itfc &gt;</name>
    <filename>classTeuchos_1_1AbstractFactory.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AbstractFactory</name>
      <anchorfile>classTeuchos_1_1AbstractFactory.html</anchorfile>
      <anchor>a271c617acf053572a4df12aa88d6734f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual obj_ptr_t</type>
      <name>create</name>
      <anchorfile>classTeuchos_1_1AbstractFactory.html</anchorfile>
      <anchor>a119588dfbf5ceb9b343cd4964e8943bb</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AbstractFactoryStd</name>
    <filename>classTeuchos_1_1AbstractFactoryStd.html</filename>
    <templarg>T_itfc</templarg>
    <templarg>T_impl</templarg>
    <templarg>T_PostMod</templarg>
    <templarg>T_Allocator</templarg>
    <base>AbstractFactory&lt; T_itfc &gt;</base>
    <member kind="typedef">
      <type>Teuchos::AbstractFactory&lt; T_itfc &gt;::obj_ptr_t</type>
      <name>obj_ptr_t</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>ad0c6ff4bb0490c62db5fad9c511b4ee4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AbstractFactoryStd</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>ad450ac5caad67fe9ea26544bbddbdc51</anchor>
      <arglist>(const T_PostMod &amp;post_mod=T_PostMod(), const T_Allocator &amp;alloc=T_Allocator())</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T_PostMod</type>
      <name>post_mod_</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>a7aec6c4e93cb051a75f9c40ce8fe69b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T_Allocator</type>
      <name>alloc_</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>a28371843a3ea4cdb0bb17726bf832d92</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const AbstractFactory&lt; T_itfc &gt; &gt;</type>
      <name>abstractFactoryStd</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>a8c5446fe5380b149edefdccf631340a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const AbstractFactory&lt; T_itfc &gt; &gt;</type>
      <name>abstractFactoryStd</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>ae462a7322c3c1b54b50d3b9a21c707bc</anchor>
      <arglist>(const T_Allocator &amp;alloc=T_Allocator())</arglist>
    </member>
    <member kind="function">
      <type>obj_ptr_t</type>
      <name>create</name>
      <anchorfile>classTeuchos_1_1AbstractFactoryStd.html</anchorfile>
      <anchor>a7964a369592512a31ce38591bcbc14e0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AnyNumberParameterEntryValidator::AcceptedTypes</name>
    <filename>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</filename>
    <member kind="function">
      <type></type>
      <name>AcceptedTypes</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>ae72fb8093af930cfc29c02f101f7ce57</anchor>
      <arglist>(bool allowAllTypesByDefault=true)</arglist>
    </member>
    <member kind="function">
      <type>AcceptedTypes &amp;</type>
      <name>allowInt</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a07acc3f8ffe044de3ce5381688660a03</anchor>
      <arglist>(bool _allowInt)</arglist>
    </member>
    <member kind="function">
      <type>AcceptedTypes &amp;</type>
      <name>allowDouble</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a86a637505ebd66807dc508318e2b7d65</anchor>
      <arglist>(bool _allowDouble)</arglist>
    </member>
    <member kind="function">
      <type>AcceptedTypes &amp;</type>
      <name>allowString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a5538c9b8c7444300810c7939bb4bb707</anchor>
      <arglist>(bool _allowString)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowInt</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a3735509fa1500e1924bc3e975c229101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowDouble</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>aff5cc2be895b1eaa5fbede643ef458ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>allowString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>adafa0e0d5afa748125299a18ff5ed247</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allowInt_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a6f019a93f72b6903ab5c85efc7ef9b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allowDouble_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>ad4890fb2928357c36d631266e7b193c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>allowString_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator_1_1AcceptedTypes.html</anchorfile>
      <anchor>a92a47021750ddc451829188764c3735a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ActiveRCPNodesSetup</name>
    <filename>classTeuchos_1_1ActiveRCPNodesSetup.html</filename>
    <member kind="function">
      <type></type>
      <name>ActiveRCPNodesSetup</name>
      <anchorfile>classTeuchos_1_1ActiveRCPNodesSetup.html</anchorfile>
      <anchor>a453b5dbb3a54a58e30ee714892aaed13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ActiveRCPNodesSetup</name>
      <anchorfile>classTeuchos_1_1ActiveRCPNodesSetup.html</anchorfile>
      <anchor>a46e575ca94692f8dbe0884d2d9a947a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>foo</name>
      <anchorfile>classTeuchos_1_1ActiveRCPNodesSetup.html</anchorfile>
      <anchor>ae8cdb5ea3a09fa38aebf91dec82376fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ActiveRCPNodesSetup.html</anchorfile>
      <anchor>a840f785df01b10fc06f16d8a92c0f4ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::Adder</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>index_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>aa2092adc0d0332ae90e79527e1409cce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Scalar</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a547f05501dea38120316234c98c1d9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Element&lt; Scalar, Ordinal &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a83e8ac01be4b8ca7fdbec9e6952b80db</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; element_type &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a115eb41100e08d8a4adec6bedf214474</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Adder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ab2652a99c55110807c24b8923fd31336</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Adder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a727f86dde92c2f001e19c7f1c8745841</anchor>
      <arglist>(const Ordinal expectedNumRows, const Ordinal expectedNumCols, const Ordinal expectedNumEntries, const bool tolerant=false, const bool debug=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a0d2f4a02cf3e1789b3d1dcf0cd5cbea4</anchor>
      <arglist>(const Ordinal i, const Ordinal j, const Scalar &amp;Aij, const bool countAgainstTotal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a145f788d5c9b8e60ebfbded47c163d74</anchor>
      <arglist>(std::ostream &amp;out, const bool doMerge, const bool replace=false)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; size_type, size_type &gt;</type>
      <name>merge</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ae59bf2574d9d4c02bf8232dafcce0d8b</anchor>
      <arglist>(const bool replace=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeAndConvertToCSR</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a96f61f0f9587a434a70aebb528d1761f</anchor>
      <arglist>(size_type &amp;numUniqueElts, size_type &amp;numRemovedElts, Teuchos::ArrayRCP&lt; Ordinal &gt; &amp;rowptr, Teuchos::ArrayRCP&lt; Ordinal &gt; &amp;colind, Teuchos::ArrayRCP&lt; Scalar &gt; &amp;values, const bool replace=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; element_type &gt; &amp;</type>
      <name>getEntries</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ac65cd7b660372141dc68cbfec2142d76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>aaac31f90c7421b37cf65ac9cdd749bcb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Ordinal</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a2667e274c345a108d28000fbfaf63f1a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Ordinal</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a249e9d62e3de05a6913bcb1a0e5f1627</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumRows_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ab740adff847157692489c61c26727b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumCols_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a54cc292d5493df88ce97adadd46fa855</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumEntries_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ab65901ebe385cf16dfab702f60542153</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumRows_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a4cd037a75c194ea739791558e9979e70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumCols_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>abc8f142c70fc1fe2ffcec2fef31a07f8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumEntries_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>ac0415502a99e99cb80c0d4dbf79397f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>tolerant_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>aae2b63c6b6cfaa3946bbe1e5580e5a7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>debug_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>a5629c3e4eee357ad069609031b620071</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; element_type &gt;</type>
      <name>elts_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Adder.html</anchorfile>
      <anchor>af1c6ddf3c7ecdb96fe52f1e6998c1539</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AdditionFunction</name>
    <filename>classTeuchos_1_1AdditionFunction.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>AdditionFunction</name>
      <anchorfile>classTeuchos_1_1AdditionFunction.html</anchorfile>
      <anchor>a9644c9cd08d5ce50b976fed547f01e50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AdditionFunction</name>
      <anchorfile>classTeuchos_1_1AdditionFunction.html</anchorfile>
      <anchor>a2497938f806fda832428c82c2826d0fb</anchor>
      <arglist>(OperandType amountToAdd)</arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1AdditionFunction.html</anchorfile>
      <anchor>ae85f0dea1de23e74ce2bc1d8b02ecb48</anchor>
      <arglist>(OperandType arguement) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1AdditionFunction.html</anchorfile>
      <anchor>af82476c6b15beff6d3d15d64117b3eba</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AdditionFunctionXMLConverter</name>
    <filename>classTeuchos_1_1AdditionFunctionXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; SimpleFunctionObject&lt; OperandType &gt; &gt;</type>
      <name>getSpecificSimpleFunction</name>
      <anchorfile>classTeuchos_1_1AdditionFunctionXMLConverter.html</anchorfile>
      <anchor>a290562ee97c92ee3b64ad29fe395ef11</anchor>
      <arglist>(OperandType operand) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvilPack::AEvil</name>
    <filename>classEvilPack_1_1AEvil.html</filename>
    <templarg>T</templarg>
    <base>EvilPack::EvilBase</base>
    <member kind="function">
      <type>void</type>
      <name>callBEvil</name>
      <anchorfile>classEvilPack_1_1AEvil.html</anchorfile>
      <anchor>a0c6b400592f2288dc34cdd7fece1ba31</anchor>
      <arglist>(const BEvil&lt; T &gt; &amp;bEvil, const T &amp;obj) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soundOff</name>
      <anchorfile>classEvilPack_1_1AEvil.html</anchorfile>
      <anchor>acb241a0b6f2988b54f32cbe0b9eb95fb</anchor>
      <arglist>(const T &amp;obj) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; AEvil&lt; T &gt; &gt;</type>
      <name>aEvil</name>
      <anchorfile>classEvilPack_1_1AEvil.html</anchorfile>
      <anchor>a237679fe3a385e5d89e6eab032300a31</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>AlgorithmA</name>
    <filename>classAlgorithmA.html</filename>
    <base>VerboseObject&lt; AlgorithmA &gt;</base>
    <base>Teuchos::ParameterListAcceptor</base>
    <member kind="function">
      <type></type>
      <name>AlgorithmA</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a24f7e9c3b4f144f560faff440ad990b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a565781bd72c0d261de193bd3f89c7b96</anchor>
      <arglist>(Teuchos::RCP&lt; Teuchos::ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>aecae935bd74f46af4af7a8aae501cdcc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a73f4b26d204173668957d1331f1ddf83</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>aaae48f82a395ef7ebf6b5e1e6ea86eb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a00306bba28244c5b11c594a3725497c4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doAlgorithm</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a4e44d076093e32e28145d5fdcc7f4a4a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>EAlgoType</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fba</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_BOB</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaafb5ae3c7461268d6852a92329b71b8cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_JOHN</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaa2c237d3fa12b591e8c3915b502d9c297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_HARRY</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaa44e0d6be2260bfe16826a34541c6ff1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_BOB</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaafb5ae3c7461268d6852a92329b71b8cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_JOHN</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaa2c237d3fa12b591e8c3915b502d9c297</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALGO_HARRY</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>ae8471a13a58deb7a38248c612bd24fbaa44e0d6be2260bfe16826a34541c6ff1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string</type>
      <name>toString</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a6af1ca5b9668bb7d94762391be9bbfd2</anchor>
      <arglist>(AlgorithmA::EAlgoType algoType)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a5fe6db7780ab57948b3d02f00d41f857</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EAlgoType</type>
      <name>algoType_</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>a99ea8f6078d8fc965e97af5b7eb357c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>algoTol_</name>
      <anchorfile>classAlgorithmA.html</anchorfile>
      <anchor>addf0362060ab709764714111cda38d49</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Details::AllocationLogger</name>
    <filename>classTeuchos_1_1Details_1_1AllocationLogger.html</filename>
    <member kind="typedef">
      <type>std::size_t</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>abcee1eac355e0c313cbfc01986df34ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logAllocation</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>a9470b4629c1b72c20c9c0c706f429dc3</anchor>
      <arglist>(std::ostream &amp;out, const size_type numEntries, const size_type numBytes, const char typeName[], const bool verbose)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>logDeallocation</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>acf13ee37a913f150b446645033e5cda5</anchor>
      <arglist>(std::ostream &amp;out, const size_type numEntries, const size_type numBytes, const char typeName[], const bool verbose)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_type</type>
      <name>curAllocInBytes</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>a8b4a5a6d1f418aba6f991699393ed264</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static size_type</type>
      <name>maxAllocInBytes</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>ab88fc18c2af9663be72db6efd4771825</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>resetAllocationCounts</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>a271c8853161eb6cda3f7341c3903ef99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static size_type</type>
      <name>curAllocInBytes_</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>a26614652f670cdaac34ebb367908d964</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static size_type</type>
      <name>maxAllocInBytes_</name>
      <anchorfile>classTeuchos_1_1Details_1_1AllocationLogger.html</anchorfile>
      <anchor>aa4036d4c3f256d03fd09b19454ff810b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Details::Allocator</name>
    <filename>classTeuchos_1_1Details_1_1Allocator.html</filename>
    <templarg>T</templarg>
    <class kind="struct">Teuchos::Details::Allocator::rebind</class>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a6301ec13943b049998f9fb55b2583fe5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a95fcd0368d5a8a21a5a5268d80aacc1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a45a231328ae4330d5cc468aa27922dcf</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a0e1b380818710e1bd9d1e37b807556e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>afcb5f8e77ffb9800e26ec79366ef1a71</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AllocationLogger::size_type</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>ab112ea4755f6b0b64fc93f311beac126</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::ptrdiff_t</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a1973b03cbf46bdeab1d3c6e30de4a1ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>af2e0e23ece6cbab38b45be7668c4b385</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a6fef4a85c474031341ff5e4f70a2fdc5</anchor>
      <arglist>(const bool trackMemory, const bool verboseOutput)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Allocator</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>acb69676fb89a6ac7c2ce47241149938e</anchor>
      <arglist>(const Allocator&lt; U &gt; &amp;src)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a6729493c831250d78a6ca84947f65101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>value_type *</type>
      <name>allocate</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a70b72eef9adbcdd57a309f1715fab43f</anchor>
      <arglist>(const size_type &amp;n, const void *=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deallocate</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a543b26f6937060be41d18d0c97a72add</anchor>
      <arglist>(value_type *p, const size_type &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>curAllocInBytes</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a09c5c4d2496e7d62998899eb398994cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>maxAllocInBytes</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>ad55117a9a92b1296c93185f90f3f1910</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>construct</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a26f796b7612ceb921546f3960665141c</anchor>
      <arglist>(pointer p, const_reference val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>destroy</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a6d19b4e961a9ed43aca08b85296cdc84</anchor>
      <arglist>(pointer p)</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>EAllocatorOp</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a498ec3c47ab04c59f2a53952441fb1af</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALLOCATOR_ALLOCATE</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a498ec3c47ab04c59f2a53952441fb1afa2dd63d057028f6e7847b932182722a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALLOCATOR_DEALLOCATE</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a498ec3c47ab04c59f2a53952441fb1afafd3fea9f408a7a80226687a936d4e3df</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALLOCATOR_ALLOCATE</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a498ec3c47ab04c59f2a53952441fb1afa2dd63d057028f6e7847b932182722a8f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>ALLOCATOR_DEALLOCATE</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a498ec3c47ab04c59f2a53952441fb1afafd3fea9f408a7a80226687a936d4e3df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>tracking</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>afe97ccf94cdd0fb6654c35ea9b93b051</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>verbose</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a52dd798c0d7a45b493fb8fc599949b49</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>track_</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a33c90b35788ccdf2efcd9bab1061c127</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>verbose_</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a75ab14e19b49f67d4b5f89cfeade5d94</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend" protection="private">
      <type>friend class</type>
      <name>Allocator</name>
      <anchorfile>classTeuchos_1_1Details_1_1Allocator.html</anchorfile>
      <anchor>a3447c8f15afab916a2d4c18b434f1113</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AllocatorNew</name>
    <filename>classTeuchos_1_1AllocatorNew.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Teuchos::RCP&lt; T_impl &gt;</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1AllocatorNew.html</anchorfile>
      <anchor>a040caa0b24e30e5e75cb685a4f450b64</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>const ptr_t</type>
      <name>allocate</name>
      <anchorfile>classTeuchos_1_1AllocatorNew.html</anchorfile>
      <anchor>af3d104e895a82c025c1308256e018964</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringToIntMap::AlreadyExists</name>
    <filename>classTeuchos_1_1StringToIntMap_1_1AlreadyExists.html</filename>
    <member kind="function">
      <type></type>
      <name>AlreadyExists</name>
      <anchorfile>classTeuchos_1_1StringToIntMap_1_1AlreadyExists.html</anchorfile>
      <anchor>ad025cb870b9ca8371db566437193f89b</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::AND</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1AND.html</filename>
    <templarg>isComparable</templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::AND&lt; false, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1AND_3_01false_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>andOp</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1AND_3_01false_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>a731d6bac6d7b6fcef0bbf311a221df1f</anchor>
      <arglist>(const Ordinal, const Packet[], Packet[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::AND&lt; true, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1AND_3_01true_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>andOp</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1AND_3_01true_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>ae63331121c28feca20c75d5c3ad5b227</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AndCondition</name>
    <filename>classTeuchos_1_1AndCondition.html</filename>
    <base>Teuchos::BoolLogicCondition</base>
    <member kind="function">
      <type></type>
      <name>AndCondition</name>
      <anchorfile>classTeuchos_1_1AndCondition.html</anchorfile>
      <anchor>a2e09904f6e1374afadff814044550c8d</anchor>
      <arglist>(ConstConditionList &amp;conditions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~AndCondition</name>
      <anchorfile>classTeuchos_1_1AndCondition.html</anchorfile>
      <anchor>a16ec0d07c5a8d2544f9a9fc11efc375b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1AndCondition.html</anchorfile>
      <anchor>ab6f20b153eec4561842ce5775b886edb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applyOperator</name>
      <anchorfile>classTeuchos_1_1AndCondition.html</anchorfile>
      <anchor>abf87d69fed0e0b455028225240340f35</anchor>
      <arglist>(bool op1, bool op2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AndConditionConverter</name>
    <filename>classTeuchos_1_1AndConditionConverter.html</filename>
    <base>Teuchos::BoolLogicConditionConverter</base>
    <member kind="function">
      <type>RCP&lt; BoolLogicCondition &gt;</type>
      <name>getSpecificBoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1AndConditionConverter.html</anchorfile>
      <anchor>aa71ed1f9b0d8db6347f6ed5be9bb3b0b</anchor>
      <arglist>(Condition::ConstConditionList &amp;conditions) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ANDValueReductionOp</name>
    <filename>classTeuchos_1_1ANDValueReductionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, Packet &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ANDValueReductionOp.html</anchorfile>
      <anchor>ab45328bf532c50605212d76e4359eac6</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::any</name>
    <filename>classTeuchos_1_1any.html</filename>
    <member kind="function">
      <type></type>
      <name>any</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>ad39781bd4c6775acb84fb45d5239f6c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>any</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>af528d125069638c16c46515755e04c8e</anchor>
      <arglist>(const ValueType &amp;value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>any</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a7dcfd1dc163fe8bd317c58b91afee4bd</anchor>
      <arglist>(const any &amp;other)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~any</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>aa219eb8a4447ee4f7557b0f9060a13dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>af6da6416fe7cf8f9c0ac2339efda5fda</anchor>
      <arglist>(any &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a7a06f55cebc998c8e1f431390ea0bf81</anchor>
      <arglist>(const ValueType &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>ac2f0a15b4370619c383905675db77d4f</anchor>
      <arglist>(const any &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a98df628565ab9f49864d665f5f2cbb06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::type_info &amp;</type>
      <name>type</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a638e68e633c5f72341cdb13c70814087</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeName</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>aef8e29f28c47926946f1c2a3dcfd9720</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>same</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a6f8d51b49ad7807931023a4e886dec8d</anchor>
      <arglist>(const any &amp;other) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a3369f3b5127a06fc2a04a3f72492cc4f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>placeholder *</type>
      <name>content</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a05bf7b2abedef2f3135102891725e2d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ValueType &amp;</type>
      <name>any_cast</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a491810e297f793f7c9d6812213c4417e</anchor>
      <arglist>(any &amp;operand)</arglist>
    </member>
    <member kind="function">
      <type>const ValueType &amp;</type>
      <name>any_cast</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a44945617abc87a366a1df2669ea351ca</anchor>
      <arglist>(const any &amp;operand)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a0f75f51ee06752bad90f88c70ea00be6</anchor>
      <arglist>(const any &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a38ba319b89b897dd10697bdbb7707f16</anchor>
      <arglist>(const any &amp;a, const any &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a45bde8737ee92345a81ec735b732e9f4</anchor>
      <arglist>(const any &amp;a, const any &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1any.html</anchorfile>
      <anchor>a3fe2613e6d6855eddcac6957b0889f47</anchor>
      <arglist>(std::ostream &amp;os, const any &amp;rhs)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AnyNumberParameterEntryValidator</name>
    <filename>classTeuchos_1_1AnyNumberParameterEntryValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <class kind="class">Teuchos::AnyNumberParameterEntryValidator::AcceptedTypes</class>
    <member kind="enumvalue">
      <name>PREFER_INT</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8a888db380450c17720c8e64a89b0b0313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PREFER_DOUBLE</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8a88813489b7f71e08a935197dc276104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PREFER_STRING</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8ab35cd5c678bd16e5f7977b69277dbaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>finishInitialization</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a24faddf1a08804471bc9a3aad4bb742b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>throwTypeError</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a97199cfbddb7973f0978f711c7ac06fa</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getIntEnumString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a548b782979b78351cb2e310215f070a5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDoubleEnumString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a389ce07795499e516988c4bf8142506b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringEnumString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>aba6c1409e389cf7ea499deb22791dba3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EPreferredType</type>
      <name>preferredType_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>aec340240bb8bce1b72cdb833ba35ee9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>acceptedTypesString_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a70f7af87e82f2ee2b010128bc49c29d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const AcceptedTypes</type>
      <name>acceptedTypes_</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a26527604f48e0bbd74c08d3ea67da29b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; AnyNumberParameterEntryValidator &gt;</type>
      <name>anyNumberParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a87534b4723578e5a50ee29e2a9152b33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; AnyNumberParameterEntryValidator &gt;</type>
      <name>anyNumberParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a8798301be25f02e4ea2fb9f4e445c971</anchor>
      <arglist>(AnyNumberParameterEntryValidator::EPreferredType const preferredType, AnyNumberParameterEntryValidator::AcceptedTypes const &amp;acceptedTypes)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EPreferredType</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PREFER_INT</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8a888db380450c17720c8e64a89b0b0313</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PREFER_DOUBLE</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8a88813489b7f71e08a935197dc276104e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PREFER_STRING</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac1dda4eefcbb6a55db51e84ea6ce6af8ab35cd5c678bd16e5f7977b69277dbaa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyNumberParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a62db327eab3e357d32db007f465b3d9c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>AnyNumberParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a9f9b17e22f49113a818813b7108dfb9d</anchor>
      <arglist>(EPreferredType const preferredType, AcceptedTypes const &amp;acceptedTypes)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>abbc322f5a2520dc41f6647066b459cb3</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDouble</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>aa02769f9a83f683c74ed0f4e9ceb19b7</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac2a1e9ba4dac2f7cfbdc2c57d12d0555</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a8c9c18d744eab5a3c804c03bd95ce71c</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const int defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getDouble</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a2e7c51ca45f8ca5ca20fb12d399ef9e1</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const double defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a641a3a3b98760bae30aca51d9f4c0263</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const std::string &amp;defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDoubleAllowed</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a7402d478595f53fa0de3b6735c3fa520</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isIntAllowed</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a38ed93659a5d72cd02e9e3eabe168ed8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isStringAllowed</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ad6a34b17b7a366813647e8f127f506db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>EPreferredType</type>
      <name>getPreferredType</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a129ab208b7af028ee3f2044f39baf408</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPrefferedTypeString</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a814c04389325efaad35a0cd21ce52a84</anchor>
      <arglist>(EPreferredType enumValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EPreferredType</type>
      <name>getPrefferedTypeStringEnum</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a1460c5a3cc115a48154b2bd9ec4d4c41</anchor>
      <arglist>(const std::string &amp;enumString)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a04641291f24f97e8ba1dd12903688b69</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a3923c5715da23660c7dd6b3cac576d85</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>a9ad31abf35f05d1cb110b1a5092fb359</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ab265829267699d93ed681949069e175c</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateAndModify</name>
      <anchorfile>classTeuchos_1_1AnyNumberParameterEntryValidator.html</anchorfile>
      <anchor>ac9cf1be912170d9c01866724310d620a</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;sublistName, ParameterEntry *entry) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AnyNumberValidatorXMLConverter</name>
    <filename>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</filename>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>ace747de758c0fa9daae9a1acdf4359bb</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a61f8fafdbda6d3612d059fa53e092690</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getAllowIntAttributeName</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a18111a02f2c1b49d9d868375d75d38a4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getAllowDoubleAttributeName</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>aff4130b2640097cfbeef632e87d1e3c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getAllowStringAttributeName</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>af41137ab9f19e7212b3358c6829032b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPrefferedTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1AnyNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a19dbbd1e6a32741b176e2a666750d99b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::AnyParameterEntryConverter</name>
    <filename>classTeuchos_1_1AnyParameterEntryConverter.html</filename>
    <base>Teuchos::ParameterEntryXMLConverter</base>
    <member kind="function">
      <type>const std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1AnyParameterEntryConverter.html</anchorfile>
      <anchor>a9b9aa95ff1f267cb387916d5422df0db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getValueAttributeValue</name>
      <anchorfile>classTeuchos_1_1AnyParameterEntryConverter.html</anchorfile>
      <anchor>a2887cacbb31163e7d736015a87e815db</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry) const </arglist>
    </member>
    <member kind="function">
      <type>any</type>
      <name>getAny</name>
      <anchorfile>classTeuchos_1_1AnyParameterEntryConverter.html</anchorfile>
      <anchor>a8be4f45be13d2ce8b0aefa2dc2c9d08c</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArcpReinterpretCastEmbeddedObj</name>
    <filename>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T2</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>ab3da7c6563084db05f01043ebf045bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArcpReinterpretCastEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>abb42a245edeae9d0b62b49a75d66ff9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArcpReinterpretCastEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>a3a3a02740d62150697d166140b9d2cc8</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;arcp_pod)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArcpReinterpretCastEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>aaee99c7ecec48836a0fbee063f8a380d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArcpReinterpretCastEmbeddedObj &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>a788530b5310dcc3000751c1c890fb24f</anchor>
      <arglist>(const ArcpReinterpretCastEmbeddedObj &amp;arceo)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>freeMemory</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>a7674335a9083f1949abfdbb22b030ba4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>arcp_pod_</name>
      <anchorfile>classTeuchos_1_1ArcpReinterpretCastEmbeddedObj.html</anchorfile>
      <anchor>a40f388a988056ed6e8e93d70c0089c17</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Array</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <templarg>T</templarg>
    <member kind="function" protection="private">
      <type>std::vector&lt; T &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; T &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; T &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; T &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac8e7306928810eb8f2ec511ebfb624d1</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab6969dd33bd61bd92b63fcecd7025568</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af5352bd29a95e2239d804dcfd1ad230c</anchor>
      <arglist>(Array&lt; T &gt; &amp;a1, Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a274becca5517ff948172316ef8a6a491</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac0f516db476fda9c78bcfa2f0cf2ddef</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9eb6ae0b2c1fae8a36d123637a44dea7</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a6c3bc91805e260e797f22eb886a77ee8</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a1, const Array&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a518a0c094c6ce7aa319e1b14120fb2a3</anchor>
      <arglist>(std::ostream &amp;os, const Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aaabefdb171cf299872a56c8337a68760</anchor>
      <arglist>(const Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>createVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac3f3e7c2bec7e2e15d932a0455c9a61f</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a30a9251847278cc957f336aee0b76729</anchor>
      <arglist>(const Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>fromStringToArray</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7b5ec4a35779331371b4c0fc7d772d80</anchor>
      <arglist>(const std::string &amp;arrayStr)</arglist>
    </member>
    <member kind="function">
      <type>std::istringstream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff209dd78741a70237a20015297c677c</anchor>
      <arglist>(std::istringstream &amp;in, Array&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractDataFromISS</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a98388cb1bd4ea40940c57afe05cd96ef</anchor>
      <arglist>(std::istringstream &amp;iss, T &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>extractDataFromISS</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1e5c21acd739b2718e42a1efc584479</anchor>
      <arglist>(std::istringstream &amp;iss, std::string &amp;data)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getArrayTypeNameTraitsFormat</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aee7bd049e39cbca155c34eb06fa47b95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; T &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; T, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; T &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const T &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classTeuchos_1_1Array" title="Tuple Construction">Teuchos_Array_Tuple_sec</docanchor>
    <docanchor file="classTeuchos_1_1Array" title="Design Discussion">Teuchos_Array_DesignDiscussion_sec</docanchor>
  </compound>
  <compound kind="class">
    <name>Array&lt; char &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; char &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; char &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; char &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; char &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; char &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; char &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; char, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; char &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; char &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; char &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; char &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const char &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; char &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; char &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const char &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; ConstNonconstObjectContainer&lt; T &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; ConstNonconstObjectContainer&lt; T &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const ConstNonconstObjectContainer&lt; T &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstNonconstObjectContainer&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ConstNonconstObjectContainer&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const ConstNonconstObjectContainer&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; int &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; int &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; int &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; int &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; int &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; int &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; int &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const int &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; int, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; int &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; int &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; int &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; int &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const int &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const int *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; int &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const int &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; RCP&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; RCP&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; RCP&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; RCP&lt; T &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const RCP&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; RCP&lt; T &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; RCP&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; RCP&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; RCP&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; RCP&lt; T &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; RCP&lt; T &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; RCP&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const RCP&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; RCP&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const RCP&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; std::string &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; std::string &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; std::string &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; std::string &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; std::string &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; std::string &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; std::string &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; std::string, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; std::string &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; std::string &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; std::string &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::string *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; std::string &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const std::string &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; std::string &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const std::string &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; T * &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; T * &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; T * &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; T * &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; T * &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; T * &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; T * &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const T * &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; T *, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; T * &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; T * &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T * &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T * &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const T * &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T * *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T * *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T * &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T * &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T * &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T * &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T * &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T * &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; T * &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const T * &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::Array&lt; Key &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::Array&lt; Key &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::Array&lt; Key &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::Array&lt; Key &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::Array&lt; Key &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Key &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Key &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Key &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::Array&lt; Key &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::Array&lt; Key &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::Array&lt; Teuchos::HashPair&lt; Key, Value &gt; &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::RCP &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::RCP &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::RCP &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::RCP &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::RCP, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::RCP &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::RCP &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::RCP &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::RCP &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::RCP &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::RCP&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::RCP&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::RCP&lt; T &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::RCP&lt; T &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::RCP&lt; T &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::RCP&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::RCP&lt; T &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt;, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; Teuchos::TableEntry &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::RCP&lt; Teuchos::TableEntry &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::RCP&lt; Teuchos::TableEntry &gt; &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::TabularOutputter::FieldSpec &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::TabularOutputter::FieldSpec &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::TabularOutputter::FieldSpec, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::TabularOutputter::FieldSpec &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::TabularOutputter::FieldSpec &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::TabularOutputter::FieldSpec *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::TabularOutputter::FieldSpec *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::TabularOutputter::FieldSpec &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::TabularOutputter::FieldSpec &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::TabularOutputter::FieldSpec &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; Teuchos::XMLObject &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::XMLObject &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; Teuchos::XMLObject &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; Teuchos::XMLObject &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; Teuchos::XMLObject &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; Teuchos::XMLObject &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const Teuchos::XMLObject &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; Teuchos::XMLObject, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; Teuchos::XMLObject &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; Teuchos::XMLObject &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; Teuchos::XMLObject &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; Teuchos::XMLObject &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Teuchos::XMLObject &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const Teuchos::XMLObject &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLObject *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::XMLObject *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::XMLObject &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::XMLObject &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::XMLObject &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::XMLObject &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; Teuchos::XMLObject &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Teuchos::XMLObject &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; Teuchos::XMLObject &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const Teuchos::XMLObject &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Array&lt; UnitTestData &gt;</name>
    <filename>classTeuchos_1_1Array.html</filename>
    <member kind="function" protection="private">
      <type>std::vector&lt; UnitTestData &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a36d5cf0903b8a0fc75d1ff3ed1b59fbf</anchor>
      <arglist>(bool isStructureBeingModified=false, bool activeIter=false)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const std::vector&lt; UnitTestData &gt; &amp;</type>
      <name>vec</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a102cc264855a47e8a7019370bfac8ee0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::vector&lt; UnitTestData &gt;::iterator</type>
      <name>raw_position</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a74d36638c043ce436ff4d6530750ebef</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertIndex</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae5be0a43c438ab4bc6f73226ce8606f4</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotNull</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af613c32b5d7c74af8224c84579986d92</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; UnitTestData &gt;</type>
      <name>vec_</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0ddc513db3c1f5f531f6aa66492971be</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator==</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>add133438af71c518c23fdf74a7baf515</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator!=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3975b371eda135bb5aec5b4aabdd6010</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a172321c03441ec2d509d85a2ad2d873f</anchor>
      <arglist>(Array&lt; T2 &gt; &amp;a1, Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a81dc7fbf52ab38daa25e78e050e5d0e7</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&lt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af7aec93cde0fe5d596864e9b46855eba</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad6a4a3df729b1a1f8741f143f3771af0</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="friend">
      <type>friend bool</type>
      <name>Teuchos::operator&gt;=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1e8b0a5c9c395ef20fb0bffdc1e983d</anchor>
      <arglist>(const Array&lt; T2 &gt; &amp;a1, const Array&lt; T2 &gt; &amp;a2)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad64287535dba5172a76871046880d5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a52c4e4993406f849188b4fff3939b79d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1b0c187f6049b2d9231dfcfb075d538b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad4869f5dabe4faa209c3b117ee1476d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad03dc711bc8114fca59b8c0943c1cebb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::const_pointer</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a404e9e8c496b5ff22dc528bae552c07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5c4c5c9082345faa80ba6a20edd91d16</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::const_reference</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4856933828a8a656eff0d6401b9358da</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::allocator_type</type>
      <name>allocator_type</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a402c5554757f7be63507b87e081d12b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a39d2b603bdfabf85b7cd7d76dc40443c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad84652faae4298cd112bd4f05516c35f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::reverse_iterator</type>
      <name>reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a548794051bd129f79db3e909e7255a3a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; UnitTestData &gt;::const_reverse_iterator</type>
      <name>const_reverse_iterator</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a95acd71b06551a821c89f15c91710c02</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a32223d24be3d9bb5e0e2736a03aaa418</anchor>
      <arglist>(Array &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5990d2e770ae67fa8f5d26c24d1ce1ad</anchor>
      <arglist>(size_type n, const value_type &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2e77605bab81fb4514f170729acc5b56</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a184f3dfdc22123d8be841d394da2e521</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5cdc375b7bf65823ab95fe5ddcf8d839</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af0fc3cc10288534589072fe32344c244</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9fd8fe55bcc1ea865d6ee5f09217ec6f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ac56c620bdee3ffe00edb4db3249ae70c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rbegin</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a37d3d3f90edc748bba5996e251db6bd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aba36e709fddcf42c9a5b8facd9221e0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reverse_iterator</type>
      <name>rend</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa0ad3c020f9ddb74c3d2fe1c7510bbec</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aeb24b95602f0147c6c7b92d812c51810</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>max_size</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a3c0e1f76791efe6b22823b0defaef6e2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad47207f1a6022e17677d1bf30a405460</anchor>
      <arglist>(size_type new_size, const value_type &amp;x=value_type())</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>capacity</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a307b9c3c79bd298c021d4442beb2fcc1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abe6476ecfb398b12b95de5ac6eda9b26</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reserve</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a08ea2013b4d34d7268a07402102d5905</anchor>
      <arglist>(size_type n)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ada2c3310870af605c9844079f570a8b4</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1130dd398d5a218a875d917d2351d5fe</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a5dcf1b5d89ea065ac9cdb8e8523d0954</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>at</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aceac83f42f34ee6f1c9e03ba08e27c81</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a4d175e470cdaee876a8f213630563d1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9040199f5c472ad8848e20c767381831</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0a74165d2d2ef06d3c9c1e04aa394f15</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const_reference</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad9d41062eded2430570f5573ef1cc276</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>push_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8f209506c367768c144d173da5069f5b</anchor>
      <arglist>(const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pop_back</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>afed390446f7da751cb17fc16e3eea2b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0cfa4b6e8f1fafa2db8bc32255ae821c</anchor>
      <arglist>(iterator position, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2fd8a25eaa45f82fc64d5c6935ff02cc</anchor>
      <arglist>(iterator position, size_type n, const value_type &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab8c2c43cd2f15dd1b6e3219b5d301093</anchor>
      <arglist>(iterator position, InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aff52d2f273150c552e94c4c740d754c1</anchor>
      <arglist>(iterator position)</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a57a6fdc65d85331ee529bf28b6ee7da4</anchor>
      <arglist>(iterator first, iterator last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f79bf00ae62f6e415a1a307d533259b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2966bdfa478f5b84d571755b7698093d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7819a0481d00638cbd53c7ac179d4220</anchor>
      <arglist>(size_type n, const value_type &amp;value=value_type())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a2224b9e47a36f2d3660b9361d4323058</anchor>
      <arglist>(const Array&lt; UnitTestData &gt; &amp;x)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acf31fe27e57f8287787dfc4de40199c7</anchor>
      <arglist>(InputIterator first, InputIterator last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1032119d509cdea49f07db10beabeb54</anchor>
      <arglist>(const ArrayView&lt; const UnitTestData &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af2d1150ccc5f1c777e3dc0b6b53524da</anchor>
      <arglist>(const Tuple&lt; UnitTestData, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af039cd8e06e9f557e576c81c22727964</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a259a2f89797227c0aa1f24f01942171c</anchor>
      <arglist>(const Array&lt; UnitTestData &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Array</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a1449ff93a1a07f460ec783393835ad29</anchor>
      <arglist>(const std::vector&lt; UnitTestData &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>Array &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a762b756453fe2647d3e18f6efaf10eff</anchor>
      <arglist>(const std::vector&lt; UnitTestData &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; UnitTestData &gt;</type>
      <name>toVector</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a227a875333a162eacba833c3cd5a6ab7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; UnitTestData &gt; &amp;</type>
      <name>append</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>af3d3a15f96ea65c43f0d477539b466d6</anchor>
      <arglist>(const UnitTestData &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a84bf451cdc6f89e744dfccf5d8333900</anchor>
      <arglist>(int i)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ab443608d42132382b59f54007e4f3f2f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ad1a4fdfa096d4f4845c96df3d2dde07b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>UnitTestData *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a189cd693afb524ecc5db007f9d72b815</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const UnitTestData *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7a8be21a977e828426601f16cdae399c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>hasBoundsChecking</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aa89389b9e0136a53d592145e673aac46</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; UnitTestData &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a8449303db42205c5e68e43ca9dc65b93</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const UnitTestData &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>aed7b2704206db1a5c85fd996e891e915</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; UnitTestData &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a9f0044d003596efd96c39f90d2bc9a63</anchor>
      <arglist>(size_type offset, size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const UnitTestData &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a0254cedb851bd413ba0653289b9263e1</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; UnitTestData &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>acb43ced3fa617c021268223fa8f5f0cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const UnitTestData &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>ae1f66a2ec2eaf1e7bc3aee8a87a3f229</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; UnitTestData &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>a7d65f5932f06801c455d8cdf5d76a0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const UnitTestData &gt;</name>
      <anchorfile>classTeuchos_1_1Array.html</anchorfile>
      <anchor>abcaea560f6ae597eb0d110818b80ab8c</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayArg</name>
    <filename>classTeuchos_1_1ArrayArg.html</filename>
    <templarg>N</templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ArrayArg</name>
      <anchorfile>classTeuchos_1_1ArrayArg.html</anchorfile>
      <anchor>ad87aefef847c1f2724518a875d65b044</anchor>
      <arglist>(T array[])</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayArg.html</anchorfile>
      <anchor>a83e021f6159e85e29717fe2ac9268047</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator T *</name>
      <anchorfile>classTeuchos_1_1ArrayArg.html</anchorfile>
      <anchor>ae8862568d43718be62818f9677c7605a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>array_</name>
      <anchorfile>classTeuchos_1_1ArrayArg.html</anchorfile>
      <anchor>a1946534202388fb22fa3bdc6f92bfe1b</anchor>
      <arglist>[N]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayFileNameValidator</name>
    <filename>classTeuchos_1_1ArrayFileNameValidator.html</filename>
    <base>ArrayValidator&lt; FileNameValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayFileNameValidator</name>
      <anchorfile>classTeuchos_1_1ArrayFileNameValidator.html</anchorfile>
      <anchor>aa20e73eb89def9758fc52a9154d6e2c3</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayModifierDependency</name>
    <filename>classTeuchos_1_1ArrayModifierDependency.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::Dependency</base>
    <member kind="function">
      <type></type>
      <name>ArrayModifierDependency</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>a2b2ed2d186f24c285a5379762a3a9cbe</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayModifierDependency</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>af061edf24118e3b71a0204468f460ad8</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>getFunctionObject</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>a94a86c86a8419898981cc4f96b564101</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>a867677df9f8a3223f3334e7179419d53</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>ab6f12c29f37e5954e0d6795d2c328cb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>modifyArray</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>a2b7556cffbb677b8bb2f7cef70c18096</anchor>
      <arglist>(DependeeType newAmount, RCP&lt; ParameterEntry &gt; dependentToModify)=0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::string</type>
      <name>getBadDependentValueErrorMessage</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>af9709b437e049a676882faf71068cbd9</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>func_</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependency.html</anchorfile>
      <anchor>a8a7f67ac846a045a2a2d8bdb133ef8da</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayModifierDependencyXMLConverter</name>
    <filename>classTeuchos_1_1ArrayModifierDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::DependencyXMLConverter</base>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual RCP&lt; ArrayModifierDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getConcreteDependency</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependencyXMLConverter.html</anchorfile>
      <anchor>ad14e1928a51e157f1ae60d10d7d0dc47</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; function) const  =0</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Dependency &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependencyXMLConverter.html</anchorfile>
      <anchor>aaedbd4c2425824d406fb35ddc7091ef7</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertDependency</name>
      <anchorfile>classTeuchos_1_1ArrayModifierDependencyXMLConverter.html</anchorfile>
      <anchor>a59e31eb219910cee497b2dc5c648cf87</anchor>
      <arglist>(const RCP&lt; const Dependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayNumberValidator</name>
    <filename>classTeuchos_1_1ArrayNumberValidator.html</filename>
    <templarg></templarg>
    <base>ArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayNumberValidator</name>
      <anchorfile>classTeuchos_1_1ArrayNumberValidator.html</anchorfile>
      <anchor>a76da10d229f95f48e1c3eab12ba22ff6</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayRCP</name>
    <filename>classTeuchos_1_1ArrayRCP.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2a113b25019998d6153bd7fa35bbc313</anchor>
      <arglist>(T *p, size_type lowerOffset_in, size_type size_in, const RCPNodeHandle &amp;node)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a333ab17d69c39d0dccb99a41c4e3b0cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aaa42992ff6c4e393adf6287b9a04a5c1</anchor>
      <arglist>(size_type lowerOffset_in, size_type size_in) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a735c5437336161f3b397736d11943bfa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9b1a31e68e40a76701660f0b749e2512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a93c2cb5793f35976759224b3a164f065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>lowerOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0b05a39339b5a466e072cc641c44263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>upperOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a33fb06a65cf8b46c15974286832fc084</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a49400cd20d4b459b951135f5106e0148</anchor>
      <arglist>(const RCP&lt; Array&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aae739d3cb422334df151895268f2af58</anchor>
      <arglist>(const RCP&lt; const Array&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpFromArray</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2f93c2a663cadcec87ddc7d6e0190fcc</anchor>
      <arglist>(Array&lt; T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>arcpFromArray</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7e2951c4ebe7d4dcda4a2117737599bb</anchor>
      <arglist>(const Array&lt; T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a837465856079b7e2da244c88a23ee1fd</anchor>
      <arglist>(T *p, typename ArrayRCP&lt; T &gt;::size_type lowerOffset, typename ArrayRCP&lt; T &gt;::size_type size, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a62c3eed1251c69b79455e6d2601b1b45</anchor>
      <arglist>(T *p, typename ArrayRCP&lt; T &gt;::size_type lowerOffset, typename ArrayRCP&lt; T &gt;::size_type size, Dealloc_T dealloc, bool owns_mem)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a162e8ce622d6ef659853ddfa11c1c991</anchor>
      <arglist>(typename ArrayRCP&lt; T &gt;::size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpCloneNode</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa8e97c489a35c4e5fefc982ba7b9b9da</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpClone</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac48ba54a4971933e7b63e76b2e18123d</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpWithEmbeddedObjPreDestroy</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>adf72910a65916733c6b7dd15d7790a3e</anchor>
      <arglist>(T *p, typename ArrayRCP&lt; T &gt;::size_type lowerOffset, typename ArrayRCP&lt; T &gt;::size_type size, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpWithEmbeddedObjPostDestroy</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a07c79ab885e601aca4e538a3f616a14a</anchor>
      <arglist>(T *p, typename ArrayRCP&lt; T &gt;::size_type lowerOffset, typename ArrayRCP&lt; T &gt;::size_type size, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpWithEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7318d0cb6f0ab102c828b023c47e703d</anchor>
      <arglist>(T *p, typename ArrayRCP&lt; T &gt;::size_type lowerOffset, typename ArrayRCP&lt; T &gt;::size_type size, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aec87e1de0065c9a16a5a8dd8bf7a2e7f</anchor>
      <arglist>(const RCP&lt; std::vector&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>arcp</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ae9daaddf69b02a4a3fbea5b6f66d34a8</anchor>
      <arglist>(const RCP&lt; const std::vector&lt; T &gt; &gt; &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>arcpFromArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1d68174364ddf11cb0fa539f9de5ac58</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::vector&lt; T &gt; &gt;</type>
      <name>get_std_vector</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad890664be22b96bb3ed041b1b0cc1471</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const std::vector&lt; T &gt; &gt;</type>
      <name>get_std_vector</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa377510b9f24d98780c1485147213b83</anchor>
      <arglist>(const ArrayRCP&lt; const T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a44de5d67c5a78a2a1dd284e887fcfa27</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad0b1dae44631fd6fc1c6d8318f7eb7b9</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a883478bbe1e5e1b4ca0d7ec996e47142</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>af197a5f67aa96a0dfa071afd34bf2787</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a408f83618b3467b6e514a0a576f41141</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1976f4d6ec8a0b440aff58c5ee63d3c6</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7f5007bef2e7553824020aa665a1c3f8</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>af126882a6afbd91faaf24fa945c33eab</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ada04967d8252bb64060a75361ff795fa</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&gt;=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a46b97dee27a31ee8c605d72caa70f1d0</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;::difference_type</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac91756d0bd5f688f73fb5b2fe6c6b76f</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p1, const ArrayRCP&lt; T &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T2 &gt;</type>
      <name>arcp_const_cast</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a54c155ae30f1340547740d0ef62c0901</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T2 &gt;</type>
      <name>arcp_reinterpret_cast</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a298b130a6e8302a332dc1ad125282bc8</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T2 &gt;</type>
      <name>arcp_reinterpret_cast_nonpod</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab674cf699000ebdbad2090e17a4121b5</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const T2 &amp;val=T2())</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T2 &gt;</type>
      <name>arcp_implicit_cast</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ade92f4113b8f540ca88b780c2f04095c</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_data</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a38d416e9cfa04322c015c01c2221526e</anchor>
      <arglist>(const T1 &amp;extra_data, const std::string &amp;name, const Ptr&lt; ArrayRCP&lt; T2 &gt; &gt; &amp;p, EPrePostDestruction destroy_when=POST_DESTROY, bool force_unique=true)</arglist>
    </member>
    <member kind="function">
      <type>T1 &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a099a61143a9dd79ead71338fa7c7de42</anchor>
      <arglist>(ArrayRCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T1 &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a65c8f5b6d03c8a0d2e44ebe9e5de0fbd</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>T1 *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0218f0d01c86ef5939242c55843fbb0e</anchor>
      <arglist>(ArrayRCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T1 *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ae5c6bad63905b4e3b48ecdc17d10446f</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Dealloc_T &amp;</type>
      <name>get_nonconst_dealloc</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac844320717f4d313a2eb9d630ee2b63f</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const Dealloc_T &amp;</type>
      <name>get_dealloc</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a3959f147498aaa3c7d1da736d5d5eb29</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const Dealloc_T *</type>
      <name>get_optional_dealloc</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2e4078788e156c80dd8c30356ddb0498</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Dealloc_T *</type>
      <name>get_optional_nonconst_dealloc</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5ac3964c9091319cd774b5a0c751714a</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const Embedded &amp;</type>
      <name>getEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>afa27457d13e2c3e8ddc500b8d36ddbd1</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Embedded &amp;</type>
      <name>getNonconstEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a04ee7b55b23169eeadee420f4f0278c2</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a88060811f35ac52aba0b1dbfd491b8c0</anchor>
      <arglist>(std::ostream &amp;out, const ArrayRCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a19b9a1a175ad27dc402cb47de85b3f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a153bfb3201f8f3939014dbd92924f098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a15c4eff4b60465582b830d5f24efab90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a191235ff1744bd92995a5369a3ba413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab7c84ea9a97a70e99a695515e3f0896b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4e62abe48c1235cfd1e4c108e70de085</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a03fc8866f4cc2f1e062716f3def843aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a12ccc9432fc5ecb16e22f2dca4d16041</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad34cc621e78c30529952d341bae2bb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ae471d3532b52c1e9381a45e26d5b7a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7b5574d5f436288b2e22f96be1dc0c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1cad2a8a60cc9c19f738a2653954954f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a772f7ab7b02232990cefb6ece2eda054</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1f480fa00ca6f690c4f8f5356007245c</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7a26e55c9f8bcc6f1c03499e49d0293a</anchor>
      <arglist>(T *p, size_type lowerOffset, size_type size, bool has_ownership, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7d8d8e38ea0f31c4e5fac26aa26df85a</anchor>
      <arglist>(T *p, size_type lowerOffset, size_type size, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5a23198621c1c97ca77db41893594c5f</anchor>
      <arglist>(size_type size, const T &amp;val=T())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a883e72d4c89ecaf6dfcfcb0eeaeed039</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebeb0fd9239ab1d379991dda80ea2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1d7736d8193f05c844c1240278c4f2be</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aeb1491a8380f93e337d58da47fbb6edd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa9213bd67ded1315b0d6033e71226b13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a301c5eefc310552692f128e7d061ff67</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abe124c618e0706d7e7b996aa064f1370</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a816ec275890adff250413626ba91ece1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a72b5282816b79316de4606842255e67b</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aef42af3e6cece7ff6f12ecb71e3e2406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac542b1d9b4e2b88f7a917481711c9799</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt; &amp;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa6886c30411a63dbc673ba84d8cf6618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a91587763c80455f449f912a04d492357</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a47eb1eb9f1b465b07b22e67a3ebfa326</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0a7040c3ac7f6b534aad7c348d224c1e</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a3e054985d208307473c1dfde053dd42e</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebcb5b71fa749b0ddfeb37abda23fc</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1eef8f5fcc24fdbc9fd4719d31b3d99b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abeb20f55ddb59e1cf09020928981d694</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a8dfcbb35ef52f8b4a19b51fa1150eb01</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>persistingView</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5c2afb7bc90ddb5e01ca32d952ad34ae</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>lowerOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac9b0c5c8d1f1f782430b0d4b87870d71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>upperOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab5b5f91a26c10a414bb20eff5c915279</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a511fd3d0496e75a249f0c413c4ae2691</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a86f109008bc28b6b1996cda0930ca85d</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a58ff81bbf89848e98d001f2da0d69be5</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a068f637e425e65402b41bf4471a84121</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayRCP&lt; const T &gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4467138280450ceaecc767894e2ae941</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abf92df12fe7d8230e9d139d27a9664c7</anchor>
      <arglist>(size_type n, const T &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9636e05e988026a6992f86fe555142f4</anchor>
      <arglist>(Iter first, Iter last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepCopy</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a63ef03034c1f3f30ca406382ccd3b579</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa847905b8820ba2663d230053faed9db</anchor>
      <arglist>(const size_type n, const T &amp;val=T())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4a519b6ea667dfe2a1bb995740e06677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a803edc75ecf52c09175ed28ffdd43c80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad0d0735375c29fa881e35317b7807b70</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0fb7c98990c9f4909c76a9b49bf3de2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08fd22a4691050f1276a440f8a512674</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2676905740f7c8f04a4251c21e38fb5a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08dfa204f0b8f96d28c5ebca9e9815ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2d4f4d78e29b592bae5553791281ec41</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac58baba49f762fbdde0618bf46462f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a351b40f99dcf858ddcc78df41094a011</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa4039e224ce6745fdb5e10d6a421adbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a59ef5937adb0336d82fcf7672d2f83f6</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;r_ptr) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a833811dcab517930c92c5387256f343b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aac0bb588cd40562fbdb5a57b4f0cb4a3</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a561afa0776d661e13298ecb84f6bbf58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a6b362c3490512e37889595745a3c228a</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classTeuchos_1_1ArrayRCP" title="Summary">Teuchos_ArrayRCP_Summary</docanchor>
    <docanchor file="classTeuchos_1_1ArrayRCP" title="Details">Teuchos_ArrayRCP_Details</docanchor>
    <docanchor file="classTeuchos_1_1ArrayRCP" title="Optional bounds checking">Teuchos_ArrayRCP_Bounds</docanchor>
    <docanchor file="classTeuchos_1_1ArrayView" title="Requirements on the type T">Teuchos_ArrayRCP_Req</docanchor>
    <docanchor file="classTeuchos_1_1ArrayView" title="Design discussion">Teuchos_ArrayView_DesignDiscussion_sec</docanchor>
  </compound>
  <compound kind="class">
    <name>ArrayRCP&lt; const char &gt;</name>
    <filename>classTeuchos_1_1ArrayRCP.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a333ab17d69c39d0dccb99a41c4e3b0cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aaa42992ff6c4e393adf6287b9a04a5c1</anchor>
      <arglist>(size_type lowerOffset_in, size_type size_in) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a735c5437336161f3b397736d11943bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9b1a31e68e40a76701660f0b749e2512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a93c2cb5793f35976759224b3a164f065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>lowerOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0b05a39339b5a466e072cc641c44263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>upperOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a33fb06a65cf8b46c15974286832fc084</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a19b9a1a175ad27dc402cb47de85b3f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a153bfb3201f8f3939014dbd92924f098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a15c4eff4b60465582b830d5f24efab90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a191235ff1744bd92995a5369a3ba413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab7c84ea9a97a70e99a695515e3f0896b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4e62abe48c1235cfd1e4c108e70de085</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a03fc8866f4cc2f1e062716f3def843aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const const char &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a12ccc9432fc5ecb16e22f2dca4d16041</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad34cc621e78c30529952d341bae2bb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ae471d3532b52c1e9381a45e26d5b7a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7b5574d5f436288b2e22f96be1dc0c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const char *</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1cad2a8a60cc9c19f738a2653954954f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const const char *</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a772f7ab7b02232990cefb6ece2eda054</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1f480fa00ca6f690c4f8f5356007245c</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7a26e55c9f8bcc6f1c03499e49d0293a</anchor>
      <arglist>(const char *p, size_type lowerOffset, size_type size, bool has_ownership, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7d8d8e38ea0f31c4e5fac26aa26df85a</anchor>
      <arglist>(const char *p, size_type lowerOffset, size_type size, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5a23198621c1c97ca77db41893594c5f</anchor>
      <arglist>(size_type size, const const char &amp;val=const char())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a883e72d4c89ecaf6dfcfcb0eeaeed039</anchor>
      <arglist>(const ArrayRCP&lt; const char &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebeb0fd9239ab1d379991dda80ea2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1d7736d8193f05c844c1240278c4f2be</anchor>
      <arglist>(const ArrayRCP&lt; const char &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aeb1491a8380f93e337d58da47fbb6edd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa9213bd67ded1315b0d6033e71226b13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a301c5eefc310552692f128e7d061ff67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abe124c618e0706d7e7b996aa064f1370</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a816ec275890adff250413626ba91ece1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a72b5282816b79316de4606842255e67b</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aef42af3e6cece7ff6f12ecb71e3e2406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac542b1d9b4e2b88f7a917481711c9799</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt; &amp;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa6886c30411a63dbc673ba84d8cf6618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a91587763c80455f449f912a04d492357</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a47eb1eb9f1b465b07b22e67a3ebfa326</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0a7040c3ac7f6b534aad7c348d224c1e</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a3e054985d208307473c1dfde053dd42e</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebcb5b71fa749b0ddfeb37abda23fc</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1eef8f5fcc24fdbc9fd4719d31b3d99b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abeb20f55ddb59e1cf09020928981d694</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const const char &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a8dfcbb35ef52f8b4a19b51fa1150eb01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>persistingView</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5c2afb7bc90ddb5e01ca32d952ad34ae</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>lowerOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac9b0c5c8d1f1f782430b0d4b87870d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>upperOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab5b5f91a26c10a414bb20eff5c915279</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a511fd3d0496e75a249f0c413c4ae2691</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a86f109008bc28b6b1996cda0930ca85d</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a58ff81bbf89848e98d001f2da0d69be5</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const char &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a068f637e425e65402b41bf4471a84121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayRCP&lt; const const char &gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4467138280450ceaecc767894e2ae941</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abf92df12fe7d8230e9d139d27a9664c7</anchor>
      <arglist>(size_type n, const const char &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9636e05e988026a6992f86fe555142f4</anchor>
      <arglist>(Iter first, Iter last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepCopy</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a63ef03034c1f3f30ca406382ccd3b579</anchor>
      <arglist>(const ArrayView&lt; const const char &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa847905b8820ba2663d230053faed9db</anchor>
      <arglist>(const size_type n, const const char &amp;val=const char())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4a519b6ea667dfe2a1bb995740e06677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a803edc75ecf52c09175ed28ffdd43c80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad0d0735375c29fa881e35317b7807b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0fb7c98990c9f4909c76a9b49bf3de2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08fd22a4691050f1276a440f8a512674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2676905740f7c8f04a4251c21e38fb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08dfa204f0b8f96d28c5ebca9e9815ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2d4f4d78e29b592bae5553791281ec41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac58baba49f762fbdde0618bf46462f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a351b40f99dcf858ddcc78df41094a011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa4039e224ce6745fdb5e10d6a421adbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a59ef5937adb0336d82fcf7672d2f83f6</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const char &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a833811dcab517930c92c5387256f343b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const char &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aac0bb588cd40562fbdb5a57b4f0cb4a3</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const char &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a561afa0776d661e13298ecb84f6bbf58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a6b362c3490512e37889595745a3c228a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayRCP&lt; const T &gt;</name>
    <filename>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a45a21c803153ff8ee6c9ca1194f232ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>afbbac3c567e5924d560e2abd711638f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aafc63f7843c02028f40dbde60d544d19</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aae77b555c02d8f406542e282d518056b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>abd944e849b64302bb6526046a65b2d75</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a40eae851bf11660030c9ff8bc3281a11</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a0a1812bb193a76a9a236cc45dcbc5088</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab2bd0429f0505f1129376c7de44690a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a9d6e72a8ad2b3924af11715c3f3c1db5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>add4731a03b17dc1931c511f4a53b2851</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab926419bfb8cc2ba7377af4ae5b616c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>af9dca2cd9517ce9f0219995c42daa945</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a5d1acefceb0addd2e32d54fb121c96b6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab03532f6eefc69466400264b667c5699</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a5630ba1e2ba801e6a91081bf0cee2bd7</anchor>
      <arglist>(const T *p, size_type lowerOffset, size_type size, bool has_ownership, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a870f0b73a85502884b3a53e241082155</anchor>
      <arglist>(const T *p, size_type lowerOffset, size_type size, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab1184838e98c8090fd80d9a6d1d273bd</anchor>
      <arglist>(size_type size, const T &amp;val=T())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a9c06871a134bf819a22e29e323c9672b</anchor>
      <arglist>(const ArrayRCP&lt; const T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a0f1acd4d857fcbfc03f1974666218cec</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a41910c5a9e99cd438679018cf15d02b6</anchor>
      <arglist>(const ArrayRCP&lt; const T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ad816a3cd088dec2152a9da181f785f13</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a031b1e800c51981bca436e47031c5aa8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aa3b4fd12457814186d390f4c5e2a448d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab7bbb17bf62bcf011160138237f9c3a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a0cc2c4741a1d321f118b15856672ed99</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a26588c08394851a2d21c7a5581f1ad3b</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab016cf3130f5cf748df9183ce8edddaa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a59721e220541c147124f27e8e8dd4b1b</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt; &amp;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2f00bcc1e52f4f2053acea3db7b15638</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a523f397ccd24c523337491743ce6c1a9</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a8766db78312c7fc4df90bf19a626bed7</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ae38a6194138747542bef8a0b88101b94</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>afdc81b6fb9c58347be267c227fd3f213</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>acc8738da5969f816fa4240157a0143f3</anchor>
      <arglist>(size_type offset) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>abec3fbd74ba0be901dff40781edff653</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aa1a1a1c1a1b30fd5487abfd4a26b2bd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a97fc0f4b8e130faf4dea11618e60446f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>persistingView</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a9f5ccad1622140d1e4a9062b35bd9793</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>lowerOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab2051c061a35430c64b9759813d7c3b8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>upperOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a3583de65ff1a73a508dda4697bc41f68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aae2a2ac3f913f7d4a24d9b343c4010a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a53545628ba1902c470e7b4fe1cd92771</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a28bc7dace2f1479d00e5e8dc91f90ed2</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a5952d5c6eb52bb48029d468f63d94d60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a95b47b9ed4745c9a79dbdc382fe0cd1c</anchor>
      <arglist>(const size_type n, const T &amp;val=T())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2d9b41e8c77a1924c7df8e4a7eabea42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2ec2734269a4adcf339ba293b8178458</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a4b89414d984e29f5000d2b5aa982c661</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>abdda9d028128a7baf7f65caf8b6d95f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a618670a0108bbc016f1f8ad64387b294</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>af76c87a48b09ef739b5081c68ec3b9e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>afdf860c64f2d995de1997205e3c480be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a418ec0afd5c0b2287f58387afc5ffc1f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a979a8554fa50d528d8b431b7cc26e8c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a1366c045de1dc5cfcf26adaf0b1c2424</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a492bd8b96610d1a9b6b70127dbe1631b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ac3a4ce2cc0d06ecafebe7ede12395ccd</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;r_ptr) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a298f5f60c4f6cb04894d451530a705c6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const T &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>afe307a7b5ba0cff095a0a73e8cbf0eeb</anchor>
      <arglist>(size_type lowerOffset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; const T &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a422d5a66857505e9795de220c4442f17</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a69703d6ce2b109e233702276f53c1cc0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>ac3a1c0fe27d54af1e4bb7ad6cad52aa6</anchor>
      <arglist>(const T *p, size_type lowerOffset_in, size_type size_in, const RCPNodeHandle &amp;node)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a873683159387c2f86f6507a848631f46</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a8015ae84a59c19b3151d8e1c254bdf26</anchor>
      <arglist>(size_type lowerOffset_in, size_type size_in) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>aa26904f067ec27e73a1b587783a54da7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>af6e01d170803f43fdd778dac5a2ef10a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a23c736b26ba795ccb1ca7adea5523617</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>lowerOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a4b02fe8868160f5048995bae3126aafc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>upperOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01T_01_4.html</anchorfile>
      <anchor>a9de930fc4f718a87186132064912875f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayRCP&lt; const void &gt;</name>
    <filename>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</filename>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a30060b8e65875c1c5ab687c0e5229c8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>ad39010347dd42dd69cfba42562b94764</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a63339b416899ffa6836fece95b443389</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a28a1c2f379a561fdcccb7f832b718de1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>ab9fb6cfe67d5291136e4321d14bd664f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>aec58c4f15f388a7db8659f727584ccf1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a3cee1cc6311c29156b9e7006c8425dfd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a79685ddb0565522b7f21b73c447f8eec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const void</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a2723493f5d818444c4263d386332c3b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01const_01void_01_4.html</anchorfile>
      <anchor>a2123c3edb2ddcc633a120c9895d57c91</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayRCP&lt; T1 &gt;</name>
    <filename>classTeuchos_1_1ArrayRCP.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a333ab17d69c39d0dccb99a41c4e3b0cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aaa42992ff6c4e393adf6287b9a04a5c1</anchor>
      <arglist>(size_type lowerOffset_in, size_type size_in) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a735c5437336161f3b397736d11943bfa</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T1 *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9b1a31e68e40a76701660f0b749e2512</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a93c2cb5793f35976759224b3a164f065</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>lowerOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0b05a39339b5a466e072cc641c44263</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>upperOffset_</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a33fb06a65cf8b46c15974286832fc084</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a19b9a1a175ad27dc402cb47de85b3f1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a153bfb3201f8f3939014dbd92924f098</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a15c4eff4b60465582b830d5f24efab90</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a191235ff1744bd92995a5369a3ba413a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1 *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab7c84ea9a97a70e99a695515e3f0896b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4e62abe48c1235cfd1e4c108e70de085</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1 &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a03fc8866f4cc2f1e062716f3def843aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T1 &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a12ccc9432fc5ecb16e22f2dca4d16041</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1 *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad34cc621e78c30529952d341bae2bb7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1 *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ae471d3532b52c1e9381a45e26d5b7a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7b5574d5f436288b2e22f96be1dc0c5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T1 *</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1cad2a8a60cc9c19f738a2653954954f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T1 *</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a772f7ab7b02232990cefb6ece2eda054</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1f480fa00ca6f690c4f8f5356007245c</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7a26e55c9f8bcc6f1c03499e49d0293a</anchor>
      <arglist>(T1 *p, size_type lowerOffset, size_type size, bool has_ownership, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a7d8d8e38ea0f31c4e5fac26aa26df85a</anchor>
      <arglist>(T1 *p, size_type lowerOffset, size_type size, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5a23198621c1c97ca77db41893594c5f</anchor>
      <arglist>(size_type size, const T1 &amp;val=T1())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a883e72d4c89ecaf6dfcfcb0eeaeed039</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebeb0fd9239ab1d379991dda80ea2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1d7736d8193f05c844c1240278c4f2be</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aeb1491a8380f93e337d58da47fbb6edd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa9213bd67ded1315b0d6033e71226b13</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a301c5eefc310552692f128e7d061ff67</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abe124c618e0706d7e7b996aa064f1370</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a816ec275890adff250413626ba91ece1</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a72b5282816b79316de4606842255e67b</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aef42af3e6cece7ff6f12ecb71e3e2406</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac542b1d9b4e2b88f7a917481711c9799</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa6886c30411a63dbc673ba84d8cf6618</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a91587763c80455f449f912a04d492357</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a47eb1eb9f1b465b07b22e67a3ebfa326</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0a7040c3ac7f6b534aad7c348d224c1e</anchor>
      <arglist>(size_type offset)</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a3e054985d208307473c1dfde053dd42e</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac0ebcb5b71fa749b0ddfeb37abda23fc</anchor>
      <arglist>(size_type offset) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a1eef8f5fcc24fdbc9fd4719d31b3d99b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abeb20f55ddb59e1cf09020928981d694</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; const T1 &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a8dfcbb35ef52f8b4a19b51fa1150eb01</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>persistingView</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a5c2afb7bc90ddb5e01ca32d952ad34ae</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>lowerOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac9b0c5c8d1f1f782430b0d4b87870d71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>upperOffset</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ab5b5f91a26c10a414bb20eff5c915279</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a511fd3d0496e75a249f0c413c4ae2691</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T1 &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a86f109008bc28b6b1996cda0930ca85d</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T1 &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a58ff81bbf89848e98d001f2da0d69be5</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T1 &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a068f637e425e65402b41bf4471a84121</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayRCP&lt; const T1 &gt;</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4467138280450ceaecc767894e2ae941</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>abf92df12fe7d8230e9d139d27a9664c7</anchor>
      <arglist>(size_type n, const T1 &amp;val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a9636e05e988026a6992f86fe555142f4</anchor>
      <arglist>(Iter first, Iter last)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deepCopy</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a63ef03034c1f3f30ca406382ccd3b579</anchor>
      <arglist>(const ArrayView&lt; const T1 &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa847905b8820ba2663d230053faed9db</anchor>
      <arglist>(const size_type n, const T1 &amp;val=T1())</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a4a519b6ea667dfe2a1bb995740e06677</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a803edc75ecf52c09175ed28ffdd43c80</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ad0d0735375c29fa881e35317b7807b70</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a0fb7c98990c9f4909c76a9b49bf3de2c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08fd22a4691050f1276a440f8a512674</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2676905740f7c8f04a4251c21e38fb5a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a08dfa204f0b8f96d28c5ebca9e9815ca</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a2d4f4d78e29b592bae5553791281ec41</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T1 *</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>ac58baba49f762fbdde0618bf46462f47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a351b40f99dcf858ddcc78df41094a011</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayRCP&lt; T1 &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aa4039e224ce6745fdb5e10d6a421adbc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a59ef5937adb0336d82fcf7672d2f83f6</anchor>
      <arglist>(const ArrayRCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a833811dcab517930c92c5387256f343b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>aac0bb588cd40562fbdb5a57b4f0cb4a3</anchor>
      <arglist>(size_type lowerOffset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayRCP&lt; T1 &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a561afa0776d661e13298ecb84f6bbf58</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1ArrayRCP.html</anchorfile>
      <anchor>a6b362c3490512e37889595745a3c228a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayRCP&lt; void &gt;</name>
    <filename>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</filename>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>a53a74d0ccc38d3156dc6bcfc1534edcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>a4b607892a5450d2680fb074dd67c64ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>ae5ef1fae82027a2fd95640a1ff9e6576</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::random_access_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>a7000c12e47ea4be6d1533c41ef99bdc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>iterator_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>ad5ddfe5e7068a4c7cffab2a39efde701</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>a92cc21bf78d03f4e88caef516c9594fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>afe497bef0131b6faedbb002e267b6338</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>ac9911b079cfdc5e869c3298906b26c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>a72736d010df425ccfe4930a6eb738005</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayRCP</name>
      <anchorfile>classTeuchos_1_1ArrayRCP_3_01void_01_4.html</anchorfile>
      <anchor>af51c82da06fafe951698422c6604dcbb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayStringValidator</name>
    <filename>classTeuchos_1_1ArrayStringValidator.html</filename>
    <base>ArrayValidator&lt; StringValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayStringValidator</name>
      <anchorfile>classTeuchos_1_1ArrayStringValidator.html</anchorfile>
      <anchor>a12a7247489af655bbc349b33b425dfe9</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayValidator</name>
    <filename>classTeuchos_1_1ArrayValidator.html</filename>
    <templarg>ValidatorType</templarg>
    <templarg>EntryType</templarg>
    <base>Teuchos::AbstractArrayValidator</base>
    <member kind="function">
      <type></type>
      <name>ArrayValidator</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a3a9d76e5b83ec1bb4f5f7fb069d046bb</anchor>
      <arglist>(RCP&lt; const ValidatorType &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a980253700f89cfbb8f9c3ed651af7afe</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>ab72d08b4cae64a5fb49e1e4f602c7ddc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a6c16188d4c5f2f0d28496e1d20ad7b25</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</name>
    <filename>classTeuchos_1_1ArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayValidator</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a3a9d76e5b83ec1bb4f5f7fb069d046bb</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a980253700f89cfbb8f9c3ed651af7afe</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>ab72d08b4cae64a5fb49e1e4f602c7ddc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a6c16188d4c5f2f0d28496e1d20ad7b25</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayValidator&lt; FileNameValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1ArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; FileNameValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayValidator</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a3a9d76e5b83ec1bb4f5f7fb069d046bb</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a980253700f89cfbb8f9c3ed651af7afe</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>ab72d08b4cae64a5fb49e1e4f602c7ddc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a6c16188d4c5f2f0d28496e1d20ad7b25</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayValidator&lt; StringValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1ArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; StringValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>ArrayValidator</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a3a9d76e5b83ec1bb4f5f7fb069d046bb</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a980253700f89cfbb8f9c3ed651af7afe</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>ab72d08b4cae64a5fb49e1e4f602c7ddc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1ArrayValidator.html</anchorfile>
      <anchor>a6c16188d4c5f2f0d28496e1d20ad7b25</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayValidatorXMLConverter</name>
    <filename>classTeuchos_1_1ArrayValidatorXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::AbstractArrayValidatorXMLConverter</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual RCP&lt; AbstractArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</type>
      <name>getConcreteValidator</name>
      <anchorfile>classTeuchos_1_1ArrayValidatorXMLConverter.html</anchorfile>
      <anchor>a5e59fee214f516031ef22ba584dce93d</anchor>
      <arglist>(RCP&lt; ValidatorType &gt; prototypeValidator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayView</name>
    <filename>classTeuchos_1_1ArrayView.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type>T *</type>
      <name>access_private_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a9a23b729696635771d9937184564b8d4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae753e2a4e8f1fc475919adf4d4110037</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ad9495b1c3f05b2b9a3ff03ba01aa12cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4a1bb3906453e602ce2778f18bb71ee6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ac1fd87249601d587ba50dad61b1350d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae753e2a4e8f1fc475919adf4d4110037</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ad9495b1c3f05b2b9a3ff03ba01aa12cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4a1bb3906453e602ce2778f18bb71ee6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ac1fd87249601d587ba50dad61b1350d8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setUpIterators</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a08c1baca1b3a2435569253f5feac98db</anchor>
      <arglist>(const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>af28ed4a86e404b0ba03a57814bd2f29c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab9859566d9da5839c1032563048bd3c7</anchor>
      <arglist>(size_type offset, size_type size_in) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae5ff02e5d0a47df651bf3980cf991da7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a74cd0f30fdcf363c11ddf7288df72d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>size_</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a3f21ea76b472858693c276352b5b999c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>afc1ac9025e3a79f21753d65d3ba39c15</anchor>
      <arglist>(T *p, typename ArrayView&lt; T &gt;::size_type size)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>arrayViewFromVector</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a5aa80ec7b20b3849e648a57dc7f9dc30</anchor>
      <arglist>(std::vector&lt; T &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>arrayViewFromVector</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0c49b87d20a28af74c96962463b7e00b</anchor>
      <arglist>(const std::vector&lt; T &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>createVector</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a861e414e509b1e790d7b6faee35aa022</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; T &gt;</type>
      <name>createVector</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aae288a01b5ab1b98e4dcfef52cee7a49</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aedcb64676cab36537e0b81e90993acf9</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4c6d677be0e252dc88c0457db58becfa</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aad7dab45be956b63640b7c77d616527c</anchor>
      <arglist>(std::ostream &amp;out, const ArrayView&lt; T &gt; &amp;av)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T2 &gt;</type>
      <name>av_const_cast</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a1cc08c488407c06b0be9064fe7a703c3</anchor>
      <arglist>(const ArrayView&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T2 &gt;</type>
      <name>av_reinterpret_cast</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa27e1146ec9f2e78f7a0624c9ce11b21</anchor>
      <arglist>(const ArrayView&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4b0563433b64afdc216c61fe8ae3805a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>af7439f60acba75e7ae3301dee4187470</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a572a808b34c138f34064b65e087994f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae95e80f4fdccebf6b38f466d0d187121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0f45f9d70fa529d3a66e033a30d15adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a426d90352f91ce8f076aa558c25a0661</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a55e802d003024f2289a33d5e45a5d6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a93488630a42b7c72e48a0150860bb343</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab7c52b205b93f06d8ffd812b00fc7efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a82b271d2fc0785411d96d8f39b4f063d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a382ef6cb42af8873bd47d851d59041c3</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a803e6db23ef67f7f2f5903c973106fc2</anchor>
      <arglist>(T *p, size_type size, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a38afd3f72830f18a7cd98802f48989b3</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a7a1996ee287faf2221d2293958134c5b</anchor>
      <arglist>(std::vector&lt; typename ConstTypeTraits&lt; T &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a10b7541a489ca6e1a9fe673b02e153dc</anchor>
      <arglist>(const std::vector&lt; typename ConstTypeTraits&lt; T &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a25bf9aa3ad6b284f358c0268e89f27ff</anchor>
      <arglist>(const ArrayView&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0136434d85d0e6374e69f733f75bedb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a1be32e3d5525286f45dc9fcd3369a703</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0f79f0fcdbb1e18e3f9958f5e47b79ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a6900160f60ff20ac9f7130a4d30294cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a690d98de2e5ad95cfd11bb0a321485bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a34b1b2ca2fdfd723977124847ef6b76b</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aebf103a84af61d124296a46249546cd3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4925275e6e68ba002334a10e3eb64dc3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aecdbb49e2733d6183142a30084a63f28</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a57d32ecdfdd04a7d5a606022dd6378b7</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; T &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa35d0e4c99596cd31d037489abb40b9d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae7b9252805aa4e948c8fe9ea15b0c4bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const T &gt;</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a45afb290787d2927b68f71f36c843977</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa97de7a55e7a9c53241372332fb7ae13</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;array) const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4f2f8f014a96fae5def11f17b8bb6f06</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ac67d2b06f79c3a507c781d34ed59114f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa171f957174a2d5aeff9c82e9c0b3033</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; T &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab7c68059a93a30dd38be5ef8879151ed</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <docanchor file="classTeuchos_1_1ArrayView" title="Optional bounds checking">Teuchos_ArrayView_Bounds</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::ArrayView&lt; const T &gt;</name>
    <filename>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a1c433b24b265b2ba0a105d09c3b15f21</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a0f2eb823478cdad9d68085221384ce82</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a54145fc333dd2555e607c9e632ffd05a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a4696c2d0a3f91d7f86da470d90ceee0d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a0b7345afb5065276683bc72abb63f51b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a7265f5ae55b7084452a4826f9a45d323</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a8b643f025bdd34310c31af45bc2c5e5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const T &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a695b6e09a3c15895d92f699df20cc58c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>acf9cc4600aa03e12f53585d7bdb2d8a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>aa5540c2b08d0bfde17110a2a1ef5400e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a519b5a85bfc02d1c89ed1defc70dee54</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a1c1a0dbdcad588adcfa81b3668aacec2</anchor>
      <arglist>(const T *p, size_type size, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a825d3f08ebc2cdbbb88dc1cf13a1a6f3</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>af7658c27b5a7dcfb2e8d0e231d654cd1</anchor>
      <arglist>(std::vector&lt; typename ConstTypeTraits&lt; T &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a659582f3f04fd3e208021f3f48ad4fd7</anchor>
      <arglist>(const std::vector&lt; typename ConstTypeTraits&lt; T &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a7530084637f2fcdc13ffe09ccff63442</anchor>
      <arglist>(const ArrayView&lt; const T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a7c383f383ab2e450640771dcce34ac6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ac49e15b9165a1a6866725bcfc6b2dde6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2b5c7d0fa3596b69586cfdf458025b52</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>aa56c286b28a9945a6cdaaf3f3eeeaee7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2f92f366581afe65417d279359feda71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a50a93c232fba28d343230a75c20ca353</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ac74e2d65b80b225cffd1c41a1e40522b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a57e549b6801eb3efcab3019dbec71137</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a8ee6bfe8ebc1e2daad40d41f3429b42d</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>afce2e5c734fbcbe8c0915874bfab498f</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; const T &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a54f0d110c2cb1fd2fca1e697fff0ed80</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ad6d3dc37b2aa1b1ff5ae691fd41e6ca3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a3c17a653ed62bc9ee002bbe2d07f21f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a718754cf9481cfee004ee8532b4d33fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; const T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a1b5bf6119e077642f9eafa9f32c37972</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; const T &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ad8c599443af05af71bc8436e6dabcaa8</anchor>
      <arglist>(size_type offset, size_type size) const </arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>access_private_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ab3a599ed204ff5cab8c3bcbb939e1c4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setUpIterators</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>ae14fb67e7cb3f4a5ae73317bc4203fcd</anchor>
      <arglist>(const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a2d6688d30bb21f36d656893c5fdddacc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a80981cd82d1314b36a8aeddc28a8a7d6</anchor>
      <arglist>(size_type offset, size_type size_in) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>aaed9892ef78efdf7d19a274398be9621</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a724d29ad29013d4637163ff085816850</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>size_</name>
      <anchorfile>classTeuchos_1_1ArrayView_3_01const_01T_01_4.html</anchorfile>
      <anchor>a563dcbee724c1fcd9324fb3ad23014c0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ArrayView&lt; int &gt;</name>
    <filename>classTeuchos_1_1ArrayView.html</filename>
    <member kind="function">
      <type>int *</type>
      <name>access_private_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a9a23b729696635771d9937184564b8d4</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setUpIterators</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a08c1baca1b3a2435569253f5feac98db</anchor>
      <arglist>(const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>af28ed4a86e404b0ba03a57814bd2f29c</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab9859566d9da5839c1032563048bd3c7</anchor>
      <arglist>(size_type offset, size_type size_in) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae5ff02e5d0a47df651bf3980cf991da7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a74cd0f30fdcf363c11ddf7288df72d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>size_</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a3f21ea76b472858693c276352b5b999c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4b0563433b64afdc216c61fe8ae3805a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>af7439f60acba75e7ae3301dee4187470</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a572a808b34c138f34064b65e087994f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae95e80f4fdccebf6b38f466d0d187121</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int *</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0f45f9d70fa529d3a66e033a30d15adc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int *</type>
      <name>const_pointer</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a426d90352f91ce8f076aa558c25a0661</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int &amp;</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a55e802d003024f2289a33d5e45a5d6dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const int &amp;</type>
      <name>const_reference</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a93488630a42b7c72e48a0150860bb343</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>pointer</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab7c52b205b93f06d8ffd812b00fc7efb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>const_pointer</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a82b271d2fc0785411d96d8f39b4f063d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a382ef6cb42af8873bd47d851d59041c3</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a803e6db23ef67f7f2f5903c973106fc2</anchor>
      <arglist>(int *p, size_type size, const ERCPNodeLookup rcpNodeLookup=RCP_ENABLE_NODE_LOOKUP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a38afd3f72830f18a7cd98802f48989b3</anchor>
      <arglist>(const ArrayView&lt; int &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a7a1996ee287faf2221d2293958134c5b</anchor>
      <arglist>(std::vector&lt; typename ConstTypeTraits&lt; int &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a10b7541a489ca6e1a9fe673b02e153dc</anchor>
      <arglist>(const std::vector&lt; typename ConstTypeTraits&lt; int &gt;::NonConstType &gt; &amp;vec)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a25bf9aa3ad6b284f358c0268e89f27ff</anchor>
      <arglist>(const ArrayView&lt; int &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ArrayView</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0136434d85d0e6374e69f733f75bedb0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a1be32e3d5525286f45dc9fcd3369a703</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a0f79f0fcdbb1e18e3f9958f5e47b79ed</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a6900160f60ff20ac9f7130a4d30294cf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a690d98de2e5ad95cfd11bb0a321485bd</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a34b1b2ca2fdfd723977124847ef6b76b</anchor>
      <arglist>(size_type i) const</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>front</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aebf103a84af61d124296a46249546cd3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int &amp;</type>
      <name>back</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4925275e6e68ba002334a10e3eb64dc3</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt;</type>
      <name>view</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aecdbb49e2733d6183142a30084a63f28</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; int &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a57d32ecdfdd04a7d5a606022dd6378b7</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; int &gt; &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa35d0e4c99596cd31d037489abb40b9d</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const int &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ae7b9252805aa4e948c8fe9ea15b0c4bf</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const int &gt;</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a45afb290787d2927b68f71f36c843977</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa97de7a55e7a9c53241372332fb7ae13</anchor>
      <arglist>(const ArrayView&lt; const int &gt; &amp;array) const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>a4f2f8f014a96fae5def11f17b8bb6f06</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ac67d2b06f79c3a507c781d34ed59114f</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; int &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>aa171f957174a2d5aeff9c82e9c0b3033</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; int &gt; &amp;</type>
      <name>assert_in_range</name>
      <anchorfile>classTeuchos_1_1ArrayView.html</anchorfile>
      <anchor>ab7c68059a93a30dd38be5ef8879151ed</anchor>
      <arglist>(size_type offset, size_type size) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::asFunc</name>
    <filename>classTeuchos_1_1asFunc.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>asFunc</name>
      <anchorfile>classTeuchos_1_1asFunc.html</anchorfile>
      <anchor>a2457326f3229ba3dab2a1a334c31c9fe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TypeTo</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1asFunc.html</anchorfile>
      <anchor>a244102e5e22f50ce162c669842d9e4d8</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B</name>
    <filename>classB.html</filename>
    <base>A</base>
    <class kind="class">B::FactoryB</class>
    <class kind="class">B::RegisterFactoryB</class>
    <class kind="class">B::Solver3</class>
    <class kind="class">B::Solver4</class>
    <member kind="function">
      <type>void</type>
      <name>f</name>
      <anchorfile>classB.html</anchorfile>
      <anchor>acf2a6f3d154d61390e02588a046cc9b3</anchor>
      <arglist>(bool verbose)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B1</name>
    <filename>classB1.html</filename>
    <base virtualness="virtual">A</base>
    <base virtualness="virtual">A</base>
    <member kind="function">
      <type></type>
      <name>B1</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>ad47d563fb5fc29dd6643ed531b9bfe80</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~B1</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>a025ef28888b7c6456c48fa2979bbfe95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>B1_g</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>a4bf6df2fb49426bec6dd00b7d0ce2d2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>B1_f</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>ad87db8fd3f402e52cd091b2709393d32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; B1 &gt;</type>
      <name>create</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>ae983f15ae3efdfcd32e1991945e21a72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>B1_g_</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>aa2a65a9dec396076504c11bb0fa8d640</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>B1_f_</name>
      <anchorfile>classB1.html</anchorfile>
      <anchor>a7e6f4f3cb1568227c4ecf5162860afe2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B2</name>
    <filename>classB2.html</filename>
    <base virtualness="virtual">A</base>
    <base virtualness="virtual">A</base>
    <member kind="function">
      <type></type>
      <name>B2</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>a3cd09a06ea992147c5b3179f14a20457</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~B2</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>a880dab3ad334ec7e68ffafe42c7d8efb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>B2_g</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>aa86c6f89dd2b5498aab05c8987939ffa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>B2_f</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>acc753f9a1889396a566fd173ea57fed8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; B2 &gt;</type>
      <name>create</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>a047ec8114d3880ad3b99a15840bb1e79</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>B2_g_</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>a90b01ddab0cb0212e88cc45b61a85b1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>B2_f_</name>
      <anchorfile>classB2.html</anchorfile>
      <anchor>a7b1bf60ba338d36ba4ccde9ac99a7a06</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::bad_any_cast</name>
    <filename>classTeuchos_1_1bad__any__cast.html</filename>
    <member kind="function">
      <type></type>
      <name>bad_any_cast</name>
      <anchorfile>classTeuchos_1_1bad__any__cast.html</anchorfile>
      <anchor>af62cafaf8ec6deceefab46a9a7803c5a</anchor>
      <arglist>(const std::string msg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BadParameterEntryXMLConverterTypeException</name>
    <filename>classTeuchos_1_1BadParameterEntryXMLConverterTypeException.html</filename>
    <member kind="function">
      <type></type>
      <name>BadParameterEntryXMLConverterTypeException</name>
      <anchorfile>classTeuchos_1_1BadParameterEntryXMLConverterTypeException.html</anchorfile>
      <anchor>a3c619d23438f92e9a44809e057a6d963</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BadParameterListElementException</name>
    <filename>classTeuchos_1_1BadParameterListElementException.html</filename>
    <member kind="function">
      <type></type>
      <name>BadParameterListElementException</name>
      <anchorfile>classTeuchos_1_1BadParameterListElementException.html</anchorfile>
      <anchor>a9354720f9342da8173fb37ce7353f3a8</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BadTagException</name>
    <filename>classTeuchos_1_1BadTagException.html</filename>
    <member kind="function">
      <type></type>
      <name>BadTagException</name>
      <anchorfile>classTeuchos_1_1BadTagException.html</anchorfile>
      <anchor>ace5df96969704ec6f3ad685f86a3b07b</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BadValidatorXMLConverterException</name>
    <filename>classTeuchos_1_1BadValidatorXMLConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>BadValidatorXMLConverterException</name>
      <anchorfile>classTeuchos_1_1BadValidatorXMLConverterException.html</anchorfile>
      <anchor>a29edfbf1e43344b464e844763863b5db</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BadXMLParameterListRootElementException</name>
    <filename>classTeuchos_1_1BadXMLParameterListRootElementException.html</filename>
    <member kind="function">
      <type></type>
      <name>BadXMLParameterListRootElementException</name>
      <anchorfile>classTeuchos_1_1BadXMLParameterListRootElementException.html</anchorfile>
      <anchor>ae46c5bf26e84b3191c858708912096eb</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Banner</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Banner.html</filename>
    <member kind="function">
      <type></type>
      <name>Banner</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a4ccb1822b4641d029529841fcc9a202f</anchor>
      <arglist>(const std::string &amp;line, const bool tolerant=false)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>objectType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a40ff4638bb561e86368a62a64495e803</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>matrixType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a35ad8d15699400097c42f257aee901ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>dataType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a4a0cd99b55233f3704fb69137118e837</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>symmType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a4b818073a9b43e9dbf1bc829b151cd2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setDefaults</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>aea88fe5a5273aa0433763a3a77c2d396</anchor>
      <arglist>(const int howMany)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>validateObjectType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a47f4c0b2d34960e924f03a7bbd2457a7</anchor>
      <arglist>(const std::string &amp;objectType, const bool tolerant=false)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>validateMatrixType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>ac24e4e1ff6da7d44e1d8c89822b51608</anchor>
      <arglist>(const std::string &amp;matrixType, const bool tolerant=false)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>validateDataType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a1e01359aacea3fe7141f88e7c18da7ba</anchor>
      <arglist>(const std::string &amp;dataType, const bool tolerant=false)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>validateSymmType</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>aac8a85bb9ea24ec6d2b67615ba84634e</anchor>
      <arglist>(const std::string &amp;symmType, const bool tolerant=false)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>objectType_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a3bbb9acc24e61c890529c4bdac8200e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>matrixType_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a1c21521ae70e9aee3046d87bfb63bbac</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>dataType_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a58d7e9613c961bbedb376cdf269f6f9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>symmType_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Banner.html</anchorfile>
      <anchor>a5edc5012c93c54ccf2fbeec9ee0fff59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::basic_FancyOStream</name>
    <filename>classTeuchos_1_1basic__FancyOStream.html</filename>
    <templarg>CharT</templarg>
    <templarg>Traits</templarg>
    <member kind="function" protection="private">
      <type></type>
      <name>basic_FancyOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a493519b9cde0215e2cb3838380cd1444</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>basic_FancyOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a19b3cdde7acdd4631cd690b6f54ca7e7</anchor>
      <arglist>(const basic_FancyOStream&lt; CharT, Traits &gt; &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>basic_FancyOStream&lt; CharT, Traits &gt;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a54e21d3c9b33d1588c77979ec8619847</anchor>
      <arglist>(const basic_FancyOStream&lt; CharT, Traits &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>streambuf_t</type>
      <name>streambuf_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a6f86707d70d712c205cab95eb38173b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; basic_FancyOStream&lt; char &gt; &gt;</type>
      <name>fancyOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ad9043a00e89b448d42489e7e59b109f7</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char &gt; &gt; &amp;oStream, const std::basic_string&lt; char &gt; &amp;tabIndentStr=&quot; &quot;, const int startingTab=0, const bool showLinePrefix=false, const int maxLenLinePrefix=10, const bool showTabCount=false, const bool showProcRank=false)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; basic_FancyOStream&lt; char &gt; &gt;</type>
      <name>getFancyOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ade9333762ef1b8c6ae65cbf56dc3ec17</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char &gt; &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>tab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a3f28173f7e236ee16e3d84368f54d185</anchor>
      <arglist>(const RCP&lt; basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;out, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>tab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ae1b626af24b9e3587aa676c2bbc4e43b</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; CharT, Traits &gt; &gt; &amp;out, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="typedef">
      <type>CharT</type>
      <name>char_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a04d92fad8ea670e7947233b15b76962c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits</type>
      <name>traits_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>aad0468455374ba2564c583ab676274f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::int_type</type>
      <name>int_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a51819e12b347d656288a5b2bed6a3664</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::pos_type</type>
      <name>pos_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a20aa41ed05cb7b975135225cf3866920</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::off_type</type>
      <name>off_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a02544b6a4d840985e515ca3b992a6e4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_FancyOStream_buf&lt; CharT, Traits &gt;</type>
      <name>streambuf_t</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>aaa823aac5e31050c568e8655ed1ca5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::basic_ostream&lt; char_type, traits_type &gt;</type>
      <name>ostream_t</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a4e8f4e39c71062daf46cc96609ad7c11</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_FancyOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a79e6f22ee7f11343fd91cc864f6edd10</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;oStream, const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr=&quot; &quot;, const int startingTab=0, const bool showLinePrefix=false, const int maxLenLinePrefix=10, const bool showTabCount=false, const bool showProcRank=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a02d3146a32cb37c227019f9a38b0b0dc</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;oStream, const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr=&quot; &quot;, const int startingTab=0, const bool showLinePrefix=false, const int maxLenLinePrefix=10, const bool showTabCount=false, const bool showProcRank=false)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>getOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a762ea5d60455c1149c9174fa11897cb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setTabIndentStr</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a0fabe791572ebbdee6e3766225aeab1d</anchor>
      <arglist>(const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr)</arglist>
    </member>
    <member kind="function">
      <type>const std::basic_string&lt; char_type, traits_type &gt; &amp;</type>
      <name>getTabIndentStr</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>af454570038275faaf3bee887a9052a68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setShowAllFrontMatter</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a118defd97aa29ac018c0f00fc696e22f</anchor>
      <arglist>(const bool showAllFrontMatter)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setShowLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a6d41076b02d8e16f5089c848da38fc56</anchor>
      <arglist>(const bool showLinePrefix)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setMaxLenLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a47b7049e4e3774b4227c41800192c50e</anchor>
      <arglist>(const int maxLenLinePrefix)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setShowTabCount</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ace119d8616e4f33a896b64e3fa3a6d3a</anchor>
      <arglist>(const bool showTabCount)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setShowProcRank</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ade77ceb04f0fcec1cf7cf6363fe09819</anchor>
      <arglist>(const bool showProcRank)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setProcRankAndSize</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a14cf096b4db0d31fddeb2757ad057ace</anchor>
      <arglist>(const int procRank, const int numProcs)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream &amp;</type>
      <name>setOutputToRootOnly</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a3b4749bbdd354e8521f561d46be438b4</anchor>
      <arglist>(const int rootRank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOutputToRootOnly</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a0bb3307a2978518872100d18381687d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>copyAllOutputOptions</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>abb80948de73a04dece8c123e769df469</anchor>
      <arglist>(const basic_FancyOStream&lt; CharT, Traits &gt; &amp;oStream)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushTab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>aebd3bed68661ccaee5f936d9cd2947bb</anchor>
      <arglist>(const int tabs=1)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCurrTabs</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>af47a159b9416ddbd80db002ab8bc8238</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popTab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a18258f31070af6e9fb947d6cff4ea5ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a54b3c760d9ca5949880fd520bd83f6ce</anchor>
      <arglist>(const std::basic_string&lt; char_type, traits_type &gt; &amp;linePrefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a0cf84b90c9324c2f3197febb11c83037</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::basic_string&lt; char_type, traits_type &gt; &amp;</type>
      <name>getTopLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>aecdcaf97b7b10640d912c2660232977e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushDisableTabbing</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>ad472f289c40fc9a130f7416d4065012e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popDisableTabbing</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream.html</anchorfile>
      <anchor>a7c0528a35afbe28690a2b9dbade89a6f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::basic_FancyOStream_buf</name>
    <filename>classTeuchos_1_1basic__FancyOStream__buf.html</filename>
    <templarg>CharT</templarg>
    <templarg>Traits</templarg>
    <member kind="typedef">
      <type>CharT</type>
      <name>char_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a5c0bf377eacbcdddcc98b728025acf99</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Traits</type>
      <name>traits_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a47d179601a543ba192d79ca87064ea6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::int_type</type>
      <name>int_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>addc88864df0fcdce6f463cb219bf752d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::pos_type</type>
      <name>pos_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a9bcba73cf50d8990bc726eb2642aa5ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>traits_type::off_type</type>
      <name>off_type</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ad8b1028b21bbac5686763df28755e77a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_FancyOStream_buf</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>af470e6f40a7f4722427a558585a5fdd7</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;oStream, const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr, const int startingTab, const bool showLinePrefix, const int maxLenLinePrefix, const bool showTabCount, const bool showProcRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ae3926212d6556c8f261dd9ac7138ebcd</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;oStream, const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr, const int startingTab, const bool showLinePrefix, const int maxLenLinePrefix, const bool showTabCount, const bool showProcRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>getOStream</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a44db302c112bfa0888ee155fdaef5b75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setTabIndentStr</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a55947071c0b3944fec6c91e65b235554</anchor>
      <arglist>(const std::basic_string&lt; char_type, traits_type &gt; &amp;tabIndentStr)</arglist>
    </member>
    <member kind="function">
      <type>const std::basic_string&lt; char_type, traits_type &gt; &amp;</type>
      <name>getTabIndentStr</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aff59d467d03137aea7d322087230bda8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ae58173d211591f9b305463952814a072</anchor>
      <arglist>(const bool showLinePrefix)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a1658099ef77cddcde6086648af7937c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMaxLenLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ab0f508df8dfc3e3df50570677a405bdf</anchor>
      <arglist>(const int maxLenLinePrefix)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getMaxLenLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a27bc9ec174b53bc87f8d02b67f85841f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowTabCount</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a6427a3e22a673e3436e9a1ffae3cde41</anchor>
      <arglist>(const bool showTabCount)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowTabCount</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a555eb59ae58def58676fb9d8c5e69e7c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setShowProcRank</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a0fdc446a16b183ab913c3c962af1bb1e</anchor>
      <arglist>(const bool showProcRank)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowProcRank</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ac6a65895d0694c81d5b7abd428bdc0f7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setProcRankAndSize</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a75d0d2d612b96f161381630a5229095a</anchor>
      <arglist>(const int procRank, const int numProcs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getProcRank</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a55eae7267fff112d6942e28a874190a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumProcs</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aa7c2c33e27897aff4eaf67ffb2a522f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOutputToRootOnly</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a25ec06139d190ace75b189677dd4efaa</anchor>
      <arglist>(const int rootRank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getOutputToRootOnly</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a05588dd9e40864ae8965c116299df06e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushTab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>abb674064765b7615efefb5578c9f655b</anchor>
      <arglist>(const int tabs)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getNumCurrTabs</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a4fdef818882525b624086437c2748750</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popTab</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a07896b5d1caac6730ff564bebcb7be2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a694fae4f881a6cbcd4f05381a6601526</anchor>
      <arglist>(const std::basic_string&lt; char_type, traits_type &gt; &amp;linePrefix)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ad2b100548bd1502b7a92a97c4eb7d459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const std::basic_string&lt; char_type, traits_type &gt; &amp;</type>
      <name>getTopLinePrefix</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aaf4f1a706f18de371e40832e7565b5a2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushDisableTabbing</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aa4601ac3041c299653057693c39e5a95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>popDisableTabbing</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a5ebe7cc318d62038ea659f06c9b62764</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::basic_string&lt; char_type, traits_type &gt;</type>
      <name>string_t</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a7509f6925851f01c17f6e9a7685c3568</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::deque&lt; int &gt;</type>
      <name>tabIndentStack_t</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a3e3bcc6ba77450c5725d1a1a67979dd5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::deque&lt; string_t &gt;</type>
      <name>linePrefixStack_t</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a2fd24fd5753393f038a39fb8ade5ef51</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::ostream &amp;</type>
      <name>out</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a698a4378d71bd606b6cd6927cea836ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>writeChars</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>afe254c11200dd216445959d958a28909</anchor>
      <arglist>(const char_type s[], std::streamsize n)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>writeFrontMatter</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a22ef1516774bb6bdfba50cedd9212e70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>basic_FancyOStream_buf</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a9b458ac526574dcdeb63c6bae03d28b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>basic_FancyOStream_buf</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a837ae1d2e165e828b812290295273682</anchor>
      <arglist>(const basic_FancyOStream_buf&lt; CharT, Traits &gt; &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>basic_FancyOStream_buf&lt; CharT, Traits &gt;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a4600600ad5c81d2511fd48701dae9bcc</anchor>
      <arglist>(const basic_FancyOStream_buf&lt; CharT, Traits &gt; &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>oStreamSet_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aa187cc26c94213cef4a0b2ded7416fc2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>oStream_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>adbed95721ae25b8f382c483b3d558f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::basic_string&lt; char_type, traits_type &gt;</type>
      <name>tabIndentStr_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a3216b200c01e432d191be4e7d1228766</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showLinePrefix_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a7fac5346917d62042a152d1f5bcb61fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>maxLenLinePrefix_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a2035c3bdd9e5b4c51e45de5ad213f0b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showTabCount_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a2dbeca119a21a039c2600980ab6789c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showProcRank_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ab96a117269e727acc5cf813ec15c6773</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>rootRank_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a3af17c392a88c0b01ece6daf2a6c1c07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>procRank_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ae56af441813019a16e1ab8170907f167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numProcs_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a9b37b157e4c4d7efedda50ec43203488</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>rankPrintWidth_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ad7a1aa545f4d07e021859d194d12579c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; std::ostringstream &gt;</type>
      <name>lineOut_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>afdcc3e316d67adfd7f3821d5023d7219</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>tabIndent_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a63897db3bbb1cbecc37eb70ac03600aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tabIndentStack_t</type>
      <name>tabIndentStack_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>afff059319fafc704a21f49f6ef1c97be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>linePrefixStack_t</type>
      <name>linePrefixStack_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>ae923774557509792e032467b359c6dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>enableTabbingStack_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a7196eae2ee8ad8436ee18bce0786055d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>wroteNewline_</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aab7cc92e77e22e730dc584cb4ab1268a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::streamsize</type>
      <name>xsputn</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>aff28c3699e2663ad007899af9cde7d37</anchor>
      <arglist>(const char_type *s, std::streamsize n)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int_type</type>
      <name>overflow</name>
      <anchorfile>classTeuchos_1_1basic__FancyOStream__buf.html</anchorfile>
      <anchor>a065afe21ed8ae062f6f11f54104e15a1</anchor>
      <arglist>(int_type c)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::basic_oblackholestream</name>
    <filename>classTeuchos_1_1basic__oblackholestream.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>basic_oblackholestream</name>
      <anchorfile>classTeuchos_1_1basic__oblackholestream.html</anchorfile>
      <anchor>a05480f4eb5f31e55be9d9ebcc5c33b1e</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::basic_OSTab</name>
    <filename>classTeuchos_1_1basic__OSTab.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>aade797834cd79fa680f397e1dcd481da</anchor>
      <arglist>(const RCP&lt; basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;fancyOStream, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>ad8a46cedc5d352201b3dfde7126aa24b</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; CharT, Traits &gt; &gt; &amp;oStream, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a8f9b0e2f3e1b1fddae0deb7dbff2827b</anchor>
      <arglist>(basic_FancyOStream&lt; CharT, Traits &gt; &amp;fancyOStream, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a4711f138a014290d29fd6f0172b6e7a5</anchor>
      <arglist>(std::basic_ostream&lt; CharT, Traits &gt; &amp;oStream, const int tabs=1, const std::basic_string&lt; CharT, Traits &gt; linePrefix=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>af7da8947c5c04ed3cc855f4fd4de10a4</anchor>
      <arglist>(const basic_OSTab &amp;osTab)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~basic_OSTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a3eabdca8130cceab46d2cef804444a5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>basic_OSTab&lt; CharT, Traits &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>afa22f631480441c911a2916c23ca936c</anchor>
      <arglist>(const basic_OSTab &amp;osTab)</arglist>
    </member>
    <member kind="function">
      <type>basic_OSTab&lt; CharT, Traits &gt; &amp;</type>
      <name>incrTab</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a23b9af1fac64e733b6abfe9b07fa7170</anchor>
      <arglist>(const int tabs=1)</arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream&lt; CharT, Traits &gt; &amp;</type>
      <name>o</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a9c271825aef07fb29e095e3464383417</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>basic_FancyOStream&lt; CharT, Traits &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a444c5bb1c5da51659d046d1236ac6b6b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const int</type>
      <name>DISABLE_TABBING</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a6620c8f7f9c1dae47a16926e3034c277</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateState</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a1b4462141329961875fe3bd8d0e98b4f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>fancyOStream_</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a091ea913fafd8660f53ba2fdf0202013</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>tabs_</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a8123bac179054faf637c2ff8b139d9d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::basic_string&lt; CharT, Traits &gt;</type>
      <name>linePrefix_</name>
      <anchorfile>classTeuchos_1_1basic__OSTab.html</anchorfile>
      <anchor>a1fe608924a7f64c9ef85d58243a94e63</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvilPack::BEvil</name>
    <filename>classEvilPack_1_1BEvil.html</filename>
    <templarg>T</templarg>
    <base>EvilPack::EvilBase</base>
    <member kind="function">
      <type>void</type>
      <name>callAEvil</name>
      <anchorfile>classEvilPack_1_1BEvil.html</anchorfile>
      <anchor>a8fd1ca2a7bbfd5c8079bb27cdd25d877</anchor>
      <arglist>(const AEvil&lt; T &gt; &amp;aEvil, const T &amp;obj) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>soundOff</name>
      <anchorfile>classEvilPack_1_1BEvil.html</anchorfile>
      <anchor>a9adbf31567a8d3677734efd0dafeb954</anchor>
      <arglist>(const T &amp;obj) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; BEvil&lt; T &gt; &gt;</type>
      <name>bEvil</name>
      <anchorfile>classEvilPack_1_1BEvil.html</anchorfile>
      <anchor>a5f995a131a78b40d4f75958eced15b6c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BLAS</name>
    <filename>classTeuchos_1_1BLAS.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::DefaultBLASImpl</base>
    <member kind="typedef" protection="private">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1BLAS.html</anchorfile>
      <anchor>ae3624794cbcbcd4f301008730f3e31a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS.html</anchorfile>
      <anchor>aef83fda89ce8d8cb9341a309d2372663</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS.html</anchorfile>
      <anchor>a8cb8010f61e8200e5fe817ce9ee30489</anchor>
      <arglist>(const BLAS&lt; OrdinalType, ScalarType &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS.html</anchorfile>
      <anchor>a5f0282e91824818b9d4f40bfb52437ac</anchor>
      <arglist>(void)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BLAS&lt; int, double &gt;</name>
    <filename>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a074d9d4b17979ca108218c66cfb7f03d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a7698c46955c5e1a5ca16e4c8b5cd8813</anchor>
      <arglist>(const BLAS&lt; int, double &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a16a9926b12f2d1b85639727956555673</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a2f61c1259cafb6495000844213a2b092</anchor>
      <arglist>(double *da, double *db, double *c, double *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>aa5ed86511a64a57f63d172684256f85b</anchor>
      <arglist>(const int n, double *dx, const int incx, double *dy, const int incy, double *c, double *s) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ASUM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a6471ca2deda2fa94aa17ad3d89df600f</anchor>
      <arglist>(const int n, const double *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AXPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>aa378b84b862dae1d8f8ee7d077a70ceb</anchor>
      <arglist>(const int n, const double alpha, const double *x, const int incx, double *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>COPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a8f716596e112e12b77b8d3aedc148e7d</anchor>
      <arglist>(const int n, const double *x, const int incx, double *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>DOT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a59800b24fb58dcff041bdbb0392ef1b6</anchor>
      <arglist>(const int n, const double *x, const int incx, const double *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>NRM2</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>afb46c36001a1443a7a31e675fb1996a1</anchor>
      <arglist>(const int n, const double *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCAL</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a1f5a916315fbafb855aa49c221edf89a</anchor>
      <arglist>(const int n, const double alpha, double *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IAMAX</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a85dbe33ab3813dbba69a2e58e0162e3b</anchor>
      <arglist>(const int n, const double *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a80df906b215b9d0e582e13dca8cac525</anchor>
      <arglist>(ETransp trans, const int m, const int n, const double alpha, const double *A, const int lda, const double *x, const int incx, const double beta, double *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>ae8c276358f3f92fa2242f000340f7f05</anchor>
      <arglist>(EUplo uplo, ETransp trans, EDiag diag, const int n, const double *A, const int lda, double *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GER</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>af83568d9169c31adc93e6672b1294642</anchor>
      <arglist>(const int m, const int n, const double alpha, const double *x, const int incx, const double *y, const int incy, double *A, const int lda) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a636a94fd2f492aa93636be344293434c</anchor>
      <arglist>(ETransp transa, ETransp transb, const int m, const int n, const int k, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SWAP</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a7f25afb458b2a7cc94836cf7f4eb0af2</anchor>
      <arglist>(const int n, double *const x, const int incx, double *const y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>ac0e46769684195b1c903badd073fa03b</anchor>
      <arglist>(ESide side, EUplo uplo, const int m, const int n, const double alpha, const double *A, const int lda, const double *B, const int ldb, const double beta, double *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYRK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>aa249758ecd8d635ccf6fc27eb3f69701</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const double alpha, const double *A, const int lda, const double beta, double *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HERK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a0416e155e0dfcd187cc27d10580618aa</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const double alpha, const double *A, const int lda, const double beta, double *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a2ae8eeddb9eb2a3c8d3596441d2a8314</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const double alpha, const double *A, const int lda, double *B, const int ldb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>a50950d34df45e8cee4a289bfb8951769</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const double alpha, const double *A, const int lda, double *B, const int ldb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BLAS&lt; int, float &gt;</name>
    <filename>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ad5b3ae9fecf849c6868d4d839182419b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>abc2753ca00ecde3799ea3a9e78562650</anchor>
      <arglist>(const BLAS&lt; int, float &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ab5c3b0d1795a63d2b0c75553aa7af2b6</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ac3242b13850ce594957694525da88c9b</anchor>
      <arglist>(float *da, float *db, float *c, float *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a3e88b521078550b41b88a00e4a10fc07</anchor>
      <arglist>(const int n, float *dx, const int incx, float *dy, const int incy, float *c, float *s) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ASUM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a65c6bd30579ac912627c9744dd462f7d</anchor>
      <arglist>(const int n, const float *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AXPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a39f7c3e562fc1d6689b5c555de2cfb05</anchor>
      <arglist>(const int n, const float alpha, const float *x, const int incx, float *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>COPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ad2d38dfb6f705942b73bf48c8e2d5927</anchor>
      <arglist>(const int n, const float *x, const int incx, float *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>DOT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a7a49ba000a5ef6782e55ebca34ee8dea</anchor>
      <arglist>(const int n, const float *x, const int incx, const float *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>NRM2</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a320932edefb63039e408b52067f4fcc7</anchor>
      <arglist>(const int n, const float *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCAL</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>aef46d7f1f7204cb29f1eb2e1457c1f1e</anchor>
      <arglist>(const int n, const float alpha, float *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IAMAX</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ad90abcf31fc6efdb6d479c67d07097f0</anchor>
      <arglist>(const int n, const float *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>acd6361a3fb163d4b36feddeefac00de8</anchor>
      <arglist>(ETransp trans, const int m, const int n, const float alpha, const float *A, const int lda, const float *x, const int incx, const float beta, float *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a930018928c621f4c3d028ad966979bf9</anchor>
      <arglist>(EUplo uplo, ETransp trans, EDiag diag, const int n, const float *A, const int lda, float *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GER</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a7a5ffa47f7845a4f09964f201b039bea</anchor>
      <arglist>(const int m, const int n, const float alpha, const float *x, const int incx, const float *y, const int incy, float *A, const int lda) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>aabe7dba5b3f1a5ae71ce1847070c04dd</anchor>
      <arglist>(ETransp transa, ETransp transb, const int m, const int n, const int k, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SWAP</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a43c82364fb8dd1fc91f19b338ce2616f</anchor>
      <arglist>(const int n, float *const x, const int incx, float *const y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>af1468951c1b788ca87429bfaaf21936d</anchor>
      <arglist>(ESide side, EUplo uplo, const int m, const int n, const float alpha, const float *A, const int lda, const float *B, const int ldb, const float beta, float *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYRK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a9486b1214bb744df011c43203d14e7d9</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const float alpha, const float *A, const int lda, const float beta, float *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HERK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a087274b75d85705b257edfbbabf40f9c</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const float alpha, const float *A, const int lda, const float beta, float *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>ae115b2ade6b95842e9e0dcd6ed1b7642</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const float alpha, const float *A, const int lda, float *B, const int ldb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a653c277dbb5863f8b5aa3b0a9deaea57</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const float alpha, const float *A, const int lda, float *B, const int ldb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BLAS&lt; int, std::complex&lt; double &gt; &gt;</name>
    <filename>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a51c744a1005a3fb300ccb0379384460d</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>ab39afcdbc508505f55f6e7359ab981a4</anchor>
      <arglist>(const BLAS&lt; int, std::complex&lt; double &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a6e2d758d1e212610e15dfb26afcf47ff</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>abab4394cf9a121da3a1485ba427d4230</anchor>
      <arglist>(std::complex&lt; double &gt; *da, std::complex&lt; double &gt; *db, double *c, std::complex&lt; double &gt; *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>ae66436ca45b8979646607e60395edf69</anchor>
      <arglist>(const int n, std::complex&lt; double &gt; *dx, const int incx, std::complex&lt; double &gt; *dy, const int incy, double *c, std::complex&lt; double &gt; *s) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>ASUM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a7acd0459051c920b6a99bf388c5b318a</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AXPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>ac63655612334874d5925a811687df6c2</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *x, const int incx, std::complex&lt; double &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>COPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a2840a04d4645063e5248c30a7406a963</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; *x, const int incx, std::complex&lt; double &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; double &gt;</type>
      <name>DOT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>aa38fab45c9e249aeed52584f3bfe0f86</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; *x, const int incx, const std::complex&lt; double &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>NRM2</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a1bb6ff5d4461b753105ca13a2d40ddb2</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCAL</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a7e6f7ed64a2fd60d6344b971478d2f7f</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; alpha, std::complex&lt; double &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IAMAX</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>ae00be6299d96bf715d0369cd54b6eac8</anchor>
      <arglist>(const int n, const std::complex&lt; double &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>ab989c0e171285c3937da7bb5cfcd92dd</anchor>
      <arglist>(ETransp trans, const int m, const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, const std::complex&lt; double &gt; *x, const int incx, const std::complex&lt; double &gt; beta, std::complex&lt; double &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a83c4d15c3c7b3c5e35d357ad040b158b</anchor>
      <arglist>(EUplo uplo, ETransp trans, EDiag diag, const int n, const std::complex&lt; double &gt; *A, const int lda, std::complex&lt; double &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GER</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a2d1a4f0b533d332be23a3183b015794b</anchor>
      <arglist>(const int m, const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *x, const int incx, const std::complex&lt; double &gt; *y, const int incy, std::complex&lt; double &gt; *A, const int lda) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a9ecebe5f5a2c5d88a291cad5a24f206d</anchor>
      <arglist>(ETransp transa, ETransp transb, const int m, const int n, const int k, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, const std::complex&lt; double &gt; *B, const int ldb, const std::complex&lt; double &gt; beta, std::complex&lt; double &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SWAP</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a284beb96ea2d7789b9c1c9760c8d8a59</anchor>
      <arglist>(const int n, std::complex&lt; double &gt; *const x, const int incx, std::complex&lt; double &gt; *const y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a13ddc23b91eb2e1594b0158b86e3ac16</anchor>
      <arglist>(ESide side, EUplo uplo, const int m, const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, const std::complex&lt; double &gt; *B, const int ldb, const std::complex&lt; double &gt; beta, std::complex&lt; double &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYRK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a628cd588f8c35ecd7ebb8a1088022706</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, const std::complex&lt; double &gt; beta, std::complex&lt; double &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HERK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>af2a78f57a12e5a98225aaa5390a5e184</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, const std::complex&lt; double &gt; beta, std::complex&lt; double &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a8a9e8a06d275c7308d7ae06f05b6448a</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, std::complex&lt; double &gt; *B, const int ldb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01double_01_4_01_4.html</anchorfile>
      <anchor>a500398b47ac8c36647316f97a9aea3e7</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const std::complex&lt; double &gt; alpha, const std::complex&lt; double &gt; *A, const int lda, std::complex&lt; double &gt; *B, const int ldb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BLAS&lt; int, std::complex&lt; float &gt; &gt;</name>
    <filename>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</filename>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a5831c15c0f900492c1e175d637c9516f</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>ac3b3b816cccd560486c13344165c593b</anchor>
      <arglist>(const BLAS&lt; int, std::complex&lt; float &gt; &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BLAS</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a13552e160364d7757d07bdc879f9772b</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a4bd24d00df09dfeab8752c90f3ae82f8</anchor>
      <arglist>(std::complex&lt; float &gt; *da, std::complex&lt; float &gt; *db, float *c, std::complex&lt; float &gt; *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a0af87e6063826d55d4b4aad88f3fbba2</anchor>
      <arglist>(const int n, std::complex&lt; float &gt; *dx, const int incx, std::complex&lt; float &gt; *dy, const int incy, float *c, std::complex&lt; float &gt; *s) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>ASUM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>aae8ea3918bf4a983edcf027b9bae293b</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AXPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>adb27fdbdd3c5e51c5d78f610e403e180</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *x, const int incx, std::complex&lt; float &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>COPY</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a39ed8a0a5cec444d4fc36ddd822cfea6</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; *x, const int incx, std::complex&lt; float &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>std::complex&lt; float &gt;</type>
      <name>DOT</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a9ec1139ff6ffbad2e61bad0f8beef6ca</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; *x, const int incx, const std::complex&lt; float &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>float</type>
      <name>NRM2</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a97ba5260dc6db560c0410228331d6f37</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCAL</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a5c8ec0afca61733f558fc777756ad499</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; alpha, std::complex&lt; float &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>IAMAX</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>ac88a1c0a5b3d322873c2c0069ce5f2f3</anchor>
      <arglist>(const int n, const std::complex&lt; float &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a7a05f32998418a81c31ea8c20ec3a747</anchor>
      <arglist>(ETransp trans, const int m, const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, const std::complex&lt; float &gt; *x, const int incx, const std::complex&lt; float &gt; beta, std::complex&lt; float &gt; *y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMV</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a57b6fc6e9cc969bc2987c3a48de4ed3a</anchor>
      <arglist>(EUplo uplo, ETransp trans, EDiag diag, const int n, const std::complex&lt; float &gt; *A, const int lda, std::complex&lt; float &gt; *x, const int incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GER</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a05c87330d159b12f4484b5bec77f2b8a</anchor>
      <arglist>(const int m, const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *x, const int incx, const std::complex&lt; float &gt; *y, const int incy, std::complex&lt; float &gt; *A, const int lda) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a9cc4e79ead0e3d267f5829443a08bb23</anchor>
      <arglist>(ETransp transa, ETransp transb, const int m, const int n, const int k, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, const std::complex&lt; float &gt; *B, const int ldb, const std::complex&lt; float &gt; beta, std::complex&lt; float &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SWAP</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a7d43b4f552659ed6f903b3d2b0f72725</anchor>
      <arglist>(const int n, std::complex&lt; float &gt; *const x, const int incx, std::complex&lt; float &gt; *const y, const int incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a6d779dea9f8059d34af7eeef121b7ade</anchor>
      <arglist>(ESide side, EUplo uplo, const int m, const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, const std::complex&lt; float &gt; *B, const int ldb, const std::complex&lt; float &gt; beta, std::complex&lt; float &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYRK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>aa591ca7df6c89d87d36b8905df7f99cd</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, const std::complex&lt; float &gt; beta, std::complex&lt; float &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HERK</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>ae586a0c62a4d1e267c2846521fbb6a72</anchor>
      <arglist>(EUplo uplo, ETransp trans, const int n, const int k, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, const std::complex&lt; float &gt; beta, std::complex&lt; float &gt; *C, const int ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a663b74a9ffc6d64f680cdcf0ed96d79d</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, std::complex&lt; float &gt; *B, const int ldb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSM</name>
      <anchorfile>classTeuchos_1_1BLAS_3_01int_00_01std_1_1complex_3_01float_01_4_01_4.html</anchorfile>
      <anchor>a30e47b6698671d046361dfdba75782d0</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const int m, const int n, const std::complex&lt; float &gt; alpha, const std::complex&lt; float &gt; *A, const int lda, std::complex&lt; float &gt; *B, const int ldb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolCondition</name>
    <filename>classTeuchos_1_1BoolCondition.html</filename>
    <base>Teuchos::ParameterCondition</base>
    <member kind="function">
      <type></type>
      <name>BoolCondition</name>
      <anchorfile>classTeuchos_1_1BoolCondition.html</anchorfile>
      <anchor>a7e38ed59596a86de549b49ab20556277</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; parameter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoolCondition</name>
      <anchorfile>classTeuchos_1_1BoolCondition.html</anchorfile>
      <anchor>a1f739c9e5e34b391d860ec7075651b13</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1BoolCondition.html</anchorfile>
      <anchor>a9faa8b0d3af21154a97db2106f8e26e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>evaluateParameter</name>
      <anchorfile>classTeuchos_1_1BoolCondition.html</anchorfile>
      <anchor>af5bb7b2ff6440d895927cfefe60732e8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolConditionConverter</name>
    <filename>classTeuchos_1_1BoolConditionConverter.html</filename>
    <base>Teuchos::ParameterConditionConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterCondition &gt;</type>
      <name>getSpecificParameterCondition</name>
      <anchorfile>classTeuchos_1_1BoolConditionConverter.html</anchorfile>
      <anchor>a9e60aa19b06ccda6a79a700f1b34281f</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; ParameterEntry &gt; parameterEntry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpecificXMLTraits</name>
      <anchorfile>classTeuchos_1_1BoolConditionConverter.html</anchorfile>
      <anchor>ab9fe39a017a6d133f5fa067d78289d18</anchor>
      <arglist>(RCP&lt; const ParameterCondition &gt; condition, XMLObject &amp;xmlObj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolLogicCondition</name>
    <filename>classTeuchos_1_1BoolLogicCondition.html</filename>
    <base>Teuchos::Condition</base>
    <member kind="function">
      <type></type>
      <name>BoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>a891be8ef9469d3cf6e051404c07dfe38</anchor>
      <arglist>(ConstConditionList &amp;conditions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~BoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>a4ce3707c8900c59adedcb495473b6a9b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addCondition</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>ab213877d943ef6c69790998f3d0e1ec1</anchor>
      <arglist>(RCP&lt; const Condition &gt; toAdd)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>applyOperator</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>a7fb0ab256883a6428ca24c1a21450e27</anchor>
      <arglist>(bool op1, bool op2) const  =0</arglist>
    </member>
    <member kind="function">
      <type>const ConstConditionList &amp;</type>
      <name>getConditions</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>abdff3988f6b9f058e3cc16df7cf48a2c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>isConditionTrue</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>a9b312c83f4a9ffbc9cba85e9b70ab675</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAtLeasteOneParameter</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>aec831b47e0b4e22208aa80c6049d023c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dependency::ConstParameterEntryList</type>
      <name>getAllParameters</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>aacfd06896459e71bcc09d207b64f93ba</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConstConditionList</type>
      <name>conditions_</name>
      <anchorfile>classTeuchos_1_1BoolLogicCondition.html</anchorfile>
      <anchor>ace727c527127686a42b71f68d9acd357</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolLogicConditionConverter</name>
    <filename>classTeuchos_1_1BoolLogicConditionConverter.html</filename>
    <base>Teuchos::ConditionXMLConverter</base>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; BoolLogicCondition &gt;</type>
      <name>getSpecificBoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1BoolLogicConditionConverter.html</anchorfile>
      <anchor>a27164da9803d43e2cc209b12e6d6d75a</anchor>
      <arglist>(Condition::ConstConditionList &amp;conditions) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Condition &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1BoolLogicConditionConverter.html</anchorfile>
      <anchor>aa3798dc8ee90585ff0834b8db6c9c0a8</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertCondition</name>
      <anchorfile>classTeuchos_1_1BoolLogicConditionConverter.html</anchorfile>
      <anchor>ac82f1c96a9a9945a20da12b6ca50b60d</anchor>
      <arglist>(const RCP&lt; const Condition &gt; condition, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolValidatorDependency</name>
    <filename>classTeuchos_1_1BoolValidatorDependency.html</filename>
    <base>Teuchos::ValidatorDependency</base>
    <member kind="function">
      <type></type>
      <name>BoolValidatorDependency</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a030877b504137353dfcd875c452f5beb</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const ParameterEntryValidator &gt; trueValidator, RCP&lt; const ParameterEntryValidator &gt; falseValidator=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolValidatorDependency</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a9873fc9e577c99c93cc3e6133cde5c99</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const ParameterEntryValidator &gt; trueValidator, RCP&lt; const ParameterEntryValidator &gt; falseValidator=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>abd237642001c587536da456d9a54d766</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a27eabc85836df61697bac0c3980f3100</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a6cf38a636e90dd231cf829e2576a3e76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>getTrueValidator</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>ac21a7f6ba3651be1ed8045afe8b791ef</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>getFalseValidator</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a8de46eec0582c38439147f66f945bd90</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>trueValidator_</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a3d6facda4405d62011c91ae0a5f0c482</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>falseValidator_</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependency.html</anchorfile>
      <anchor>a2ccea3cc91c9567c36420640765de8f9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolValidatorDependencyXMLConverter</name>
    <filename>classTeuchos_1_1BoolValidatorDependencyXMLConverter.html</filename>
    <base>Teuchos::ValidatorDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ac66c131b3d57050dda441688f0547981</anchor>
      <arglist>(RCP&lt; const ValidatorDependency &gt; dependency, XMLObject &amp;xmlObj, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ValidatorDependency &gt;</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a5326c16985620990991bfe31fafcb611</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; const ParameterEntry &gt; dependee, const Dependency::ParameterEntryList dependents, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getFalseValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>aac230a3d59555ce1e90c77e8daa6846c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTrueValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1BoolValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a5d8fde28c99498fb2a1611bc1db2596a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolVisualDependency</name>
    <filename>classTeuchos_1_1BoolVisualDependency.html</filename>
    <base>Teuchos::VisualDependency</base>
    <member kind="function">
      <type></type>
      <name>BoolVisualDependency</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependency.html</anchorfile>
      <anchor>ae7f9fe4c53dece7351094b0ca1d79c9f</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BoolVisualDependency</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependency.html</anchorfile>
      <anchor>a1bcf769a3743220351d10ada1819c49b</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDependeeState</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependency.html</anchorfile>
      <anchor>a3906d781aa4f85cda7d8a1cc2cf007a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependency.html</anchorfile>
      <anchor>a58ea96f5535db6196288270dfd0b7323</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependency.html</anchorfile>
      <anchor>a4ff6b21c19863a31a90f7acd4f14fe89</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::BoolVisualDependencyXMLConverter</name>
    <filename>classTeuchos_1_1BoolVisualDependencyXMLConverter.html</filename>
    <base>Teuchos::VisualDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a27f100809b1cb3abe579c6fc6dc47754</anchor>
      <arglist>(RCP&lt; const VisualDependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; VisualDependency &gt;</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1BoolVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a95e231a4ec55eac1223f8af5bc1ef815</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, bool showIf, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>C</name>
    <filename>classC.html</filename>
    <base virtualness="virtual">B1</base>
    <base virtualness="virtual">B2</base>
    <base>A</base>
    <base>B1</base>
    <base>B2</base>
    <class kind="class">C::FactoryC</class>
    <class kind="class">C::RegisterFactoryC</class>
    <class kind="class">C::Solver5</class>
    <class kind="class">C::Solver6</class>
    <member kind="function">
      <type></type>
      <name>C</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a05e6ea25c8ae42d5080bcbd96288240c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~C</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a90a1efe40b9833869d39edfeac9ea4f2</anchor>
      <arglist>() TEUCHOS_NOEXCEPT_FALSE</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>C_g</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>ae01341154eb617965827e086f3637508</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>C_f</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a19e86aa9bffc2ccdca4d77beef998b28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>call_A_on_delete</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>adaf5d32b1823c2e6778fc24a34a7d783</anchor>
      <arglist>(bool call_A_on_delete_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>call_A_g</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>ad7c6c9fdf6f984cdd49eb805e712618a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_A</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>abb89efd7b21ec4976c9712bdc56a926c</anchor>
      <arglist>(const Teuchos::RCP&lt; A &gt; &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; A &gt;</type>
      <name>get_A</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>aebf7fe40b097222a943f16ee893569da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; C &gt;</type>
      <name>create</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>ab482cb2dd4a059116568185efb7291e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>get_A_g_on_delete</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a55085a11e882c68de117791631e6ddc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>C_g_</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a0285a9e0039310afcc5f18e32dcfe3bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>C_f_</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a365a98494b57009910dcdced61131fbd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; A &gt;</type>
      <name>a_</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a450e447c77d6b1d90da9faa403d004a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>call_A_on_delete_</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a4d5a3d612e0c6f9d66307042a8bec0f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>A_g_on_delete_</name>
      <anchorfile>classC.html</anchorfile>
      <anchor>a888ef4b6de52cf4a0aed5d6f209caea2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CantFindConditionConverterException</name>
    <filename>classTeuchos_1_1CantFindConditionConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>CantFindConditionConverterException</name>
      <anchorfile>classTeuchos_1_1CantFindConditionConverterException.html</anchorfile>
      <anchor>a0e4ca89a75926b8c50bcc0d5b0e9403e</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CantFindDependencyConverterException</name>
    <filename>classTeuchos_1_1CantFindDependencyConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>CantFindDependencyConverterException</name>
      <anchorfile>classTeuchos_1_1CantFindDependencyConverterException.html</anchorfile>
      <anchor>a3a7a6543368c3d323b0481931a5224ed</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CantFindFunctionObjectConverterException</name>
    <filename>classTeuchos_1_1CantFindFunctionObjectConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>CantFindFunctionObjectConverterException</name>
      <anchorfile>classTeuchos_1_1CantFindFunctionObjectConverterException.html</anchorfile>
      <anchor>a286c5d48338b1265236bfa8c0b1fd514</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CantFindParameterEntryConverterException</name>
    <filename>classTeuchos_1_1CantFindParameterEntryConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>CantFindParameterEntryConverterException</name>
      <anchorfile>classTeuchos_1_1CantFindParameterEntryConverterException.html</anchorfile>
      <anchor>a312c242662705dd25e333995e0e09079</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CantFindValidatorConverterException</name>
    <filename>classTeuchos_1_1CantFindValidatorConverterException.html</filename>
    <member kind="function">
      <type></type>
      <name>CantFindValidatorConverterException</name>
      <anchorfile>classTeuchos_1_1CantFindValidatorConverterException.html</anchorfile>
      <anchor>af870438ff3d40dd48bee3737fa921fbb</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CharToReferenceTypeReductionOp</name>
    <filename>classTeuchos_1_1CharToReferenceTypeReductionOp.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, char &gt;</base>
    <member kind="function">
      <type></type>
      <name>CharToReferenceTypeReductionOp</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>a8e6791ecafb629105c887625bad5377b</anchor>
      <arglist>(const RCP&lt; const Serializer&lt; Ordinal, T &gt; &gt; &amp;serializer, const RCP&lt; const ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;reductOp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>a911ddc8ca0bc7cf6b60ae1b1cc3a833b</anchor>
      <arglist>(const Ordinal charCount, const char charInBuffer[], char charInoutBuffer[]) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToReferenceTypeReductionOp</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>ad7e21ee5d4de0bcb573def4dfd0d2904</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToReferenceTypeReductionOp</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>aa5ebacb5745332f77122b3726ee071b6</anchor>
      <arglist>(const CharToReferenceTypeReductionOp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CharToReferenceTypeReductionOp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>a7c379b80dd0f478fb1b1b7cf37d2a358</anchor>
      <arglist>(const CharToReferenceTypeReductionOp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>a6a5b92ffa96f2252a83fa6632e0490aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>reductOp_</name>
      <anchorfile>classTeuchos_1_1CharToReferenceTypeReductionOp.html</anchorfile>
      <anchor>a583800b2affe89663912518ce3dbc63c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CharToValueTypeReductionOp</name>
    <filename>classTeuchos_1_1CharToValueTypeReductionOp.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>Teuchos::CharToValueTypeReductionOpImp</base>
    <member kind="typedef">
      <type>CharToValueTypeReductionOpImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp.html</anchorfile>
      <anchor>a56685677eb7f37054ddbbd263a51ff1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CharToValueTypeReductionOp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp.html</anchorfile>
      <anchor>a31ff75a9d3b7a983a35c9018b66f215a</anchor>
      <arglist>(const RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;reductOp, const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CharToValueTypeReductionOp&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1CharToValueTypeReductionOp_3_01Ordinal_00_01T_00_01typename_01DefaultSerializer_ffb7f4c5f31d4ce48bd80cd8cc8efd73.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>CharToValueTypeReductionOpImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</base>
    <member kind="typedef">
      <type>DefaultSerializer&lt; Ordinal, T &gt;</type>
      <name>DS</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp_3_01Ordinal_00_01T_00_01typename_01DefaultSerializer_ffb7f4c5f31d4ce48bd80cd8cc8efd73.html</anchorfile>
      <anchor>ae854c7b9fdab3d7c77a4772951427ba6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DS::DefaultSerializerType</type>
      <name>Serializer</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp_3_01Ordinal_00_01T_00_01typename_01DefaultSerializer_ffb7f4c5f31d4ce48bd80cd8cc8efd73.html</anchorfile>
      <anchor>a2df74960dfb516250807eb7ce68fbbf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>CharToValueTypeReductionOpImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp_3_01Ordinal_00_01T_00_01typename_01DefaultSerializer_ffb7f4c5f31d4ce48bd80cd8cc8efd73.html</anchorfile>
      <anchor>a88d06647410bececf01290d11695ed5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CharToValueTypeReductionOp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOp_3_01Ordinal_00_01T_00_01typename_01DefaultSerializer_ffb7f4c5f31d4ce48bd80cd8cc8efd73.html</anchorfile>
      <anchor>ae54d4ea836bb22b27109d08b13d98708</anchor>
      <arglist>(const RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;reductOp, const RCP&lt; const Serializer &gt; &amp;serializer=DS::getDefaultSerializerRCP())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CharToValueTypeReductionOpImp</name>
    <filename>classTeuchos_1_1CharToValueTypeReductionOpImp.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, char &gt;</base>
    <member kind="function">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a15108559fccb5bc94bff47e53f4b5f56</anchor>
      <arglist>(const RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;reductOp, const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a1adc3878133060cd8d29406d575f622c</anchor>
      <arglist>(const Ordinal charCount, const char charInBuffer[], char charInoutBuffer[]) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a1059931ef80943e13b01f99eb2e6f6b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a63956430c86cabd10b7416b67fa9656c</anchor>
      <arglist>(const CharToValueTypeReductionOpImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CharToValueTypeReductionOpImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a02dcfd92de38e37b13982b8782e1ac13</anchor>
      <arglist>(const CharToValueTypeReductionOpImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>reductOp_</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a8fdbfdac053b8e63b45c36a9e3eb694c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a5fa61654e7b781acbff76986efe14e73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CharToValueTypeReductionOpImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1CharToValueTypeReductionOpImp.html</filename>
    <base>ValueTypeReductionOp&lt; Ordinal, char &gt;</base>
    <member kind="function">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a15108559fccb5bc94bff47e53f4b5f56</anchor>
      <arglist>(const RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;reductOp, const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a1adc3878133060cd8d29406d575f622c</anchor>
      <arglist>(const Ordinal charCount, const char charInBuffer[], char charInoutBuffer[]) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a1059931ef80943e13b01f99eb2e6f6b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>CharToValueTypeReductionOpImp</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a63956430c86cabd10b7416b67fa9656c</anchor>
      <arglist>(const CharToValueTypeReductionOpImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>CharToValueTypeReductionOpImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a02dcfd92de38e37b13982b8782e1ac13</anchor>
      <arglist>(const CharToValueTypeReductionOpImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>reductOp_</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a8fdbfdac053b8e63b45c36a9e3eb694c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1CharToValueTypeReductionOpImp.html</anchorfile>
      <anchor>a5fa61654e7b781acbff76986efe14e73</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::Checker</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Checker</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>abb3ada249d4af0bafddffd7c718e36d0</anchor>
      <arglist>(const bool echo, const bool tolerant, const bool debug)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Checker</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>ab7f6e50b1b630aa917798ad45460e8e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Checker</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>ad01314428577c715a90c0d069b4b837f</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>abccc2c7d6a9a5d68dbde03050c8371b8</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>a47a365dd699055b8fc9b50ee494a84cf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFile</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>ade670021b85c005d50745fb3359216fe</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>ae4a09a935e40e0ec6b87ef81cb66e074</anchor>
      <arglist>(const Teuchos::Comm&lt; int &gt; &amp;comm, const RCP&lt; std::istream &gt; &amp;in)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCP&lt; const Teuchos::MatrixMarket::Banner &gt;</type>
      <name>readBanner</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>aaaf5dd165624fe474277ba4109540cd2</anchor>
      <arglist>(std::istream &amp;in, size_t &amp;lineNumber)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::pair&lt; bool, std::string &gt;</type>
      <name>readOnRank0</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>a755da3a594ce1c2429c1bb178b2006a5</anchor>
      <arglist>(std::istream &amp;in)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reportBadness</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>a201f6a3d4d66fd5c44dc727d9c49fa3d</anchor>
      <arglist>(std::ostream &amp;out, const std::pair&lt; bool, std::vector&lt; size_t &gt; &gt; &amp;results)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>echo_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>a83b365ea8c50a2e6ec9634fd25bc092d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>tolerant_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>abcd30bf7c4604282afc1771ad314f5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>debug_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Checker.html</anchorfile>
      <anchor>afc836697fe0bca5e8aa4347023739d15</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Comm</name>
    <filename>classTeuchos_1_1Comm.html</filename>
    <templarg>Ordinal</templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ade4f8c3fa6c01f63aad31ddf52b8fe8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EReductionType</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ad9a5e78d71b65b2aa06b6e67747cb88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>rank</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a36d542c77eb416a5295f0268e6b28411</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a346c8703a1ee3cb18cf3c812678cb01c</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>barrier</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a5f039fe68b1cd2b28aa1468702d743db</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a5503a492ac3566e36609a93f5dc3b7c4</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int rootRank, const Ordinal count, Packet buffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ac3a51fdc92036a2139f8ff29bbe6bc88</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int rootRank, const ArrayView&lt; Packet &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a44f5fef19b3f3ecb6188a177c54d7e22</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int rootRank, Packet *object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>acc15a349eb18da9698ee6f1ab6eb913a</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int rootRank, const Ptr&lt; Packet &gt; &amp;object)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a6a7056d1dde2ca080d60dda70e736d1f</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const int rootRank, const Ordinal count, Packet *const buffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aaeea198ebca22e4d625f8ea300573f4a</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const int rootRank, const ArrayView&lt; const Ptr&lt; Packet &gt; &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a9e5c1f178b4d0f958d862a055e644f86</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const int rootRank, const Ordinal count, Packet buffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a67da549974781da16262350e3c1ad14d</anchor>
      <arglist>(const Packet sendBuf[], const Ordinal sendCount, Packet recvBuf[], const Ordinal recvCount, const int root, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a1ba42d95b6dd3e90a95dce7d4b5fd101</anchor>
      <arglist>(const Packet sendBuf[], const Ordinal sendCount, Packet recvBuf[], const Ordinal recvCounts[], const Ordinal displs[], const int root, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a44a93d43c83d66ed833d3c3ebe5e3504</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Ordinal sendCount, const Packet sendBuffer[], const Ordinal recvCount, Packet recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a8226e78aff24075a39289c5b0c92fc2f</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const Ordinal sendCount, const Packet *const sendBuffer[], const Ordinal recvCount, Packet *const recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a33a451d64334766596c94ace517f9e58</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const Ordinal sendCount, const Packet sendBuffer[], const Ordinal recvCount, Packet recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a7e03dc826d3b6271990f105e97f6d4f7</anchor>
      <arglist>(const Packet sendBuf[], const Ordinal sendCount, Packet recvBuf[], const Ordinal recvCount, const Ordinal root, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a411b386f1d7b27cf8d3295ec8e2d0805</anchor>
      <arglist>(const Packet sendBuf[], Packet recvBuf[], const Ordinal count, const EReductionType reductType, const Ordinal root, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a18fe0c90972473e9aa0d2d4c9c4e5575</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ValueTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet sendBuffer[], Packet globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a661ed481a1181c2fe8c53b64b55a1948</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Ordinal count, const Packet sendBuffer[], Packet globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a4d1ceba50e688c0760fe51c507d773d8</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, const Ptr&lt; Packet &gt; &amp;globalReduct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aa16c6f4b501ba28581a92847ecb6bfcb</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const ReferenceTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet *const sendBuffer[], Packet *const globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a328172d0b863ad944392a9e49d5f440a</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const ValueTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet sendBuffer[], Packet globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a41edfbd573e51f341f330c3fc013494c</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const EReductionType reductType, const Ordinal count, const Packet sendBuffer[], Packet globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a0bf53a7babb74a7826dbe358b3f617d1</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ValueTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet sendBuffer[], Packet scanReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a9a1769761b05d2563ae330e0c8f89951</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Ordinal count, const Packet sendBuffer[], Packet scanReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a264d603f3c93d85f69cced00b8c6e396</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, const Ptr&lt; Packet &gt; &amp;scanReduct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aeae9c5d7436ad437353bdc8f1d1c4117</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const ReferenceTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet *const sendBuffer[], Packet *const scanReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>abf5b2d6d2fa378f7bdb15fd24340ee17</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const ValueTypeReductionOp&lt; Ordinal, Packet &gt; &amp;reductOp, const Ordinal count, const Packet sendBuffer[], Packet scanReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a0b5ed722a018d4d488e17614e1066516</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const EReductionType reductType, const Ordinal count, const Packet sendBuffer[], Packet scanReducts[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a4b4a833972f7b5ca681f0993f9ed7222</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Ordinal count, const Packet sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a5c2de3d98965571cb584bcd9fb13111b</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Ordinal count, const Packet sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>af5428a4e48d121ffb32efa931e37cea6</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Packet &amp;send, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a06ea08541ff5e7e8b3170b6f604f284b</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Packet &amp;send, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ada6e96a950d83442e9aeeeb63d2da6fa</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const Ordinal count, const Packet *const sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a64475263ff310873ec683c2bc3bfa086</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const Ordinal count, const Packet sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ae6bbf3e84719631527b4a98bc3437de0</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int sourceRank, const Ordinal count, Packet recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a1a91bbe3011097f3a5f4ca884915c665</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const int sourceRank, Packet *recv)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a2e27e36d4d1debd7a132dea044350bdd</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer&lt; Ordinal, Packet &gt; &amp;serializer, const int sourceRank, const Ordinal count, Packet *const recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a43879c3af729a38017f7d86b10c7faee</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const int sourceRank, const Ordinal count, Packet recvBuffer[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a6fb506e983c4124401bbac189f63d837</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ArrayView&lt; const Packet &gt; &amp;sendBuffer, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aec0a56f86b2764666e6719223d2f3db5</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Packet &amp;send, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a2fc2955841761a8dfaf2a85979ec3c83</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const ArrayView&lt; const Packet &gt; &amp;sendBuffer, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ab259347257aa1cddf3544d884c919971</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ArrayRCP&lt; const Packet &gt; &amp;sendBuffer, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a9ff703cd8979e9136139d1a9924a3e68</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const RCP&lt; const Packet &gt; &amp;send, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a988db03227ac98a04fb2cdd7516a88ca</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const ArrayRCP&lt; const Packet &gt; &amp;sendBuffer, const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a080a025c8a7c884ee9dafa0ffb07ab5c</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ArrayRCP&lt; Packet &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a864e20ed4aabbb9b7e372cd3c75d1fde</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const RCP&lt; Packet &gt; &amp;recv, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>abbcc99cee524da151f5706f14a99af55</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Serializer &amp;serializer, const ArrayRCP&lt; Packet &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a1689c1ddbb6c7ee0437e1c658e6e8a27</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a58127ff6cac4496a35ce11f9a47f8a9e</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests, const ArrayView&lt; RCP&lt; CommStatus&lt; Ordinal &gt; &gt; &gt; &amp;statuses)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommStatus&lt; Ordinal &gt; &gt;</type>
      <name>wait</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a6f2aef379ba1631cba28df10226dbc87</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const Ptr&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;request)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Comm</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a2c7354c9720fae3a7a34e81c22b5fe92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getRank</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a9acfc1c262ab0d10722289c22fc4bf4e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSize</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ab49b0682ac9704318b9d33ddcdc03e14</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>barrier</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ae056d1408aafe914ee809514a22a54bd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a7a09028ef8d00ef51077e1ae7a01e86b</anchor>
      <arglist>(const int rootRank, const Ordinal bytes, char buffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>gather</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a15492687224c73fa2a446b287be1c227</anchor>
      <arglist>(const Ordinal sendBytes, const char sendBuffer[], const Ordinal recvBytes, char recvBuffer[], const int root) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a08d6efecb2775d267c4ca8e7d9790b11</anchor>
      <arglist>(const Ordinal sendBytes, const char sendBuffer[], const Ordinal recvBytes, char recvBuffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>afe058f94f4f7a13a7acfa3093a33bd65</anchor>
      <arglist>(const ValueTypeReductionOp&lt; Ordinal, char &gt; &amp;reductOp, const Ordinal bytes, const char sendBuffer[], char globalReducts[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a77a0934974808f3f02846e40eb9c84d0</anchor>
      <arglist>(const ValueTypeReductionOp&lt; Ordinal, char &gt; &amp;reductOp, const Ordinal bytes, const char sendBuffer[], char scanReducts[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a07dd879828e578efdf5be342fdba3fba</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a5f401afdcc100963807e52fb139b76d5</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ab4dd11a172b4e47198221f4dccbffdcd</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a357f8a8462620b80b069cb3ca83ef74a</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aef90c13aae31521ffa447d10a0e6945b</anchor>
      <arglist>(const int sourceRank, const Ordinal bytes, char recvBuffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a3be006d6f2fce3dbce773fbfcf437415</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aa936e1ad35f0853e0de1dd810ebd35aa</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>adaa9e40590f8f6bc981f5ad53c31c86d</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>af357bb44ed13a6d01d3d7821b50f9d6a</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a0115aef5dfb6f6d7119d7008b9bcbdd1</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;recvBuffer, const int sourceRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>afff194ba94467ae7ccda5f67aea69869</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;recvBuffer, const int sourceRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a467fb10ca027d8e0b4ab8c3351f4cbbc</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a8987ec79040ad1e294eecc6aefa03c7d</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests, const ArrayView&lt; RCP&lt; CommStatus&lt; Ordinal &gt; &gt; &gt; &amp;statuses) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommStatus&lt; Ordinal &gt; &gt;</type>
      <name>wait</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a479c1f2b18ddedf03859b7fa645042fd</anchor>
      <arglist>(const Ptr&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;request) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>duplicate</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a79fa14a8e81efc99fcdcdad119f58505</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>split</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a8cae1338caa7a512ef9a04530b2e8350</anchor>
      <arglist>(const int color, const int key) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>createSubcommunicator</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aa30b1babf3b30c43233eeb9819d3905f</anchor>
      <arglist>(const ArrayView&lt; const int &gt; &amp;ranks) const  =0</arglist>
    </member>
    <docanchor file="classTeuchos_1_1Comm" title="What is Comm?">Teuchos_Comm_What</docanchor>
    <docanchor file="classTeuchos_1_1Comm" title="Treat &lt;tt&gt;RCP&lt;const Comm&lt;int&gt; &gt;&lt;/tt&gt; like an opaque handle">Teuchos_Comm_Handle</docanchor>
    <docanchor file="classTeuchos_1_1Comm" title="How do I make a Comm?">Teuchos_Comm_How</docanchor>
    <docanchor file="classTeuchos_1_1Comm" title="How do I use Comm?">Teuchos_Comm_Use</docanchor>
    <docanchor file="classTeuchos_1_1Comm" title="Former documentation">Teuchos_Comm_Former</docanchor>
  </compound>
  <compound kind="class">
    <name>Comm&lt; OrdinalType &gt;</name>
    <filename>classTeuchos_1_1Comm.html</filename>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ade4f8c3fa6c01f63aad31ddf52b8fe8a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EReductionType</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ad9a5e78d71b65b2aa06b6e67747cb88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Comm</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a2c7354c9720fae3a7a34e81c22b5fe92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getRank</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a9acfc1c262ab0d10722289c22fc4bf4e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>getSize</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ab49b0682ac9704318b9d33ddcdc03e14</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>barrier</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ae056d1408aafe914ee809514a22a54bd</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a7a09028ef8d00ef51077e1ae7a01e86b</anchor>
      <arglist>(const int rootRank, const OrdinalType bytes, char buffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>gather</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a15492687224c73fa2a446b287be1c227</anchor>
      <arglist>(const OrdinalType sendBytes, const char sendBuffer[], const OrdinalType recvBytes, char recvBuffer[], const int root) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a08d6efecb2775d267c4ca8e7d9790b11</anchor>
      <arglist>(const OrdinalType sendBytes, const char sendBuffer[], const OrdinalType recvBytes, char recvBuffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>afe058f94f4f7a13a7acfa3093a33bd65</anchor>
      <arglist>(const ValueTypeReductionOp&lt; OrdinalType, char &gt; &amp;reductOp, const OrdinalType bytes, const char sendBuffer[], char globalReducts[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a77a0934974808f3f02846e40eb9c84d0</anchor>
      <arglist>(const ValueTypeReductionOp&lt; OrdinalType, char &gt; &amp;reductOp, const OrdinalType bytes, const char sendBuffer[], char scanReducts[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a07dd879828e578efdf5be342fdba3fba</anchor>
      <arglist>(const OrdinalType bytes, const char sendBuffer[], const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a5f401afdcc100963807e52fb139b76d5</anchor>
      <arglist>(const OrdinalType bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ab4dd11a172b4e47198221f4dccbffdcd</anchor>
      <arglist>(const OrdinalType bytes, const char sendBuffer[], const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a357f8a8462620b80b069cb3ca83ef74a</anchor>
      <arglist>(const OrdinalType bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aef90c13aae31521ffa447d10a0e6945b</anchor>
      <arglist>(const int sourceRank, const OrdinalType bytes, char recvBuffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a3be006d6f2fce3dbce773fbfcf437415</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aa936e1ad35f0853e0de1dd810ebd35aa</anchor>
      <arglist>(const OrdinalType bytes, const char sendBuffer[], const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; OrdinalType &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>adaa9e40590f8f6bc981f5ad53c31c86d</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; OrdinalType &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>af357bb44ed13a6d01d3d7821b50f9d6a</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; OrdinalType &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a0115aef5dfb6f6d7119d7008b9bcbdd1</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;recvBuffer, const int sourceRank) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommRequest&lt; OrdinalType &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>afff194ba94467ae7ccda5f67aea69869</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;recvBuffer, const int sourceRank, const int tag) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a467fb10ca027d8e0b4ab8c3351f4cbbc</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; OrdinalType &gt; &gt; &gt; &amp;requests) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a8987ec79040ad1e294eecc6aefa03c7d</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; OrdinalType &gt; &gt; &gt; &amp;requests, const ArrayView&lt; RCP&lt; CommStatus&lt; OrdinalType &gt; &gt; &gt; &amp;statuses) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommStatus&lt; OrdinalType &gt; &gt;</type>
      <name>wait</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a479c1f2b18ddedf03859b7fa645042fd</anchor>
      <arglist>(const Ptr&lt; RCP&lt; CommRequest&lt; OrdinalType &gt; &gt; &gt; &amp;request) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>duplicate</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a79fa14a8e81efc99fcdcdad119f58505</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>split</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>a8cae1338caa7a512ef9a04530b2e8350</anchor>
      <arglist>(const int color, const int key) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Comm &gt;</type>
      <name>createSubcommunicator</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>aa30b1babf3b30c43233eeb9819d3905f</anchor>
      <arglist>(const ArrayView&lt; const int &gt; &amp;ranks) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommandLineProcessor</name>
    <filename>classTeuchos_1_1CommandLineProcessor.html</filename>
    <class kind="struct">Teuchos::CommandLineProcessor::enum_opt_data_t</class>
    <class kind="class">Teuchos::CommandLineProcessor::HelpPrinted</class>
    <class kind="struct">Teuchos::CommandLineProcessor::opt_doc_t</class>
    <class kind="struct">Teuchos::CommandLineProcessor::opt_val_val_t</class>
    <class kind="class">Teuchos::CommandLineProcessor::ParseError</class>
    <class kind="class">Teuchos::CommandLineProcessor::TimeMonitorSurrogate</class>
    <class kind="class">Teuchos::CommandLineProcessor::UnrecognizedOption</class>
    <member kind="enumeration">
      <type></type>
      <name>EOptType</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_NONE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa132dabbc4423cb8670c38a1fc5166be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_BOOL_TRUE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aaa91ca29a603c3f1a5e2c448054e3a092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_BOOL_FALSE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aafc54d19bf9be219a1993cffaa904a278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa2a7fc00f814621afe4969a2817401388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_LONG_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aab319f153e6981a00fc3706298b3e2db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_SIZE_T</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa44522d3c6ee6cbb32465ba61bdacb3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_DOUBLE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa35ad928e7ed395ccb0b32bdb99f75dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_STRING</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa7e429583863439ee131f774d40ba2e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_ENUM_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa903b7669cef361d77fc8c984f77cbd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_SUCCESSFUL</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da1d2a96e05cd16fdc71bcebd5865bd8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_HELP_PRINTED</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da7de862ffbb7ecaf68bc2aad70ee34770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_UNRECOGNIZED_OPTION</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da879e4d64b6b50bb0bb6c42cb70e7b3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_ERROR</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381daafe1d6c79043f031db8d9165b8acac29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_NONE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa132dabbc4423cb8670c38a1fc5166be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_BOOL_TRUE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aaa91ca29a603c3f1a5e2c448054e3a092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_BOOL_FALSE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aafc54d19bf9be219a1993cffaa904a278</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa2a7fc00f814621afe4969a2817401388</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_LONG_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aab319f153e6981a00fc3706298b3e2db0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_SIZE_T</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa44522d3c6ee6cbb32465ba61bdacb3eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_DOUBLE</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa35ad928e7ed395ccb0b32bdb99f75dcd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_STRING</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa7e429583863439ee131f774d40ba2e1c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>OPT_ENUM_INT</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a5157c819881f3b391df75440a4ec3d6aa903b7669cef361d77fc8c984f77cbd65</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTimeMonitorSurrogate</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>acbb9462475ce512669f31f5229de8a72</anchor>
      <arglist>(const RCP&lt; TimeMonitorSurrogate &gt; &amp;timeMonitorSurrogate)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; TimeMonitorSurrogate &gt;</type>
      <name>getTimeMonitorSurrogate</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>abd0c328ddfbaa473496e22286458eeba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; std::string, opt_val_val_t &gt;</type>
      <name>options_list_t</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>add8c61beba1afae75af36b905e60580a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::vector&lt; opt_doc_t &gt;</type>
      <name>options_documentation_list_t</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ab0160328b5766b588fb4db116d6623d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::vector&lt; enum_opt_data_t &gt;</type>
      <name>enum_opt_data_list_t</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ac6c5ea9cd8130aeb42f3e9f79a9857a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>add_extra_output_setup_options</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ac3f627ce5f999cada46ea85cc4737eb3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setEnumOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a546a665573a3d496139993968f423876</anchor>
      <arglist>(const char enum_option_name[], int *enum_option_val, const int num_enum_opt_values, const int enum_opt_values[], const char *enum_opt_names[], const char documentation[], const bool required)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>set_enum_value</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aadbfe4f9e0f6cf1bc5d60c4c798929de</anchor>
      <arglist>(int argv_i, char *argv[], const std::string &amp;enum_opt_name, const int enum_id, const std::string &amp;enum_str_val, std::ostream *errout) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print_enum_opt_names</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a1a083185a291f608d0e8e9902180586e</anchor>
      <arglist>(const int enum_id, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>enum_opt_default_val_name</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a8ae8ad191de979df1d9d33923469afa6</anchor>
      <arglist>(const std::string &amp;enum_name, const int enum_id, std::ostream *errout) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>find_enum_opt_index</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a1f779eb494f55b8be81f8229f2cd7bbe</anchor>
      <arglist>(const std::string &amp;enum_opt_name, const int opt_value, const enum_opt_data_t &amp;enum_data, std::ostream *errout) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>bool</type>
      <name>get_opt_val</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>adf9331626932fdfd821b8e8dfa75ad16</anchor>
      <arglist>(const char str[], std::string *opt_name, std::string *opt_val_str) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>opt_type_str</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a7f963ae01f58874b6c50179da046a91f</anchor>
      <arglist>(EOptType) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>print_bad_opt</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a0b8c38379358468e3134642a2aeae291</anchor>
      <arglist>(int argv_i, char *argv[], std::ostream *errout) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static RCP&lt; TimeMonitorSurrogate &gt; &amp;</type>
      <name>getRawTimeMonitorSurrogate</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a86cc2f6ceed43073fdafd4f8ffd1908e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>throwExceptions_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a3a69eb6cd9f5bc652580bddac8c11982</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>recogniseAllOptions_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a0532f4eb2a4c0cbf2982c0021c97c82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>addOutputSetupOptions_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ad450110f9fd1dbd96e39e30636cad534</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>doc_string_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a588fd857a0d458afaaed59cac72e2c61</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>options_list_t</type>
      <name>options_list_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aebfbbd47c8b3b219a4e424d5f8f2ddb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>options_documentation_list_t</type>
      <name>options_documentation_list_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a73cee092ece797bc82cc49c6a0b20da1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>enum_opt_data_list_t</type>
      <name>enum_opt_data_list_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a73be9c6b50f37f52f28bc430552787f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>output_all_front_matter_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6a0efe9e551c3d7f9894d950d7b8ae9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>output_show_line_prefix_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>adeb0be0dd875b6e4cf3d2d06e1dbaf30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>output_show_tab_count_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a2bab881b0ada2aa7d8d12968c255b760</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>output_show_proc_rank_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a1152278721e5d988b6ca094d9e4552c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>output_to_root_rank_only_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a7dce525aeb1e233af855b5994bb9d16b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>print_rcpnode_statistics_on_exit_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ae6c06d82a87a693db5243a53b8b93ba4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>show_timer_summary_on_exit_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a39298107ab01cf29c92c19233927e10b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>printed_timer_summary_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>adef0f789c901a5d9d7380d8d1b8592df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>added_extra_output_setup_options_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ac3dae7cbde0788f0c3d3d1e47bea723e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>in_add_extra_output_setup_options_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>af38ed606ec8f23cf871167fd115415da</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>output_all_front_matter_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a2540ff83392b5d333c283d510b778919</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>output_show_line_prefix_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a93f3b952f5aababea6bb878f81cf885d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>output_show_tab_count_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aaeb9638650b70078712a4aa1bcedec85</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>output_show_proc_rank_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ac996f3d0ec31e3ad709a957176b0ef99</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>output_to_root_rank_only_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aa8ad8dc0d32145c1e592111ead4e16d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>print_rcpnode_statistics_on_exit_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ab71fc31dd2a0e0142dbe052e21e8b6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const bool</type>
      <name>show_timer_summary_on_exit_default_</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a336f7259b62a7eaa8ab91ceb84da004e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setVerbosityLevelOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a564c7b6356fef077671bdcd69c2fb254</anchor>
      <arglist>(const std::string &amp;optionName, EVerbosityLevel *verbLevel, const std::string &amp;docString, CommandLineProcessor *clp, const bool required=false)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EParseCommandLineReturn</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_SUCCESSFUL</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da1d2a96e05cd16fdc71bcebd5865bd8a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_HELP_PRINTED</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da7de862ffbb7ecaf68bc2aad70ee34770</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_UNRECOGNIZED_OPTION</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381da879e4d64b6b50bb0bb6c42cb70e7b3ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PARSE_ERROR</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6cc552d91952f7e4262eb60bd9ba381daafe1d6c79043f031db8d9165b8acac29</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CommandLineProcessor</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aecfe75657c1f8adccf42c5948d9df266</anchor>
      <arglist>(bool throwExceptions=true, bool recogniseAllOptions=true, bool addOutputSetupOptions=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~CommandLineProcessor</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ad5d82790e84a36bdbdbd2be8bfdd63d2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>throwExceptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a4e9be49bee2232f7f458cecf4aafbefa</anchor>
      <arglist>(const bool &amp;throwExceptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>throwExceptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ad46d5eca371020397b020815b74ea8b4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>recogniseAllOptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a83d412b3c4e7d03f18732bd1e833fe67</anchor>
      <arglist>(const bool &amp;recogniseAllOptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>recogniseAllOptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a130c65ad9c16a2d0e0afec14486f4f2a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addOutputSetupOptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a44fdfd9252f293105e427d71cb586918</anchor>
      <arglist>(const bool &amp;addOutputSetupOptions)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>addOutputSetupOptions</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a24fd06911fd7b54c450dba84b466d9b0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDocString</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ad2a0fadf94b406c46809e210041eb00d</anchor>
      <arglist>(const char doc_string[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a6549f7ba938bc3d21a3b9a571c7efd68</anchor>
      <arglist>(const char option_true[], const char option_false[], bool *option_val, const char documentation[]=NULL)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ad939176cefb209bf6de4b72d7b704e1e</anchor>
      <arglist>(const char option_name[], int *option_val, const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a0873fd11daca26b9fb49f3090a2235e2</anchor>
      <arglist>(const char option_name[], long int *option_val, const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ab59f4fb7600b8174dc90db9ba4cc165b</anchor>
      <arglist>(const char option_name[], size_t *option_val, const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>afc39dd058fd50ba6681d07a9b5f9ec73</anchor>
      <arglist>(const char option_name[], double *option_val, const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a0f7b3054f0ac6ce780aaf22f6529a2c4</anchor>
      <arglist>(const char option_name[], std::string *option_val, const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>a3befb282d2bacf60610726824139f369</anchor>
      <arglist>(const char enum_option_name[], EType *enum_option_val, const int num_enum_opt_values, const EType enum_opt_values[], const char *enum_opt_names[], const char documentation[]=NULL, const bool required=false)</arglist>
    </member>
    <member kind="function">
      <type>EParseCommandLineReturn</type>
      <name>parse</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ae4ad9984b2d1b49bc8acd4b619e9c75d</anchor>
      <arglist>(int argc, char *argv[], std::ostream *errout=&amp;std::cerr) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printHelpMessage</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>aa789f8eb11fddee8b7dacfeb1d591b1b</anchor>
      <arglist>(const char program_name[], std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printFinalTimerSummary</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor.html</anchorfile>
      <anchor>ac827fd215541ab40ef5603d39203feaa</anchor>
      <arglist>(const Ptr&lt; std::ostream &gt; &amp;out=null)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommRequest</name>
    <filename>classTeuchos_1_1CommRequest.html</filename>
    <templarg></templarg>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommRequest</name>
      <anchorfile>classTeuchos_1_1CommRequest.html</anchorfile>
      <anchor>a930ef0f46205f4f05852fa02cc1333ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; CommStatus&lt; OrdinalType &gt; &gt;</type>
      <name>wait</name>
      <anchorfile>classTeuchos_1_1CommRequest.html</anchorfile>
      <anchor>ae9f5fec088424b86471eeaa79075aef6</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommStatus</name>
    <filename>classTeuchos_1_1CommStatus.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CommStatus</name>
      <anchorfile>classTeuchos_1_1CommStatus.html</anchorfile>
      <anchor>a7e8065ca4c55b34d05e5f3a7e45ae07f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual OrdinalType</type>
      <name>getSourceRank</name>
      <anchorfile>classTeuchos_1_1CommStatus.html</anchorfile>
      <anchor>a7c1f756d30275b6b64d1fa6bddb5494d</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual OrdinalType</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1CommStatus.html</anchorfile>
      <anchor>aacf285713398eefdb1fb52123442f56a</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CompileTimeAssert</name>
    <filename>classTeuchos_1_1CompileTimeAssert.html</filename>
    <templarg>Test</templarg>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>compile_time_assert_failed</name>
      <anchorfile>classTeuchos_1_1CompileTimeAssert.html</anchorfile>
      <anchor>a558ba29ed188e1eabed2dd19ef7597cf</anchor>
      <arglist>[Test-1000]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CompileTimeAssert&lt; 0 &gt;</name>
    <filename>classTeuchos_1_1CompileTimeAssert_3_010_01_4.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::CompObject</name>
    <filename>classTeuchos_1_1CompObject.html</filename>
    <member kind="variable" protection="protected">
      <type>Flops *</type>
      <name>flopCounter_</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a8a2691c589712645d422e6ca05c60ee1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompObject</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a57d8506d20649b0da1cdf0a30e450230</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CompObject</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>addc0d308d8ba4f8467ab6a29a98a9cab</anchor>
      <arglist>(const CompObject &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CompObject</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a59bd413d463574b6e5df099b064b365e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlopCounter</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a13c0a80dc8b34f0d6e0063156c723e09</anchor>
      <arglist>(const Flops &amp;FlopCounter)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFlopCounter</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>ad759a48b54cfaf13a313e345317b0a3f</anchor>
      <arglist>(const CompObject &amp;compObject)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unsetFlopCounter</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a5e2a489e3632e0ae33222a5a595f598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Flops *</type>
      <name>getFlopCounter</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a1c053632aa1e2740c1283c5d224f192c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a5e5e6dbcee0f7efdb35eee2b95cbdc5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a02de9c74f72ed67c7d356b277fd022d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>affa608bf8efbe603b1c6d226d33ebf3c</anchor>
      <arglist>(int addflops) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>add65f83124899a00b86f5628b79d25b4</anchor>
      <arglist>(long int addflops) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>ac5093476060ee2cfa9830ce0640f4192</anchor>
      <arglist>(double addflops) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1CompObject.html</anchorfile>
      <anchor>a402a0e3ffc083b05196397516f197736</anchor>
      <arglist>(float addflops) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CompoundEntryWithParentheses</name>
    <filename>classTeuchos_1_1CompoundEntryWithParentheses.html</filename>
    <base>Teuchos::TableEntry</base>
    <member kind="function">
      <type></type>
      <name>CompoundEntryWithParentheses</name>
      <anchorfile>classTeuchos_1_1CompoundEntryWithParentheses.html</anchorfile>
      <anchor>a5a8cc535628624afb472dbd0b4c4d3bb</anchor>
      <arglist>(const RCP&lt; TableEntry &gt; &amp;first, const RCP&lt; TableEntry &gt; &amp;second, bool spaceBeforeParens=true)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1CompoundEntryWithParentheses.html</anchorfile>
      <anchor>a602b94eb9c9994d34b28eeca9f4a9c27</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TableEntry &gt;</type>
      <name>first_</name>
      <anchorfile>classTeuchos_1_1CompoundEntryWithParentheses.html</anchorfile>
      <anchor>a3a7b7d09cfc48d7487bf10d31c6d8548</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; TableEntry &gt;</type>
      <name>second_</name>
      <anchorfile>classTeuchos_1_1CompoundEntryWithParentheses.html</anchorfile>
      <anchor>a42e74f66f9f3bb5f609a407c2b0e9879</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>spaceBeforeParens_</name>
      <anchorfile>classTeuchos_1_1CompoundEntryWithParentheses.html</anchorfile>
      <anchor>a45a81304c14be1185a3d92b7767485b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Condition</name>
    <filename>classTeuchos_1_1Condition.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; Condition &gt; &gt;</type>
      <name>ConditionList</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>ab76eda620189322d120517440e9eed2b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::Array&lt; Teuchos::RCP&lt; const Condition &gt; &gt;</type>
      <name>ConstConditionList</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>ad0d6838b4f0b62f963edba1f354bf9c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Condition</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a1fe67234f7e4c670efe15fde3dfe5c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Condition</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a3ec3526cf06484e01acc48f842a8551f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>isConditionTrue</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a16c00fe79ac3891cb2d002270467ac91</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>containsAtLeasteOneParameter</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>aa935f2d4abe6902f63ab83be8a211d3d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Dependency::ConstParameterEntryList</type>
      <name>getAllParameters</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a3865860b618e2562c2abc21868604e2a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a2c73b57dd292f306d6303e120076a8bf</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getXMLTagName</name>
      <anchorfile>classTeuchos_1_1Condition.html</anchorfile>
      <anchor>a7126584ca9aae437ed470caf730528d3</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConditionVisualDependency</name>
    <filename>classTeuchos_1_1ConditionVisualDependency.html</filename>
    <base>Teuchos::VisualDependency</base>
    <member kind="function">
      <type></type>
      <name>ConditionVisualDependency</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>ac67c2039b9837db0405e8be075402e15</anchor>
      <arglist>(RCP&lt; const Condition &gt; condition, RCP&lt; ParameterEntry &gt; dependent, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConditionVisualDependency</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>acdf289cf423dfed6a47efc49c0b3d213</anchor>
      <arglist>(RCP&lt; const Condition &gt; condition, Dependency::ParameterEntryList dependents, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Condition &gt;</type>
      <name>getCondition</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>a5197d26ad537837036e9cec656ace6d9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDependeeState</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>a097905b3acfac75b44b69ead996aeb00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>ac1bc84c7d6205286c3f48906397d481f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>a9baa44d2aecbda1e22e3508b616ce825</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Condition &gt;</type>
      <name>condition_</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependency.html</anchorfile>
      <anchor>aa5d59fece1c2d86373edb07b719080ff</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConditionVisualDependencyXMLConverter</name>
    <filename>classTeuchos_1_1ConditionVisualDependencyXMLConverter.html</filename>
    <base>Teuchos::VisualDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependencyXMLConverter.html</anchorfile>
      <anchor>aae529560a23cc445aaa771368620087d</anchor>
      <arglist>(RCP&lt; const VisualDependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; VisualDependency &gt;</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1ConditionVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a4faa261f3981cb71622f8f3a493d47d5</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, bool showIf, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConditionXMLConverter</name>
    <filename>classTeuchos_1_1ConditionXMLConverter.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type>RCP&lt; Condition &gt;</type>
      <name>fromXMLtoCondition</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverter.html</anchorfile>
      <anchor>a311299807f64131996939396b574d7f3</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Condition &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverter.html</anchorfile>
      <anchor>a82a0e82aa4869408c8264b61ff5f585a</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const  =0</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>fromConditiontoXML</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverter.html</anchorfile>
      <anchor>a183548c9119dc7d0a1893700a5fc7b4e</anchor>
      <arglist>(const RCP&lt; const Condition &gt; condition, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertCondition</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverter.html</anchorfile>
      <anchor>a6f61e0f5f7a186016afed6a59c6e3400</anchor>
      <arglist>(const RCP&lt; const Condition &gt; condition, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverter.html</anchorfile>
      <anchor>a7660108f005de23d7fe0c86dde205768</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConditionXMLConverterDB</name>
    <filename>classTeuchos_1_1ConditionXMLConverterDB.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addConverter</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>ada36130691b9d4484bc364175404e99f</anchor>
      <arglist>(RCP&lt; const Condition &gt; condition, RCP&lt; ConditionXMLConverter &gt; converterToAdd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ConditionXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>a11395335e454488a2a585403f40321c0</anchor>
      <arglist>(const Condition &amp;condition)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ConditionXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>a0414c4a696270bc4449c9b5a0b81f549</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XMLObject</type>
      <name>convertCondition</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>af88494fe14c86b0bb4c048263b01b2ba</anchor>
      <arglist>(RCP&lt; const Condition &gt; condition, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Condition &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>a4838057215733d2aec3f80e96e89f819</anchor>
      <arglist>(const XMLObject &amp;xmlObject, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printKnownConverters</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>aaa517cc4070ad3aad497896070ca412a</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; ConditionXMLConverter &gt; &gt;</type>
      <name>ConverterMap</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>a87ec8606b32dd848c7993b5171b68621</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, RCP&lt; ConditionXMLConverter &gt; &gt;</type>
      <name>ConverterPair</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>a26f7a0540b3ae268912ce22358560ac1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ConverterMap &amp;</type>
      <name>getConverterMap</name>
      <anchorfile>classTeuchos_1_1ConditionXMLConverterDB.html</anchorfile>
      <anchor>acd6b6eab28e7884cd2c1f1fd30208693</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstHandle</name>
    <filename>classTeuchos_1_1ConstHandle.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="function">
      <type></type>
      <name>ConstHandle</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>a8864f6df47901fa54ab9cd25552b1ecd</anchor>
      <arglist>(const RCP&lt; const PointerType &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstHandle</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>a2d5982b8be15f3cdca4a17fb0b1e1fb4</anchor>
      <arglist>(const ConstHandleable&lt; PointerType &gt; *ptr)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const PointerType &gt; &amp;</type>
      <name>constPtr</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>aed0c7893255148d1df972bb6ca7ab853</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const PointerType *const</type>
      <name>rawPtr</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>a638a9339fb02197e7e0b1357ede6dd56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>ConstHandle</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>afd77f3af0016e13ff81901c851c1f68b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setRcp</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>a0e84b3690dcd0d5121ef6dd4781c0d3c</anchor>
      <arglist>(const RCP&lt; PointerType &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RCP&lt; PointerType &gt;</type>
      <name>nonConstPtr</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>aec5198bffc96c7a2dad4f56aa0a7a955</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const PointerType &gt;</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1ConstHandle.html</anchorfile>
      <anchor>a5c2b4ce098eb0798bf4f3c5cdeb61f57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstHandleable</name>
    <filename>classTeuchos_1_1ConstHandleable.html</filename>
    <templarg>Base</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ConstHandleable</name>
      <anchorfile>classTeuchos_1_1ConstHandleable.html</anchorfile>
      <anchor>a6a337d789a1c9d97289690e1ece16c0f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; const Base &gt;</type>
      <name>getConstRcp</name>
      <anchorfile>classTeuchos_1_1ConstHandleable.html</anchorfile>
      <anchor>a4fccf04523a81bd78932c657816ccff3</anchor>
      <arglist>() const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstNonconstObjectContainer</name>
    <filename>classTeuchos_1_1ConstNonconstObjectContainer.html</filename>
    <templarg>ObjType</templarg>
    <member kind="function">
      <type></type>
      <name>ConstNonconstObjectContainer</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>afc5bdb8dfc7331615fee2855834ac5c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNonconstObjectContainer</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a791c6fcd5151dd74482019b3e9d3d023</anchor>
      <arglist>(const RCP&lt; ObjType &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstNonconstObjectContainer</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a878b01fe05719db25d8c135450c81122</anchor>
      <arglist>(const RCP&lt; const ObjType &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>ad03f3bc5cc653725134e93c7db9358a2</anchor>
      <arglist>(const RCP&lt; ObjType &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a89c46d80674bc126bd3e8d8b76dd4e8e</anchor>
      <arglist>(const RCP&lt; const ObjType &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>uninitialize</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a4a79bf7d11c2c8ad54619443b40c1d88</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstNonconstObjectContainer&lt; ObjType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>aa47929892b696cb7fc8f7c158d69e43a</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConst</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a97f69ce1e97b87558fa22233c426aab0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ObjType &gt;</type>
      <name>getNonconstObj</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a4f3a5fe536399c2eedc0819a96e78422</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt;</type>
      <name>getConstObj</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a3cf46e52fec455299cc818460ecec2f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>aef4ec448cf8cf37692f509c53909bf0e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ObjType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a02d42c2f04c188ec960e0c6789fe8497</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ObjType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a76aea9edac5bed805a1ca39019f24519</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator RCP&lt; const ObjType &gt;</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a68005f959119504a88d7d3039fce2eb2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a3183af0087030b0dbe16d4ec8de0a6f4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ObjType &gt;</type>
      <name>constObj_</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a1494ef71736851f1df9a1dc3a04d9ccb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isConst_</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>aad2344e5c872664044dceb1ad1f4c7ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>a71744a3a46ee37be34d8362294ced2e4</anchor>
      <arglist>(const ConstNonconstObjectContainer&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>classTeuchos_1_1ConstNonconstObjectContainer.html</anchorfile>
      <anchor>af70bb822cee43210360e664ba12fa1dd</anchor>
      <arglist>(const ConstNonconstObjectContainer&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstReferenceTypeDeserializationBuffer</name>
    <filename>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ConstReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ad694795731b85fa7c7b883a00ac21c62</anchor>
      <arglist>(const Serializer&lt; Ordinal, T &gt; &amp;serializer, const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a7ffe69668e87c35544c14875c3d0e774</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *const *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ae61697fde51e0262fc38a8d4055ba158</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a3ceda0419f837cc07dbcabcf1024659d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>buffer_ptr_t</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a92b1bbba62c3d7f73ffe6d3ad2f8a1c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; T * &gt;</type>
      <name>buffer_t</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a21f1d2b952680021486fb89f7a3e1743</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ad77d704a8287d4501bcce7512fb51c14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a887d8a6a2e892515cb68307f9f298b43</anchor>
      <arglist>(const ConstReferenceTypeDeserializationBuffer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstReferenceTypeDeserializationBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a3963451c66813a97e9bd8adb405b2620</anchor>
      <arglist>(const ConstReferenceTypeDeserializationBuffer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Serializer&lt; Ordinal, T &gt; &amp;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a3a27383abfffb4c6f7f763dcc8756a5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>aaf862fb6ca350538a63bc3e1defdf419</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a9bb27c0129db417fb469033acbade632</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>buffer_ptr_t</type>
      <name>buffer_ptr_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>adf94f18b6cb3332e579ffcf5f8af9eda</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>buffer_t</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a7df0a11547d2d2e33024a3eb2d328fdf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstReferenceTypeSerializationBuffer</name>
    <filename>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ConstReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a353bae52f0b7422bb96d1e4b539fb809</anchor>
      <arglist>(const Serializer&lt; Ordinal, T &gt; &amp;serializer, const Ordinal count, const T *const buffer[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>aae9844f9da09d74eeb6b794d30146717</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>abcf29c047df7c8a06f7beed1d5160963</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a39b4d810481843dc276fa2863061962c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a669f20d41ffe21a3cf5bc5172b6a39c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>ab70eb932b0ea8ef9ab581b3ad895260f</anchor>
      <arglist>(const ConstReferenceTypeSerializationBuffer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstReferenceTypeSerializationBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a48f50a167f5033315fa9d4c682d2311d</anchor>
      <arglist>(const ConstReferenceTypeSerializationBuffer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Serializer&lt; Ordinal, T &gt; &amp;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a4ca81b27ff2fd181b08e268b16d9d340</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>ab0903747c24563ca853a5b26757dde65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *const *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a8369e5516ba3716b270e68e582ef49a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a813965d13c4008873e684e3b5f7e2145</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; char &gt;</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a5b952bb85ed7d853ad3c4bea8f72c33f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstTypeTraits</name>
    <filename>classTeuchos_1_1ConstTypeTraits.html</filename>
    <templarg>T</templarg>
    <class kind="struct">Teuchos::ConstTypeTraits::UnConst</class>
    <class kind="struct">Teuchos::ConstTypeTraits::UnConst&lt; const U &gt;</class>
    <member kind="typedef">
      <type>UnConst&lt; T &gt;::Result</type>
      <name>NonConstType</name>
      <anchorfile>classTeuchos_1_1ConstTypeTraits.html</anchorfile>
      <anchor>a5dcb31fb2e7798d1bb79b421f4da6a75</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeDeserializationBuffer</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</base>
    <member kind="typedef">
      <type>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer.html</anchorfile>
      <anchor>ada21365b0ff3156bd760defbb6efbb6b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer.html</anchorfile>
      <anchor>a74483174035751acd4bc2d9f7b1bfdaa</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeade453e8dd1a2f8f74616716288ed672.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</base>
    <member kind="typedef">
      <type>DefaultSerializer&lt; Ordinal, T &gt;</type>
      <name>DS</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeade453e8dd1a2f8f74616716288ed672.html</anchorfile>
      <anchor>aa6135db580525a43677d905ba09fd49b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DS::DefaultSerializerType</type>
      <name>Serializer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeade453e8dd1a2f8f74616716288ed672.html</anchorfile>
      <anchor>ab38fb931e84e151825ad2ae49caa1b8a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeade453e8dd1a2f8f74616716288ed672.html</anchorfile>
      <anchor>ae3ad6f57c118373e21d162052675491c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeade453e8dd1a2f8f74616716288ed672.html</anchorfile>
      <anchor>a0e828641377ff9adf7f7c91b3406de42</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer=DS::getDefaultSerializerRCP())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeDeserializationBufferImp</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBufferImp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>direct</templarg>
  </compound>
  <compound kind="class">
    <name>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ace4e094954631c8508214352089f3932</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>abde54a41072f68ef2c611a8982fa4729</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a6cfac0e57b997341e6eb325c34c7afbf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ac456c7756b544440b27992cc77cd91fd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ac55c86bd8974e4b8754dbea9c8526bb5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a67041cb236c63b3f7711cd50f184f270</anchor>
      <arglist>(const ConstValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstValueTypeDeserializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>abb75e7bd4aa7251eb3361ae5ab06ed38</anchor>
      <arglist>(const ConstValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>abd1a50af7b4aab453ed4b98e72b25066</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a64b322002bf1c042cda344c09caa8996</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a2c39d63ff581f24a2e95faf313bd739c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; T &gt;</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a853ab62b306ab36cf4253844c56a9c93</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>acb370bc019c1cbc3143d84e39cb1261f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a83cf028c75dc03446b56caeb53987535</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>acebef4cec600d3b27504008238c23239</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ae5be55115397c0f104c00efa9cdcfa18</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a3cd4bf1607df83e98cbcd4f19349aa60</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ae1b3420c795628e964388c9055f1e8f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a219750a06d67e70c3769163003e5e2ea</anchor>
      <arglist>(const ConstValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstValueTypeDeserializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a090321186663b56c8e618bc326631ff7</anchor>
      <arglist>(const ConstValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ad148fd25d1ac8ff2106c56966559f7a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a6b8dc719460e167d91f10f548bd08e97</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a61d5395b1f20832b806057eb1b620603</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ac2e7dfadfafb169513ff2da964b77d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a14aab63c382cd9846c66c48a65226603</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeSerializationBuffer</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</base>
    <member kind="typedef">
      <type>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer.html</anchorfile>
      <anchor>a2895fcb54a05fa1fb2bc961f782fe598</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer.html</anchorfile>
      <anchor>afc4beabe9e9ff8a91644475390165d3c</anchor>
      <arglist>(const Ordinal count, const T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeric2bced43b6edc4b72db5645812e82053.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</base>
    <member kind="typedef">
      <type>DefaultSerializer&lt; Ordinal, T &gt;</type>
      <name>DS</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeric2bced43b6edc4b72db5645812e82053.html</anchorfile>
      <anchor>a108f74b239543a0431fcce93aa4939f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DS::DefaultSerializerType</type>
      <name>Serializer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeric2bced43b6edc4b72db5645812e82053.html</anchorfile>
      <anchor>add049073d70d11281b23de07d7f7ea46</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeric2bced43b6edc4b72db5645812e82053.html</anchorfile>
      <anchor>acef10b065b598b94413341c54c17ab2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSeric2bced43b6edc4b72db5645812e82053.html</anchorfile>
      <anchor>a2935682323976e92615b9297cd8bcbac</anchor>
      <arglist>(const Ordinal count, const T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer=DS::getDefaultSerializerRCP())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeSerializationBufferImp</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBufferImp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>direct</templarg>
  </compound>
  <compound kind="class">
    <name>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ab6890e6d86dc5f18af5a0a58481d1455</anchor>
      <arglist>(const Ordinal count, const T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>abe1aee54ed718d1e91a960325f639ac9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>aa19b516d6f8e0849a00849a14466537d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>aa6e18ce61dd3d52c6d8007a04f4c5164</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; const char &gt;</type>
      <name>getCharBufferView</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a0b80dc353160728bff76709805908309</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ae3c690670a20d0193ba190c250205ef4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a24c7f8c381ac9594160fa7c1377a88dc</anchor>
      <arglist>(const ConstValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstValueTypeSerializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>af2745f047c15f4addd6fa452ae8ad313</anchor>
      <arglist>(const ConstValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a27780252c5f2085071da816b2a6cbece</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a9119f4a62afc3b8a88f896bc57811b66</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a5a140fd61de94148df10b60979ca2401</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; char &gt;</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ab3632cf2e1728734cbb8aa4abdc4ab0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ac8099047ede57ee6b3a5feb801d2920d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</name>
    <filename>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a209605c50e9872df79c9bf64ffc104c3</anchor>
      <arglist>(const Ordinal count, const T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a781d163a00ed359124c0f8dbfec3f016</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ae667f0261a87e63f316dcd0c8b76862c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a0f5bb46da5cdb1e45b872567e4d14863</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; const char &gt;</type>
      <name>getCharBufferView</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ab94518d64d376cd871e9f7ed70a0cd0f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a686d26aef55d8d711583e677525b36f0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ConstValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>af2bd99321d511de6341a480dea87bbaa</anchor>
      <arglist>(const ConstValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ConstValueTypeSerializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a7e94b039f94a849aef16ac08d3e06def</anchor>
      <arglist>(const ConstValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a9a2b4e4ed294156f96c25b536e6aaa2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>aaf49258d3a2514fb3de2003338b48fef</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>acd2f259cf57e7a5d663aa2e840998650</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a909c4bf2420a878da996f09b426ab706</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ConstValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a17ab8bf337ea45c06cf5259c5d03dc4b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::CoordDataReader</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1CoordDataReader.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>isComplex</templarg>
    <base>Teuchos::MatrixMarket::CoordDataReaderBase</base>
    <member kind="function">
      <type></type>
      <name>CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader.html</anchorfile>
      <anchor>a77ef71072de9359b6e09458cd513dfc3</anchor>
      <arglist>(const Teuchos::RCP&lt; Callback &gt; &amp;adder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader.html</anchorfile>
      <anchor>a12310f0f7f6dd31832ae96d4d4d5c711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader.html</anchorfile>
      <anchor>a34cc8026cfa410f096edf0e24b68d304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>readLine</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader.html</anchorfile>
      <anchor>abc76c8048d56a211b1a672ed85e5a9b2</anchor>
      <arglist>(const std::string &amp;theLine, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::CoordDataReader&lt; Callback, Ordinal, Scalar, false &gt;</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1CoordDataReader_3_01Callback_00_01Ordinal_00_01Scalar_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::MatrixMarket::CoordDataReaderBase</base>
    <member kind="function">
      <type></type>
      <name>CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader_3_01Callback_00_01Ordinal_00_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>a5da66d2874a0e9f7fd0cb2b8de057c68</anchor>
      <arglist>(const Teuchos::RCP&lt; Callback &gt; &amp;adder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader_3_01Callback_00_01Ordinal_00_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>ac13871bf0c987dd94200419ae2a8b4ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoordDataReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader_3_01Callback_00_01Ordinal_00_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>a125918082d33dd738f53dc4d2d3b6724</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>readLine</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReader_3_01Callback_00_01Ordinal_00_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>a46dfa46c2f2b4b967303a71124069b68</anchor>
      <arglist>(const std::string &amp;theLine, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::CoordDataReaderBase</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>CoordDataReaderBase</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>a9cc5e7e7594966f518e34b7960d782c4</anchor>
      <arglist>(const Teuchos::RCP&lt; Callback &gt; &amp;adder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordDataReaderBase</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>a3def757f1c18df56eee97370ac7200d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoordDataReaderBase</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>a3c6865bf8c0057f378c23ee314339f3a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>af81ad5b5b325649dccd9979c1c74330c</anchor>
      <arglist>(const Teuchos::RCP&lt; Callback &gt; &amp;adder)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::pair&lt; bool, std::vector&lt; size_t &gt; &gt;</type>
      <name>read</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>a427d2081480e1338f41dc55f2d748aee</anchor>
      <arglist>(std::istream &amp;in, const size_t startingLineNumber, const bool tolerant, const bool debug=false)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; Teuchos::Tuple&lt; Ordinal, 3 &gt;, bool &gt;</type>
      <name>readDimensions</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>ae1ea379d9ecea83c47f8d1f3ec9de7be</anchor>
      <arglist>(std::istream &amp;in, size_t &amp;lineNumber, const bool tolerant=false)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual bool</type>
      <name>readLine</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>adcff296b0f14c5371e56353604bc102d</anchor>
      <arglist>(const std::string &amp;theLine, const size_t lineNumber, const bool tolerant)=0</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::RCP&lt; Callback &gt;</type>
      <name>adder_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordDataReaderBase.html</anchorfile>
      <anchor>a7010d3f57a9fce78e96e8d927c9ba76e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::CoordPatternReader</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1CoordPatternReader.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::MatrixMarket::CoordDataReaderBase</base>
    <member kind="function">
      <type></type>
      <name>CoordPatternReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordPatternReader.html</anchorfile>
      <anchor>a0afdbf5ddc84b009bd424863f3bd8124</anchor>
      <arglist>(const Teuchos::RCP&lt; Callback &gt; &amp;adder)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CoordPatternReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordPatternReader.html</anchorfile>
      <anchor>a807ee2c695b763ccc2160e53caa69202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~CoordPatternReader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordPatternReader.html</anchorfile>
      <anchor>a2a3ccd47ee8c99c731c23ff77bc333cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>readLine</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1CoordPatternReader.html</anchorfile>
      <anchor>a30496b4557b57488bf3162500c176a56</anchor>
      <arglist>(const std::string &amp;theLine, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>CustomDataType</name>
    <filename>classCustomDataType.html</filename>
    <member kind="function">
      <type></type>
      <name>CustomDataType</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>a75f12c6ab603dddca11cf0cb08374669</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>CustomDataType</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>aef8cc94f9cde1933e43567495a629851</anchor>
      <arglist>(int theInt, std::string theString)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setInt</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>a5f7531c5a88d5630733275befccf2076</anchor>
      <arglist>(int theInt)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setString</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>a71edc69b2da43f6c4e73b3ed4abec320</anchor>
      <arglist>(std::string theString)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getInt</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>a8aeb96169c6e1d119ef33c92693cb9a5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>adab7b8bfb7e7aa34dc4b45c8030d3d20</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>a6a8e97a2637c8d35c9946bc19eba03ac</anchor>
      <arglist>(const CustomDataType &amp;other) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>_theInt</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>aa90409bffbcd2ee8c09965996ceee7a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>_theString</name>
      <anchorfile>classCustomDataType.html</anchorfile>
      <anchor>ace1a001179181880c98e5efaf5b140dc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CWrapperErrorHandling</name>
    <filename>classTeuchos_1_1CWrapperErrorHandling.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPrintErrorOStream</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>gaa7c16d88bde2d095f855891f9f5f792a</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;errorOStream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; FancyOStream &gt;</type>
      <name>getPrintErrorOStream</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga4d50ecbe14b983a2441b9ab34f62b5c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setShowStackTraceOnException</name>
      <anchorfile>classTeuchos_1_1CWrapperErrorHandling.html</anchorfile>
      <anchor>a16a4973a16c055d013c03fa9e1a866da</anchor>
      <arglist>(const bool showStrackTraceOnException)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getShowStackTraceOnException</name>
      <anchorfile>classTeuchos_1_1CWrapperErrorHandling.html</anchorfile>
      <anchor>aca1a8a2d9241d780405e80a1eb43ea37</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>D</name>
    <filename>classD.html</filename>
    <member kind="function">
      <type></type>
      <name>D</name>
      <anchorfile>classD.html</anchorfile>
      <anchor>aaa9c0c32402aef951a8c23b6ac6e8913</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>D_g</name>
      <anchorfile>classD.html</anchorfile>
      <anchor>a09dd9696f5c29c191e76569d4c5f80cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>D_f</name>
      <anchorfile>classD.html</anchorfile>
      <anchor>a194c54b4687cb4d869a1e041c4d73742</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>D_g_</name>
      <anchorfile>classD.html</anchorfile>
      <anchor>a3ce95f3400b843d8815906764af1c998</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>D_f_</name>
      <anchorfile>classD.html</anchorfile>
      <anchor>a145a81081ba9b9803c1b6859705c1f57</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DanglingReferenceError</name>
    <filename>classTeuchos_1_1DanglingReferenceError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DanglingReferenceError</name>
      <anchorfile>classTeuchos_1_1DanglingReferenceError.html</anchorfile>
      <anchor>a45fa97ac4692468f32020d6f757392f7</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocArrayDelete</name>
    <filename>classTeuchos_1_1DeallocArrayDelete.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocArrayDelete.html</anchorfile>
      <anchor>a3345b195a74ba6b7e532acf203400b63</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocArrayDelete.html</anchorfile>
      <anchor>a43d3bda27afbd393bc763f0505ff050e</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocBoostSharedPtr</name>
    <filename>classTeuchos_1_1DeallocBoostSharedPtr.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>a1b362fe7c6f4280ba861648b9a3b6e4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeallocBoostSharedPtr</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>a87714a9c385be3d542459ac007bd3786</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>a2c4ff0f1ec7e1dacbd1589181bf310f4</anchor>
      <arglist>(T *ptr_in) const </arglist>
    </member>
    <member kind="function">
      <type>const boost::shared_ptr&lt; T &gt; &amp;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>ab89571296b940640431e00264f567350</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DeallocBoostSharedPtr</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>aee3f765abc6dea674027785fc165d4c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>sptr_</name>
      <anchorfile>classTeuchos_1_1DeallocBoostSharedPtr.html</anchorfile>
      <anchor>acf7ee640d8dba84207c24d2f71173f59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocDelete</name>
    <filename>classTeuchos_1_1DeallocDelete.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocDelete.html</anchorfile>
      <anchor>a9dd08093a459e49723771381f5d28461</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocDelete.html</anchorfile>
      <anchor>aa4b0787f97b55448e767d77f8f3e2b04</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocFunctorDelete</name>
    <filename>classTeuchos_1_1DeallocFunctorDelete.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>ae11f6afd3785b2d48ce9e57aae2352b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeallocFunctorDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>a8d8e9a89dc5004292cc86b78d7dedc53</anchor>
      <arglist>(DeleteFunctor deleteFunctor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>aa13bcb56ec347afe1be9212c94538887</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DeallocFunctorDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>a64bf89acd496a065eff8765b91ccb4cc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DeleteFunctor</type>
      <name>deleteFunctor_</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>a62a5f5684bcf10458aa762855c3286c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DeallocFunctorDelete&lt; T, DeleteFunctor &gt;</type>
      <name>deallocFunctorDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorDelete.html</anchorfile>
      <anchor>a819e800ac09fe8a31ff745c33c5478ba</anchor>
      <arglist>(DeleteFunctor deleteFunctor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocFunctorHandleDelete</name>
    <filename>classTeuchos_1_1DeallocFunctorHandleDelete.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>a622de42595b029cd631636ba0978b880</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeallocFunctorHandleDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>ac20c9ccd69002b604b7049fbcd814796</anchor>
      <arglist>(DeleteHandleFunctor deleteHandleFunctor)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>a88fb64812d29722f9526498eb5bec139</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DeallocFunctorHandleDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>a556a9a8d40d4da643be206b33c4ea468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DeleteHandleFunctor</type>
      <name>deleteHandleFunctor_</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>a4a5fd473d32224875e466f6383f8c0db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DeallocFunctorHandleDelete&lt; T, DeleteHandleFunctor &gt;</type>
      <name>deallocFunctorHandleDelete</name>
      <anchorfile>classTeuchos_1_1DeallocFunctorHandleDelete.html</anchorfile>
      <anchor>af800cfca47dbfe489f78fbc9444e3e47</anchor>
      <arglist>(DeleteHandleFunctor deleteHandleFunctor)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocNull</name>
    <filename>classTeuchos_1_1DeallocNull.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocNull.html</anchorfile>
      <anchor>a8a5ef2f79f2dcf0085db78a00b5499fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocNull.html</anchorfile>
      <anchor>acd9f417a495f09d67788ee3201cdefc2</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DeallocStdSharedPtr</name>
    <filename>classTeuchos_1_1DeallocStdSharedPtr.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>a5ae08bcdf887d92d68a425a45ddcd4ac</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DeallocStdSharedPtr</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>a96f8416b4a063370b14a899ee3ce6cbd</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>a9fae14c37d314662eabc0afa457a3e2f</anchor>
      <arglist>(T *ptr_in) const </arglist>
    </member>
    <member kind="function">
      <type>const std::shared_ptr&lt; T &gt; &amp;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>ada0acdaa99dd047ed876ead373bd2822</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>DeallocStdSharedPtr</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>a33511afe4814e2343ccf57e489c7075a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>sptr_</name>
      <anchorfile>classTeuchos_1_1DeallocStdSharedPtr.html</anchorfile>
      <anchor>a721db952c28a49ba400f4bad150e36c5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DefaultBLASImpl</name>
    <filename>classTeuchos_1_1DefaultBLASImpl.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="typedef" protection="private">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>ad76adac2b5ba238ebb44be2d6d3c7e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultBLASImpl</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a87435d14abc664401d9b8898d2b5ae17</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DefaultBLASImpl</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a09063c0b45d4dcbf0e98fa1b3b6b1a61</anchor>
      <arglist>(const DefaultBLASImpl&lt; OrdinalType, ScalarType &gt; &amp;)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~DefaultBLASImpl</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a44534220ad83a21d258363f4d238886c</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="typedef">
      <type>details::GivensRotator&lt; ScalarType &gt;::c_type</type>
      <name>rotg_c_type</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>acc14524169fbe00e128473129e7741ee</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>ac4c0a8ebba156081d61f45947e1d5ad6</anchor>
      <arglist>(ScalarType *da, ScalarType *db, rotg_c_type *c, ScalarType *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROT</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a079e835616f640f36f5e105252937a34</anchor>
      <arglist>(const OrdinalType n, ScalarType *dx, const OrdinalType incx, ScalarType *dy, const OrdinalType incy, MagnitudeType *c, ScalarType *s) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SCAL</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a77263f7e7d213ad6bb2f854ea6db920a</anchor>
      <arglist>(const OrdinalType n, const ScalarType alpha, ScalarType *x, const OrdinalType incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>COPY</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a2c30434e7d325d3c49058aed3d9889fd</anchor>
      <arglist>(const OrdinalType n, const ScalarType *x, const OrdinalType incx, ScalarType *y, const OrdinalType incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>AXPY</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>ad3cb8a04291cb42c69b73268fa2a1d20</anchor>
      <arglist>(const OrdinalType n, const alpha_type alpha, const x_type *x, const OrdinalType incx, ScalarType *y, const OrdinalType incy) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>ASUM</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a30841219ac9933c9903df33c45e606b1</anchor>
      <arglist>(const OrdinalType n, const ScalarType *x, const OrdinalType incx) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>DOT</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a8f5c8f1bc69ed065e93176d9dc6fe7ea</anchor>
      <arglist>(const OrdinalType n, const x_type *x, const OrdinalType incx, const y_type *y, const OrdinalType incy) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>NRM2</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>aefe02c6879e9fba69618f89084d66c3a</anchor>
      <arglist>(const OrdinalType n, const ScalarType *x, const OrdinalType incx) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>IAMAX</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>ad12edd56703531eda43f6d7eab2e72c9</anchor>
      <arglist>(const OrdinalType n, const ScalarType *x, const OrdinalType incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMV</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a79b7b8e883d3f428c0be0201305a4357</anchor>
      <arglist>(ETransp trans, const OrdinalType m, const OrdinalType n, const alpha_type alpha, const A_type *A, const OrdinalType lda, const x_type *x, const OrdinalType incx, const beta_type beta, ScalarType *y, const OrdinalType incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMV</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a16958f4bd4b687e913892ef413534d1e</anchor>
      <arglist>(EUplo uplo, ETransp trans, EDiag diag, const OrdinalType n, const A_type *A, const OrdinalType lda, ScalarType *x, const OrdinalType incx) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GER</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a4fbd65344295d2987c20a8a6c4c2ba7f</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const alpha_type alpha, const x_type *x, const OrdinalType incx, const y_type *y, const OrdinalType incy, ScalarType *A, const OrdinalType lda) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEMM</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>afca4cc089108c6c56fad5eac92b52fda</anchor>
      <arglist>(ETransp transa, ETransp transb, const OrdinalType m, const OrdinalType n, const OrdinalType k, const alpha_type alpha, const A_type *A, const OrdinalType lda, const B_type *B, const OrdinalType ldb, const beta_type beta, ScalarType *C, const OrdinalType ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SWAP</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a4a72a87295c02064542163abaadb67b5</anchor>
      <arglist>(const OrdinalType n, ScalarType *const x, const OrdinalType incx, ScalarType *const y, const OrdinalType incy) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYMM</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a1d048804676b1c7e8fa22fe3942ac0db</anchor>
      <arglist>(ESide side, EUplo uplo, const OrdinalType m, const OrdinalType n, const alpha_type alpha, const A_type *A, const OrdinalType lda, const B_type *B, const OrdinalType ldb, const beta_type beta, ScalarType *C, const OrdinalType ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYRK</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a5993bbc63fc888745750147d1be84c2a</anchor>
      <arglist>(EUplo uplo, ETransp trans, const OrdinalType n, const OrdinalType k, const alpha_type alpha, const A_type *A, const OrdinalType lda, const beta_type beta, ScalarType *C, const OrdinalType ldc) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRMM</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>aa97d404663aed96b26b43632b584ad12</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const OrdinalType m, const OrdinalType n, const alpha_type alpha, const A_type *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSM</name>
      <anchorfile>classTeuchos_1_1DefaultBLASImpl.html</anchorfile>
      <anchor>a70ad65683d69d358d4c6dd3b55734f20</anchor>
      <arglist>(ESide side, EUplo uplo, ETransp transa, EDiag diag, const OrdinalType m, const OrdinalType n, const alpha_type alpha, const A_type *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DefaultComm</name>
    <filename>classTeuchos_1_1DefaultComm.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Comm&lt; OrdinalType &gt; &gt;</type>
      <name>getComm</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>abc7ddf1efece7114864ba584825457e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; const Comm&lt; OrdinalType &gt; &gt;</type>
      <name>getDefaultSerialComm</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>a7ee00bec38be47374240c834fad9543a</anchor>
      <arglist>(const Teuchos::RCP&lt; const Comm&lt; OrdinalType &gt; &gt; &amp;comm)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeDefaultComm</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>ab37e0e3e38284348b1430b9a91ff6f7c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeDefaultSerialComm</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>a5b4893f8999eccd7d91a8ddc82861d49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const Comm&lt; OrdinalType &gt; *</type>
      <name>comm_</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>a17455f655e052080f386f4da34f3f60c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const Comm&lt; OrdinalType &gt; *</type>
      <name>defaultSerialComm_</name>
      <anchorfile>classTeuchos_1_1DefaultComm.html</anchorfile>
      <anchor>afcf85bbbfa5b9bb483d4e49c9ce944e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DefaultSerializer</name>
    <filename>classTeuchos_1_1DefaultSerializer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>SerializationTraits&lt; Ordinal, T &gt;</type>
      <name>DefaultSerializerType</name>
      <anchorfile>classTeuchos_1_1DefaultSerializer.html</anchorfile>
      <anchor>ac16ce32271fe5daec93aea85d918fcb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static DefaultSerializerType</type>
      <name>getDefaultSerializer</name>
      <anchorfile>classTeuchos_1_1DefaultSerializer.html</anchorfile>
      <anchor>a85031861af5d862527aef44534bbcf69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; DefaultSerializerType &gt;</type>
      <name>getDefaultSerializerRCP</name>
      <anchorfile>classTeuchos_1_1DefaultSerializer.html</anchorfile>
      <anchor>a21f6ada874b2933e34d3313981a8caf9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Dependency</name>
    <filename>classTeuchos_1_1Dependency.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="typedef">
      <type>std::set&lt; RCP&lt; ParameterEntry &gt;, RCPComp &gt;</type>
      <name>ParameterEntryList</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a394c48f8a76439c075e3b2acc76d0c13</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::set&lt; RCP&lt; const ParameterEntry &gt;, RCPConstComp &gt;</type>
      <name>ConstParameterEntryList</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a896a7a009eebcff3cfa672ba4ff238e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dependency</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a39365bd3bf0032b512c8f026876d0edd</anchor>
      <arglist>(ConstParameterEntryList dependees, ParameterEntryList dependents)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dependency</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a8341fca61aa6e6fb1b927b37277ec70b</anchor>
      <arglist>(ConstParameterEntryList dependees, RCP&lt; ParameterEntry &gt; dependent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dependency</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>ac9926c26f52b094874036da2f87cbe81</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, ParameterEntryList dependents)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Dependency</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a603b6d56391fc661da47488976ba4eb5</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent)</arglist>
    </member>
    <member kind="function">
      <type>const ConstParameterEntryList &amp;</type>
      <name>getDependees</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>ae68495bfa68e40bd8964f4f40e7e83bd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ParameterEntryList &amp;</type>
      <name>getDependents</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a45d5c30f295a67c5cbd2e2552414a5e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const ConstParameterEntryList &amp;</type>
      <name>getDependents</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>abbca093c248eee4d22972c4bde5f2a51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntry &gt;</type>
      <name>getFirstDependee</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a0a1cb88b6c49ab5b010fa81e19964b15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>S</type>
      <name>getFirstDependeeValue</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a029edfdf0b09e085dbdba3fd49c27c9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a08f99a28cb2319f453bf7795e35d394a</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getXMLTagName</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a571147cbba9d9710c1e61be192747f21</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a8223db590fbc9d255738dd04245449dd</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>aaddf61e1d762d74c3f1b3739aa74182b</anchor>
      <arglist>(std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>acd6c5804b39d9a8bc6f5085492675255</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConstParameterEntryList</type>
      <name>dependees_</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a80f107ba79eaed283330d981a9efd5a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ParameterEntryList</type>
      <name>dependents_</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a597d6915358eb1d70567ca3fd116712a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ConstParameterEntryList</type>
      <name>constDependents_</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>aa6b4942a78303e2e5128a46018640730</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Dependency</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>a6b3665f698a27d5a6259a022021af110</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>createConstDependents</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>abc37294c08f77863a1d57cbcd279f4d8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>checkDependeesAndDependents</name>
      <anchorfile>classTeuchos_1_1Dependency.html</anchorfile>
      <anchor>ad815b71ba7b1d43e064b3b393ca4746d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DependencySheet</name>
    <filename>classTeuchos_1_1DependencySheet.html</filename>
    <member kind="typedef">
      <type>std::set&lt; RCP&lt; Dependency &gt;, RCPComp &gt;</type>
      <name>DepSet</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a710d61dd65d69a007c8bce53f875b54d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>map&lt; RCP&lt; const ParameterEntry &gt;, DepSet, RCPConstComp &gt;</type>
      <name>DepMap</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>af12f68ea2414107c90e804ad310fd98d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DependencySheet</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>ab581f3e98c077ee0ace057c265319d66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DependencySheet</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a8ab834367b37d2cc514e5ea77fe7aaeb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDependency</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a4c9e6a287a4f28305f502b832e619dee</anchor>
      <arglist>(RCP&lt; Dependency &gt; dependency)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDependencies</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a76e167de192586120ab97d8c4cf05f51</anchor>
      <arglist>(RCP&lt; DependencySheet &gt; otherSheet)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeDependency</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a4f5a1cc10ee6bb01a2ab0264916c9dfe</anchor>
      <arglist>(RCP&lt; Dependency &gt; dependency)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setName</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a512fd939f4561fd43c28b3fe7915e0e4</anchor>
      <arglist>(const std::string newName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasDependents</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a0f0303d7f3c19389a875cedb640c654c</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const DepSet &gt;</type>
      <name>getDependenciesForParameter</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a05033a7bf1c575c760d72f647f6886c0</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getName</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a5634bdccd11420c66c46e5d743dad3a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a9270c1237ed29f88ab730c5422aa766d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DepSet::iterator</type>
      <name>depBegin</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a52bd74ef5cb599d869c378385ce13459</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DepSet::iterator</type>
      <name>depEnd</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>acd8ba9f8def3d50e61e66d97de21af95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>DepSet::const_iterator</type>
      <name>depBegin</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a3642a4abce5c28ae055fc8304a7d3aae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DepSet::const_iterator</type>
      <name>depEnd</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>a5fcbfda69c47a3210ac9348eb4894d58</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>DepSet::size_type</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>ae1058b15544a8c186766538fbf036794</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDeps</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>aa697f8cb5d5bd799fb7e8993d5d0a3f3</anchor>
      <arglist>(std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getNameAttributeName</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>ac3ee6e90986df9fdee5bc0796b4c01ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DepMap</type>
      <name>dependenciesMap_</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>aba7b8269506d3154318e8489fed7fcfb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DepSet</type>
      <name>dependencies_</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>ac1afc829eb9cc6ac102de0c83c9bef4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>classTeuchos_1_1DependencySheet.html</anchorfile>
      <anchor>adc5b70a9df4154047a75c9474a070896</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DependencyXMLConverter</name>
    <filename>classTeuchos_1_1DependencyXMLConverter.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type>RCP&lt; Dependency &gt;</type>
      <name>fromXMLtoDependency</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a18d2147b14076cfcb865dde376d8cd97</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Dependency &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a2c3e6d826909d2d4f178f7d1504d476d</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>fromDependencytoXML</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>afa7848bba0bc3d65aad86a67cfdc9a55</anchor>
      <arglist>(const RCP&lt; const Dependency &gt; dependency, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertDependency</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a6777b33b3093242ce6388a05f2a263c3</anchor>
      <arglist>(const RCP&lt; const Dependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDependeeTagName</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a673e74329df799e6f521938f93c51970</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDependentTagName</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a07835353f148267248ecd62231b904bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getParameterIdAttributeName</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>adcdcc0e031a6d93e665816c48d65b18f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverter.html</anchorfile>
      <anchor>a100556bab39d54e58fc11ddc32aca045</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DependencyXMLConverterDB</name>
    <filename>classTeuchos_1_1DependencyXMLConverterDB.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addConverter</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>a71b276f66933eb7c022a3466c17efc5b</anchor>
      <arglist>(RCP&lt; const Dependency &gt; dependency, RCP&lt; DependencyXMLConverter &gt; converterToAdd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const DependencyXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>ac92c7de68ddb7a9830acf2076699d865</anchor>
      <arglist>(const Dependency &amp;dependency)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const DependencyXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>a7b0aa856cbe8128e113938f027e96287</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XMLObject</type>
      <name>convertDependency</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>a363d283d3bb9eaa252fa25ac8d167963</anchor>
      <arglist>(RCP&lt; const Dependency &gt; dependency, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Dependency &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>aee59fb058b52ab86483fd1ebf0e0391f</anchor>
      <arglist>(const XMLObject &amp;xmlObject, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printKnownConverters</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>a86b1981bb6d929416f9db233a2a6fd65</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; DependencyXMLConverter &gt; &gt;</type>
      <name>ConverterMap</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>aa2c1ad5464e9a3ebcf391b3742615b35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, RCP&lt; DependencyXMLConverter &gt; &gt;</type>
      <name>ConverterPair</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>a2296cd801779fd7e048c94289b1f0b9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ConverterMap &amp;</type>
      <name>getConverterMap</name>
      <anchorfile>classTeuchos_1_1DependencyXMLConverterDB.html</anchorfile>
      <anchor>adf51855d89a232a212dabaa98f16e9c1</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Describable</name>
    <filename>classTeuchos_1_1Describable.html</filename>
    <base virtualness="virtual">Teuchos::LabeledObject</base>
    <member kind="variable" static="yes">
      <type>static const EVerbosityLevel</type>
      <name>verbLevel_default</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>a09acbfed0e0a141ef2fc47730d1d8061</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>DescribableStreamManipulatorState</type>
      <name>describe</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>a3037f1f1b98aa95dc1e14d9cc58e1cc4</anchor>
      <arglist>(const Describable &amp;describable, const EVerbosityLevel verbLevel=Describable::verbLevel_default)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>a1f83b0495123f62c56cc54b699176144</anchor>
      <arglist>(std::ostream &amp;os, const DescribableStreamManipulatorState &amp;d)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>description</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>a0bbc44ead525c9c40ee00a1cea431549</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>describe</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>afff09c3327a59c40d2fbd3d17d402d3d</anchor>
      <arglist>(FancyOStream &amp;out, const EVerbosityLevel verbLevel=verbLevel_default) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>describe</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>aa9001a7128613c9aeb2560796d562920</anchor>
      <arglist>(std::ostream &amp;out, const EVerbosityLevel verbLevel=verbLevel_default) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Describable</name>
      <anchorfile>classTeuchos_1_1Describable.html</anchorfile>
      <anchor>ae22bb54db72113ef6a93440a9625f7ac</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::DescribableStreamManipulatorState</name>
    <filename>structTeuchos_1_1DescribableStreamManipulatorState.html</filename>
    <member kind="function">
      <type></type>
      <name>DescribableStreamManipulatorState</name>
      <anchorfile>structTeuchos_1_1DescribableStreamManipulatorState.html</anchorfile>
      <anchor>abe51c5a4817aaee5b2550a97d471ea96</anchor>
      <arglist>(const Describable &amp;_describable, const EVerbosityLevel _verbLevel=VERB_MEDIUM)</arglist>
    </member>
    <member kind="variable">
      <type>const Describable &amp;</type>
      <name>describable</name>
      <anchorfile>structTeuchos_1_1DescribableStreamManipulatorState.html</anchorfile>
      <anchor>a8401b910d67cca4f50713a0d0a859ae5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const EVerbosityLevel</type>
      <name>verbLevel</name>
      <anchorfile>structTeuchos_1_1DescribableStreamManipulatorState.html</anchorfile>
      <anchor>ae5433ac7a46fd59d739b2786490fca16</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DirectSerializationTraits</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const T *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const T buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const T buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, T buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, char &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const char buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const char buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, char buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, double &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(double *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const double *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const double *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const double buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const double buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, double buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, float &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(float *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const float *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const float *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const float buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const float buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, float buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, long int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(long int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const long int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const long int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const long int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const long int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, long int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, long unsigned int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(long unsigned int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const long unsigned int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long unsigned int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const long unsigned int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const long unsigned int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const long unsigned int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, long unsigned int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, short int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(short int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const short int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const short int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const short int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const short int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, short int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, signed char &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(signed char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const signed char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static signed char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const signed char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const signed char buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const signed char buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, signed char buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, std::pair&lt; P1, P2 &gt; &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(std::pair&lt; P1, P2 &gt; *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const std::pair&lt; P1, P2 &gt; *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; P1, P2 &gt; *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::pair&lt; P1, P2 &gt; *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; P1, P2 &gt; buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; P1, P2 &gt; buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, std::pair&lt; P1, P2 &gt; buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, unsigned char &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(unsigned char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const unsigned char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const unsigned char *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const unsigned char buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const unsigned char buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, unsigned char buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, unsigned int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(unsigned int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const unsigned int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const unsigned int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const unsigned int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const unsigned int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, unsigned int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>DirectSerializationTraits&lt; Ordinal, unsigned short int &gt;</name>
    <filename>classTeuchos_1_1DirectSerializationTraits.html</filename>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a119cf935a2071ea7eb89cda508bae47d</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3efd7674c2e3ce7eadac9014e642676f</anchor>
      <arglist>(unsigned short int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aed328af30cd26561ba7d8862b3353004</anchor>
      <arglist>(const unsigned short int *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>add7001f77d612ef6737440d2ce101843</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a1162e6eee19009057a384f63377dc51c</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const unsigned short int *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>aa6856d30bc7237e9784e17ddf86a0625</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a426103a88d61f6ccc168383ae3f6d08c</anchor>
      <arglist>(const Ordinal count, const unsigned short int buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ad25e3659db64a5101555fb449b3869b4</anchor>
      <arglist>(const Ordinal count, const unsigned short int buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>abfda287d9f7c36f789103b505392b4e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>a3abd1b2aadb6467630ffaa16b624fd02</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, unsigned short int buffer[])</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1DirectSerializationTraits.html</anchorfile>
      <anchor>ae15ae80a3601d143fbd76e4986730768</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DivisionFunction</name>
    <filename>classTeuchos_1_1DivisionFunction.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>DivisionFunction</name>
      <anchorfile>classTeuchos_1_1DivisionFunction.html</anchorfile>
      <anchor>a5f20d6adeb678866524957c68bcd2bb8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>DivisionFunction</name>
      <anchorfile>classTeuchos_1_1DivisionFunction.html</anchorfile>
      <anchor>a4c9a215f163b818140a6ab3819d5d13c</anchor>
      <arglist>(OperandType amountToDivideBy)</arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1DivisionFunction.html</anchorfile>
      <anchor>a0abac330705f5eebe428e37edcd22a8e</anchor>
      <arglist>(OperandType arguement) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1DivisionFunction.html</anchorfile>
      <anchor>af91f7b8362585f0cd8f6ada6b4bdd222</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DivisionFunctionXMLConverter</name>
    <filename>classTeuchos_1_1DivisionFunctionXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; SimpleFunctionObject&lt; OperandType &gt; &gt;</type>
      <name>getSpecificSimpleFunction</name>
      <anchorfile>classTeuchos_1_1DivisionFunctionXMLConverter.html</anchorfile>
      <anchor>aa8ccbd6997fdd2b53596f80c3989b62e</anchor>
      <arglist>(OperandType operand) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringToIntMap::DoesNotExist</name>
    <filename>classTeuchos_1_1StringToIntMap_1_1DoesNotExist.html</filename>
    <member kind="function">
      <type></type>
      <name>DoesNotExist</name>
      <anchorfile>classTeuchos_1_1StringToIntMap_1_1DoesNotExist.html</anchorfile>
      <anchor>a5e807a32163eb8896a8847f910dbafe1</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DoubleEntry</name>
    <filename>classTeuchos_1_1DoubleEntry.html</filename>
    <base>Teuchos::TableEntry</base>
    <member kind="function">
      <type></type>
      <name>DoubleEntry</name>
      <anchorfile>classTeuchos_1_1DoubleEntry.html</anchorfile>
      <anchor>a90829999507c164b37fd9e70aef61a41</anchor>
      <arglist>(const double &amp;value, int precision)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1DoubleEntry.html</anchorfile>
      <anchor>ae47c3020db990f82795a5ceef94220e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1DoubleEntry.html</anchorfile>
      <anchor>a6a30338d0cc7f7d301b6b82cb45971b1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>precision_</name>
      <anchorfile>classTeuchos_1_1DoubleEntry.html</anchorfile>
      <anchor>ae3b3ecd8859728ca0e6869fefef054b1</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter</name>
    <filename>classTeuchos_1_1DummyObjectGetter.html</filename>
    <templarg>T</templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; T &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter.html</anchorfile>
      <anchor>af259b11efe9a119a1d57aede9ec18800</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; AndCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01AndCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; AndCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01AndCondition_01_4.html</anchorfile>
      <anchor>ad3f26f402d03990f8a030ba9ffae077b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; AnyNumberParameterEntryValidator &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01AnyNumberParameterEntryValidator_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; AnyNumberParameterEntryValidator &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01AnyNumberParameterEntryValidator_01_4.html</anchorfile>
      <anchor>ae675d7276bb4a11c750a14171590d3b8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; ArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01ArrayValidator_3_01ValidatorType_00_01EntryType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01ArrayValidator_3_01ValidatorType_00_01EntryType_01_4_01_4.html</anchorfile>
      <anchor>abee6384b885f0d9287f5fe0b83467c04</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; BoolCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01BoolCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; BoolCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01BoolCondition_01_4.html</anchorfile>
      <anchor>a7ebed44ad97944b7c0f930ac5665fe73</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; BoolValidatorDependency &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01BoolValidatorDependency_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; BoolValidatorDependency &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01BoolValidatorDependency_01_4.html</anchorfile>
      <anchor>a237c2a61f0781d5f267300acc4f7d9f0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; BoolVisualDependency &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01BoolVisualDependency_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; BoolVisualDependency &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01BoolVisualDependency_01_4.html</anchorfile>
      <anchor>a09ed921a093b3bca0a28de5106656832</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; ConditionVisualDependency &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01ConditionVisualDependency_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; ConditionVisualDependency &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01ConditionVisualDependency_01_4.html</anchorfile>
      <anchor>a9b46f7f02f764041f3e68a178762fa0f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; EnhancedNumberValidator&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01EnhancedNumberValidator_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01EnhancedNumberValidator_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ae866ada15fb25c7810c819d6a462a3d5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; EqualsCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01EqualsCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; EqualsCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01EqualsCondition_01_4.html</anchorfile>
      <anchor>aa9d51ab42c2104325380ef12f36870bb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; FileNameValidator &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01FileNameValidator_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; FileNameValidator &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01FileNameValidator_01_4.html</anchorfile>
      <anchor>a393f71867fbda2e6f70ef1fcefc14e6d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; NotCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01NotCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; NotCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01NotCondition_01_4.html</anchorfile>
      <anchor>a54815dbdc6ac19ca69def9c81af0a8e5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; NumberArrayLengthDependency&lt; DependeeType, DependentType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01NumberArrayLengthDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; NumberArrayLengthDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01NumberArrayLengthDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</anchorfile>
      <anchor>ae03b774f577b8d2d46a5d063fbbe77cb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; NumberCondition&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01NumberCondition_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; NumberCondition&lt; T &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01NumberCondition_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a87fd1c0fc4e0b9f68e9da6b33e22c580</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; NumberVisualDependency&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01NumberVisualDependency_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; NumberVisualDependency&lt; T &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01NumberVisualDependency_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a75a14ea9b48682fc2fbc6fa66e2559a9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; OrCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01OrCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; OrCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01OrCondition_01_4.html</anchorfile>
      <anchor>a7cac9ab884259f79ab57e952b313bdd9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; RangeValidatorDependency&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01RangeValidatorDependency_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; RangeValidatorDependency&lt; T &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01RangeValidatorDependency_3_01T_01_4_01_4.html</anchorfile>
      <anchor>ac8e665b27ca658b8f4713959a0f8faaa</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; StringCondition &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01StringCondition_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; StringCondition &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01StringCondition_01_4.html</anchorfile>
      <anchor>a5ee5abeb69b35d5ed40d75ceb6a1976a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01StringToIntegralParameterEntryValidator_3_01IntegralType_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01StringToIntegralParameterEntryValidator_3_01IntegralType_01_4_01_4.html</anchorfile>
      <anchor>a14ee040aa4de6ff6023c88ab702b1a6a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; StringValidator &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01StringValidator_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; StringValidator &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01StringValidator_01_4.html</anchorfile>
      <anchor>aa9cd12ef67e9b852203d15d13a2083b6</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; StringValidatorDependency &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01StringValidatorDependency_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; StringValidatorDependency &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01StringValidatorDependency_01_4.html</anchorfile>
      <anchor>ae47cdf3ad6981cd14de431edb71da084</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; StringVisualDependency &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01StringVisualDependency_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static RCP&lt; StringVisualDependency &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01StringVisualDependency_01_4.html</anchorfile>
      <anchor>a82da9a8cd503288c0d8a19719a3c5b67</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; TwoDArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01TwoDArrayValidator_3_01ValidatorType_00_01EntryType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; TwoDArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01TwoDArrayValidator_3_01ValidatorType_00_01EntryType_01_4_01_4.html</anchorfile>
      <anchor>a586adbbedc2d322c120a8eb4669d2158</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; TwoDColDependency&lt; DependeeType, DependentType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01TwoDColDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; TwoDColDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01TwoDColDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</anchorfile>
      <anchor>a50f66655cc65910d410168e59fee067f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DummyObjectGetter&lt; TwoDRowDependency&lt; DependeeType, DependentType &gt; &gt;</name>
    <filename>classTeuchos_1_1DummyObjectGetter_3_01TwoDRowDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; TwoDRowDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getDummyObject</name>
      <anchorfile>classTeuchos_1_1DummyObjectGetter_3_01TwoDRowDependency_3_01DependeeType_00_01DependentType_01_4_01_4.html</anchorfile>
      <anchor>ad549649c680538abcc91be338cbacddb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateOwningRCPError</name>
    <filename>classTeuchos_1_1DuplicateOwningRCPError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DuplicateOwningRCPError</name>
      <anchorfile>classTeuchos_1_1DuplicateOwningRCPError.html</anchorfile>
      <anchor>ae1752f3e6cf269c1456e25d1f2541a3d</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateParameterEntryException</name>
    <filename>classTeuchos_1_1DuplicateParameterEntryException.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DuplicateParameterEntryException</name>
      <anchorfile>classTeuchos_1_1DuplicateParameterEntryException.html</anchorfile>
      <anchor>a6032b6680be8d2a825564d271697294d</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateParameterEntryIDException</name>
    <filename>classTeuchos_1_1DuplicateParameterEntryIDException.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DuplicateParameterEntryIDException</name>
      <anchorfile>classTeuchos_1_1DuplicateParameterEntryIDException.html</anchorfile>
      <anchor>ae13fc45fba19eb5b4bd366245746671e</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateParameterIDsException</name>
    <filename>classTeuchos_1_1DuplicateParameterIDsException.html</filename>
    <member kind="function">
      <type></type>
      <name>DuplicateParameterIDsException</name>
      <anchorfile>classTeuchos_1_1DuplicateParameterIDsException.html</anchorfile>
      <anchor>a74e0068eb8e0a09d9a31cfbfc2155f89</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateParameterSublist</name>
    <filename>classTeuchos_1_1DuplicateParameterSublist.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DuplicateParameterSublist</name>
      <anchorfile>classTeuchos_1_1DuplicateParameterSublist.html</anchorfile>
      <anchor>a862391e55f4a8e8cfd4322ed52bdf719</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateValidatorIDException</name>
    <filename>classTeuchos_1_1DuplicateValidatorIDException.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>DuplicateValidatorIDException</name>
      <anchorfile>classTeuchos_1_1DuplicateValidatorIDException.html</anchorfile>
      <anchor>a13b57cb61a2fc442275855fb30fcf171</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::DuplicateValidatorIDsException</name>
    <filename>classTeuchos_1_1DuplicateValidatorIDsException.html</filename>
    <member kind="function">
      <type></type>
      <name>DuplicateValidatorIDsException</name>
      <anchorfile>classTeuchos_1_1DuplicateValidatorIDsException.html</anchorfile>
      <anchor>a89fc1d7e51b0b71eecaeb44b5d541aef</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>E</name>
    <filename>classE.html</filename>
    <base>D</base>
    <member kind="function">
      <type></type>
      <name>E</name>
      <anchorfile>classE.html</anchorfile>
      <anchor>ac26294d340a47c6a51c615c177052c91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>E_g</name>
      <anchorfile>classE.html</anchorfile>
      <anchor>ae4157b6d29bad056596b3e98c662f3e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>E_f</name>
      <anchorfile>classE.html</anchorfile>
      <anchor>aab8d6fd1529c232bb42f9de628a7ada4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>E_g_</name>
      <anchorfile>classE.html</anchorfile>
      <anchor>a6d8dba1e237b2e3bb6345bd09b0123d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>E_f_</name>
      <anchorfile>classE.html</anchorfile>
      <anchor>ac810f1a477ed9dbc0cb82d1467667bb8</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::Element</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Element</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>ab490d30f5e21464bf1e0e0d23cdbac75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Element</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>aec468e3069ac6742258b4038a1266594</anchor>
      <arglist>(const Ordinal i, const Ordinal j, const Scalar &amp;Aij)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>ad1ab06ccde0ec404d867b72096f7d490</anchor>
      <arglist>(const Element &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>adb7f6884d77acc4ea48975c4e6b8d719</anchor>
      <arglist>(const Element &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a039c98b3dd42878a2869e5d73ae79b33</anchor>
      <arglist>(const Element &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a61a5dff3a33ca7d987b343f01e3ca1bc</anchor>
      <arglist>(const Element &amp;rhs, const BinaryFunction &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>merge</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a9a67f536077e337a136f4adbda3db0c8</anchor>
      <arglist>(const Element &amp;rhs, const bool replace=false)</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>rowIndex</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a11802986529458351bdfe84e660bddd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>colIndex</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>af71b05027bf6a93772af51979d49b94c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>value</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a9086ac001846f2872c778a95bae6671c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>rowIndex_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a83e66e3d422f6e6407e3a9c792e2bd21</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>colIndex_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>af45b2cb4a13bb8edd98e8fc052abb4df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Scalar</type>
      <name>value_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Element.html</anchorfile>
      <anchor>a76f9b57522946a3928b0cb9bd2fb7115</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EmbeddedObjDealloc</name>
    <filename>classTeuchos_1_1EmbeddedObjDealloc.html</filename>
    <templarg>T</templarg>
    <templarg>Embedded</templarg>
    <templarg>Dealloc</templarg>
    <member kind="typedef">
      <type>Dealloc::ptr_t</type>
      <name>ptr_t</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>af165157e42fce81a84773d974c937595</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EmbeddedObjDealloc</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>afbe732e07bcc8d7d3aa54a495d200c6e</anchor>
      <arglist>(const Embedded &amp;embedded, EPrePostDestruction prePostDestroy, Dealloc dealloc)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObj</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a767c6bd7045ef166dc718d4226baab71</anchor>
      <arglist>(const Embedded &amp;embedded)</arglist>
    </member>
    <member kind="function">
      <type>const Embedded &amp;</type>
      <name>getObj</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a96ed9ab99f90475a4d4067bed63408ff</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Embedded &amp;</type>
      <name>getNonconstObj</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>ae9c9bdf68a96b52650a61cc899c8aac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>free</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a1724c7ed5dd1cd14a9195da034841053</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>EmbeddedObjDealloc</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a1583facf453f50fdc5ececf5d4e083c7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Embedded</type>
      <name>embedded_</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a300b06e32c80efeb61dc3934879c45f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EPrePostDestruction</type>
      <name>prePostDestroy_</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>ad6c3da05fa5851f3b14d803774bd50bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Dealloc</type>
      <name>dealloc_</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a0ca9104b73b297a7e2a13e3cab7b3637</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EmbeddedObjDealloc&lt; T, Embedded, DeallocDelete&lt; T &gt; &gt;</type>
      <name>embeddedObjDeallocDelete</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a494554da0f82254c0fef9c78509282ae</anchor>
      <arglist>(const Embedded &amp;embedded, EPrePostDestruction prePostDestroy)</arglist>
    </member>
    <member kind="function">
      <type>EmbeddedObjDealloc&lt; T, Embedded, DeallocArrayDelete&lt; T &gt; &gt;</type>
      <name>embeddedObjDeallocArrayDelete</name>
      <anchorfile>classTeuchos_1_1EmbeddedObjDealloc.html</anchorfile>
      <anchor>a15b583e5fbe9e1a3ba9f7345d8ccf707</anchor>
      <arglist>(const Embedded &amp;embedded, EPrePostDestruction prePostDestroy)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EmptyXMLError</name>
    <filename>classTeuchos_1_1EmptyXMLError.html</filename>
    <member kind="function">
      <type></type>
      <name>EmptyXMLError</name>
      <anchorfile>classTeuchos_1_1EmptyXMLError.html</anchorfile>
      <anchor>aa3704c25c9fcdc11e691225dc8012d71</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits.html</anchorfile>
      <anchor>a663c947f482f6bedb85546779b26b752</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits.html</anchorfile>
      <anchor>a1a7ce533aaf267bb4dcb519c7d4f61bd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits.html</anchorfile>
      <anchor>a34c8e57cca7368aadbb538b4901ee3d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits.html</anchorfile>
      <anchor>a2c629a04a6431c97a1c8146e6753d682</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; double &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01double_01_4.html</anchorfile>
      <anchor>a6c365e50e92276ff5ca64eecf4dfb332</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01double_01_4.html</anchorfile>
      <anchor>a76cd138dc331ba11ad4149afe17e19ea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01double_01_4.html</anchorfile>
      <anchor>a464b5f2dffc761b369792ddf93608e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01double_01_4.html</anchorfile>
      <anchor>a50d21684774d60603f17900f1f950fb8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; float &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01float_01_4.html</anchorfile>
      <anchor>aeca16732680444d87db0f5a9b8c5b19a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01float_01_4.html</anchorfile>
      <anchor>a805d4988699a01c1e348f84096348873</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01float_01_4.html</anchorfile>
      <anchor>a07efe0b53d3275d00faaf41e28a7b8c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01float_01_4.html</anchorfile>
      <anchor>aab96df55a594898f5740de1e83a7f896</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01int_01_4.html</anchorfile>
      <anchor>ad73322d4ba6ec43fe653be5623c5fcf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01int_01_4.html</anchorfile>
      <anchor>aceb5aa284b55fbdd62dd68553d612e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01int_01_4.html</anchorfile>
      <anchor>ad781c18b18bdf6165558ea9833e48e2a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01int_01_4.html</anchorfile>
      <anchor>a99b50d322cbb99c06204879834d8f6b2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; long int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01long_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01int_01_4.html</anchorfile>
      <anchor>a441086509abf4bda83e95c3c5dc6447b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01int_01_4.html</anchorfile>
      <anchor>a06f4303cbd58076e4deb6ca3279a0d42</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01int_01_4.html</anchorfile>
      <anchor>a4bc31ee1a5feb274bd2bba375a3ab922</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01int_01_4.html</anchorfile>
      <anchor>ad6f6993ba069433bfaf1dd89391c811f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; long unsigned int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01long_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long unsigned int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01unsigned_01int_01_4.html</anchorfile>
      <anchor>afd77c42b6aa3e2cca58f227b2870dd5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long unsigned int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a71b5b481e13f1a15de02bc6d587b2468</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long unsigned int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a3744bee48713a8574b454a65537f74eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01long_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a8b41d5e359b64361e35a81d9c1cc8166</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; short int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01short_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01int_01_4.html</anchorfile>
      <anchor>a422942270d4ad3a41fc7d58114a6162d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01int_01_4.html</anchorfile>
      <anchor>a292982ae0720c5200463f755be733b03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01int_01_4.html</anchorfile>
      <anchor>a9affb31146e281745573e4f998b99dc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01int_01_4.html</anchorfile>
      <anchor>a00e98f2f05cc27953ba4a14cb7e5e45d</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; short unsigned int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01short_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short unsigned int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a01f8811ff61c9650cab617c2b5fee65e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short unsigned int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a691073667d61d7336ee7eea1d3666488</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short unsigned int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01unsigned_01int_01_4.html</anchorfile>
      <anchor>ab82c53cf83220dafea3b37f9f1bbfbed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01short_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a6e9ac25b96803ad245cf89bbffa2593a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberTraits&lt; unsigned int &gt;</name>
    <filename>classTeuchos_1_1EnhancedNumberTraits_3_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a10f4c0fe324d7d9121ed5f48677ad2ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a6d2f750458a5acc241539ebbac09417b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>defaultStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>aa8c9ae58fd8975a55bcf9904956c82da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>defaultPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberTraits_3_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a4fe13d92cc0ab7313acc0ce2a83cd173</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberValidator</name>
    <filename>classTeuchos_1_1EnhancedNumberValidator.html</filename>
    <templarg></templarg>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="function">
      <type></type>
      <name>EnhancedNumberValidator</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a3824bdc1b49141c99e1bc9489b0d34ef</anchor>
      <arglist>(T min, T max, T step=EnhancedNumberTraits&lt; T &gt;::defaultStep(), unsigned short precision=EnhancedNumberTraits&lt; T &gt;::defaultPrecision())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>EnhancedNumberValidator</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ae54e5cac4c9da390ab399a017c28a44e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMin</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a2634d3c866ed3d8beb87857598198c62</anchor>
      <arglist>(T min)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMax</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a56b5b1c2afd3b98cd1aea84d1c945f6c</anchor>
      <arglist>(T max)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ac309ed39162e327a96ef5bb0ee4af150</anchor>
      <arglist>(T step)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ad6442fc54f6eee3c2ff83e19cbc7bd58</anchor>
      <arglist>(unsigned short precision)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getMin</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>aa910dd21b40a11126d0073edd0aaabb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getMax</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ae655b5f6f969d3bf053aae86f67e69d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getStep</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a0dcdd77d31306ae599b7f7c326f48c96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>unsigned short</type>
      <name>getPrecision</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a6483d79f09c595e23fe19d0dcd67d769</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMin</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a6524f754c7664b5f26ec8488842e8999</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasMax</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>aea36f5190a61bf49806e23c6727498ea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a9995a7f0dbf73c671e0e94f64f2bb441</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a416f3621b00135f75dc63d9c3b6abdd5</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ac739a03924887fa49d42723dd2713a85</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ab9a26818740f1053b5598e7f30aec4e5</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>minVal</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>ac8f735022795873274d8febce5f7e67d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>maxVal</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a3bc0c6a3f4f8e3dc6cc914760f5aa0d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>step_</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a5726840ca5bc6dc21401773c88b2dee6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned short</type>
      <name>precision_</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>acd6604bcbea966caf29d27ac7113f66b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>containsMin</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>af6784225614fe3592a748c47210b78df</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>containsMax</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidator.html</anchorfile>
      <anchor>a3a4298178fa48868a249bf352f88aa1d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EnhancedNumberValidatorXMLConverter</name>
    <filename>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>ae8a6c844f3a8f6c69dcf3fd255aeb391</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>abfd055d2a27a3965a53de13dc0db7605</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getMinAttributeName</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a1a1ed6a7edaf4958dc5cf97a1fbdaab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getMaxAttributeName</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a34954985659345fa230754bd2b0dfc33</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStepAttributeName</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>abdb0c7090bdad53d5f0d816ab42b5bc6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPrecisionAttributeName</name>
      <anchorfile>classTeuchos_1_1EnhancedNumberValidatorXMLConverter.html</anchorfile>
      <anchor>a60f85a877d40d9a747acbc3eb4d8c4e9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::CommandLineProcessor::enum_opt_data_t</name>
    <filename>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</filename>
    <member kind="function">
      <type></type>
      <name>enum_opt_data_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>a99838a26d1172032d878c35d214146e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>enum_opt_data_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>a38d1dda09ddd527aa57f8f12d3e8a4d7</anchor>
      <arglist>(int *_enum_option_val, const int _num_enum_opt_values, const int _enum_opt_values[], const char *_enum_opt_names[])</arglist>
    </member>
    <member kind="variable">
      <type>int *</type>
      <name>enum_option_val</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>a30f3f2ac430e5c8ba97b62847c0f8194</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>num_enum_opt_values</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>a7abc68eed326a97f130a129cd7c75f06</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; int &gt;</type>
      <name>enum_opt_values</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>afb13c0c1e0f66d2158135e188bf711c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::vector&lt; std::string &gt;</type>
      <name>enum_opt_names</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1enum__opt__data__t.html</anchorfile>
      <anchor>ad7f694c18a0bab5f7a26400bd467dcae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EqualsCondition</name>
    <filename>classTeuchos_1_1EqualsCondition.html</filename>
    <base>Teuchos::BoolLogicCondition</base>
    <member kind="function">
      <type></type>
      <name>EqualsCondition</name>
      <anchorfile>classTeuchos_1_1EqualsCondition.html</anchorfile>
      <anchor>ae36ef341f63e53003de70261df7cfeb1</anchor>
      <arglist>(ConstConditionList &amp;conditions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EqualsCondition</name>
      <anchorfile>classTeuchos_1_1EqualsCondition.html</anchorfile>
      <anchor>afef2075c1e457ac6f4c8d5f836d9d01f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1EqualsCondition.html</anchorfile>
      <anchor>af49a160e453c6f274d0244bf3b1fd685</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applyOperator</name>
      <anchorfile>classTeuchos_1_1EqualsCondition.html</anchorfile>
      <anchor>ae59c38e09fdfa4fd4758f512a1541d7a</anchor>
      <arglist>(bool op1, bool op2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::EqualsConditionConverter</name>
    <filename>classTeuchos_1_1EqualsConditionConverter.html</filename>
    <base>Teuchos::BoolLogicConditionConverter</base>
    <member kind="function">
      <type>RCP&lt; BoolLogicCondition &gt;</type>
      <name>getSpecificBoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1EqualsConditionConverter.html</anchorfile>
      <anchor>a830a99fd2ffd52215a31bf8354853893</anchor>
      <arglist>(Condition::ConstConditionList &amp;conditions) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>EvilPack::EvilBase</name>
    <filename>classEvilPack_1_1EvilBase.html</filename>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~EvilBase</name>
      <anchorfile>classEvilPack_1_1EvilBase.html</anchorfile>
      <anchor>a3fc34a501546ee676f7ba084d45e9445</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>soundOff</name>
      <anchorfile>classEvilPack_1_1EvilBase.html</anchorfile>
      <anchor>aade83a01c6e4101419fb309c54358739</anchor>
      <arglist>(const T &amp;obj) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; EvilBase&lt; T &gt; &gt;</type>
      <name>createEvil</name>
      <anchorfile>classEvilPack_1_1EvilBase.html</anchorfile>
      <anchor>a4456dc3f35f36a4099b17b0fa86fb671</anchor>
      <arglist>(const std::string &amp;concreteEvilName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ExceptionBase</name>
    <filename>classTeuchos_1_1ExceptionBase.html</filename>
    <member kind="function">
      <type></type>
      <name>ExceptionBase</name>
      <anchorfile>classTeuchos_1_1ExceptionBase.html</anchorfile>
      <anchor>aeb206f5f4df5fac204169763558b9890</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::RCPNode::extra_data_entry_t</name>
    <filename>structTeuchos_1_1RCPNode_1_1extra__data__entry__t.html</filename>
    <member kind="function">
      <type></type>
      <name>extra_data_entry_t</name>
      <anchorfile>structTeuchos_1_1RCPNode_1_1extra__data__entry__t.html</anchorfile>
      <anchor>af9b9d498939945d408bd0c1efdebb238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>extra_data_entry_t</name>
      <anchorfile>structTeuchos_1_1RCPNode_1_1extra__data__entry__t.html</anchorfile>
      <anchor>a5cea97a20d99c3f3a45fd670de69e61c</anchor>
      <arglist>(const any &amp;_extra_data, EPrePostDestruction _destroy_when)</arglist>
    </member>
    <member kind="variable">
      <type>any</type>
      <name>extra_data</name>
      <anchorfile>structTeuchos_1_1RCPNode_1_1extra__data__entry__t.html</anchorfile>
      <anchor>a35cf8c35a659a559e1cf5c3e62a85624</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EPrePostDestruction</type>
      <name>destroy_when</name>
      <anchorfile>structTeuchos_1_1RCPNode_1_1extra__data__entry__t.html</anchorfile>
      <anchor>a3e54becc038afc57285f0724a7ef99a0</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>A::FactoryA</name>
    <filename>classA_1_1FactoryA.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Trilinos::Details::LinearSolverFactory</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Trilinos::Details::LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>classA_1_1FactoryA.html</anchorfile>
      <anchor>a518c8ee62e2e63411b35797224079eeb</anchor>
      <arglist>(const std::string &amp;solverName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B::FactoryB</name>
    <filename>classB_1_1FactoryB.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Trilinos::Details::LinearSolverFactory</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Trilinos::Details::LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>classB_1_1FactoryB.html</anchorfile>
      <anchor>a72c5ca706cd54390aa3226d57775d493</anchor>
      <arglist>(const std::string &amp;solverName)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>C::FactoryC</name>
    <filename>classC_1_1FactoryC.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Trilinos::Details::LinearSolverFactory</base>
    <member kind="function">
      <type>Teuchos::RCP&lt; Trilinos::Details::LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>classC_1_1FactoryC.html</anchorfile>
      <anchor>af9e2d6445aa37be08153fca81c7f8093</anchor>
      <arglist>(const std::string &amp;solverName)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::TabularOutputter::FieldSpec</name>
    <filename>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</filename>
    <member kind="function">
      <type></type>
      <name>FieldSpec</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>a3c5c3e6de5b19bc7544371d939036d3c</anchor>
      <arglist>(std::string fieldName_in, EFieldType fieldType_in, EFieldJustification fieldJustification_in, EFloatingOutputType floatingOutputType_in, const int outputWidth_in)</arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>fieldName</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>a2b3a4fcb352035aaf6fa8140f013558a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EFieldType</type>
      <name>fieldType</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>a336692fc91ce3884eb420808cee610ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EFieldJustification</type>
      <name>fieldJustification</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>acd0af8b80b9e571dfa234804c5e94350</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EFloatingOutputType</type>
      <name>floatingOutputType</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>a2429c57788cc7da8fec1b97e62f65b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>outputWidth</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>ac0bb0cbd7badd50127d4faa2ec10bf35</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>precision</name>
      <anchorfile>structTeuchos_1_1TabularOutputter_1_1FieldSpec.html</anchorfile>
      <anchor>a54702517ef5e79bda0b349b2f8731492</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FileInputSource</name>
    <filename>classTeuchos_1_1FileInputSource.html</filename>
    <base>Teuchos::XMLInputSource</base>
    <member kind="function">
      <type></type>
      <name>FileInputSource</name>
      <anchorfile>classTeuchos_1_1FileInputSource.html</anchorfile>
      <anchor>a6ba073f380a6a5cc6191832de03600be</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInputSource</name>
      <anchorfile>classTeuchos_1_1FileInputSource.html</anchorfile>
      <anchor>a329e64a168eeed69ac994dfb4355da87</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; XMLInputStream &gt;</type>
      <name>stream</name>
      <anchorfile>classTeuchos_1_1FileInputSource.html</anchorfile>
      <anchor>a2d8f9614e55f84df983911233557e34d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>filename_</name>
      <anchorfile>classTeuchos_1_1FileInputSource.html</anchorfile>
      <anchor>a58187cb3ec56025100328d276b31b0ea</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FileInputStream</name>
    <filename>classTeuchos_1_1FileInputStream.html</filename>
    <base>Teuchos::XMLInputStream</base>
    <member kind="function">
      <type></type>
      <name>FileInputStream</name>
      <anchorfile>classTeuchos_1_1FileInputStream.html</anchorfile>
      <anchor>aef8317494725f049d7548064c06c0bc0</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FileInputStream</name>
      <anchorfile>classTeuchos_1_1FileInputStream.html</anchorfile>
      <anchor>a116b6c6d326e056876ce051067c742bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>readBytes</name>
      <anchorfile>classTeuchos_1_1FileInputStream.html</anchorfile>
      <anchor>ad910db8b48b612308c23ddf04309c241</anchor>
      <arglist>(unsigned char *const toFill, const unsigned int maxToRead)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::FILE *</type>
      <name>file_</name>
      <anchorfile>classTeuchos_1_1FileInputStream.html</anchorfile>
      <anchor>a6c46105d0fb257ae88db9db1dd6c60fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FileNameValidator</name>
    <filename>classTeuchos_1_1FileNameValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>mustAlreadyExistDefault</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a4f5fdecd15cc835be397165595c0046d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FileNameValidator</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a7c5cef0bcc618ec594e39352d662247a</anchor>
      <arglist>(bool mustAlreadyExist=mustAlreadyExistDefault())</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileMustExist</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>adf684e592a29ecdf06fff8819891c44e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>fileEmptyNameOK</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a411dfb1d66dc69266242f08c2b1b364d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFileMustExist</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a7d614d02b414f2021bbac841b1270662</anchor>
      <arglist>(bool shouldFileExist)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setFileEmptyNameOK</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a696764491b6daddf1aace3133a027252</anchor>
      <arglist>(bool isEmptyNameOK)</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a745ed1b26f7c4d9e1cb13f74968091b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a1db9754df9dd70685041c3f4f59a417b</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a3fc16844e478afa67f587a203eb79e1c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a689351431aea922e1a2516b1c6ca296a</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>mustAlreadyExist_</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a1681fc820ab2f47a9c57f22a7bfcb07c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>EmptyNameOK_</name>
      <anchorfile>classTeuchos_1_1FileNameValidator.html</anchorfile>
      <anchor>a3dd88238c5f3b2e36b5b0055c2c66c3d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FileNameValidatorXMLConverter</name>
    <filename>classTeuchos_1_1FileNameValidatorXMLConverter.html</filename>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1FileNameValidatorXMLConverter.html</anchorfile>
      <anchor>a02915dc16f9aa36b04f4a2669aa5eb6e</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1FileNameValidatorXMLConverter.html</anchorfile>
      <anchor>a28baf850a6f7963d00058b1f6c447a31</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getFileMustExistAttributeName</name>
      <anchorfile>classTeuchos_1_1FileNameValidatorXMLConverter.html</anchorfile>
      <anchor>ab9dc3f4f3f95f297891ded96afd1c1d9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FILEstream</name>
    <filename>classTeuchos_1_1FILEstream.html</filename>
    <member kind="function">
      <type></type>
      <name>FILEstream</name>
      <anchorfile>classTeuchos_1_1FILEstream.html</anchorfile>
      <anchor>a3ca2bc491d9706b4d924ea509a8c7aaa</anchor>
      <arglist>(std::FILE *file)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::streambuf::int_type</type>
      <name>overflow</name>
      <anchorfile>classTeuchos_1_1FILEstream.html</anchorfile>
      <anchor>a2235ea9193a4e730d0c3c0cd078ac2e8</anchor>
      <arglist>(std::streambuf::int_type c)</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>FILE *</type>
      <name>self_file</name>
      <anchorfile>classTeuchos_1_1FILEstream.html</anchorfile>
      <anchor>acf8c7e9fb2edcf99b175d58901a79564</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FilteredIterator</name>
    <filename>classTeuchos_1_1FilteredIterator.html</filename>
    <templarg>IteratorType</templarg>
    <templarg>Predicate</templarg>
    <member kind="function" protection="private">
      <type>void</type>
      <name>advanceForwardToValid</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ae010d338e25554f82b9660bdde7c04f9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>advanceBackwardToValid</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>aeb49925bd5966f7fb38241c102a26b11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotIterateForwardPastEnd</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a96d6eb95f26e3a06c7051a8b692f10a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertNotIterateBackwardPastBegin</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a28fa7e0cb87e466fb09267a7106fddd5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IteratorType</type>
      <name>current_</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a72f074c69ecdfd13404b0001ca3de023</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IteratorType</type>
      <name>begin_</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ac8c6758f0fb1259e4b296798fee3a43c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>IteratorType</type>
      <name>end_</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ada92e627c78abb4a4f1cf713450a087a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Predicate</type>
      <name>pred_</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>acb373d57cfa012aa9582e3d33d81fc6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>adde93d4cf33a4257236376ee756c0c92</anchor>
      <arglist>(const FilteredIterator&lt; IteratorType, Predicate &gt; &amp;itr1, const FilteredIterator&lt; IteratorType, Predicate &gt; &amp;itr2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>aad8229ab9ada622a584b2066835c493b</anchor>
      <arglist>(const FilteredIterator&lt; IteratorType, Predicate &gt; &amp;itr1, const FilteredIterator&lt; IteratorType, Predicate &gt; &amp;itr2)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a22332f2ee835a42f2b74f2730a5e91b2</anchor>
      <arglist>(std::ostream &amp;out, const FilteredIterator&lt; IteratorType, Predicate &gt; &amp;itr)</arglist>
    </member>
    <member kind="typedef">
      <type>std::bidirectional_iterator_tag</type>
      <name>iterator_category</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a5f581b37b6fe3d3b8744255b2bf91b6d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::iterator_traits&lt; IteratorType &gt;::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a1af899ab5f25432afbb77dd483dd8961</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::iterator_traits&lt; IteratorType &gt;::reference</type>
      <name>reference</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a2329df37fe68ca81c6676d7be0980ef9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::iterator_traits&lt; IteratorType &gt;::pointer</type>
      <name>pointer</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ae17607806b58bc7352b6e7a4e03efd4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::iterator_traits&lt; IteratorType &gt;::difference_type</type>
      <name>difference_type</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a356806b979a54763093f896cb29ca0b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilteredIterator</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ae3359ef22af25bb61688f16f81458025</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilteredIterator</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a46c177391be49436a712b5e7de4a178f</anchor>
      <arglist>(IteratorType current_in, IteratorType begin_in, IteratorType end_in, Predicate pred_in=Predicate())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>FilteredIterator</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a7fbaecca8cbd387215617c73e31a980d</anchor>
      <arglist>(const FilteredIterator&lt; IteratorType2, Predicate2 &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>FilteredIterator &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a6e629ce13694b7f09bb648c4fba00fbb</anchor>
      <arglist>(const FilteredIterator&lt; IteratorType2, Predicate2 &gt; &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>reference</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a3be76335ce808f1e2fab4876e7df87b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>pointer</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a98bb53b4b4d088de3ab688e940ac19ee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>FilteredIterator &amp;</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a47c5ec5af28f461c027a8da98e22a06b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FilteredIterator</type>
      <name>operator++</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>ac3b2bb6a0f5b6b486250e6dd6dde25df</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>FilteredIterator &amp;</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a56d6f19ae766defb91fd7ed5a5585f29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const FilteredIterator</type>
      <name>operator--</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a66c8254239fff0d7a89ec33378bf89f3</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type>IteratorType</type>
      <name>current</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>aeaaede90af91433e3fc0c438266a1f10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IteratorType</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>aac4b1feeaeb5cf3155dd07315863a2f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>IteratorType</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>af9a6dee9ddb054bb39ee131825eb7ad4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Predicate</type>
      <name>pred</name>
      <anchorfile>classTeuchos_1_1FilteredIterator.html</anchorfile>
      <anchor>a5890a6454380716fe45cd80ca8361972</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Flops</name>
    <filename>classTeuchos_1_1Flops.html</filename>
    <member kind="variable" protection="protected">
      <type>double</type>
      <name>flops_</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a0868f8619e4f80b4c0e19377f880b90c</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>CompObject</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>aeb81cd9d486202481fc14222ef1fc42a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a574fc1cd29a43a86b26362d23c6fae9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Flops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>acfcf9b076a7785ec1c53d2ec3ac80911</anchor>
      <arglist>(const Flops &amp;flops)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Flops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a441edc98b229eb85b6317c5e20414d85</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>flops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a73d4406fa59f883f104ff9564464bee9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resetFlops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>acee7c8a79b57fa8eac61b745026f357a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a848355b94e0a748d7efb21b11321e5fb</anchor>
      <arglist>(int addflops) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a0eeb955a425d49d987fe0bc5c5192e1d</anchor>
      <arglist>(long int addflops) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>ad42ffbe8f052027aca464c63aea39916</anchor>
      <arglist>(double addflops) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>updateFlops</name>
      <anchorfile>classTeuchos_1_1Flops.html</anchorfile>
      <anchor>a5b779f8954577348e2e960a757af3ae6</anchor>
      <arglist>(float addflops) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Foo</name>
    <filename>classTeuchos_1_1Foo.html</filename>
    <base virtualness="virtual">Teuchos::ParameterListAcceptor</base>
    <member kind="function">
      <type></type>
      <name>Foo</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>aaff522a4ac664a49fbf438233b01ac6a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Foo</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a1351f79d81c2a9e658861ded145bd76e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a9fd78dabf117e6dd493851723b144298</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setDefaults</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a54d86bbc4301e44fa0672bd35f564ad8</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a80a4c3a9939c9d961b849eb154de88f0</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a6468ce8acc26d1e297ca9de4377743b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a973dd154784da29eb63c09c62499888b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>aebb6c4f8d453c03e89a88b07359f4d63</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classTeuchos_1_1Foo.html</anchorfile>
      <anchor>a8c4dec1214b23c28aeb92b4f58250fb6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FooA</name>
    <filename>classTeuchos_1_1FooA.html</filename>
    <base virtualness="virtual">Teuchos::Foo</base>
    <member kind="function">
      <type></type>
      <name>FooA</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>a174a98f37d981693ff8ee56755c57420</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FooA</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>abcc68bb680108e8f84cd07d13a1efd36</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>af1a9dc9fe7fb07b1440ad7df1283b4f1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaults</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>ab62dd98c8e70463403d1197a920526c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>ae5332d7ea8719b9b77fc1fd8964002e4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>foo_</name>
      <anchorfile>classTeuchos_1_1FooA.html</anchorfile>
      <anchor>a86867a80caadcf449482d7dfaeae5b45</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FooB</name>
    <filename>classTeuchos_1_1FooB.html</filename>
    <base virtualness="virtual">Teuchos::Foo</base>
    <member kind="function">
      <type></type>
      <name>FooB</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>a7e16e80bd50318f91dddeadcfe015c07</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FooB</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>a7addafdba6ad220870b03a06d5d8ccbc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>a8c835978555a1272083771e2cf3e146b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaults</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>abf5bf9ab31f47a471981fd2663a533d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>a3aa206f8454f1e7ff6cc127a485ef921</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>foo_</name>
      <anchorfile>classTeuchos_1_1FooB.html</anchorfile>
      <anchor>a6ab3b7f9d098c1bef5d2d72e0a39124e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FooC</name>
    <filename>classTeuchos_1_1FooC.html</filename>
    <base virtualness="virtual">Teuchos::Foo</base>
    <member kind="function">
      <type></type>
      <name>FooC</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>a8ed6a73568633ac1e8dd30ebe0f49bf4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~FooC</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>a7b65aafa39c6108832fd5b7175f23d95</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getString</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>a5aa07f99fb5b56a2a185fcc772763f44</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaults</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>a79ccf8240e97cdac7da5dc844a6141b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>a327ff6c9b73448bf6fa8722b0f5206df</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>foo_</name>
      <anchorfile>classTeuchos_1_1FooC.html</anchorfile>
      <anchor>ad2539704a2770c16dbb94875e434c373</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FunctionObject</name>
    <filename>classTeuchos_1_1FunctionObject.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1FunctionObject.html</anchorfile>
      <anchor>ada4a4d5c8e2b09ecbe386285f94a58d4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getXMLTagName</name>
      <anchorfile>classTeuchos_1_1FunctionObject.html</anchorfile>
      <anchor>a6ee94d1d98cc022993d20adf802d8aa5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FunctionObjectXMLConverter</name>
    <filename>classTeuchos_1_1FunctionObjectXMLConverter.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type>RCP&lt; FunctionObject &gt;</type>
      <name>fromXMLtoFunctionObject</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverter.html</anchorfile>
      <anchor>a85d176a250abe4390baa4858d6de503f</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; FunctionObject &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverter.html</anchorfile>
      <anchor>ac78eb228d656d3e823858ecb48000856</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const  =0</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>fromFunctionObjecttoXML</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverter.html</anchorfile>
      <anchor>ad6d9669a6e40a65fa3d1bedab1720d90</anchor>
      <arglist>(const RCP&lt; const FunctionObject &gt; function) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertFunctionObject</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverter.html</anchorfile>
      <anchor>a788c2616f78974eb792e1e19be73aa81</anchor>
      <arglist>(const RCP&lt; const FunctionObject &gt; function, XMLObject &amp;xmlObj) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverter.html</anchorfile>
      <anchor>a0d8be7bbe4a96fb63a62dcfb48522b51</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::FunctionObjectXMLConverterDB</name>
    <filename>classTeuchos_1_1FunctionObjectXMLConverterDB.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addConverter</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a7bc84516b0e4d8602278dde6d3c06685</anchor>
      <arglist>(RCP&lt; const FunctionObject &gt; function, RCP&lt; FunctionObjectXMLConverter &gt; converterToAdd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const FunctionObjectXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a3109e5007716b9cf6690a5686261adc4</anchor>
      <arglist>(const FunctionObject &amp;function)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const FunctionObjectXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>aec974870e7814154d8a85cf27f40de3b</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XMLObject</type>
      <name>convertFunctionObject</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>aac715055b9fe4ffccfb0e6748f2f32a8</anchor>
      <arglist>(RCP&lt; const FunctionObject &gt; function)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; FunctionObject &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>af26be509dd0ba3c045ad629a33387e9c</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printKnownConverters</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a4d61f4a1e3dd029e10539f944c760889</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; FunctionObjectXMLConverter &gt; &gt;</type>
      <name>ConverterMap</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a7f2c459a6f521e91a6e46e0c9b40fc6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, RCP&lt; FunctionObjectXMLConverter &gt; &gt;</type>
      <name>ConverterPair</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a7bdb97b7326c6163dc0cbc6970abb5e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ConverterMap &amp;</type>
      <name>getConverterMap</name>
      <anchorfile>classTeuchos_1_1FunctionObjectXMLConverterDB.html</anchorfile>
      <anchor>a56d317c296c0590745f47e7dff17efe9</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Get_A_f_return</name>
    <filename>classGet__A__f__return.html</filename>
    <member kind="function">
      <type></type>
      <name>Get_A_f_return</name>
      <anchorfile>classGet__A__f__return.html</anchorfile>
      <anchor>a734986cf5b96f9ac82c123b436ee1977</anchor>
      <arglist>(const A *a, int *a_f_return)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Get_A_f_return</name>
      <anchorfile>classGet__A__f__return.html</anchorfile>
      <anchor>a4ce7952e5f0f2633875a2e32476b669e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Get_A_f_return</name>
      <anchorfile>classGet__A__f__return.html</anchorfile>
      <anchor>a5075e23ca670cbb25071381113c2b0af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const A *</type>
      <name>a_</name>
      <anchorfile>classGet__A__f__return.html</anchorfile>
      <anchor>a0312bb40a3bcc552a0c13d45e0df42c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int *</type>
      <name>a_f_return_</name>
      <anchorfile>classGet__A__f__return.html</anchorfile>
      <anchor>a44348af5f5e369773f8805581e9ab584</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::GivensRotator</name>
    <filename>classTeuchos_1_1details_1_1GivensRotator.html</filename>
    <templarg></templarg>
    <templarg>isComplex</templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::GivensRotator&lt; ScalarType, false &gt;</name>
    <filename>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01false_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>c_type</name>
      <anchorfile>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01false_01_4.html</anchorfile>
      <anchor>a284e983f8fe2094386ba14f819bf9760</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01false_01_4.html</anchorfile>
      <anchor>a64c6b0f91e47a56957277b4aa8d6ec61</anchor>
      <arglist>(ScalarType *da, ScalarType *db, ScalarType *c, ScalarType *s) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>SIGN</name>
      <anchorfile>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01false_01_4.html</anchorfile>
      <anchor>a65f9ed25eb8046fa2dadeaddecc547f5</anchor>
      <arglist>(ScalarType x, ScalarType y) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::GivensRotator&lt; ScalarType, true &gt;</name>
    <filename>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01true_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>c_type</name>
      <anchorfile>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01true_01_4.html</anchorfile>
      <anchor>aa5da650d845c873847a27732c737e5ff</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ROTG</name>
      <anchorfile>classTeuchos_1_1details_1_1GivensRotator_3_01ScalarType_00_01true_01_4.html</anchorfile>
      <anchor>a8285ac83f783a01972f29ca4142e596e</anchor>
      <arglist>(ScalarType *ca, ScalarType *cb, typename ScalarTraits&lt; ScalarType &gt;::magnitudeType *c, ScalarType *s) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::GlobalMPISession</name>
    <filename>classTeuchos_1_1GlobalMPISession.html</filename>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>ae245fab5d33fce33fa355c53c7b8f064</anchor>
      <arglist>(std::ostream *out)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>justInTimeInitialize</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a5d2dcb57ae5b22194a272c3bb82966b2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>haveMPIState_</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a92919ed0caa1bab35b9eccc32a554a37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>mpiIsFinalized_</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a5e566e8857b1258e9566a8d25a8ba6aa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>rank_</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>ac1e191aafde8c4f32d0180e2872ccb40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>nProc_</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>abad71c82d390d169a650884e62d20045</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GlobalMPISession</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a1b27c39343f92ac39c448133f3f4810f</anchor>
      <arglist>(int *argc, char ***argv, std::ostream *out=&amp;std::cout)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~GlobalMPISession</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>ac790f167e594ac27abbaf90a6a3ddc99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>mpiIsInitialized</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a4b365994186b23d48a0d972d8bac1178</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>mpiIsFinalized</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a7f5b947725d81e76c45ebfa2d2ac9fbe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getRank</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a0bffffa883a6c0b20ce5dfafcbe71f38</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getNProc</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a20f86b4773ad754560336a8c0611e2b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>barrier</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a0aa2322856997cd8f57482779ea64d11</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>sum</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>a0539813777c6cc22133dbbc11aff7511</anchor>
      <arglist>(int localVal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>allGather</name>
      <anchorfile>classTeuchos_1_1GlobalMPISession.html</anchorfile>
      <anchor>ab096013d294c003262d9c3d255af7079</anchor>
      <arglist>(int localVal, const ArrayView&lt; int &gt; &amp;allVals)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::GraphAdder</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>index_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>aed2cd9095526250ce21b72c9199212eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>GraphElement&lt; Ordinal &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a1e566c63f23bd0aee974dfe7b7daf99c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::vector&lt; element_type &gt;::size_type</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a4bf3c9f31c65cb8220e8ab25ea276e31</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GraphAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>af2427f39763ca004e24f0cc6e32bc5b9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GraphAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a03aead1cf52e67b16d7705f118212577</anchor>
      <arglist>(const Ordinal expectedNumRows, const Ordinal expectedNumCols, const Ordinal expectedNumEntries, const bool tolerant=false, const bool debug=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a98b6837eed319ffb550924cb5cd8968a</anchor>
      <arglist>(const Ordinal i, const Ordinal j, const bool countAgainstTotal=true)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>aceef558e59435ae499a18e1d25f4d145</anchor>
      <arglist>(std::ostream &amp;out, const bool doMerge, const bool replace=false)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; size_type, size_type &gt;</type>
      <name>merge</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a56b1b1d3c6a7fa818aa22046e9c11ecd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeAndConvertToCSR</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a95a142f7351ad0c6ef3b71922b2f7ecb</anchor>
      <arglist>(size_type &amp;numUniqueElts, size_type &amp;numRemovedElts, Teuchos::ArrayRCP&lt; Ordinal &gt; &amp;rowptr, Teuchos::ArrayRCP&lt; Ordinal &gt; &amp;colind)</arglist>
    </member>
    <member kind="function">
      <type>const std::vector&lt; element_type &gt; &amp;</type>
      <name>getEntries</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a9c76a1acc25d08de4b21ea93cfa4075c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a24457cbdf7b605d6e9561c6a073398b6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Ordinal</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>ae6e5172c18c61d25947a1fa6b719f2f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Ordinal</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a522c8b2514c231744cbd137670be8693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumRows_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a0612efea6f5f70fdae1a18058e2972e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumCols_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a3a5613a06ad178a16d45198b971990f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>expectedNumEntries_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>af32149d355dbb443cb8fda1bf0cdabad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumRows_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>ac387650bdea5688f5976b55771b7cfaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumCols_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a368e74dd48e05d9d141403162a279364</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>seenNumEntries_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a4164d4d63643d2402988d262dc1e9267</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>tolerant_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>a8fd9f1966b579c5df516b99f71046a69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>debug_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>adc0d27378bf34be223e58a31705624db</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::vector&lt; element_type &gt;</type>
      <name>elts_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphAdder.html</anchorfile>
      <anchor>ad1bd964d6377cc1eb28204356794aefc</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::GraphElement</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>GraphElement</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a457d3b2bac6881997b3bba3ac4644fb6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>GraphElement</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a644eae195287755a0db0a4a7b7f4fcf5</anchor>
      <arglist>(const Ordinal i, const Ordinal j)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a752b4b0511a525d9f926250ccce63be4</anchor>
      <arglist>(const GraphElement &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a0d709989e45d497cae0c38a5bccb6418</anchor>
      <arglist>(const GraphElement &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>ad3f061fd9287fac96c7e6488cf7323fd</anchor>
      <arglist>(const GraphElement &amp;rhs) const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>rowIndex</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a232df5e108dbaa992324b23e6801145a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>colIndex</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>acf634d1c325e66e0341d097cc0ab07c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>rowIndex_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>a47546376891033c2a1755c1c80938e58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>colIndex_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1GraphElement.html</anchorfile>
      <anchor>ac21e19293dd300aed07cc58efd55db2b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Handle</name>
    <filename>classTeuchos_1_1Handle.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Teuchos::ConstHandle</base>
    <member kind="function">
      <type></type>
      <name>Handle</name>
      <anchorfile>classTeuchos_1_1Handle.html</anchorfile>
      <anchor>a1bbfdebfd86edea501b6af9fee8c034d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Handle</name>
      <anchorfile>classTeuchos_1_1Handle.html</anchorfile>
      <anchor>a80883fb98b53829c9e0052bb60e751ec</anchor>
      <arglist>(const RCP&lt; PointerType &gt; &amp;smartPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Handle</name>
      <anchorfile>classTeuchos_1_1Handle.html</anchorfile>
      <anchor>af3af24439dce7623462c44e4278a7704</anchor>
      <arglist>(Handleable&lt; PointerType &gt; *rawPtr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; PointerType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1Handle.html</anchorfile>
      <anchor>aa299f8ef6c723ecaf3f721e93d0efed8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PointerType *</type>
      <name>rawPtr</name>
      <anchorfile>classTeuchos_1_1Handle.html</anchorfile>
      <anchor>a4b29d071d5916a8bd89fbaf59614aa6a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Handleable</name>
    <filename>classTeuchos_1_1Handleable.html</filename>
    <templarg>Base</templarg>
    <base virtualness="virtual">Teuchos::ConstHandleable</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Handleable</name>
      <anchorfile>classTeuchos_1_1Handleable.html</anchorfile>
      <anchor>a4988b5cc8243f7d063ce70f19fad0f3e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; Base &gt;</type>
      <name>getRcp</name>
      <anchorfile>classTeuchos_1_1Handleable.html</anchorfile>
      <anchor>a3a53fdddedd933b0d2abbebe47c5eea6</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::HashPair</name>
    <filename>classTeuchos_1_1HashPair.html</filename>
    <templarg>Key</templarg>
    <templarg>Value</templarg>
    <member kind="function">
      <type></type>
      <name>HashPair</name>
      <anchorfile>classTeuchos_1_1HashPair.html</anchorfile>
      <anchor>a2d7321a394cf8e0b821bd5b428265603</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>HashPair</name>
      <anchorfile>classTeuchos_1_1HashPair.html</anchorfile>
      <anchor>aa2115af5559e4f45279b566916e8045c</anchor>
      <arglist>(const Key &amp;key, const Value &amp;value)</arglist>
    </member>
    <member kind="variable">
      <type>Key</type>
      <name>key_</name>
      <anchorfile>classTeuchos_1_1HashPair.html</anchorfile>
      <anchor>a252177f02da9e61fa4fc26d299b31b07</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Value</type>
      <name>value_</name>
      <anchorfile>classTeuchos_1_1HashPair.html</anchorfile>
      <anchor>a66a460e6435f139aec4aa01a25898d19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::HashSet</name>
    <filename>classTeuchos_1_1HashSet.html</filename>
    <templarg>Key</templarg>
    <member kind="function">
      <type></type>
      <name>HashSet</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a67c6c1dd10fa8d6014eff3062d8398ba</anchor>
      <arglist>(int capacity=19)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsKey</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a7fff069d84e0b8f1d45c9eba982a4663</anchor>
      <arglist>(const Key &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a45988f3ddfd9b008a99fefd314de08c6</anchor>
      <arglist>(const Key &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>aca49ee5ab354ac1087166e8f3a7f451e</anchor>
      <arglist>(const Key &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a096de3e67c941edcbf07ef194521dcbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Key &gt;</type>
      <name>arrayify</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a5642574be5977e368204723305f37ec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayify</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>ae4c497a02763a2ae621235e7dd77a964</anchor>
      <arglist>(Array&lt; Key &gt; &amp;keys) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>ac3bda9bc14b4dfb74faf509a2b41d27d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>rehash</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a9fc937e74a01fb091beffb6cd6d3d3a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>nextPrime</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>aa98a22472ea21304cca8a1868a0fb70b</anchor>
      <arglist>(int newCap) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; Array&lt; Key &gt; &gt;</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a4278c4321a5067d8c51241a31b64ae05</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a56443dd552d169131f2664bc1951ab1a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>capacity_</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>aea727a2e476453825b8c94fc40709c7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Key</type>
      <name>mostRecentKey_</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a36f9c07be744213c3f2d99b34925dab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1HashSet.html</anchorfile>
      <anchor>a37d31a3a9eca749489d711f8d8fc9aee</anchor>
      <arglist>(std::ostream &amp;os, const HashSet&lt; Key &gt; &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Hashtable</name>
    <filename>classTeuchos_1_1Hashtable.html</filename>
    <templarg>Key</templarg>
    <templarg>Value</templarg>
    <member kind="function">
      <type></type>
      <name>Hashtable</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>af128434f7127d25027deff8c9c63b5ff</anchor>
      <arglist>(int capacity=101, double rehashDensity=0.8)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsKey</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a2e6aa3ba93cbe61c14597db6fd9aed14</anchor>
      <arglist>(const Key &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>const Value &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>ab32e04e56518ac955960236b192934c1</anchor>
      <arglist>(const Key &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>put</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>ab197a2b2031547e671d725384df149cd</anchor>
      <arglist>(const Key &amp;key, const Value &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>aff32d447dc7b2835d8c6d00c0806f483</anchor>
      <arglist>(const Key &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a0d092a794a05720455f886ce7e6505fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayify</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a29400deb2646aa32d977455b31982e6f</anchor>
      <arglist>(Array&lt; Key &gt; &amp;keys, Array&lt; Value &gt; &amp;values) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>avgDegeneracy</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a0fd012a9449d902799d75d1cc799db43</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>density</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>ab8fe7c854ed4fc484109d1d883a8ac3d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRehashDensity</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a171405edadc2e5631bab93125e9d4500</anchor>
      <arglist>(double rehashDensity)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a7f8e0b4d83aa1343cfe342e37269bd0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>rehash</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a79ebbbc067d4290808422d2234c78e0b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>nextPrime</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a12eb0d739b3517178a9f076f9f83622c</anchor>
      <arglist>(int newCap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>accumulateAvgFill</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a551d94e59bbd432765c4b125aab6c91b</anchor>
      <arglist>(int n) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; Array&lt; HashPair&lt; Key, Value &gt; &gt; &gt;</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a39985f1e9b8b9ca5e7a4f01c26e93804</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>ad98fcf00d4199a329d3c52f2d1ef4123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>capacity_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>af095b32a15d4f56b6880a678a68363c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Value</type>
      <name>mostRecentValue_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a6120aaba3111ef5e13d22a720e7b035d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Key</type>
      <name>mostRecentKey_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>acd389611bfb010ea73c4e0eb224e3dec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>nHits_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a361d751a549ecd864151acc617315b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>avgDegeneracy_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a93b675780e35b773e7a451c6347be242</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>rehashDensity_</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>ad61b8514a66b096c741750f15b536d56</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Hashtable.html</anchorfile>
      <anchor>a28b5416a044cc01f221da9e29222ba08</anchor>
      <arglist>(std::ostream &amp;os, const Hashtable&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::HashUtils</name>
    <filename>classTeuchos_1_1HashUtils.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>nextPrime</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a8ff320af820953ad54124676005701f3</anchor>
      <arglist>(int newCapacity)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getHashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a5c6c25f6a840aa1f85b163d2bbf8b849</anchor>
      <arglist>(const unsigned char *a, size_t len)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>primeCount_</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a9283c3f6411cb484af9a61f45405e0e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const int</type>
      <name>primes_</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>ac5b75902f7a701eebf35b514270e2b24</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a0e037800d60fb4d5e655a153341f74c5</anchor>
      <arglist>(const T &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>aba1a3426006e2c493714ad11711f4909</anchor>
      <arglist>(const int &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>ac6d0cfe6fab0c82af270fe01bed132cb</anchor>
      <arglist>(const unsigned &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a2424d2f8c2082da9a868701d5e267c48</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>ace78193a4e76c5bd7391b3349e92f13a</anchor>
      <arglist>(const bool &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>ab47f2241b2a0355f358f30068bfc84eb</anchor>
      <arglist>(const long long &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a53067f1381cc987651ac919be5a4cc80</anchor>
      <arglist>(const long &amp;x)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>hashCode</name>
      <anchorfile>classTeuchos_1_1HashUtils.html</anchorfile>
      <anchor>a1c3f79afc8d440cc33f748a9bf093f54</anchor>
      <arglist>(const std::string &amp;x)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommandLineProcessor::HelpPrinted</name>
    <filename>classTeuchos_1_1CommandLineProcessor_1_1HelpPrinted.html</filename>
    <base>Teuchos::CommandLineProcessor::ParseError</base>
    <member kind="function">
      <type></type>
      <name>HelpPrinted</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor_1_1HelpPrinted.html</anchorfile>
      <anchor>acaf00153c40fdbdc26a8652e18662cfa</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::IDtoValidatorMap</name>
    <filename>classTeuchos_1_1IDtoValidatorMap.html</filename>
    <member kind="typedef">
      <type>std::map&lt; ParameterEntryValidator::ValidatorID, RCP&lt; ParameterEntryValidator &gt; &gt;</type>
      <name>ValidatorMap</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a73f602bde74d02c45c8f31013d2d1e6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; ParameterEntryValidator::ValidatorID, RCP&lt; ParameterEntryValidator &gt; &gt;</type>
      <name>IDValidatorPair</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a4fae9f833daa73d92ff26afc32d21f05</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValidatorMap::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a9654e1a57b926ff60d01ba24505632b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValidatorMap::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a2b03a19137ae16d1a4d80cfed855d46e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>ac5e4fe7d1f697f68d35ca2bc27c9926d</anchor>
      <arglist>(IDValidatorPair toInsert)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a30ca3a30089d77ef3af2412229831274</anchor>
      <arglist>(int id) const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>af08786866326970e8262aab8dd8f4dd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a3ae4200704deebfa538a3de1a31f7e57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>erase</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>a3afa0932381f91621da3ed84235bdf98</anchor>
      <arglist>(const ParameterEntryValidator::ValidatorID &amp;x)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidatorMap</type>
      <name>validatorMap</name>
      <anchorfile>classTeuchos_1_1IDtoValidatorMap.html</anchorfile>
      <anchor>aa79598141f637c66207e2ba7e733d584</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::IncompatibleIteratorsError</name>
    <filename>classTeuchos_1_1IncompatibleIteratorsError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>IncompatibleIteratorsError</name>
      <anchorfile>classTeuchos_1_1IncompatibleIteratorsError.html</anchorfile>
      <anchor>a37bae25c7c407a3362d58a854b698bbd</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::UnitTestRepository::InstanceData</name>
    <filename>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</filename>
    <member kind="typedef">
      <type>Teuchos::Array&lt; UnitTestData &gt;</type>
      <name>unitTests_t</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a82b876f02c3668bda138ad7c0b32ebd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>InstanceData</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a9af796fefad4db21d02adfd399e92f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>unitTests_t</type>
      <name>unitTests</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>ae45d022281bb2b0b9601a30b818da2ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>CommandLineProcessor</type>
      <name>clp</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a362cc0467c740d256ad4d6e07879e504</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>EShowTestDetails</type>
      <name>showTestDetails</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>aebb2abd4de487e19c31cda37c7f8909c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>globallyReduceUnitTestResult</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>aa5ba1d80c769c44019f0948607f76536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showSrcLocation</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>ab1e09819c683cc67b6c9e2474b427c70</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>showFailSrcLocation</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a97a8998c09a2107360a07a52c5839fca</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>noOp</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>aac8126cfcc4baa18f87e558aa48bcd67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>groupName</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>afe75d8853001a16ebeae0d3377ba50c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>testName</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>ae3e0f019e4e76514013a26c796aa1cea</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>notUnitTestName</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a582920d7993635305a9358f020a0a1e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>testCounter</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository_1_1InstanceData.html</anchorfile>
      <anchor>a9f1fac37d85676b6520cd12572483945</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::IntEntry</name>
    <filename>classTeuchos_1_1IntEntry.html</filename>
    <base>Teuchos::TableEntry</base>
    <member kind="function">
      <type></type>
      <name>IntEntry</name>
      <anchorfile>classTeuchos_1_1IntEntry.html</anchorfile>
      <anchor>a81e8bff8f229052d35041bcb1ed042c9</anchor>
      <arglist>(int value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1IntEntry.html</anchorfile>
      <anchor>a24e2850d74f8a1f7694c0d27777c007d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1IntEntry.html</anchorfile>
      <anchor>a8e60edc9121bb0350dbfe1213ed5e6dd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::InvalidArrayStringRepresentation</name>
    <filename>classTeuchos_1_1InvalidArrayStringRepresentation.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidArrayStringRepresentation</name>
      <anchorfile>classTeuchos_1_1InvalidArrayStringRepresentation.html</anchorfile>
      <anchor>a6b864c5d89d9ea6e8384554ab0d9f7c9</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::InvalidConditionException</name>
    <filename>classTeuchos_1_1InvalidConditionException.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidConditionException</name>
      <anchorfile>classTeuchos_1_1InvalidConditionException.html</anchorfile>
      <anchor>a20a71a5620146ebbf2940fb8905f6f1c</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::InvalidDependencyException</name>
    <filename>classTeuchos_1_1InvalidDependencyException.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidDependencyException</name>
      <anchorfile>classTeuchos_1_1InvalidDependencyException.html</anchorfile>
      <anchor>a1a89a8ec0f79712594aed36ab23d4ba9</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TabularOutputter::InvalidFieldOutputError</name>
    <filename>classTeuchos_1_1TabularOutputter_1_1InvalidFieldOutputError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>InvalidFieldOutputError</name>
      <anchorfile>classTeuchos_1_1TabularOutputter_1_1InvalidFieldOutputError.html</anchorfile>
      <anchor>a578a5743d8ebc1b2d2fee2995bf59b1e</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TabularOutputter::InvalidFieldSpecError</name>
    <filename>classTeuchos_1_1TabularOutputter_1_1InvalidFieldSpecError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>InvalidFieldSpecError</name>
      <anchorfile>classTeuchos_1_1TabularOutputter_1_1InvalidFieldSpecError.html</anchorfile>
      <anchor>ad5a4a6033696595276ebf68bc105f994</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidKeyError</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1InvalidKeyError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>InvalidKeyError</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1InvalidKeyError.html</anchorfile>
      <anchor>aedea49c74cdd7873c688dbebb0d3e0a8</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidOrdinalIndexError</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1InvalidOrdinalIndexError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>InvalidOrdinalIndexError</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1InvalidOrdinalIndexError.html</anchorfile>
      <anchor>affc55948dfefe22b7fce8e1d0ec0a790</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Exceptions::InvalidParameter</name>
    <filename>classTeuchos_1_1Exceptions_1_1InvalidParameter.html</filename>
    <member kind="function">
      <type></type>
      <name>InvalidParameter</name>
      <anchorfile>classTeuchos_1_1Exceptions_1_1InvalidParameter.html</anchorfile>
      <anchor>a3936572ba50a2672cd4640afeb69670e</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Exceptions::InvalidParameterName</name>
    <filename>classTeuchos_1_1Exceptions_1_1InvalidParameterName.html</filename>
    <base>Teuchos::Exceptions::InvalidParameter</base>
    <member kind="function">
      <type></type>
      <name>InvalidParameterName</name>
      <anchorfile>classTeuchos_1_1Exceptions_1_1InvalidParameterName.html</anchorfile>
      <anchor>ab5b1f0299dcdf19e71b4c75983e9d2d5</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Exceptions::InvalidParameterType</name>
    <filename>classTeuchos_1_1Exceptions_1_1InvalidParameterType.html</filename>
    <base>Teuchos::Exceptions::InvalidParameter</base>
    <member kind="function">
      <type></type>
      <name>InvalidParameterType</name>
      <anchorfile>classTeuchos_1_1Exceptions_1_1InvalidParameterType.html</anchorfile>
      <anchor>a29a59492a660346f51de9f7b2fb9d09d</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Exceptions::InvalidParameterValue</name>
    <filename>classTeuchos_1_1Exceptions_1_1InvalidParameterValue.html</filename>
    <base>Teuchos::Exceptions::InvalidParameter</base>
    <member kind="function">
      <type></type>
      <name>InvalidParameterValue</name>
      <anchorfile>classTeuchos_1_1Exceptions_1_1InvalidParameterValue.html</anchorfile>
      <anchor>a7b2842abec4e35faa1587dedadc88c5a</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::TypeTraits::is_same</name>
    <filename>structTeuchos_1_1TypeTraits_1_1is__same.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structTeuchos_1_1TypeTraits_1_1is__same.html</anchorfile>
      <anchor>a8c3ea21aa5625ad1177b7ad03252d191a93e905928125be60e54dc8908e4f2486</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structTeuchos_1_1TypeTraits_1_1is__same.html</anchorfile>
      <anchor>a8c3ea21aa5625ad1177b7ad03252d191a93e905928125be60e54dc8908e4f2486</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::TypeTraits::is_same&lt; T, T &gt;</name>
    <filename>structTeuchos_1_1TypeTraits_1_1is__same_3_01T_00_01T_01_4.html</filename>
    <templarg></templarg>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structTeuchos_1_1TypeTraits_1_1is__same_3_01T_00_01T_01_4.html</anchorfile>
      <anchor>ad4621b77759931d7328062407ab66f40accf8f0a659d8c431b23935452554b12a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>value</name>
      <anchorfile>structTeuchos_1_1TypeTraits_1_1is__same_3_01T_00_01T_01_4.html</anchorfile>
      <anchor>ad4621b77759931d7328062407ab66f40accf8f0a659d8c431b23935452554b12a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase::KeyObjectPair</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</filename>
    <templarg>ObjType</templarg>
    <member kind="function">
      <type></type>
      <name>KeyObjectPair</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>a13f4e73204bf7a034aa756c4a239481a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyObjectPair</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>a8e032dc5b5f556a642292f3dfc3cf340</anchor>
      <arglist>(const std::string &amp;key_in, const ObjType &amp;obj_in, bool isActive_in=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>KeyObjectPair</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>abb50ee93ce3074abbad7b025a9f23409</anchor>
      <arglist>(const KeyObjectPair&lt; ObjType &gt; &amp;kop)</arglist>
    </member>
    <member kind="function">
      <type>KeyObjectPair&lt; ObjType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>afed354384f63473c03f3024acba282b1</anchor>
      <arglist>(const KeyObjectPair&lt; ObjType &gt; &amp;kop)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isActive</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>abfc44d6f527d9e34a497bd1923a4fb76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static KeyObjectPair&lt; ObjType &gt;</type>
      <name>makeInvalid</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>aed0f5470421ba6d26e15b34ae19ebfa0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>const std::string &amp;</type>
      <name>first</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>a1e3da0272ebe8ea5cb13c7db7da57305</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ObjType</type>
      <name>second</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>a1f86f8151fd6ec0098620815c6724142</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>key</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>ac0d01ba644603dc5b2ee66c22301d3c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isActive_</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1KeyObjectPair.html</anchorfile>
      <anchor>a609375af4e593a94a30aeb599558763e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::LabeledObject</name>
    <filename>classTeuchos_1_1LabeledObject.html</filename>
    <member kind="function">
      <type></type>
      <name>LabeledObject</name>
      <anchorfile>classTeuchos_1_1LabeledObject.html</anchorfile>
      <anchor>a075576549b14c7490425a9c737c2c536</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LabeledObject</name>
      <anchorfile>classTeuchos_1_1LabeledObject.html</anchorfile>
      <anchor>a13636f54d72e8be0fc6e8c2377f24b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setObjectLabel</name>
      <anchorfile>classTeuchos_1_1LabeledObject.html</anchorfile>
      <anchor>a30b44531596a055f4e3616e5d4e932ad</anchor>
      <arglist>(const std::string &amp;objectLabel)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getObjectLabel</name>
      <anchorfile>classTeuchos_1_1LabeledObject.html</anchorfile>
      <anchor>a694e7227b94908c251946d3b24cf62ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>objectLabel_</name>
      <anchorfile>classTeuchos_1_1LabeledObject.html</anchorfile>
      <anchor>a00ff4731fdfbc8a6db158dd2c8d96bc7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::LAPACK</name>
    <filename>classTeuchos_1_1LAPACK.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ae6467dc6969b9287b55102939a7ce756</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ac5aa4aab7118cd48cf621e5e15e406db</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a36232e09cb826b79943f9e5e4ce65b76</anchor>
      <arglist>(const LAPACK&lt; OrdinalType, ScalarType &gt; &amp;lapack)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LAPACK</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a611e8afe3f2097069bb703ab06e01db1</anchor>
      <arglist>(void)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a548789b95c6ccefd8de9a3489c49752d</anchor>
      <arglist>(const OrdinalType n, ScalarType *d, ScalarType *e, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a9a0b73da754cf2eda10fd588696efa61</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, const ScalarType *d, const ScalarType *e, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a8bb378ae996e526f0bec912f4e290317</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a542db173148b430ad031795280999fa9</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a37e6d9febeffe7586e466b448283e12a</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POCON</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a37988ce0c7465eef6f48e774666995bb</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aad5d8385d683f3032dcfd64fccdb7b08</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aaefe565a4257ce8d6120cebaec2423d9</anchor>
      <arglist>(const OrdinalType n, const ScalarType *A, const OrdinalType lda, MagnitudeType *S, MagnitudeType *scond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>PORFS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a16dcef049ae87aadf6d3d6c3dcc9ea75</anchor>
      <arglist>(const char UPLO, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>POSVX</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>abf63ba53b2ede6b8ac456827adef135c</anchor>
      <arglist>(const char FACT, const char UPLO, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, char EQUED, ScalarType *S, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aef6dd37c734ab9a154c600da36af1034</anchor>
      <arglist>(const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a632676638d7a03acdabad52145ac1d2f</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *S, const MagnitudeType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GELSS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a528014b6d689f3e1c40419ffc88f36fa</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *S, const ScalarType rcond, OrdinalType *rank, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGLSE</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ab4644c6d9116222430936dfd637fa51c</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType p, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *C, ScalarType *D, ScalarType *X, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a58badd497f7d9a7f01516c1c45d06b03</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQR2</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a2ab00a450f98bf0ce44363472e40affd</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType A[], const OrdinalType lda, ScalarType TAU[], ScalarType WORK[], OrdinalType *const info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a2c3d38efa3a0a34f274b986237acf9f1</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a29b63c4689a4bafe4778d6f18cef53ca</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASCL</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a968e44c5b2990b0e04c7bc3c42c885c1</anchor>
      <arglist>(const char TYPE, const OrdinalType kl, const OrdinalType ku, const MagnitudeType cfrom, const MagnitudeType cto, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEQP3</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aecb2fe46bbc45c9c53b49bbca9d70781</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *jpvt, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LASWP</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a2ea2d31590b9e994f05bbab65c15be61</anchor>
      <arglist>(const OrdinalType N, ScalarType A[], const OrdinalType LDA, const OrdinalType K1, const OrdinalType K2, const OrdinalType IPIV[], const OrdinalType INCX) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>afcc197ae184b728adf97e53a4f133daf</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a2319873d02bde453157a3fb4b40c9316</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRF</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a31e85356d352f9a1ba46552e666bfd1a</anchor>
      <arglist>(const OrdinalType n, ScalarType *dl, ScalarType *d, ScalarType *du, ScalarType *du2, OrdinalType *IPIV, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GTTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a5cb480a3ebf65656b265cc223608dba0</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *dl, const ScalarType *d, const ScalarType *du, const ScalarType *du2, const OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GETRI</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a0455600a33f2c95aa5a3087f5f59b0d4</anchor>
      <arglist>(const OrdinalType n, ScalarType *A, const OrdinalType lda, const OrdinalType *IPIV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LATRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ae476a19af960daf9705efc31499aea5e</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const char NORMIN, const OrdinalType N, ScalarType *A, const OrdinalType LDA, ScalarType *X, MagnitudeType *SCALE, MagnitudeType *CNORM, OrdinalType *INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GECON</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aee90a5ec1be52d0ea7c25925dfe8149b</anchor>
      <arglist>(const char NORM, const OrdinalType n, const ScalarType *A, const OrdinalType lda, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBCON</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a938cc8b20010fa71f2f3279d361dfaac</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, const ScalarType anorm, ScalarType *rcond, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>LANGB</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a04376bb0a637dcffdafc9ad3c059b1e6</anchor>
      <arglist>(const char NORM, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *WORK) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a612bf0a525d1f21ff66dbcca91785649</anchor>
      <arglist>(const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, OrdinalType *IPIV, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ad96383238aa67ae2c357570cc10dc787</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const ScalarType *A, const OrdinalType lda, ScalarType *R, ScalarType *C, ScalarType *rowcond, ScalarType *colcond, ScalarType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GERFS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a56e53392d5315f4846a289c661d19eb6</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBEQU</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ac76dcb824df4811a80703c10ebb080ee</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const ScalarType *A, const OrdinalType lda, MagnitudeType *R, MagnitudeType *C, MagnitudeType *rowcond, MagnitudeType *colcond, MagnitudeType *amax, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GBRFS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a9b1aa23e82ac75ec5e47c059d8999576</anchor>
      <arglist>(const char TRANS, const OrdinalType n, const OrdinalType kl, const OrdinalType ku, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, const ScalarType *AF, const OrdinalType ldaf, const OrdinalType *IPIV, const ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVX</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>af227026ca6226f2f61b1d8db4da63994</anchor>
      <arglist>(const char FACT, const char TRANS, const OrdinalType n, const OrdinalType nrhs, ScalarType *A, const OrdinalType lda, ScalarType *AF, const OrdinalType ldaf, OrdinalType *IPIV, char EQUED, ScalarType *R, ScalarType *C, ScalarType *B, const OrdinalType ldb, ScalarType *X, const OrdinalType ldx, ScalarType *rcond, ScalarType *FERR, ScalarType *BERR, ScalarType *WORK, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYTRD</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ac69779a0f83efb7d4ca5bcf8d8c1dff8</anchor>
      <arglist>(const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *D, ScalarType *E, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEHRD</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a75fbc961240421166ddd2244ca479f4e</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRS</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a7a2f01b0302e59086cfa904c04cd137f</anchor>
      <arglist>(const char UPLO, const char TRANS, const char DIAG, const OrdinalType n, const OrdinalType nrhs, const ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRTRI</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ab1528c9070c2200f4e6f71fde08eb5dc</anchor>
      <arglist>(const char UPLO, const char DIAG, const OrdinalType n, const ScalarType *A, const OrdinalType lda, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SPEV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aebeb57b4374a2e6c9d2c425ffa6e5a2b</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *AP, ScalarType *W, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYEV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a4cd5c3464a6cf25f2107cfe325f87704</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>SYGV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ad06101637407556e3ed1a5ae0ef84b1f</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, ScalarType *W, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ae0c6636c351262319d779e75306ed511</anchor>
      <arglist>(const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HEGV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>afc10b8e4492ec91e41d9f8aedff156f6</anchor>
      <arglist>(const OrdinalType itype, const char JOBZ, const char UPLO, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *W, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>STEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ae92e8442398b765db2e8587b312d2f17</anchor>
      <arglist>(const char COMPZ, const OrdinalType n, ScalarType *D, ScalarType *E, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>HSEQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a85c569409a12e58f924381127d2b93ea</anchor>
      <arglist>(const char JOB, const char COMPZ, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *H, const OrdinalType ldh, ScalarType *WR, ScalarType *WI, ScalarType *Z, const OrdinalType ldz, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a6bd58dcc4ea02fcacc1af391bb3c3be7</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *WR, ScalarType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a7679c7d07eeefa1134a2b39ca11641f7</anchor>
      <arglist>(const char JOBVS, const char SORT, OrdinalType(*ptr2func)(ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, ScalarType *W, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEES</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aaf48a07833cea1743ad4386732a35f38</anchor>
      <arglist>(const char JOBVS, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType *sdim, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VS, const OrdinalType ldvs, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ad91f93b70c3813b6e0a917f580f26c31</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *WR, MagnitudeType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a36e6e62a62b7028cac3ccdae58ba550c</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *WR, ScalarType *WI, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *SCALE, MagnitudeType *abnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEVX</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a68eafb4fe89f0bfdc8df3512e599a749</anchor>
      <arglist>(const char BALANC, const char JOBVL, const char JOBVR, const char SENSE, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, OrdinalType *ilo, OrdinalType *ihi, MagnitudeType *lscale, MagnitudeType *rscale, MagnitudeType *abnrm, MagnitudeType *bbnrm, MagnitudeType *RCONDE, MagnitudeType *RCONDV, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGEV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>afe8174504c69a7da690d8ae76be651be</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, ScalarType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TRSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ab5e873b5590258e4d7a0cff47ad7211b</anchor>
      <arglist>(const char JOB, const char COMPQ, const OrdinalType *SELECT, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, MagnitudeType *WR, MagnitudeType *WI, OrdinalType *M, ScalarType *S, MagnitudeType *SEP, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGSEN</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a73eb8eae68a21aea7e572c9da6ec5e7e</anchor>
      <arglist>(const OrdinalType ijob, const OrdinalType wantq, const OrdinalType wantz, const OrdinalType *SELECT, const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *Q, const OrdinalType ldq, ScalarType *Z, const OrdinalType ldz, OrdinalType *M, MagnitudeType *PL, MagnitudeType *PR, MagnitudeType *DIF, ScalarType *WORK, const OrdinalType lwork, OrdinalType *IWORK, const OrdinalType liwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GGES</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a99b11e5d603103c4b831a37a51255fd6</anchor>
      <arglist>(const char JOBVL, const char JOBVR, const char SORT, OrdinalType(*ptr2func)(ScalarType *, ScalarType *, ScalarType *), const OrdinalType n, ScalarType *A, const OrdinalType lda, ScalarType *B, const OrdinalType ldb, OrdinalType *sdim, MagnitudeType *ALPHAR, MagnitudeType *ALPHAI, MagnitudeType *BETA, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, ScalarType *WORK, const OrdinalType lwork, OrdinalType *BWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GESVD</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>afe249e9e9d5eac8a36089baa72d9a5db</anchor>
      <arglist>(const char JOBU, const char JOBVT, const OrdinalType m, const OrdinalType n, ScalarType *A, const OrdinalType lda, MagnitudeType *S, ScalarType *U, const OrdinalType ldu, ScalarType *V, const OrdinalType ldv, ScalarType *WORK, const OrdinalType lwork, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ab1130e0dc0384f5eab33253493b0e5ac</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORM2R</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>acc6e35def51192fd321835f7b5e099f4</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, const ScalarType A[], const OrdinalType lda, const ScalarType TAU[], ScalarType C[], const OrdinalType ldc, ScalarType WORK[], OrdinalType *const info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNMQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a4234261d4246a130b6d8e6e3af8204c3</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNM2R</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>adb59baa40a4c2f9885cf7e793a2139ae</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType M, const OrdinalType N, const OrdinalType K, const ScalarType A[], const OrdinalType LDA, const ScalarType TAU[], ScalarType C[], const OrdinalType LDC, ScalarType WORK[], OrdinalType *const INFO) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a5809cb88ae5834c2975020367013159f</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>UNGQR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aa4e2c1849049fb1ee57b5b56eb13ffe9</anchor>
      <arglist>(const OrdinalType m, const OrdinalType n, const OrdinalType k, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORGHR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a473097a84cf727de468fc413bbaee3f5</anchor>
      <arglist>(const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ORMHR</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>adc3ecd6d7d615b7ab4226e1eda1f8c5f</anchor>
      <arglist>(const char SIDE, const char TRANS, const OrdinalType m, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const ScalarType *A, const OrdinalType lda, const ScalarType *TAU, ScalarType *C, const OrdinalType ldc, ScalarType *WORK, const OrdinalType lwork, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a8b91652d5df93f2fd6013ef7e4050230</anchor>
      <arglist>(const char SIDE, const char HOWMNY, OrdinalType *select, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREVC</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a33ca9ba4241ec595d27aeb87cb767249</anchor>
      <arglist>(const char SIDE, const OrdinalType n, const ScalarType *T, const OrdinalType ldt, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *m, ScalarType *WORK, MagnitudeType *RWORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TREXC</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a6ab80694b4337c3259868fcd7da8be06</anchor>
      <arglist>(const char COMPQ, const OrdinalType n, ScalarType *T, const OrdinalType ldt, ScalarType *Q, const OrdinalType ldq, OrdinalType ifst, OrdinalType ilst, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>TGEVC</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ab2e227f5ac8648c3d897626ddb7e5942</anchor>
      <arglist>(const char SIDE, const char HOWMNY, const OrdinalType *SELECT, const OrdinalType n, ScalarType *S, const OrdinalType lds, ScalarType *P, const OrdinalType ldp, ScalarType *VL, const OrdinalType ldvl, ScalarType *VR, const OrdinalType ldvr, const OrdinalType mm, OrdinalType *M, ScalarType *WORK, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARTG</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aa10c6599b5dbd9435f9515e9edf0f569</anchor>
      <arglist>(const ScalarType f, const ScalarType g, MagnitudeType *c, ScalarType *s, ScalarType *r) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARFG</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a024b13b7136b24ffb7be775d492c5afd</anchor>
      <arglist>(const OrdinalType n, ScalarType *alpha, ScalarType *x, const OrdinalType incx, ScalarType *tau) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAL</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>ae528b5b73cb04063282b05bdddb0351f</anchor>
      <arglist>(const char JOBZ, const OrdinalType n, ScalarType *A, const OrdinalType lda, OrdinalType ilo, OrdinalType ihi, MagnitudeType *scale, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>GEBAK</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aeaf1fe411c04239da4343a38c52efe3b</anchor>
      <arglist>(const char JOBZ, const char SIDE, const OrdinalType n, const OrdinalType ilo, const OrdinalType ihi, const MagnitudeType *scale, const OrdinalType m, ScalarType *V, const OrdinalType ldv, OrdinalType *info) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LARND</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aa86b39b5d31bf3e0669863777adcd109</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>LARNV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a49bb1cdc6396c4c8f87278aadeb01156</anchor>
      <arglist>(const OrdinalType idist, OrdinalType *seed, const OrdinalType n, ScalarType *v) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAMCH</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a72c38f80949918fc773c216fcafe7efd</anchor>
      <arglist>(const char CMACH) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>ILAENV</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>a276699c8cee3bbf0f19931006b3d0aeb</anchor>
      <arglist>(const OrdinalType ispec, const std::string &amp;NAME, const std::string &amp;OPTS, const OrdinalType N1=-1, const OrdinalType N2=-1, const OrdinalType N3=-1, const OrdinalType N4=-1) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>LAPY2</name>
      <anchorfile>classTeuchos_1_1LAPACK.html</anchorfile>
      <anchor>aa782292a3171eee8eb488829de2d282b</anchor>
      <arglist>(const ScalarType x, const ScalarType y) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::lapack_traits</name>
    <filename>structTeuchos_1_1details_1_1lapack__traits.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>int</type>
      <name>iwork_type</name>
      <anchorfile>structTeuchos_1_1details_1_1lapack__traits.html</anchorfile>
      <anchor>a87605db108a5ded8ee9fabe1dcaa5b1e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::details::lapack_traits&lt; std::complex&lt; T &gt; &gt;</name>
    <filename>structTeuchos_1_1details_1_1lapack__traits_3_01std_1_1complex_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>ScalarTraits&lt; T &gt;::magnitudeType</type>
      <name>iwork_type</name>
      <anchorfile>structTeuchos_1_1details_1_1lapack__traits_3_01std_1_1complex_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a52d50aac2ef928b2e1749c149554348e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Trilinos::Details::LinearSolver</name>
    <filename>classTrilinos_1_1Details_1_1LinearSolver.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSolver</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a74520497224e79aadf3b862133c09245</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setMatrix</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a2e6106cd194bfcae897d68d7e1202c14</anchor>
      <arglist>(const Teuchos::RCP&lt; const OP &gt; &amp;A)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; const OP &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a994f4bcb8a4ab9673280dacd7dbe6fb4</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>solve</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a3b48e12b32aed7fa2fa2b7e698817510</anchor>
      <arglist>(MV &amp;X, const MV &amp;B)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParameters</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>ac2664382f596c5ab1124bd21f0f2d313</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;params)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>symbolic</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a273f2024686e0bf3eb74037b6586acc1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>numeric</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolver.html</anchorfile>
      <anchor>a0ef89b7fda36355519bdd0c50c1fc3ef</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Trilinos::Details::LinearSolverFactory</name>
    <filename>classTrilinos_1_1Details_1_1LinearSolverFactory.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" virtualness="pure">
      <type>virtual Teuchos::RCP&lt; LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>classTrilinos_1_1Details_1_1LinearSolverFactory.html</anchorfile>
      <anchor>acb800c26f87c76dd93ca57f3921d9e4b</anchor>
      <arglist>(const std::string &amp;solverName)=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Trilinos::Details::Impl::LinearSolverFactoryRepository</name>
    <filename>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</filename>
    <templarg>MV</templarg>
    <templarg>OP</templarg>
    <templarg>NormType</templarg>
    <member kind="typedef">
      <type>Teuchos::RCP&lt; LinearSolverFactory&lt; MV, OP, NormType &gt; &gt;</type>
      <name>factory_pointer_type</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>a38dc1e718ccf51a211591d1c5f3bc636</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, factory_pointer_type &gt;</type>
      <name>map_type</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>aa38efddc4bc05c940dc8de510d8cc23b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static factory_pointer_type</type>
      <name>getFactory</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>a9f9d0c50a989e59f1a3ffdc23493b7c6</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>aa492c7ef0e6a0f68761fafc046d4158f</anchor>
      <arglist>(const std::string &amp;packageName, const factory_pointer_type &amp;factory)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>createFactories</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>a84bb4306bd50ba88bf0d3a5e3b535aa9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeFactories</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>a50dbb5e020eb16c1d4b8bd2d347ec561</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static map_type *</type>
      <name>factories_</name>
      <anchorfile>classTrilinos_1_1Details_1_1Impl_1_1LinearSolverFactoryRepository.html</anchorfile>
      <anchor>a20208fe1cdbb2c0591453c9b37604d1b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Common::LinearSolverTestBase</name>
    <filename>classCommon_1_1LinearSolverTestBase.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Trilinos::Details::LinearSolver</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~LinearSolverTestBase</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>a7beb653cf458d18b0d35abfb8d921159</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setMatrix</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>ae2b5d1ff97317e59bd86ce7b493fc785</anchor>
      <arglist>(const Teuchos::RCP&lt; const OP &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const OP &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>a640624d7e1008b7580b85d6598f74d96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>aa172bee81dfa26802c9de7b05cc7dbe0</anchor>
      <arglist>(const Teuchos::RCP&lt; Teuchos::ParameterList &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>symbolic</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>ad11fc61cc7feb786f44a0b4c43a75094</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>numeric</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>a297c915fc7eacac20a627a386d3afeb7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual std::string</type>
      <name>name</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>a55c0e1338938e6bb19ee817bff5a2231</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; const OP &gt;</type>
      <name>A_</name>
      <anchorfile>classCommon_1_1LinearSolverTestBase.html</anchorfile>
      <anchor>a66b123ddfbd4dfbb2353ea7f3c61e1c2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::m_bad_cast</name>
    <filename>classTeuchos_1_1m__bad__cast.html</filename>
    <member kind="function">
      <type></type>
      <name>m_bad_cast</name>
      <anchorfile>classTeuchos_1_1m__bad__cast.html</anchorfile>
      <anchor>a91457a65b0f92d63148ffa85a648c698</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~m_bad_cast</name>
      <anchorfile>classTeuchos_1_1m__bad__cast.html</anchorfile>
      <anchor>a1f12638b785e71c3003adec5e139f297</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>what</name>
      <anchorfile>classTeuchos_1_1m__bad__cast.html</anchorfile>
      <anchor>a4a776ea411f76af6ad8f69278941a754</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>msg</name>
      <anchorfile>classTeuchos_1_1m__bad__cast.html</anchorfile>
      <anchor>adfb5724c47233160f3ea90b6f9470e70</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::MagValue</name>
    <filename>classTeuchos_1_1details_1_1MagValue.html</filename>
    <templarg>ScalarType</templarg>
    <templarg>isComplex</templarg>
    <member kind="function">
      <type>void</type>
      <name>blas_dabs1</name>
      <anchorfile>classTeuchos_1_1details_1_1MagValue.html</anchorfile>
      <anchor>a7a636a9600287a52a5a2318dbbdfbe01</anchor>
      <arglist>(const ScalarType *a, typename ScalarTraits&lt; ScalarType &gt;::magnitudeType *ret) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::MagValue&lt; ScalarType, false &gt;</name>
    <filename>classTeuchos_1_1details_1_1MagValue_3_01ScalarType_00_01false_01_4.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>blas_dabs1</name>
      <anchorfile>classTeuchos_1_1details_1_1MagValue_3_01ScalarType_00_01false_01_4.html</anchorfile>
      <anchor>af1d0e1c491622e9663787452f803067c</anchor>
      <arglist>(const ScalarType *a, ScalarType *ret) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::details::MagValue&lt; ScalarType, true &gt;</name>
    <filename>classTeuchos_1_1details_1_1MagValue_3_01ScalarType_00_01true_01_4.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>void</type>
      <name>blas_dabs1</name>
      <anchorfile>classTeuchos_1_1details_1_1MagValue_3_01ScalarType_00_01true_01_4.html</anchorfile>
      <anchor>a98cb16bdf9978a7089b31c017cd41273</anchor>
      <arglist>(const ScalarType *a, typename ScalarTraits&lt; ScalarType &gt;::magnitudeType *ret) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchosstd::map</name>
    <filename>classTeuchosstd_1_1map.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Max</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Max.html</filename>
    <templarg>isComparable</templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Max&lt; false, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Max_3_01false_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1Max_3_01false_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>a5b9690c49520be3e34cbf0d093a20c42</anchor>
      <arglist>(const Ordinal, const Packet[], Packet[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Max&lt; true, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Max_3_01true_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>max</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1Max_3_01true_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>a8f6f4cba3b4607faf0d54571ed8e88fc</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MaxLoc</name>
    <filename>classTeuchos_1_1MaxLoc.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; ScalarType, IndexType &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MaxLoc.html</anchorfile>
      <anchor>a668355db255a2aff49b4eece16422671</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; ScalarType, IndexType &gt; inBuffer[], std::pair&lt; ScalarType, IndexType &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MaxLoc&lt; Ordinal, double, int &gt;</name>
    <filename>classTeuchos_1_1MaxLoc_3_01Ordinal_00_01double_00_01int_01_4.html</filename>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; double, int &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MaxLoc_3_01Ordinal_00_01double_00_01int_01_4.html</anchorfile>
      <anchor>ad22631772903dcb9c6860f2c60ceefb7</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; double, int &gt; inBuffer[], std::pair&lt; double, int &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MaxValueReductionOp</name>
    <filename>classTeuchos_1_1MaxValueReductionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, Packet &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MaxValueReductionOp.html</anchorfile>
      <anchor>a6a8a9c7fb3f09c7dca29a0cab76630c4</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Min</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Min.html</filename>
    <templarg>isComparable</templarg>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Min&lt; false, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Min_3_01false_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1Min_3_01false_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>a34dd79ae3b08f2852cd7ad779c2d5cef</anchor>
      <arglist>(const Ordinal, const Packet[], Packet[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MixMaxUtilities::Min&lt; true, Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1MixMaxUtilities_1_1Min_3_01true_00_01Ordinal_00_01Packet_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>min</name>
      <anchorfile>classTeuchos_1_1MixMaxUtilities_1_1Min_3_01true_00_01Ordinal_00_01Packet_01_4.html</anchorfile>
      <anchor>a0ba4cd5723ace5ac769228d81745bfc7</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MinLoc</name>
    <filename>classTeuchos_1_1MinLoc.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; ScalarType, IndexType &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MinLoc.html</anchorfile>
      <anchor>a034af04fe041cdf7ba8e8b34f33d2f90</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; ScalarType, IndexType &gt; inBuffer[], std::pair&lt; ScalarType, IndexType &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MinLoc&lt; Ordinal, double, int &gt;</name>
    <filename>classTeuchos_1_1MinLoc_3_01Ordinal_00_01double_00_01int_01_4.html</filename>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; double, int &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MinLoc_3_01Ordinal_00_01double_00_01int_01_4.html</anchorfile>
      <anchor>a4384ce661f98eef1adcce562db4827b5</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; double, int &gt; inBuffer[], std::pair&lt; double, int &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MinLocNonzero</name>
    <filename>classTeuchos_1_1MinLocNonzero.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; ScalarType, IndexType &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MinLocNonzero.html</anchorfile>
      <anchor>ad6afd0513844dc5920043c8e9fd79053</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; ScalarType, IndexType &gt; inBuffer[], std::pair&lt; ScalarType, IndexType &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MinLocNonzero&lt; Ordinal, double, int &gt;</name>
    <filename>classTeuchos_1_1MinLocNonzero_3_01Ordinal_00_01double_00_01int_01_4.html</filename>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; double, int &gt; &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MinLocNonzero_3_01Ordinal_00_01double_00_01int_01_4.html</anchorfile>
      <anchor>a6f2f96ade6025c5e10ae28f888385932</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; double, int &gt; inBuffer[], std::pair&lt; double, int &gt; inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MinValueReductionOp</name>
    <filename>classTeuchos_1_1MinValueReductionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, Packet &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1MinValueReductionOp.html</anchorfile>
      <anchor>aed705ff54c93ef5f67eb227b15e80c89</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingConditionTagException</name>
    <filename>classTeuchos_1_1MissingConditionTagException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingConditionTagException</name>
      <anchorfile>classTeuchos_1_1MissingConditionTagException.html</anchorfile>
      <anchor>aaa885d22ef276ceed33a9ec8b342aae4</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingDependeeException</name>
    <filename>classTeuchos_1_1MissingDependeeException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingDependeeException</name>
      <anchorfile>classTeuchos_1_1MissingDependeeException.html</anchorfile>
      <anchor>a98305870fb2005528bb2fe075690dae5</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingDependeesException</name>
    <filename>classTeuchos_1_1MissingDependeesException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingDependeesException</name>
      <anchorfile>classTeuchos_1_1MissingDependeesException.html</anchorfile>
      <anchor>a7740c85fa4ccfe4e725892ed92a0a254</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingDependentException</name>
    <filename>classTeuchos_1_1MissingDependentException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingDependentException</name>
      <anchorfile>classTeuchos_1_1MissingDependentException.html</anchorfile>
      <anchor>a8860f977b265b928dc9f459a0fde1ac0</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingDependentsException</name>
    <filename>classTeuchos_1_1MissingDependentsException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingDependentsException</name>
      <anchorfile>classTeuchos_1_1MissingDependentsException.html</anchorfile>
      <anchor>a98148e87a30c366edae28e3924088a20</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TabularOutputter::MissingFieldsError</name>
    <filename>classTeuchos_1_1TabularOutputter_1_1MissingFieldsError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>MissingFieldsError</name>
      <anchorfile>classTeuchos_1_1TabularOutputter_1_1MissingFieldsError.html</anchorfile>
      <anchor>aa33f75d1656577e2436be117bb25f7a0</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TabularOutputter::MissingHeaderError</name>
    <filename>classTeuchos_1_1TabularOutputter_1_1MissingHeaderError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>MissingHeaderError</name>
      <anchorfile>classTeuchos_1_1TabularOutputter_1_1MissingHeaderError.html</anchorfile>
      <anchor>a27346e9603e00d73e1571250659385ab</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingParameterEntryDefinitionException</name>
    <filename>classTeuchos_1_1MissingParameterEntryDefinitionException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingParameterEntryDefinitionException</name>
      <anchorfile>classTeuchos_1_1MissingParameterEntryDefinitionException.html</anchorfile>
      <anchor>aa03a98e8876c0e46ec9cd569f9160399</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingRangesAndValidatorsTagException</name>
    <filename>classTeuchos_1_1MissingRangesAndValidatorsTagException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingRangesAndValidatorsTagException</name>
      <anchorfile>classTeuchos_1_1MissingRangesAndValidatorsTagException.html</anchorfile>
      <anchor>a9df8aaa3b6a6bdd5c8952072dd915307</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingValidatorDefinitionException</name>
    <filename>classTeuchos_1_1MissingValidatorDefinitionException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingValidatorDefinitionException</name>
      <anchorfile>classTeuchos_1_1MissingValidatorDefinitionException.html</anchorfile>
      <anchor>a9b010825cc2794efdb58a986affde140</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingValidatorException</name>
    <filename>classTeuchos_1_1MissingValidatorException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingValidatorException</name>
      <anchorfile>classTeuchos_1_1MissingValidatorException.html</anchorfile>
      <anchor>a7b93276950b461d2042e4689a6e520f1</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingValuesAndValidatorsTagException</name>
    <filename>classTeuchos_1_1MissingValuesAndValidatorsTagException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingValuesAndValidatorsTagException</name>
      <anchorfile>classTeuchos_1_1MissingValuesAndValidatorsTagException.html</anchorfile>
      <anchor>a2ea99a037df92387a0e47706980595e3</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MissingValuesTagException</name>
    <filename>classTeuchos_1_1MissingValuesTagException.html</filename>
    <member kind="function">
      <type></type>
      <name>MissingValuesTagException</name>
      <anchorfile>classTeuchos_1_1MissingValuesTagException.html</anchorfile>
      <anchor>a67b9d8af0c5c1c364ec51a273d5b086f</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MockRCP</name>
    <filename>classTeuchos_1_1MockRCP.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>T *</type>
      <name>access_private_ptr</name>
      <anchorfile>classTeuchos_1_1MockRCP.html</anchorfile>
      <anchor>aef32595baa4c664e8a38680b36b30b22</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Details::MpiCommRequest</name>
    <filename>classTeuchos_1_1Details_1_1MpiCommRequest.html</filename>
    <member kind="function">
      <type></type>
      <name>MpiCommRequest</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>ad295a7cfe186d38a1111b087f6b96bf2</anchor>
      <arglist>(MPI_Request rawMpiRequest, const ArrayRCP&lt; const char &gt; &amp;buffer)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~MpiCommRequest</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>a3402d45c516538c8cafe84bb4d7f0f66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MpiCommRequest</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>a33e3ac11017c8ef897dbb4e57b917d0c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>MpiCommRequest</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>aa453c03d728c214d4b5e3bb22b325622</anchor>
      <arglist>(const MpiCommRequest &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>MpiCommRequest &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>a0ef2365a29808d44057c5d49eb4b2d9d</anchor>
      <arglist>(const MpiCommRequest &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ArrayRCP&lt; const char &gt;</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1Details_1_1MpiCommRequest.html</anchorfile>
      <anchor>a698362eda94e96ee162f1d2c38df6cc6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MPITraits</name>
    <filename>classTeuchos_1_1MPITraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>type</name>
      <anchorfile>classTeuchos_1_1MPITraits.html</anchorfile>
      <anchor>ae3faded7f6f3e283df05779a4156c024</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MultiplicationFunction</name>
    <filename>classTeuchos_1_1MultiplicationFunction.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>MultiplicationFunction</name>
      <anchorfile>classTeuchos_1_1MultiplicationFunction.html</anchorfile>
      <anchor>abf14bbb89bb478b0b5e588094d3b086d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MultiplicationFunction</name>
      <anchorfile>classTeuchos_1_1MultiplicationFunction.html</anchorfile>
      <anchor>a330eab55a884adcd893c0541bfb33a97</anchor>
      <arglist>(OperandType amountToMultiplyBy)</arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1MultiplicationFunction.html</anchorfile>
      <anchor>a4856942a4f2e4ebfaf40cc932881aa23</anchor>
      <arglist>(OperandType arguement) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1MultiplicationFunction.html</anchorfile>
      <anchor>a305ec5b02cbc1bc287f93ac6d8618909</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MultiplicationFunctionXMLConverter</name>
    <filename>classTeuchos_1_1MultiplicationFunctionXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; SimpleFunctionObject&lt; OperandType &gt; &gt;</type>
      <name>getSpecificSimpleFunction</name>
      <anchorfile>classTeuchos_1_1MultiplicationFunctionXMLConverter.html</anchorfile>
      <anchor>acd4d75b78717b2f2f1e5266d0e61ab87</anchor>
      <arglist>(OperandType operand) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Common::MultiVector</name>
    <filename>classCommon_1_1MultiVector.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::NoNameAttributeExecption</name>
    <filename>classTeuchos_1_1NoNameAttributeExecption.html</filename>
    <member kind="function">
      <type></type>
      <name>NoNameAttributeExecption</name>
      <anchorfile>classTeuchos_1_1NoNameAttributeExecption.html</anchorfile>
      <anchor>a5ddb59d22996322f2e6349a3c9f838f1</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NonconstAccessError</name>
    <filename>classTeuchos_1_1NonconstAccessError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>NonconstAccessError</name>
      <anchorfile>classTeuchos_1_1NonconstAccessError.html</anchorfile>
      <anchor>a7ba289fed4974c3b1eaba0bf9aedbb13</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NotCondition</name>
    <filename>classTeuchos_1_1NotCondition.html</filename>
    <base>Teuchos::Condition</base>
    <member kind="function">
      <type></type>
      <name>NotCondition</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>a88ab4a5e6fabb2bca82cca2d7c41b321</anchor>
      <arglist>(RCP&lt; const Condition &gt; condition)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NotCondition</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>afb64a9f6ce1174a8edd5d4dbdcbe2e65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Condition &gt;</type>
      <name>getChildCondition</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>a2a9462f652e0fb4ec199aeafda94989b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConditionTrue</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>a96342a392ce4659bc88cc9142a79640b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAtLeasteOneParameter</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>ac30e059345f460a9addf2ab9157162c2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dependency::ConstParameterEntryList</type>
      <name>getAllParameters</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>aa7c7758e911e0b96f83ff6719b01f407</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>a7ffe1385a28e88869b1daeee2f0c8bb8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Condition &gt;</type>
      <name>childCondition_</name>
      <anchorfile>classTeuchos_1_1NotCondition.html</anchorfile>
      <anchor>a0d8f95ec1ea48df0c1185e3da0530afb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NotConditionConverter</name>
    <filename>classTeuchos_1_1NotConditionConverter.html</filename>
    <base>Teuchos::ConditionXMLConverter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Condition &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1NotConditionConverter.html</anchorfile>
      <anchor>af05b95408bd7f70e1b05089c0bc2ece0</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertCondition</name>
      <anchorfile>classTeuchos_1_1NotConditionConverter.html</anchorfile>
      <anchor>a4dd3e9d1fd384481d242c6f2763ca3ad</anchor>
      <arglist>(const RCP&lt; const Condition &gt; condition, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NoTypeAttributeExecption</name>
    <filename>classTeuchos_1_1NoTypeAttributeExecption.html</filename>
    <member kind="function">
      <type></type>
      <name>NoTypeAttributeExecption</name>
      <anchorfile>classTeuchos_1_1NoTypeAttributeExecption.html</anchorfile>
      <anchor>af5fa112caee04eb8c53226cd557a8df6</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NoValueAttributeExecption</name>
    <filename>classTeuchos_1_1NoValueAttributeExecption.html</filename>
    <member kind="function">
      <type></type>
      <name>NoValueAttributeExecption</name>
      <anchorfile>classTeuchos_1_1NoValueAttributeExecption.html</anchorfile>
      <anchor>ad71b3ddd2ff21126e95a09263b556969</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NullIteratorTraits</name>
    <filename>classTeuchos_1_1NullIteratorTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Iter</type>
      <name>getNull</name>
      <anchorfile>classTeuchos_1_1NullIteratorTraits.html</anchorfile>
      <anchor>aeb2dc0b56973319241eb3cc1206101f5</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NullIteratorTraits&lt; ArrayRCP&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1NullIteratorTraits_3_01ArrayRCP_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static ArrayRCP&lt; T &gt;</type>
      <name>getNull</name>
      <anchorfile>classTeuchos_1_1NullIteratorTraits_3_01ArrayRCP_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a33224a1551903f582ea163f4701640cb</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NullIteratorTraits&lt; RCP&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1NullIteratorTraits_3_01RCP_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static RCP&lt; T &gt;</type>
      <name>getNull</name>
      <anchorfile>classTeuchos_1_1NullIteratorTraits_3_01RCP_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a3da5d7b21b9eb6efdbf0745b4ab8a99f</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NullIteratorTraits&lt; std::reverse_iterator&lt; Iter &gt; &gt;</name>
    <filename>classTeuchos_1_1NullIteratorTraits_3_01std_1_1reverse__iterator_3_01Iter_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::reverse_iterator&lt; Iter &gt;</type>
      <name>getNull</name>
      <anchorfile>classTeuchos_1_1NullIteratorTraits_3_01std_1_1reverse__iterator_3_01Iter_01_4_01_4.html</anchorfile>
      <anchor>a644756f8569601a74f09ae8b9372cbbd</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NullReferenceError</name>
    <filename>classTeuchos_1_1NullReferenceError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>NullReferenceError</name>
      <anchorfile>classTeuchos_1_1NullReferenceError.html</anchorfile>
      <anchor>a90561a1a507028222f3b4aea3bdcafb4</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberArrayLengthDependency</name>
    <filename>classTeuchos_1_1NumberArrayLengthDependency.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ArrayModifierDependency</base>
    <member kind="function">
      <type></type>
      <name>NumberArrayLengthDependency</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>af0dbb797a72a84e306197a6cad2d90ac</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NumberArrayLengthDependency</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>a4cbd7956c41557d2ad0410f6aa12fa1a</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>a000c9ae95c84e54621d86681e5d07d5b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>a958de9fffdd323ce223607559a3ce6d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>modifyArray</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>af168ee0d3b9941afdeb288037c5d6998</anchor>
      <arglist>(DependeeType newAmount, RCP&lt; ParameterEntry &gt; dependentToModify)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBadDependentValueErrorMessage</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependency.html</anchorfile>
      <anchor>ad03416f23b4df3ad6009a7a38f7ef1b8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberArrayLengthDependencyXMLConverter</name>
    <filename>classTeuchos_1_1NumberArrayLengthDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ArrayModifierDependencyXMLConverter</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual RCP&lt; ArrayModifierDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getConcreteDependency</name>
      <anchorfile>classTeuchos_1_1NumberArrayLengthDependencyXMLConverter.html</anchorfile>
      <anchor>a1ef97e9b3352426e32ccab58a8e764cc</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; function) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberCondition</name>
    <filename>classTeuchos_1_1NumberCondition.html</filename>
    <templarg></templarg>
    <base>Teuchos::ParameterCondition</base>
    <member kind="function">
      <type></type>
      <name>NumberCondition</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a2ccd8c212563dd8f2de28e9201441877</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; parameter, RCP&lt; const SimpleFunctionObject&lt; T &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~NumberCondition</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a425a1f29d5abcbb9468127ac08111f2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a459a340dfad3088dc30cf88fe1df91ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>evaluateParameter</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a5c41a1d150e76a298810b40ec8bd5861</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>getFunctionObject</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a6d713d52633d4642e0c2f650cf404196</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>func_</name>
      <anchorfile>classTeuchos_1_1NumberCondition.html</anchorfile>
      <anchor>a3ccc919cf2a36ca2ca2a33e51e865dbe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberConditionConverter</name>
    <filename>classTeuchos_1_1NumberConditionConverter.html</filename>
    <templarg>T</templarg>
    <base>Teuchos::ParameterConditionConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterCondition &gt;</type>
      <name>getSpecificParameterCondition</name>
      <anchorfile>classTeuchos_1_1NumberConditionConverter.html</anchorfile>
      <anchor>a1022cd49e3f25b651398c319a2b6821b</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; ParameterEntry &gt; parameterEntry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpecificXMLTraits</name>
      <anchorfile>classTeuchos_1_1NumberConditionConverter.html</anchorfile>
      <anchor>a9f677ac5e6166329403596e3d7d2f202</anchor>
      <arglist>(RCP&lt; const ParameterCondition &gt; condition, XMLObject &amp;xmlObj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberVisualDependency</name>
    <filename>classTeuchos_1_1NumberVisualDependency.html</filename>
    <templarg></templarg>
    <base>Teuchos::VisualDependency</base>
    <member kind="function">
      <type></type>
      <name>NumberVisualDependency</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>abf36cc4de01114a83628a87a8ade72d5</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, bool showIf=true, RCP&lt; SimpleFunctionObject&lt; T &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>NumberVisualDependency</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>a2f4618629a92a00c02c1cb85a4379e1a</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, ParameterEntryList dependents, bool showIf=true, RCP&lt; SimpleFunctionObject&lt; T &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDependeeState</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>a7aba175ff6ba426c21168e5b207cb1aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>a4ac1ea8f071b89410f13ac3f1c56fc59</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>aba01babe4cd3d84394a3b09dd1b508f6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>getFunctionObject</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>a45741d40379a2c2750e4707a3b6b171d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>func_</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependency.html</anchorfile>
      <anchor>a565f33103870ad7207d0699940e9a175</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::NumberVisualDependencyXMLConverter</name>
    <filename>classTeuchos_1_1NumberVisualDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::VisualDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a4cea181fc94b98b6919dd3fc54e3b602</anchor>
      <arglist>(RCP&lt; const VisualDependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; VisualDependency &gt;</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1NumberVisualDependencyXMLConverter.html</anchorfile>
      <anchor>ac8168cac109a49a1a322f81b36f6d9ca</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, bool showIf, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Object</name>
    <filename>classTeuchos_1_1Object.html</filename>
    <member kind="variable" static="yes">
      <type>static int</type>
      <name>tracebackMode</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>ad574bc019b1552c04d21df4300d90ed6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>label_</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a8014dec58c18d63fac18246b4272abd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a03c153578e001d8dfbd4974f623df1ab</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Object &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>aeaee1e5852e067b6ac27b26e2cd69996</anchor>
      <arglist>(int tracebackModeIn=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a32f043f9ccbd8cb79853ca052e53e299</anchor>
      <arglist>(const char *label, int tracebackModeIn=-1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Object</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a049dc163c4f0dfa09ecaf17952dc312d</anchor>
      <arglist>(const std::string &amp;label, int tracebackModeIn=-1)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Object</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a3d67a25fa8055d1e4656dc5514e88756</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>setLabel</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a8c010526eaeb250a57e8a10bb59f5eb7</anchor>
      <arglist>(const char *theLabel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setTracebackMode</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>ac825e23984af12a96b02e3d20fcd6b8b</anchor>
      <arglist>(int tracebackModeValue)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const char *</type>
      <name>label</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a2c55705171757f1a13a5d60f8572fb39</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>getTracebackMode</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a110ee91638d1b3eab61f16a111e98a65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a306eb123831382ec095185a87ca14a74</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>reportError</name>
      <anchorfile>classTeuchos_1_1Object.html</anchorfile>
      <anchor>a467051d198dd42bcd2c47b63368be095</anchor>
      <arglist>(const std::string message, int errorCode) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ObjectBuilder</name>
    <filename>classTeuchos_1_1ObjectBuilder.html</filename>
    <templarg></templarg>
    <base virtualness="virtual">Teuchos::ParameterListAcceptor</base>
    <member kind="function">
      <type></type>
      <name>ObjectBuilder</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>aeaac49413eed1755a78ebab41facf59b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ObjectBuilder</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>afef91dab6c8e2a1421e6c572e8204843</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectName</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>ab0521198e2fd8b5cdd533c56d9908f65</anchor>
      <arglist>(const std::string &amp;objectName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectTypeName</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a9ac59bf6ae4ac1ec2ef66c9629bb270f</anchor>
      <arglist>(const std::string &amp;objectTypeName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setObjectFactory</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a5c256ac48ecade592c4f14ab1bff4950</anchor>
      <arglist>(const RCP&lt; const AbstractFactory&lt; ObjectType &gt; &gt; &amp;objectFactory, const std::string &amp;objectFactoryName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getObjectName</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>af3ddaacbc3670cd82febfdfb0f334438</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDefaultObject</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>acfa23b3f5b775eab79302e5544335502</anchor>
      <arglist>(const std::string &amp;defaultObject_name)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ObjectType &gt;</type>
      <name>create</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a75dc0dd7bf0c1f16cd4ae42241d43578</anchor>
      <arglist>(const std::string &amp;objectName=&quot;&quot;) const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>RCP&lt; const AbstractFactory&lt; ObjectType &gt; &gt;</type>
      <name>object_fcty_t</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a09a0cad8cb955ab86334559e558b4003</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initializeDefaults_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a6abf28334812957566f6ca9fc30957d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a93d2853e8555f7902731598474430b8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>validParamList_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a4b6965cf4ca96c1d3d790e4541bb446e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>objectValidator_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a89ab2a4e6052a9b501a675d8740ad10f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>object_name_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a2871fb6659961630a9d179752354df58</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>objectType_name_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>ab4130942aeefee7dc39309dbea41f432</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; std::string &gt;</type>
      <name>validObjectNames_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a19620a3213ad388b492ca9126456e962</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; object_fcty_t &gt;</type>
      <name>objectArray_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>abac0f93856816b4662a8294a9c0ee77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>defaultObject_name_</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a2642696e5941c905b733d0cbc787f667</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>aed0d781cbe93888805e77b5257d13189</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>ab02be0f47f00de6a0bd8563ffd2baac6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>ae3e85a4cf53c8c7297d83eb8f55b1583</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>a79a9e8f430f180b002756dc1ff925d9f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1ObjectBuilder.html</anchorfile>
      <anchor>aa394e85e3007333126603c89a923e43d</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::OpaqueWrapper</name>
    <filename>classTeuchos_1_1OpaqueWrapper.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>OpaqueWrapper</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>a2d6ab7d91ff5767b66c87703a007440b</anchor>
      <arglist>(Opaque opaque)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator Opaque</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>a4de59b7f79e387988de1667007a41e51</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Opaque</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>ae9ce67bdb91f229062dc60db12d90dac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Opaque</type>
      <name>opaque_</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>ab13132cdb97c3d9ba0f0cde1c225c037</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>OpaqueWrapper</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>a772878e5059a61147a542e7e1c952e19</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>OpaqueWrapper</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>af924eb565513cdb532be5df87bef0863</anchor>
      <arglist>(const OpaqueWrapper &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>OpaqueWrapper &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>af468a43d1e59641c305bdb4a39768525</anchor>
      <arglist>(const OpaqueWrapper &amp;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; OpaqueWrapper&lt; Opaque &gt; &gt;</type>
      <name>opaqueWrapper</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>a8770e064ea0d612c9cbbe84463186c5c</anchor>
      <arglist>(Opaque opaque)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; OpaqueWrapper&lt; Opaque &gt; &gt;</type>
      <name>opaqueWrapper</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapper.html</anchorfile>
      <anchor>ae2f32abac0b3105156d4da619f78d542</anchor>
      <arglist>(Opaque opaque, OpaqueFree opaqueFree)</arglist>
    </member>
    <docanchor file="classTeuchos_1_1OpaqueWrapper" title="Summary">Teuchos_OpaqueWrapper_Summary</docanchor>
    <docanchor file="classTeuchos_1_1OpaqueWrapper" title="Prerequisites">Teuchos_OpaqueWrapper_Prereq</docanchor>
    <docanchor file="classTeuchos_1_1OpaqueWrapper" title="What are opaque handles?">Teuchos_OpaqueWrapper_Handles</docanchor>
    <docanchor file="classTeuchos_1_1OpaqueWrapper" title="Why do opaque handles need special treatment?">Teuchos_OpaqueWrapper_Special</docanchor>
    <docanchor file="classTeuchos_1_1OpaqueWrapper" title="How to use OpaqueWrapper">Teuchos_OpaqueWrapper_How</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::OpaqueWrapperWithFree</name>
    <filename>classTeuchos_1_1OpaqueWrapperWithFree.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::OpaqueWrapper</base>
    <member kind="function">
      <type></type>
      <name>OpaqueWrapperWithFree</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a4e633b086758eee1e5b3b771fad601b8</anchor>
      <arglist>(Opaque opaque, OpaqueFree opaqueFree)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~OpaqueWrapperWithFree</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a1d73c03e0afae7dccf5d4382faee0a59</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>OpaqueWrapperWithFree</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a4065a7f21b11b816e232a6f097005ed1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>OpaqueWrapperWithFree</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a0a79320f46273a5dcb101fa3c30cfa3f</anchor>
      <arglist>(const OpaqueWrapperWithFree &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>OpaqueWrapperWithFree &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a4df219b337178dad40427c59100d42ab</anchor>
      <arglist>(const OpaqueWrapperWithFree &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OpaqueFree</type>
      <name>opaqueFree_</name>
      <anchorfile>classTeuchos_1_1OpaqueWrapperWithFree.html</anchorfile>
      <anchor>a8fc02f9c8055353e7e1464c65d5b66b6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Common::Operator</name>
    <filename>classCommon_1_1Operator.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>MultiVector&lt; Scalar &gt;</type>
      <name>MV</name>
      <anchorfile>classCommon_1_1Operator.html</anchorfile>
      <anchor>a76884f6e289b74c5911dbfe14c47bafd</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>apply</name>
      <anchorfile>classCommon_1_1Operator.html</anchorfile>
      <anchor>ae5d26951b787497e2896f1d5fa9c1f07</anchor>
      <arglist>(MV &amp;, const MV &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::CommandLineProcessor::opt_doc_t</name>
    <filename>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</filename>
    <member kind="function">
      <type></type>
      <name>opt_doc_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>a460599ae35d2cdb2c9b7e1d2fe3506a3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_doc_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>a349a221894d53cb28f4926b438441b88</anchor>
      <arglist>(EOptType opt_type_in, const std::string &amp;opt_name_in, const std::string &amp;opt_name_false_in, const std::string &amp;documentation_in, const any &amp;default_val_in)</arglist>
    </member>
    <member kind="variable">
      <type>EOptType</type>
      <name>opt_type</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>a1f61f3b464dc7c0301d81f4f3935d280</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>opt_name</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>ac2c67d7bc73b346cb6dc1e39c74065be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>opt_name_false</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>abb476010b15841afaa28e02b0f0b79cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>documentation</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>a3a43e7dbb0673c8831e17d6392b1c69a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>any</type>
      <name>default_val</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__doc__t.html</anchorfile>
      <anchor>a102c53180bd3ef354cbbbe2fbada5f7f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::CommandLineProcessor::opt_val_val_t</name>
    <filename>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</filename>
    <member kind="function">
      <type></type>
      <name>opt_val_val_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>a05bffd476c49255be25c2668e53e266b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>opt_val_val_t</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>a3ccf79fc3b4c3e7b570030ad0c958778</anchor>
      <arglist>(EOptType opt_type_in, const any &amp;opt_val_in, bool required_in)</arglist>
    </member>
    <member kind="variable">
      <type>EOptType</type>
      <name>opt_type</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>a0f54f5068195f1d57e46074d95232a81</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>any</type>
      <name>opt_val</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>aff59330d4dae2ccccbdf08499f0c98c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>required</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>a14ccd88588f5c63495588eba219da45e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>was_read</name>
      <anchorfile>structTeuchos_1_1CommandLineProcessor_1_1opt__val__val__t.html</anchorfile>
      <anchor>af0139970c1ad79b98a37f91d34416a44</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::OrCondition</name>
    <filename>classTeuchos_1_1OrCondition.html</filename>
    <base>Teuchos::BoolLogicCondition</base>
    <member kind="function">
      <type></type>
      <name>OrCondition</name>
      <anchorfile>classTeuchos_1_1OrCondition.html</anchorfile>
      <anchor>a63fbee78265820f7edd197b86ec7082c</anchor>
      <arglist>(ConstConditionList &amp;conditions)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~OrCondition</name>
      <anchorfile>classTeuchos_1_1OrCondition.html</anchorfile>
      <anchor>a469019bf1685da58070419a93782b860</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1OrCondition.html</anchorfile>
      <anchor>a948c74006829b83c6b50342d96a9c959</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>applyOperator</name>
      <anchorfile>classTeuchos_1_1OrCondition.html</anchorfile>
      <anchor>a18b6e8a3268bde800715bca6ce88e674</anchor>
      <arglist>(bool op1, bool op2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::OrConditionConverter</name>
    <filename>classTeuchos_1_1OrConditionConverter.html</filename>
    <base>Teuchos::BoolLogicConditionConverter</base>
    <member kind="function">
      <type>RCP&lt; BoolLogicCondition &gt;</type>
      <name>getSpecificBoolLogicCondition</name>
      <anchorfile>classTeuchos_1_1OrConditionConverter.html</anchorfile>
      <anchor>af8e79fbf0cbbb1209b7e6fd120e416ae</anchor>
      <arglist>(Condition::ConstConditionList &amp;conditions) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase::OrdinalIndex</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1OrdinalIndex.html</filename>
    <member kind="typedef">
      <type>StringIndexedOrderedValueObjectContainerBase::Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1OrdinalIndex.html</anchorfile>
      <anchor>a2ae22fe15377eff19294c981bf22a761</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1OrdinalIndex.html</anchorfile>
      <anchor>af4a6299c37ef01fbbe9e00f8eb52de1a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>OrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1OrdinalIndex.html</anchorfile>
      <anchor>a70d5601ebe7d31c80a89db47b99e033f</anchor>
      <arglist>(const Ordinal idx_in)</arglist>
    </member>
    <member kind="variable">
      <type>Ordinal</type>
      <name>idx</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1OrdinalIndex.html</anchorfile>
      <anchor>a350dc54da6991ac146819fbcd3688565</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::OrdinalTraits</name>
    <filename>structTeuchos_1_1OrdinalTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>zero</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>ad08b9e62103175f1441b928c100fccfb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>one</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>a7b4d398af106f8bd15b957df36cb0926</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>max</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>aa8e31e70c8acc35052c2140ee39cbd1d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>invalid</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>a65bb6f3508e1b5956d6f47ad39154253</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>a5028d5466f9beb8d33015b61090bd2ac</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>hasMachineParameters</name>
      <anchorfile>structTeuchos_1_1OrdinalTraits.html</anchorfile>
      <anchor>a2c93ee1a706cfd514e2ea51ac94cb106</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterCondition</name>
    <filename>classTeuchos_1_1ParameterCondition.html</filename>
    <base>Teuchos::Condition</base>
    <member kind="function">
      <type></type>
      <name>ParameterCondition</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>a065e59feb0929af1d5be5d7fc0f83b64</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; parameter)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterCondition</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>ac85d76e14b24178a5bbf4545d0eb4880</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>evaluateParameter</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>a98a7c67064e557c96c5a9f10055bc477</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntry &gt;</type>
      <name>getParameter</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>ac7f6d8c56102992de7d787aef680a512</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isConditionTrue</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>a65e8d3e2f4436c8172c06173dfc44a00</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>containsAtLeasteOneParameter</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>a03738c07a7c577f8d7b938cf06ca99e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Dependency::ConstParameterEntryList</type>
      <name>getAllParameters</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>a218b1a54fe4fcbc45dd0de0ff3a1ce21</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterEntry &gt;</type>
      <name>parameterEntry_</name>
      <anchorfile>classTeuchos_1_1ParameterCondition.html</anchorfile>
      <anchor>ad4b859adb0e030588577281174d3be6d</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterConditionConverter</name>
    <filename>classTeuchos_1_1ParameterConditionConverter.html</filename>
    <base>Teuchos::ConditionXMLConverter</base>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; ParameterCondition &gt;</type>
      <name>getSpecificParameterCondition</name>
      <anchorfile>classTeuchos_1_1ParameterConditionConverter.html</anchorfile>
      <anchor>a92c52f958baf622506d771d47a4ac290</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; ParameterEntry &gt; parameterEntry) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>addSpecificXMLTraits</name>
      <anchorfile>classTeuchos_1_1ParameterConditionConverter.html</anchorfile>
      <anchor>a96d777fc03c26fdaf09133c9e7231e7c</anchor>
      <arglist>(RCP&lt; const ParameterCondition &gt; condition, XMLObject &amp;xmlObj) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Condition &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ParameterConditionConverter.html</anchorfile>
      <anchor>a5eac59114c76132e4ee4199f962bac86</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertCondition</name>
      <anchorfile>classTeuchos_1_1ParameterConditionConverter.html</anchorfile>
      <anchor>a42c039b4c5b5cc320d6dfeef3af59f8b</anchor>
      <arglist>(const RCP&lt; const Condition &gt; condition, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getParameterEntryIdAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterConditionConverter.html</anchorfile>
      <anchor>a85bbcb40f2567813858ff1dbdfd2ad14</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterEntry</name>
    <filename>classTeuchos_1_1ParameterEntry.html</filename>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>acdf12ceb396fd29d6a9709203990b0cb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>any</type>
      <name>val_</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>ade30c052025e248d1bbc55f77dd4861a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isUsed_</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>ab954216ded7039f9b7cd56a4fd4c47d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isDefault_</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a4e8d851bee9198788ee09958802b8af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>docString_</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a27d913454a2d1f159e4e05d56b74945e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>validator_</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a713408f32ff6aaf17e2da8810bd0ac97</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a9cf5d28599b04a0ec27fce574d2eae6a</anchor>
      <arglist>(const ParameterEntry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>af5c8becf820281d2ce353809718d15d3</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a9e84953ca2252a865eaea7204d0ff7b2</anchor>
      <arglist>(const ParameterEntry &amp;e1, const ParameterEntry &amp;e2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>ad966a0339ceb184a1a401277f988cfed</anchor>
      <arglist>(const ParameterEntry &amp;e1, const ParameterEntry &amp;e2)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>af8b8713331f8f4431c203836d10a7e56</anchor>
      <arglist>(std::ostream &amp;os, const ParameterEntry &amp;e)</arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>ParameterEntryID</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a1d583a67e71d811b6f7f9f184e32d624</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterEntry</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a721b2379474cdf08bb335d26a7a466b0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterEntry</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>afdc0eb1adaccc3514bebaedacb4b0306</anchor>
      <arglist>(const ParameterEntry &amp;source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterEntry</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a277d4285624dc5a7cfde11c871dc313a</anchor>
      <arglist>(T value, bool isDefault=false, bool isList=false, const std::string &amp;docString=&quot;&quot;, RCP&lt; const ParameterEntryValidator &gt; const &amp;validator=null)</arglist>
    </member>
    <member kind="function">
      <type>ParameterEntry &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a6453502803d5127efc3d2b21e5bfcd53</anchor>
      <arglist>(const ParameterEntry &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a902f0b291a606f778367475998aec7ec</anchor>
      <arglist>(T value, bool isDefault=false, const std::string &amp;docString=&quot;&quot;, RCP&lt; const ParameterEntryValidator &gt; const &amp;validator=null)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAnyValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>aebb09e7d863cd7feb2a1d63bfd795181</anchor>
      <arglist>(const any &amp;value, bool isDefault=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setValidator</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a12d2913f484d9f09cd7df550b321bc90</anchor>
      <arglist>(RCP&lt; const ParameterEntryValidator &gt; const &amp;validator)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDocString</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>aaea41972ab1a02f1ba6da75d64f065c1</anchor>
      <arglist>(const std::string &amp;docString)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>setList</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a5d2badb5346ffea0db2d9f96d42a3494</anchor>
      <arglist>(bool isDefault=false, const std::string &amp;docString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>ac551f27443337a6baaed4833649c7eeb</anchor>
      <arglist>(T *ptr) const </arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>getAny</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a425db8b42bc49d24323293218f38eeee</anchor>
      <arglist>(bool activeQry=true)</arglist>
    </member>
    <member kind="function">
      <type>const any &amp;</type>
      <name>getAny</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a7637623ed8c133a9e201f8fb2c20eeda</anchor>
      <arglist>(bool activeQry=true) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isUsed</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a96672ba416b6eecae6b56c1883089925</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isList</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a7d5b355a0abb031013f5c65383b034ed</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isType</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a2de3b5ca4a4ffdecd06c46b1bb1449e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isArray</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a9d1d7c0fb702641b0509a07649cc3238</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isTwoDArray</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>aeb07a42dba687448030407b4b4a2aba1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDefault</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a9b811573abb2459826a7842dc86330e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>docString</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>ab72c04327f3568527c2e22ee0406420c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>validator</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a82a7b056841a6b99a7decb84ab9f09fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>leftshift</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a12f9d84cd03f300a2d44cb4d80fe56c3</anchor>
      <arglist>(std::ostream &amp;os, bool printFlags=true) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTagName</name>
      <anchorfile>classTeuchos_1_1ParameterEntry.html</anchorfile>
      <anchor>a30bf49cb4e25ab7bb754908266df8ef8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterEntryValidator</name>
    <filename>classTeuchos_1_1ParameterEntryValidator.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type></type>
      <name>ParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>af4bd9bc6f3b0dbd9fd353062bfcc8ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>acb6b1f6a620a0409376c223c0825ef3e</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>a928b08692f2e63ef9e9eb11aba02d451</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>ae2b56056acaa475e58627cc080536901</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>aa0c4c8b83d68e03ba50274e4d1cd1343</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validateAndModify</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>a17ff0fd68797cf59e31e0fd743b15357</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;sublistName, ParameterEntry *entry) const </arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>ValidatorID</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>acdc024b23b611bc9cadf0c640c7c9c57</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>RCP&lt; const Array&lt; std::string &gt; &gt;</type>
      <name>ValidStringsList</name>
      <anchorfile>classTeuchos_1_1ParameterEntryValidator.html</anchorfile>
      <anchor>a915c459c0c910b61d4d395a2e42893ae</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterEntryXMLConverter</name>
    <filename>classTeuchos_1_1ParameterEntryXMLConverter.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type>ParameterEntry</type>
      <name>fromXMLtoParameterEntry</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a821578d004fb9e9dbbad4690bf56f60f</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const </arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>fromParameterEntrytoXML</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a9b26a776cd532caf83c2e7ee294b04ac</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry, const std::string &amp;name, const ParameterEntry::ParameterEntryID &amp;id, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual any</type>
      <name>getAny</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a7aabb8ecb37f9971e90dc887678e25e2</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a697ddda5b4c2f5ab525cb8f8202142fe</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>getValueAttributeValue</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a3f5c1bc42057ca2454d8e9d668f0e913</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a004decdade652d15d49a925672139e78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getIdAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>aae692f62a49a619e31df4357f5d4d4a8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValueAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a3369e916141f28d53004d94e4e53104f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDefaultAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a2582d016539685e2ef1b4bf4c3d5af2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getUsedAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a2a4b0d267dba24869478a0bde999994b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDocStringAttributeName</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverter.html</anchorfile>
      <anchor>a554051b87ab2fb16c9281a8718ceebce</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterEntryXMLConverterDB</name>
    <filename>classTeuchos_1_1ParameterEntryXMLConverterDB.html</filename>
    <member kind="function" protection="private" static="yes">
      <type>static ConverterMap &amp;</type>
      <name>getConverterMap</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a221c6615acf3f4bf088394d299c2e238</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addConverter</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a2bfb2c7383697b7c3bc0722be8fd2d49</anchor>
      <arglist>(RCP&lt; ParameterEntryXMLConverter &gt; converterToAdd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ParameterEntryXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a91fad35501912aa49bc35cf62c3a7f37</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ParameterEntryXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a9f19be93157cc88e1c7ea58addb6c1d3</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ParameterEntryXMLConverter &gt;</type>
      <name>getDefaultConverter</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a1ca00399ed27c47436f75a00c3ee6962</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XMLObject</type>
      <name>convertEntry</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a185d7071f0bc736aa0d5f6afd78f63b5</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry, const std::string &amp;name, const ParameterEntry::ParameterEntryID &amp;id, const ValidatortoIDMap &amp;validatorIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ParameterEntry</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a482cb198e3b39f574f6fab18a92cf850</anchor>
      <arglist>(const XMLObject &amp;xmlObj)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printKnownConverters</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a53a462c7032ea6ad330607dd1c48b689</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; ParameterEntryXMLConverter &gt; &gt;</type>
      <name>ConverterMap</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>a044e5480c4cb4b688c19e88da1efa93d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, RCP&lt; ParameterEntryXMLConverter &gt; &gt;</type>
      <name>ConverterPair</name>
      <anchorfile>classTeuchos_1_1ParameterEntryXMLConverterDB.html</anchorfile>
      <anchor>acb5555518049c9597fa553f6be2ca834</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterList</name>
    <filename>classTeuchos_1_1ParameterList.html</filename>
    <class kind="class">Teuchos::ParameterList::PrintOptions</class>
    <member kind="typedef" protection="private">
      <type>StringIndexedOrderedValueObjectContainer&lt; ParameterEntry &gt;</type>
      <name>params_t</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a95c06fd59236434ddf8a8867689a705e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>params_t::Iterator</type>
      <name>Iterator</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a7c9431419cbacd833e518f6b437252d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>Iterator</type>
      <name>nonconstBegin</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af56fe27278afa0484da11147950ca866</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Iterator</type>
      <name>nonconstEnd</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a56c68524bf935cb07c72814a4357428a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ParameterEntry &amp;</type>
      <name>nonconstEntry</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a1b7424d4688818ae090afc84c8cc79c8</anchor>
      <arglist>(Iterator i)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateEntryExists</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a4d727770ea41a8ee8d36534a4c45a3e7</anchor>
      <arglist>(const std::string &amp;funcName, const std::string &amp;name, const ParameterEntry *entry) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateEntryType</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aa380fcdca170de03f3f29ee557fc417e</anchor>
      <arglist>(const std::string &amp;funcName, const std::string &amp;name, const ParameterEntry &amp;entry) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateEntryIsList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a2ad22b1e5084e1315b0b2d48840800a4</anchor>
      <arglist>(const std::string &amp;name, const ParameterEntry &amp;entry) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateMissingSublistMustExist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a49531f941e86b8a13ce6f4448576ea97</anchor>
      <arglist>(const std::string &amp;baselist_name, const std::string &amp;sublist_name, const bool mustAlreadyExist) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>updateSubListNames</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aef23d159c24a249d955c1ab55d05db24</anchor>
      <arglist>(int depth=0)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a8b5e4d2fc90df762b80bd31f2ea296cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>params_t</type>
      <name>params_</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a2d66bfe2e3732d93d0b99f5a6d9112c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>disableRecursiveValidation_</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a7eb6dbd74009e3294499526a55b630f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EValidateUsed</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af91ca4b94600bcd7973d7303a3c18865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EValidateDefaults</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af87b97603488b43cfa1cb6b74ed2b97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>parameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a9d3bf751a9d6ce8879dc420f1d43b6df</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>parameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab926af88f6e04891b4ae6269711c09fb</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>parameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a66a868050a9a6d44eebfb60e7d7d2efc</anchor>
      <arglist>(const ParameterList &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>createParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a967348004efed214a262df508e6cce2c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>createParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a4e1cebe1fb641b2d47e348d20e9396ab</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a002bdd993df5f92b8b9c04ce40258e39</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab9791462a2a0f508eb2efe91bad05442</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT bool</type>
      <name>haveSameValues</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab8a31035c670fd624366c8b5cb43561a</anchor>
      <arglist>(const ParameterList &amp;list1, const ParameterList &amp;list2)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>getParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ababdb267400f08b1739c38688df9b21e</anchor>
      <arglist>(ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a02181a9dd9eb3f5b314ca439db5000bc</anchor>
      <arglist>(ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a5182f7a2ed281993c0911334621885dc</anchor>
      <arglist>(const ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getParameterPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ad782fffc541535f0f69f541fc3b64fe8</anchor>
      <arglist>(ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getParameterPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a89b6f5663df59b94c8662e9ad5a2937e</anchor>
      <arglist>(const ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterType</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aaefc7e0f3dc4ac053ec62ad9669a5a44</anchor>
      <arglist>(ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameterType</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a0095072e6400d3e6b80952f3186b5260</anchor>
      <arglist>(const ParameterList &amp;l, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringParameterFromArray</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a234a706a29e6ba1d83156e98d8c36a55</anchor>
      <arglist>(const std::string &amp;paramName, const Array&lt; T &gt; &amp;array, ParameterList *paramList)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; T &gt;</type>
      <name>getArrayFromStringParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a553eca9a34fe60a215cc2398c1bc08c9</anchor>
      <arglist>(const ParameterList &amp;paramList, const std::string &amp;paramName, const int arrayDim=-1, const bool mustExist=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>sublist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a42ac50af1bfdd573dd335dd340a1de18</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;paramList, const std::string &amp;name, bool mustAlreadyExist=false, const std::string &amp;docString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>sublist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a61a31d9c94b627d19b5133024b42f2e1</anchor>
      <arglist>(const RCP&lt; const ParameterList &gt; &amp;paramList, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>afb7c5f670733dc9b9a4013a0e738ec35</anchor>
      <arglist>(std::ostream &amp;os, const ParameterList &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringToIntegralParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>adfdb8af0eab99767d12231de7b7c0d96</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;defaultValue, std::string const &amp;docString, ArrayView&lt; const std::string &gt; const &amp;strings, ParameterList *paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringToIntegralParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a59f2b367f7adf22a69d2f8cf07cb06a5</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;defaultValue, std::string const &amp;docString, ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, ParameterList *paramList)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setStringToIntegralParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a1ccb7224f0e84a54abf87b8d32a5d850</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;defaultValue, std::string const &amp;docString, ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const std::string &gt; const &amp;stringsDocs, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, ParameterList *paramList)</arglist>
    </member>
    <member kind="function">
      <type>IntegralType</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a92c301a9b70010d8c7de12ab0a36df3d</anchor>
      <arglist>(ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStringValue</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ad96ec42014dc2048b3d88d8f6b4dd4ee</anchor>
      <arglist>(ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>setIntParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>acec25bd16429abbeae6808177e3e47d9</anchor>
      <arglist>(std::string const &amp;paramName, int const value, std::string const &amp;docString, ParameterList *paramList, AnyNumberParameterEntryValidator::AcceptedTypes const &amp;acceptedTypes=AnyNumberParameterEntryValidator::AcceptedTypes())</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>setDoubleParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a35c35cbaff0d93b3bbf310baec8a0b04</anchor>
      <arglist>(std::string const &amp;paramName, double const &amp;value, std::string const &amp;docString, ParameterList *paramList, AnyNumberParameterEntryValidator::AcceptedTypes const &amp;acceptedTypes=AnyNumberParameterEntryValidator::AcceptedTypes())</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>setNumericStringParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ae8b76ab3ea579ac0a7e2986fea13a82f</anchor>
      <arglist>(std::string const &amp;paramName, std::string const &amp;value, std::string const &amp;docString, ParameterList *paramList, AnyNumberParameterEntryValidator::AcceptedTypes const &amp;acceptedTypes=AnyNumberParameterEntryValidator::AcceptedTypes())</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT int</type>
      <name>getIntParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af7f14e7e610ffe2c87123d14010afadc</anchor>
      <arglist>(ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT double</type>
      <name>getDoubleParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab2ef14ed6929ff9f5e2cf6c8ef51273e</anchor>
      <arglist>(ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT std::string</type>
      <name>getNumericStringParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a0110b94110b22984b6638be7b2846b3e</anchor>
      <arglist>(ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>updateParametersFromXmlFile</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aa1cee331d431c96e056eb54305d4d54e</anchor>
      <arglist>(const std::string &amp;xmlFileName, const Ptr&lt; ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>getParametersFromXmlFile</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>adfa0f16b36e0c01450b414f82e499f8c</anchor>
      <arglist>(const std::string &amp;xmlFileName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>getParametersFromXmlFile</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a5bb40751bfd533bfcce376bac375537e</anchor>
      <arglist>(const std::string &amp;xmlFileName, RCP&lt; DependencySheet &gt; depSheet)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>updateParametersFromXmlString</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a16514fbf12bc2b59360efa6438b72644</anchor>
      <arglist>(const std::string &amp;xmlStr, const Ptr&lt; ParameterList &gt; &amp;paramList, bool overwrite=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>getParametersFromXmlString</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>abaefbe0d7ded8f6698dd022973876d98</anchor>
      <arglist>(const std::string &amp;xmlStr)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>getParametersFromXmlString</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af47538c50f1668095ff26cb96ce6fd53</anchor>
      <arglist>(const std::string &amp;xmlStr, RCP&lt; DependencySheet &gt; depSheet)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>writeParameterListToXmlOStream</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a3d864447eab65f2a9547dc38585a9ff0</anchor>
      <arglist>(const ParameterList &amp;paramList, std::ostream &amp;xmlOut, RCP&lt; const DependencySheet &gt; depSheet=null)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>writeParameterListToXmlFile</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ac74c4dd9446bb169e9781bd88d8edbe1</anchor>
      <arglist>(const ParameterList &amp;paramList, const std::string &amp;xmlFileName, RCP&lt; const DependencySheet &gt; depSheet=null)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>updateParametersFromXmlFileAndBroadcast</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af477d881ec4817f91ad682bf5b1d711c</anchor>
      <arglist>(const std::string &amp;xmlFileName, const Ptr&lt; ParameterList &gt; &amp;paramList, const Comm&lt; int &gt; &amp;comm, bool overwrite=true)</arglist>
    </member>
    <member kind="typedef">
      <type>params_t::ConstIterator</type>
      <name>ConstIterator</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a855b653f040bf55cff4c2f4827ddd7d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>affafa8fb9d186e2d87f5b58be14004af</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ae36f138fdf1cd16b40696dc667750ef7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a898b4143df2b520914eb1bd40b5d04b4</anchor>
      <arglist>(const ParameterList &amp;source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a1ae850251bb55377832470b12e79406b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>numParams</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab0da7c92972464b9ce1fae8f8b20d7e7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>setName</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ae0558e82705d5d86e8559b4d846e6e1b</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a80c22475550b2032d6e37b2195ea6a74</anchor>
      <arglist>(const ParameterList &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>setParameters</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a1421e06bdcd6b536f3fa8b5e6bdd763f</anchor>
      <arglist>(const ParameterList &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>setParametersNotAlreadySet</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a22e5cdb983ec1926ec044321ec7764a0</anchor>
      <arglist>(const ParameterList &amp;source)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>disableRecursiveValidation</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a7da95183de3620bb94281d30f4ade30d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>set</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a4aba1b34b186a56ee70ce421f8544a50</anchor>
      <arglist>(std::string const &amp;name, T const &amp;value, std::string const &amp;docString=&quot;&quot;, RCP&lt; const ParameterEntryValidator &gt; const &amp;validator=null)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>set</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ac34d21883add12de75ec62dd1c43955d</anchor>
      <arglist>(std::string const &amp;name, char value[], std::string const &amp;docString=&quot;&quot;, RCP&lt; const ParameterEntryValidator &gt; const &amp;validator=null)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>set</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a05444d62f9f736e263a119505ce558a9</anchor>
      <arglist>(std::string const &amp;name, const char value[], std::string const &amp;docString=&quot;&quot;, RCP&lt; const ParameterEntryValidator &gt; const &amp;validator=null)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>set</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a2cf7057d9d55987e3ed7b15f579d36d5</anchor>
      <arglist>(std::string const &amp;name, ParameterList const &amp;value, std::string const &amp;docString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>setEntry</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aadd436c4043646906b6d653f0c1cc2be</anchor>
      <arglist>(const std::string &amp;name, const ParameterEntry &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>acf06d867a960000f651b1d8657e083ff</anchor>
      <arglist>(const std::string &amp;name, T def_value)</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>afa34844ae2839849dafd8a2507adec7c</anchor>
      <arglist>(const std::string &amp;name, char def_value[])</arglist>
    </member>
    <member kind="function">
      <type>std::string &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a1f977e11b2fffa5d936bae2595e597bc</anchor>
      <arglist>(const std::string &amp;name, const char def_value[])</arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a2387ea9323f95fd5629710171323c9c8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a2c1d079efc2979e079bc74a1e917e474</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>abea89861779ddaf755007b4d2a9b56b2</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a12ba4ed9738d300d80cfe2a672e55806</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>ParameterEntry &amp;</type>
      <name>getEntry</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aa9d763e38dc429ff5210514d798f7df3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const ParameterEntry &amp;</type>
      <name>getEntry</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ad6654b2e115c0c8b3d43f4db04cd2d22</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>ParameterEntry *</type>
      <name>getEntryPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a80d4c2ff6265d3d934740a6d5427511f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const ParameterEntry *</type>
      <name>getEntryPtr</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>acdc7460d04c68525334316890bcfa8b2</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>getEntryRCP</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ae1a098fc696a100fe5f8a52ea5e7dfc8</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntry &gt;</type>
      <name>getEntryRCP</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ae1cec74f015ed2956a764ee6c0fa8978</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>remove</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aee99aeaa01d4275b00fd3f6ee53084f8</anchor>
      <arglist>(std::string const &amp;name, bool throwIfNotExists=true)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList &amp;</type>
      <name>sublist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a492ec5b8cc09e51290b36e30df8f0120</anchor>
      <arglist>(const std::string &amp;name, bool mustAlreadyExist=false, const std::string &amp;docString=&quot;&quot;)</arglist>
    </member>
    <member kind="function">
      <type>const ParameterList &amp;</type>
      <name>sublist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a844d5a8b72b243f73e09904fd703ed94</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a31edc7364ed9dbfcee577787f3511f6f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isParameter</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aa805336b76fcb95ad0b5b49927010f79</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSublist</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a5a1364bd7d1213f4bdfb7bd3bb084133</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isType</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>afd774bba692f94f8a6158d68d1279e04</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ab6f9cf66e67d48161eff80e82ec7b5f5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a47f65adc3dfce8cc88d909b435dca8a4</anchor>
      <arglist>(std::ostream &amp;os, const PrintOptions &amp;printOptions) const </arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>afd63c4902aad7952980a23aa8ee74261</anchor>
      <arglist>(std::ostream &amp;os, int indent=0, bool showTypes=false, bool showFlags=true) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unused</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a8b41f2b9e486a5647e9a80d6f566b577</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>currentParametersString</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ac70f6fa933b8eb6971fd05cf67646d0a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>ac9143b7e1038258a1b05974d7ea3c173</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aa48925320408aa65a077365d7e678136</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>abfbc8a7f0d15f7baa5986d7c1d511743</anchor>
      <arglist>(ConstIterator i) const </arglist>
    </member>
    <member kind="function">
      <type>const ParameterEntry &amp;</type>
      <name>entry</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>aabebc7ae5fed7047b0349b5e51246fe6</anchor>
      <arglist>(ConstIterator i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateParameters</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a8d18038fbf357d7ccb8a8241e32b3ef7</anchor>
      <arglist>(ParameterList const &amp;validParamList, int const depth=1000, EValidateUsed const validateUsed=VALIDATE_USED_ENABLED, EValidateDefaults const validateDefaults=VALIDATE_DEFAULTS_ENABLED) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validateParametersAndSetDefaults</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>a3408d34b88539d6f6024faa05856b91a</anchor>
      <arglist>(ParameterList const &amp;validParamList, int const depth=1000)</arglist>
    </member>
    <docanchor file="classTeuchos_1_1ParameterList" title="Summary">Teuchos_ParameterList_Summary</docanchor>
    <docanchor file="classTeuchos_1_1ParameterList" title="Value semantics">Teuchos_ParameterList_ValueSemantics</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterListAcceptor</name>
    <filename>classTeuchos_1_1ParameterListAcceptor.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~ParameterListAcceptor</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a0e9f939663a96b339d014bc03ade5188</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>setParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a8ff906ce725b1759c4c68dc9d4457f8d</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;paramList)=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>ad679ee3132f5fdbc5d65e59f2677a8b1</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>ab36a66515ba76d04efa519ace4f07aa9</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a462849628b5280b3dad7c8dadfc32ca3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>a46e7e713ed7205a108e68eaf6b3206a6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; const DependencySheet &gt;</type>
      <name>getDependencies</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptor.html</anchorfile>
      <anchor>ad7113f469692ec152245a232e7dcc080</anchor>
      <arglist>() const </arglist>
    </member>
    <docanchor file="classTeuchos_1_1ParameterListAcceptor" title="Summary for users">Teuchos_ParameterList_Users</docanchor>
    <docanchor file="classTeuchos_1_1ParameterListAcceptor" title="Semantics">Teuchos_ParameterList_Semantics</docanchor>
    <docanchor file="classTeuchos_1_1ParameterListAcceptor" title="Complete state or delta?">Teuchos_ParameterList_Semantics_Delta</docanchor>
    <docanchor file="classTeuchos_1_1ParameterListAcceptor" title="Notes for developers">Teuchos_ParameterList_DevNotes</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterListAcceptorDefaultBase</name>
    <filename>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</filename>
    <base virtualness="virtual">Teuchos::ParameterListAcceptor</base>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>paramList_</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>a7023430094afc32aa498d49cb2b1c182</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>getNonconstParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>ad309c6b3f2929140c8a13a7677552f37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>unsetParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>ae66ccfc2b4fa21edc80f8ace8091a9c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>aa6b0c71370083bd609f53f124db0c554</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>setMyParamList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>a23b164bf62a0c12352b1f4a913fe4518</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;paramList)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>getMyNonconstParamList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>aeff13a3b28de7a258d25a497f98e9343</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getMyParamList</name>
      <anchorfile>classTeuchos_1_1ParameterListAcceptorDefaultBase.html</anchorfile>
      <anchor>a47dc466606506fe480a30739c3db0be9</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterListNonAcceptor</name>
    <filename>classTeuchos_1_1ParameterListNonAcceptor.html</filename>
    <base virtualness="virtual">Teuchos::ParameterListAcceptorDefaultBase</base>
    <member kind="function">
      <type>void</type>
      <name>setParameterList</name>
      <anchorfile>classTeuchos_1_1ParameterListNonAcceptor.html</anchorfile>
      <anchor>a55d5beb4f35743a7ee735908e82d630c</anchor>
      <arglist>(RCP&lt; ParameterList &gt; const &amp;paramList)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1ParameterListNonAcceptor.html</anchorfile>
      <anchor>a8fb2b468cd63c29c68618bf8b9d85fc6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterXMLFileReader</name>
    <filename>classTeuchos_1_1ParameterXMLFileReader.html</filename>
    <member kind="function">
      <type></type>
      <name>ParameterXMLFileReader</name>
      <anchorfile>classTeuchos_1_1ParameterXMLFileReader.html</anchorfile>
      <anchor>ad7650b1ea43c207381f8f80982ae250a</anchor>
      <arglist>(const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList</type>
      <name>getParameters</name>
      <anchorfile>classTeuchos_1_1ParameterXMLFileReader.html</anchorfile>
      <anchor>ad8a4946f17ce9d16dff56924a1369c33</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>FileInputSource</type>
      <name>fis_</name>
      <anchorfile>classTeuchos_1_1ParameterXMLFileReader.html</anchorfile>
      <anchor>a0a80f8608711254d56383c7f2046997a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommandLineProcessor::ParseError</name>
    <filename>classTeuchos_1_1CommandLineProcessor_1_1ParseError.html</filename>
    <member kind="function">
      <type></type>
      <name>ParseError</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor_1_1ParseError.html</anchorfile>
      <anchor>a9f0d18b69c8443ca78c5a9826494ead6</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::PerformanceMonitorBase</name>
    <filename>classTeuchos_1_1PerformanceMonitorBase.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>PerformanceMonitorBase</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a4f31475abd0d512c056ea4de1240409c</anchor>
      <arglist>(T &amp;counter_in, bool reset=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PerformanceMonitorBase</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a3e7a7dea1450299a6e55b80718a9598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; T &gt;</type>
      <name>getNewCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a67f2bc9c21920c6125826fb57e2cbf6f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TableFormat &amp;</type>
      <name>format</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aa12ce34e23840da4535432e6b9fbcab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; T &gt;</type>
      <name>lookupCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a8b299e2dc888ceff27146a1ba20894bf</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearCounters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a3639198b8fec9873d5a3a077ed965c35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEUCHOS_DEPRECATED void</type>
      <name>clearTimers</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>afc39ab415234d51061d3ad601f75bea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aca036630d2e5c4c53188b731393d750e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEUCHOS_DEPRECATED void</type>
      <name>clearTimer</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ac03f5be4d1480749c44300c92847f3f7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const T &amp;</type>
      <name>counter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aeae03de20f3e6e6d03fa087da35c4af5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>T &amp;</type>
      <name>counter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a02417cf98f3478bec31f522c4510cd5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isRecursiveCall</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ae453122a38dc46de88848d6457272878</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::map&lt; std::string, RCP&lt; T &gt; &gt; &amp;</type>
      <name>counters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a2cb62fdaf1e4f21af47231c32818aa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeTableFormat</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a538ad2332c97b38b96b9d651d744066f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeCounters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a4a990d019fb8e482e31a7170b53a46a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T &amp;</type>
      <name>counter_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a8cd603dc59c134a9620dfd978c31f623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isRecursiveCall_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a2b0ab0d139eb7d63b48abd1fe136d1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TableFormat *</type>
      <name>format_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ac7a1a0877b09486182b5c3c05db48a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, RCP&lt; T &gt; &gt; *</type>
      <name>counters_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a264fef1274a85916021f5de5c990098e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>PerformanceMonitorBase&lt; Time &gt;</name>
    <filename>classTeuchos_1_1PerformanceMonitorBase.html</filename>
    <member kind="function">
      <type></type>
      <name>PerformanceMonitorBase</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a4f31475abd0d512c056ea4de1240409c</anchor>
      <arglist>(Time &amp;counter_in, bool reset=false)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~PerformanceMonitorBase</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a3e7a7dea1450299a6e55b80718a9598f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Time &gt;</type>
      <name>getNewCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a67f2bc9c21920c6125826fb57e2cbf6f</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TableFormat &amp;</type>
      <name>format</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aa12ce34e23840da4535432e6b9fbcab4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; Time &gt;</type>
      <name>lookupCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a8b299e2dc888ceff27146a1ba20894bf</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearCounters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a3639198b8fec9873d5a3a077ed965c35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEUCHOS_DEPRECATED void</type>
      <name>clearTimers</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>afc39ab415234d51061d3ad601f75bea5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>clearCounter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aca036630d2e5c4c53188b731393d750e</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TEUCHOS_DEPRECATED void</type>
      <name>clearTimer</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ac03f5be4d1480749c44300c92847f3f7</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>const Time &amp;</type>
      <name>counter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>aeae03de20f3e6e6d03fa087da35c4af5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>Time &amp;</type>
      <name>counter</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a02417cf98f3478bec31f522c4510cd5c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>bool</type>
      <name>isRecursiveCall</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ae453122a38dc46de88848d6457272878</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" protection="protected" static="yes">
      <type>static std::map&lt; std::string, RCP&lt; Time &gt; &gt; &amp;</type>
      <name>counters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a2cb62fdaf1e4f21af47231c32818aa76</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeTableFormat</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a538ad2332c97b38b96b9d651d744066f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>freeCounters</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a4a990d019fb8e482e31a7170b53a46a9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Time &amp;</type>
      <name>counter_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a8cd603dc59c134a9620dfd978c31f623</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isRecursiveCall_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a2b0ab0d139eb7d63b48abd1fe136d1c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static TableFormat *</type>
      <name>format_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>ac7a1a0877b09486182b5c3c05db48a5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static std::map&lt; std::string, RCP&lt; Time &gt; &gt; *</type>
      <name>counters_</name>
      <anchorfile>classTeuchos_1_1PerformanceMonitorBase.html</anchorfile>
      <anchor>a264fef1274a85916021f5de5c990098e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Polynomial</name>
    <filename>classTeuchos_1_1Polynomial.html</filename>
    <templarg>CoeffT</templarg>
    <base virtualness="virtual">Teuchos::Describable</base>
    <member kind="typedef">
      <type>CoeffT</type>
      <name>coeff_type</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a797ef840e251850ec45e450059737f26</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos::PolynomialTraits&lt; coeff_type &gt;::scalar_type</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a3e280335b40dd454540d2eaef3e1cc22</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polynomial</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>adc64a45719eb3f25c5869a381923abcb</anchor>
      <arglist>(unsigned int deg, const CoeffT &amp;cloneCoeff, unsigned int reserve=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Polynomial</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a328e5b24728d10cf47ae4f283fd4d9ad</anchor>
      <arglist>(unsigned int deg, unsigned int reserve=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Polynomial</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a78e200b787c5686079955a9597ce5620</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>unsigned int</type>
      <name>degree</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a2949dc3e286c6624c215403ac7d8d522</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setDegree</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a8c45479ba9283cd1b86b85b81c33cce7</anchor>
      <arglist>(unsigned int deg)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; CoeffT &gt;</type>
      <name>getCoefficient</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a10b77627bdd5634b4650ae7a8909474a</anchor>
      <arglist>(unsigned int i)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; const CoeffT &gt;</type>
      <name>getCoefficient</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a60dfe853950d472c2df24e0e5aea1c65</anchor>
      <arglist>(unsigned int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefficient</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a094de3d82e3747dc522771531c027430</anchor>
      <arglist>(unsigned int i, const CoeffT &amp;v)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setCoefficientPtr</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>adfb36364068f650fa33d03d4007cc416</anchor>
      <arglist>(unsigned int i, const Teuchos::RCP&lt; CoeffT &gt; &amp;c_ptr)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a9f459c9af7a8623dd167faf01cfc6985</anchor>
      <arglist>(typename Teuchos::Polynomial&lt; CoeffT &gt;::scalar_type &amp;t, CoeffT *x, CoeffT *xdot=NULL) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>d</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a999377d7afcc6e5a871705dc30fc0099</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>unsigned int</type>
      <name>sz</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a755b93491bb231c5762493874c2e7870</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; Teuchos::RCP&lt; CoeffT &gt; &gt;</type>
      <name>coeff</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a9958dfabeb9dd6a58d33fd01e262d569</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Polynomial</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a253da33f0f3f7dfcf8f871b93b035b04</anchor>
      <arglist>(const Polynomial &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Polynomial &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Polynomial.html</anchorfile>
      <anchor>a634aeffd7aebd4c0d58be97d9a33d01a</anchor>
      <arglist>(const Polynomial &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::PolynomialTraits</name>
    <filename>classTeuchos_1_1PolynomialTraits.html</filename>
    <templarg>Scalar</templarg>
    <member kind="typedef">
      <type>Scalar</type>
      <name>coeff_type</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>a383a116c1f2fbeba645cb2ac3a1232e1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>a7b95229b7c1b694d4bcf0231018e4499</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Teuchos::RCP&lt; coeff_type &gt;</type>
      <name>clone</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>aca275c15f70f4f562893005bf1e935ad</anchor>
      <arglist>(const coeff_type &amp;c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>copy</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>a90c22432a789dbb2e4e7111889487088</anchor>
      <arglist>(const coeff_type &amp;x, coeff_type *y)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>a47fccdbb748caeaf0ec31b463218aea0</anchor>
      <arglist>(coeff_type *y, const scalar_type &amp;alpha)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>update</name>
      <anchorfile>classTeuchos_1_1PolynomialTraits.html</anchorfile>
      <anchor>a631000998af3d1fd0fbe9252d35accdb</anchor>
      <arglist>(coeff_type *y, const coeff_type &amp;x, const scalar_type &amp;beta)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::PostModNothing</name>
    <filename>classTeuchos_1_1PostModNothing.html</filename>
    <templarg>T_impl</templarg>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1PostModNothing.html</anchorfile>
      <anchor>a6e1724cc2c79720e308bdbbf10f388d8</anchor>
      <arglist>(T_impl *p) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ParameterList::PrintOptions</name>
    <filename>classTeuchos_1_1ParameterList_1_1PrintOptions.html</filename>
    <member kind="function">
      <type></type>
      <name>PrintOptions</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>afcbbb65111ef1cec5912c11788bf1477</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PrintOptions &amp;</type>
      <name>indent</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>ac89f9e2d1a8aadc4592c373d1f448f58</anchor>
      <arglist>(int _indent)</arglist>
    </member>
    <member kind="function">
      <type>PrintOptions &amp;</type>
      <name>showTypes</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>aaecd6fa03e72d54333bbda6a04a248f0</anchor>
      <arglist>(bool _showTypes)</arglist>
    </member>
    <member kind="function">
      <type>PrintOptions &amp;</type>
      <name>showFlags</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a8f47c5b29f6c11c501fbad787f9bd930</anchor>
      <arglist>(bool _showFlags)</arglist>
    </member>
    <member kind="function">
      <type>PrintOptions &amp;</type>
      <name>showDoc</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a0c49d74c6622074ab65ceff174d5d7a7</anchor>
      <arglist>(bool _showDoc)</arglist>
    </member>
    <member kind="function">
      <type>PrintOptions &amp;</type>
      <name>incrIndent</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a2263c70800107949033f00e2d8163041</anchor>
      <arglist>(int indents)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>indent</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a6f3029da385903fc4e12c0043454b7ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showTypes</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a45f923b7d40b71631649710bfdcf0450</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showFlags</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a45ae76d4708cbcf8809e72ba18943c68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showDoc</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>ae62f8f8c3de07c6fafc9c017c2ad8d5e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>PrintOptions</type>
      <name>copy</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a19a70d32f17da0b0285e0eaa820556c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>indent_</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>abe135c5faeefb9b0593334dcaeb58273</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showTypes_</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a1f78c960ff5b945cc3c98f4ea2ab5926</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showFlags_</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>a687c4307b00639d9bb993a63f9f12864</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showDoc_</name>
      <anchorfile>classTeuchos_1_1ParameterList_1_1PrintOptions.html</anchorfile>
      <anchor>ac177947ba620ea86779ca49762425843</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::PromotionTraits</name>
    <filename>classTeuchos_1_1PromotionTraits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::PromotionTraits&lt; T, T &gt;</name>
    <filename>classTeuchos_1_1PromotionTraits_3_01T_00_01T_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T</type>
      <name>promote</name>
      <anchorfile>classTeuchos_1_1PromotionTraits_3_01T_00_01T_01_4.html</anchorfile>
      <anchor>a44a2e4da650ac387c4a43c2df515c377</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Ptr</name>
    <filename>classTeuchos_1_1Ptr.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>af8a805c872b3e76cd11bfdc72deb02b8</anchor>
      <arglist>(ENull null_in=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a388092502cdcaf286a1515f2982b2876</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>aa36d2c448bf568f24c9a3bc389eaec90</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a8a9717930ce7a53405dd76714a4f672e</anchor>
      <arglist>(const Ptr&lt; T2 &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a370eb76e7341bfab9c1e9fa9d669b59a</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a6cf87001b92c483942429c54d2a46aeb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>ab4599507c427bb9944969160d9e0a2e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a425dc3834ffdf4645140a687e1c54a0b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>ad9ddea8a9a7cd1e4b714ba48f597601f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a7b8d9b437f86f48ea18add75e8873001</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Ptr&lt; T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a97b189afcacfd5d7f6453a778240ca23</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Ptr&lt; T &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a8d2e64002d6981348568d47cd429a25a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a4acac46d75337c1329b04e77ebf7fa68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a28b8dffd5c30b652d5b7f96f112f9cbd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>affd23f86a3febaac240ec2e1cf403298</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a5a0228e22fca3ed1e1ac4f3ed678b36f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>outArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a8a78259ca8e170a42932a45e412b88e1</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>inOutArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a928ef67284e94e5ca1c41b81084103cb</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>inoutArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>acb9418d4e46ac7b589f8de2ab89bc56e</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T &gt;</type>
      <name>ptrInArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a10378147716e47d52786911bab658493</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>optInArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a4ba487b250aab0a2dddb732cd4a3b951</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T &gt;</type>
      <name>constOptInArg</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>ae9066e6cad7141e920481b77522e1cc4</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>ptrFromRef</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a811b10232b631fdcb02a543a17d0bb1a</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>af7234a3ac243772a707da53d011276fb</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T &gt;</type>
      <name>constPtr</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a6b7628e3dd1c9920942afe111dc4cb9a</anchor>
      <arglist>(T &amp;arg)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a78d8b299b372c1caf467575beebdd7ea</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a2def51ff22310fcac0f7ad3f157586ff</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a24408f633b6bd788daaee868ce3019f9</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>ab80d826cbb863af50c0beb1aa02ad92b</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>ad6a6bdc45c6acef84001efd972650b6f</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1, const Ptr&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>aec67907091db072c4975d7302dd2d15e</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1, const Ptr&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T2 &gt;</type>
      <name>ptr_implicit_cast</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a033059947d94f9f7324dab94468fea73</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T2 &gt;</type>
      <name>ptr_static_cast</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>aed315c8d8d027bfc40af25da05ae9d93</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T2 &gt;</type>
      <name>ptr_const_cast</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a01039f443e5b66385cf1aa008947df7a</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T2 &gt;</type>
      <name>ptr_dynamic_cast</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>a18883afb9a2a07fe33f3f359a0622a03</anchor>
      <arglist>(const Ptr&lt; T1 &gt; &amp;p1, bool throw_on_fail=false)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Ptr.html</anchorfile>
      <anchor>afb88db7902ac82184de3175eb5a662fc</anchor>
      <arglist>(std::ostream &amp;out, const Ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Range1D</name>
    <filename>classTeuchos_1_1Range1D.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>EInvalidRange</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a79f720bc5df1c6bed0248ce7b4d737cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a79f720bc5df1c6bed0248ce7b4d737cfa87f0cbb0bf51114eb2a4c12ca1bd1cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Index</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a3343e2fad97ae6c46cbba384b86b081c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>ac0e1b37abf71d734957479c2b98d25bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INVALID</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a79f720bc5df1c6bed0248ce7b4d737cfa87f0cbb0bf51114eb2a4c12ca1bd1cd3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range1D</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a8a9ddac9e52689a43f9584f6d12fe212</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range1D</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>ae61b284225ad2182beded08d1b3dcf68</anchor>
      <arglist>(EInvalidRange)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Range1D</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a3fd72be8345ec81be6ff1ff4f2166b58</anchor>
      <arglist>(Ordinal lbound, Ordinal ubound)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>full_range</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a8252c8b6c7a0a24f529697ae7e6c45d1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>lbound</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a721657dfd8d808edb81b2e1e55a9cbbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>ubound</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a3ed0a582189ec6e422e5ba109388a20d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a0631568c5e111a8a11a1958e9fbc02ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>in_range</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a258e7066f7b697bac36b7593263ccfee</anchor>
      <arglist>(Ordinal i) const </arglist>
    </member>
    <member kind="function">
      <type>Range1D &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a87364bb8d3fcddd0af2225e53ec44812</anchor>
      <arglist>(Ordinal incr)</arglist>
    </member>
    <member kind="function">
      <type>Range1D &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a2bbbef969946d514c160bc32aa250eba</anchor>
      <arglist>(Ordinal incr)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const Range1D</type>
      <name>Invalid</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a98703c306886c0c7ff4657782fa669b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assert_valid_range</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a10239ca14e533e72481b2536a8871768</anchor>
      <arglist>(Ordinal lbound, Ordinal ubound) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>lbound_</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a4d3facda513cd6e0875de4fe60b4a45d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>ubound_</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a3fe2ab4a57f8694903512eb1139221ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>adf61b6230c029e12f3382b4cb8a8e65a</anchor>
      <arglist>(const Range1D &amp;rng1, const Range1D &amp;rng2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a917e3acb50877d5f778430ef0673dd59</anchor>
      <arglist>(const Range1D &amp;rng1, const Range1D &amp;rng2)</arglist>
    </member>
    <member kind="function">
      <type>Range1D</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a07d7fa9c002603364daf6a854b025698</anchor>
      <arglist>(const Range1D &amp;rng_rhs, Range1D::Ordinal i)</arglist>
    </member>
    <member kind="function">
      <type>Range1D</type>
      <name>operator+</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a87ee2fd177405a781545aad7420b7bd4</anchor>
      <arglist>(Range1D::Ordinal i, const Range1D &amp;rng_rhs)</arglist>
    </member>
    <member kind="function">
      <type>Range1D</type>
      <name>operator-</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>ad85210cadf08d1eba407c3d9fe935063</anchor>
      <arglist>(const Range1D &amp;rng_rhs, Range1D::Ordinal i)</arglist>
    </member>
    <member kind="function">
      <type>Range1D</type>
      <name>full_range</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a2e47e05bab6dec1bf9b300b53c264202</anchor>
      <arglist>(const Range1D &amp;rng, Range1D::Ordinal lbound, Range1D::Ordinal ubound)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1Range1D.html</anchorfile>
      <anchor>a8a9be7dbeeb99dd2759d627833f70cae</anchor>
      <arglist>(std::ostream &amp;out, const Range1D &amp;rng)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RangeError</name>
    <filename>classTeuchos_1_1RangeError.html</filename>
    <base>Teuchos::ExceptionBase</base>
    <member kind="function">
      <type></type>
      <name>RangeError</name>
      <anchorfile>classTeuchos_1_1RangeError.html</anchorfile>
      <anchor>ae1332e5e3cb90afab82f59b6804d161d</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RangeValidatorDependency</name>
    <filename>classTeuchos_1_1RangeValidatorDependency.html</filename>
    <templarg>T</templarg>
    <base>Teuchos::ValidatorDependency</base>
    <member kind="typedef">
      <type>std::pair&lt; T, T &gt;</type>
      <name>Range</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>af37ea84fe3f8acef784aa5b0c2db3aef</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; Range, RCP&lt; const ParameterEntryValidator &gt; &gt;</type>
      <name>RangeToValidatorMap</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a8f4ecc5480707ee5707e60a499367a9a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; Range, RCP&lt; const ParameterEntryValidator &gt; &gt;</type>
      <name>RangeValidatorPair</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a28f937e9a9ea9c821a5e2c7208524356</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RangeValidatorDependency</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a48961169c967fe50ee1be9c9c01a93b1</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RangeToValidatorMap rangesAndValidators, RCP&lt; const ParameterEntryValidator &gt; defaultValidator=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RangeValidatorDependency</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a92df75fedc8ca255002702e6cc6fff06</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RangeToValidatorMap rangesAndValidators, RCP&lt; const ParameterEntryValidator &gt; defaultValidator=null)</arglist>
    </member>
    <member kind="function">
      <type>const RangeToValidatorMap &amp;</type>
      <name>getRangeToValidatorMap</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a02ee6d75008c26d83481be762c01e801</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>getDefaultValidator</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a2b7968ed02e3682af64d847be8e590e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a536fd906f0d02dc53de4d6cd86c09e56</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a93b1cf2eb41dd3947a790ee6693a474a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>a9e7a896199e727e378f2116eaa0bfe88</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RangeToValidatorMap</type>
      <name>rangesAndValidators_</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>ae530c7fc710b3dfaa66f3a3e37818aa0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>defaultValidator_</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>ae4997d3750356f040ab72f9fbd586936</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setDependentsToValidator</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependency.html</anchorfile>
      <anchor>affffa0eb6bbb633e1ddc8075a2c560b6</anchor>
      <arglist>(RCP&lt; const ParameterEntryValidator &gt; toSet)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RangeValidatorDependencyXMLConverter</name>
    <filename>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::ValidatorDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>acc77e32daf582bc25985b5b7582c54bf</anchor>
      <arglist>(RCP&lt; const ValidatorDependency &gt; dependency, XMLObject &amp;xmlObj, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ValidatorDependency &gt;</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a678bfe104753fd1fa70e72cf2a9d26cb</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; const ParameterEntry &gt; dependee, const Dependency::ParameterEntryList dependents, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getRangesAndValidatorsTag</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a9ac64521cdb80e2e7fae700feeaf27ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPairTag</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a356c5be271767c75f3dbe064895e9bc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getMinAttributeName</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a3a737deab806a138316e3f480a969930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getMaxAttributeName</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a1542e4dce727c503b02739fadca7bc0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a7799dc77dcd16d475bafeb1ec3e0673b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDefaultValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1RangeValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ad7af709e8825448f6596ef111193d252</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RawPointerConversionTraits</name>
    <filename>classTeuchos_1_1RawPointerConversionTraits.html</filename>
    <templarg></templarg>
  </compound>
  <compound kind="class">
    <name>Teuchos::RawPointerConversionTraits&lt; ArrayRCP&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1RawPointerConversionTraits_3_01ArrayRCP_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>ArrayRCP&lt; T &gt;::pointer</type>
      <name>Ptr_t</name>
      <anchorfile>classTeuchos_1_1RawPointerConversionTraits_3_01ArrayRCP_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a9a63e0a44fc027d5ac9f1190b54fdd19</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RawPointerConversionTraits_3_01ArrayRCP_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a75c51e23313b30dbbd981677905c5515</anchor>
      <arglist>(const ArrayRCP&lt; T &gt; &amp;arcp)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RawPointerConversionTraits&lt; RawType * &gt;</name>
    <filename>classTeuchos_1_1RawPointerConversionTraits_3_01RawType_01_5_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>RawType *</type>
      <name>Ptr_t</name>
      <anchorfile>classTeuchos_1_1RawPointerConversionTraits_3_01RawType_01_5_01_4.html</anchorfile>
      <anchor>aa63f6bba7d1c8c867d9691eb585dd69d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ptr_t</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RawPointerConversionTraits_3_01RawType_01_5_01_4.html</anchorfile>
      <anchor>aaec00bbf8c686d57a2f56ad9a67ee91b</anchor>
      <arglist>(RawType *p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RawWorkspace</name>
    <filename>classTeuchos_1_1RawWorkspace.html</filename>
    <member kind="function">
      <type></type>
      <name>RawWorkspace</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a0f48f5a2a929d9c48a9d07129f0e146e</anchor>
      <arglist>(WorkspaceStore *workspace_store, size_t num_bytes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RawWorkspace</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>aef8ef4a802c046ad9322e877295c5855</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>num_bytes</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a69acd08a5b28a55e257ac7d4e89777a0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>workspace_ptr</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>ae823a66dde49622724b64beee4fb293c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>workspace_ptr</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a458bf133fa8c672deb37a4e8c83fd533</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RawWorkspace</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a4bdb4f503172a33104476ce3ce46261f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RawWorkspace</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>ad1687991516682a848b5bb95f5d2bef0</anchor>
      <arglist>(const RawWorkspace &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RawWorkspace &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a025d4227eff92ba995c9ea9c94b1b979</anchor>
      <arglist>(const RawWorkspace &amp;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void *</type>
      <name>operator new</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a976896be763973398a3999e6895f39cd</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>operator delete</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>ae02e6aa237ab762c77a0c777603146ec</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>WorkspaceStore *</type>
      <name>workspace_store_</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>ab6df83cf39a9de9e5a5616ab7a5649d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>workspace_begin_</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>aa3076f308942211e344f8e6a85600cd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>workspace_end_</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a438ca40c0154fc5b0d595c4074adceb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>owns_memory_</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a56763521385181517080ea6edbc3e77d</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>WorkspaceStore</name>
      <anchorfile>classTeuchos_1_1RawWorkspace.html</anchorfile>
      <anchor>a1e3c79d1230590b64a4edab11f943036</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCP</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(T *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(T *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(T *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ad2b301368bda84f7caffc65df7162894</anchor>
      <arglist>(T *p, const RCPNodeHandle &amp;node)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpFromPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6b52dbfe95890c138f922a4d4e475efd</anchor>
      <arglist>(const Ptr&lt; T &gt; &amp;ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcp</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7fd9e80180eec6cf6e3038505d3dc7a4</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>boost::shared_ptr&lt; T &gt;</type>
      <name>shared_pointer</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6e779bd6873303e722f91b21ec558b93</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;rcp)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcp</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a18c212dad5228ed3adb1b7b376b37edc</anchor>
      <arglist>(T *p, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithDealloc</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a0c6441ac96ec5797f7b487e4c851aebe</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithDeallocUndef</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a69ff146d10e16f667ef0ce4523a5eef7</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpFromRef</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c754d72d6d232c97e38bc359ab6ef82</anchor>
      <arglist>(T &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpFromUndefRef</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a823eee3138de3b23dab97b3f37e197f3</anchor>
      <arglist>(T &amp;r)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithEmbeddedObjPreDestroy</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a02148aef172f7b2c0fb2de29cb01b91a</anchor>
      <arglist>(T *p, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithEmbeddedObjPostDestroy</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8272eea6a27f1fce6c30fc5d568f2de7</anchor>
      <arglist>(T *p, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a506210a123b6e1747d910f037065bd73</anchor>
      <arglist>(T *p, const Embedded &amp;embedded, bool owns_mem=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpWithInvertedObjOwnership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>abaa6bdcd39bac7dd5c12c3e0f49eba25</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;child, const RCP&lt; ParentT &gt; &amp;parent)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcpCloneNode</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae07a807743d25c57754a1988645ba791</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a10f5c533ebfe9dcb44310780b97a349f</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ad792756b35ab5a2fa8c1d1d608763aec</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afab9d7e0e5480ec8b455e38de0eee49e</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4081b5c4ac5b9d630a695755a72771cc</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p, ENull)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a0bddcdcdc506ddab9d82990bcb48f059</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1, const RCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ad58080d40b950da5009ceb8e33ce9d1c</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1, const RCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T2 &gt;</type>
      <name>rcp_implicit_cast</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a61fc9f719ee13e5d961dcf47053883b4</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T2 &gt;</type>
      <name>rcp_static_cast</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a1c369381869737e67be8cab843b18076</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T2 &gt;</type>
      <name>rcp_const_cast</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6931e6c2f74c9fa9467e5dc91c6cd983</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T2 &gt;</type>
      <name>rcp_dynamic_cast</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a1580c807c6df3fdbcb953687b4ff60c7</anchor>
      <arglist>(const RCP&lt; T1 &gt; &amp;p1, bool throw_on_fail=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_data</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>addd19618c28d1cbc6959f346cee07a7f</anchor>
      <arglist>(const T1 &amp;extra_data, const std::string &amp;name, const Ptr&lt; RCP&lt; T2 &gt; &gt; &amp;p, EPrePostDestruction destroy_when=POST_DESTROY, bool force_unique=true)</arglist>
    </member>
    <member kind="function">
      <type>const T1 &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7f7cd634c8250ff0515bd55c5f3cde6</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>T1 &amp;</type>
      <name>get_nonconst_extra_data</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8978c29ca24e96cb61185507a0419dac</anchor>
      <arglist>(RCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T1 &gt;</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aac70269754b423e8e76d2e75b3dfbf96</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T1 &gt;</type>
      <name>get_optional_nonconst_extra_data</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7b838cf99afd0bb5f2ebc94ab8d73b59</anchor>
      <arglist>(RCP&lt; T2 &gt; &amp;p, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const Dealloc_T &amp;</type>
      <name>get_dealloc</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a62a1b34d2efe42b0a0fb4e20c1089f89</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Dealloc_T &amp;</type>
      <name>get_nonconst_dealloc</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a67483a8eaf4d6a5f234e7bd6c971b009</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Dealloc_T &gt;</type>
      <name>get_optional_dealloc</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac7868e0bffe12f3a8c82daa61cd4cefb</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Dealloc_T &gt;</type>
      <name>get_optional_nonconst_dealloc</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40a73590cabeeb6ac3556981e068bd5d</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>const Embedded &amp;</type>
      <name>getEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afd9ce82fd86820b298f9c3847d585708</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Embedded &amp;</type>
      <name>getNonconstEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5dfd3a9f656d730dea2902f08a765811</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Embedded &gt;</type>
      <name>getOptionalEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae35995646037935daf4f98375cbb7ae3</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Embedded &gt;</type>
      <name>getOptionalNonconstEmbeddedObj</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a1fcb0b191b4d3f13cd7e2c139dcc4d8e</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa92c7a8fc60f4741319ee31a12a6d75b</anchor>
      <arglist>(std::ostream &amp;out, const RCP&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>rcp</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a0275ec050540d0f809454692c62aeb46</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;sptr)</arglist>
    </member>
    <member kind="function">
      <type>std::shared_ptr&lt; T &gt;</type>
      <name>get_shared_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a38863b03f6f86e507045452a8186c86a</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;rcp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(T *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; T &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const T &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; A &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>A</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(A *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(A *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(A *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>A *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(A *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(A *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; A &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; A &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; A &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; A &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; A &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>A *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>A &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>A *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>A *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; A &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; A &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const A &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; A &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; A &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; A &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; A &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; A &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; A &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; A &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; AdderType &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>AdderType</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(AdderType *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(AdderType *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(AdderType *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>AdderType *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(AdderType *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(AdderType *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; AdderType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; AdderType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; AdderType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; AdderType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; AdderType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AdderType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AdderType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AdderType *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>AdderType *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; AdderType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; AdderType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const AdderType &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; AdderType &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; AdderType &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; AdderType &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; AdderType &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; AdderType &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; AdderType &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; AdderType &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; C &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>C</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(C *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(C *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(C *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>C *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(C *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(C *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; C &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; C &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; C &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; C &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>C *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; C &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; C &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const C &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; C &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; C &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; C &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; C &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; C &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; C &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; C &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Callback &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Callback</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Callback *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Callback *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Callback *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Callback *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Callback *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Callback *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Callback &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Callback &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Callback &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Callback &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Callback &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Callback &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Callback *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Callback &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Callback &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Callback &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Callback &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Callback &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Callback &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Callback &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Callback &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Callback &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Callback &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const EnhancedNumberValidator&lt; T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const EnhancedNumberValidator&lt; T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const EnhancedNumberValidator&lt; T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const EnhancedNumberValidator&lt; T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const EnhancedNumberValidator&lt; T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const EnhancedNumberValidator&lt; T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const EnhancedNumberValidator&lt; T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EnhancedNumberValidator&lt; T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EnhancedNumberValidator&lt; T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EnhancedNumberValidator&lt; T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const EnhancedNumberValidator&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const FileNameValidator &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const FileNameValidator</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const FileNameValidator *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const FileNameValidator *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const FileNameValidator *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const FileNameValidator *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const FileNameValidator *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const FileNameValidator *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const FileNameValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const FileNameValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const FileNameValidator *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const FileNameValidator &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const FileNameValidator *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const FileNameValidator *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const FileNameValidator &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const FileNameValidator &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const FileNameValidator &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const FileNameValidator &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const FileNameValidator &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const FileNameValidator &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const FileNameValidator &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const ObjType &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const ObjType</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const ObjType *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const ObjType *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const ObjType *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ObjType *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const ObjType *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const ObjType *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const ObjType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const ObjType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const ObjType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjType *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ObjType *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ObjType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ObjType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const ObjType &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ObjType &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ObjType &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ObjType &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ObjType &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ObjType &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ObjType &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const OP &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const OP</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const OP *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const OP *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const OP *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const OP *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const OP *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const OP *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const OP &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const OP &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const OP &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const OP &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const OP &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OP *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OP &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OP *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const OP *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const OP &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const OP &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const OP &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const OP &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const OP &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const OP &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const OP &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const OP &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const OP &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const OP &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const PointerType &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const PointerType</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const PointerType *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const PointerType *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const PointerType *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const PointerType *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const PointerType *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const PointerType *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const PointerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PointerType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const PointerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PointerType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const PointerType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PointerType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PointerType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PointerType *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const PointerType *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const PointerType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const PointerType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const PointerType &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const PointerType &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PointerType &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const PointerType &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const PointerType &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const PointerType &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const PointerType &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const PointerType &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Serializer &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Serializer</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Serializer *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Serializer *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Serializer *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Serializer *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Serializer *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Serializer *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Serializer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Serializer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Serializer *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Serializer &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Serializer *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Serializer *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Serializer &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Serializer &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Serializer &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Serializer &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Serializer &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Serializer &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Serializer &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Serializer &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const StringValidator &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const StringValidator</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const StringValidator *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const StringValidator *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const StringValidator *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const StringValidator *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const StringValidator *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const StringValidator *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const StringValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const StringValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StringValidator *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StringValidator &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StringValidator *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const StringValidator *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const StringValidator &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const StringValidator &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const StringValidator &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const StringValidator &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringValidator &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringValidator &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const StringValidator &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const StringValidator &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const StringValidator &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const StringValidator &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::Condition &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::Condition</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::Condition *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::Condition *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::Condition *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::Condition *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::Condition *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::Condition *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::Condition &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Condition &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::Condition &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Condition *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Condition &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Condition *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Condition *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Condition &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Condition &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::Condition &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Condition &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Condition &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Condition &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Condition &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::ParameterEntry &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::ParameterEntry</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::ParameterEntry *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::ParameterEntry *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::ParameterEntry *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ParameterEntry *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::ParameterEntry *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::ParameterEntry *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::ParameterEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntry *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntry &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntry *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntry *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntry &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntry &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::ParameterEntry &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntry &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntry &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntry &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntry &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::ParameterEntryValidator &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::ParameterEntryValidator</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::ParameterEntryValidator *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::ParameterEntryValidator *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::ParameterEntryValidator *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ParameterEntryValidator *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::ParameterEntryValidator *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::ParameterEntryValidator *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntryValidator *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntryValidator &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntryValidator *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterEntryValidator *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::ParameterEntryValidator &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::ParameterList &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::ParameterList</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::ParameterList *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::ParameterList *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::ParameterList *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ParameterList *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::ParameterList *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::ParameterList *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ParameterList *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterList &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterList &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::ParameterList &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ParameterList &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ParameterList &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ReferenceTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::Serializer &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::Serializer</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::Serializer *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::Serializer *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::Serializer *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::Serializer *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::Serializer *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::Serializer *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::Serializer &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::Serializer &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::Serializer&lt; Ordinal, T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::Serializer&lt; Ordinal, T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::Serializer&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::Serializer&lt; Ordinal, T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::Serializer&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::Serializer&lt; Ordinal, T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::Serializer&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; DependeeType &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::SimpleFunctionObject&lt; T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::StringToIntegralParameterEntryValidator&lt; int &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::ValueTypeReductionOp&lt; Ordinal, T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const Teuchos::VerboseObject&lt; ObjectType &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const Teuchos::VerboseObject&lt; ObjectType &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const Teuchos::VerboseObject&lt; ObjectType &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const Teuchos::VerboseObject&lt; ObjectType &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const Teuchos::VerboseObject&lt; ObjectType &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const Teuchos::VerboseObject&lt; ObjectType &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const Teuchos::VerboseObject&lt; ObjectType &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; const ValidatorType &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>const ValidatorType</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(const ValidatorType *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(const ValidatorType *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(const ValidatorType *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ValidatorType *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(const ValidatorType *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(const ValidatorType *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; const ValidatorType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; const ValidatorType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; const ValidatorType &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ValidatorType *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ValidatorType &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ValidatorType *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const ValidatorType *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ValidatorType &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ValidatorType &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const const ValidatorType &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ValidatorType &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ValidatorType &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ValidatorType &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; const ValidatorType &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>std::basic_ostream&lt; char_type, traits_type &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(std::basic_ostream&lt; char_type, traits_type &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(std::basic_ostream&lt; char_type, traits_type &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(std::basic_ostream&lt; char_type, traits_type &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::basic_ostream&lt; char_type, traits_type &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(std::basic_ostream&lt; char_type, traits_type &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(std::basic_ostream&lt; char_type, traits_type &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; char_type, traits_type &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; char_type, traits_type &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; char_type, traits_type &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::basic_ostream&lt; char_type, traits_type &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::basic_ostream&lt; char_type, traits_type &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; std::ostringstream &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>std::ostringstream</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(std::ostringstream *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(std::ostringstream *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(std::ostringstream *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::ostringstream *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(std::ostringstream *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(std::ostringstream *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; std::ostringstream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; std::ostringstream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; std::ostringstream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ostringstream *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ostringstream &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ostringstream *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::ostringstream *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::ostringstream &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::ostringstream &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const std::ostringstream &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; std::ostringstream &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::ostringstream &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; std::ostringstream &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; std::ostringstream &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::basic_FancyOStream &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::basic_FancyOStream</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::basic_FancyOStream *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::basic_FancyOStream *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::basic_FancyOStream *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::basic_FancyOStream *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::basic_FancyOStream *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::basic_FancyOStream *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::basic_FancyOStream &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::basic_FancyOStream&lt; CharT, Traits &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::ParameterEntryValidator &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::ParameterEntryValidator</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::ParameterEntryValidator *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::ParameterEntryValidator *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::ParameterEntryValidator *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterEntryValidator *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::ParameterEntryValidator *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::ParameterEntryValidator *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterEntryValidator *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterEntryValidator &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterEntryValidator *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterEntryValidator *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterEntryValidator &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterEntryValidator &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterEntryValidator &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterEntryValidator &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterEntryValidator &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterEntryValidator &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterEntryValidator &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::ParameterList &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::ParameterList</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::ParameterList *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::ParameterList *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::ParameterList *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::ParameterList *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::ParameterList *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::ParameterList *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::ParameterList &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterList *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterList &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterList *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::ParameterList *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterList &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterList &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::ParameterList &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::ParameterList &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::ParameterList &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::ParameterList &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt;</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::SimpleFunctionObject&lt; T &gt; *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::SimpleFunctionObject&lt; T &gt; *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::SimpleFunctionObject&lt; T &gt; *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::SimpleFunctionObject&lt; T &gt; *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::SimpleFunctionObject&lt; T &gt; *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt; &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::SimpleFunctionObject&lt; T &gt; *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::SimpleFunctionObject&lt; T &gt; &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::TableEntry &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::TableEntry</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::TableEntry *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::TableEntry *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::TableEntry *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::TableEntry *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::TableEntry *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::TableEntry *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::TableEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::TableEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::TableEntry &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::TableEntry *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::TableEntry &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::TableEntry *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::TableEntry *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::TableEntry &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::TableEntry &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::TableEntry &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::TableEntry &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::TableEntry &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::TableEntry &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::TableEntry &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::XMLInputStream &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::XMLInputStream</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::XMLInputStream *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::XMLInputStream *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::XMLInputStream *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::XMLInputStream *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::XMLInputStream *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::XMLInputStream *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::XMLInputStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::XMLInputStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::XMLInputStream &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLInputStream *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLInputStream &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLInputStream *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLInputStream *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLInputStream &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLInputStream &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::XMLInputStream &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLInputStream &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLInputStream &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLInputStream &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLInputStream &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>RCP&lt; Teuchos::XMLObjectImplem &gt;</name>
    <filename>classTeuchos_1_1RCP.html</filename>
    <member kind="typedef">
      <type>Teuchos::XMLObjectImplem</type>
      <name>element_type</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a5718fa8c455b445078632723c8666480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aa3e9fabd5a8558882ea4a14dde9f82df</anchor>
      <arglist>(Teuchos::XMLObjectImplem *p, ERCPWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a16286f0170a5ae6c7c2327ab12c681cc</anchor>
      <arglist>(Teuchos::XMLObjectImplem *p, ERCPUndefinedWeakNoDealloc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9388b91f32514229024f6a108d64529</anchor>
      <arglist>(Teuchos::XMLObjectImplem *p, Dealloc_T dealloc, ERCPUndefinedWithDealloc, bool has_ownership=true)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::XMLObjectImplem *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a81a513fa52beb83defedd82b81526aad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNodeHandle</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a40734be7dcb38c7734fcd60bf8b40d6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6df5f0ec485e775f8d35bfdd2dbb0eac</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aca5aaa0a0ee98f43a178e28ca5ade6b1</anchor>
      <arglist>(Teuchos::XMLObjectImplem *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab7153f6d53b495afd4c1a4a45d9710d4</anchor>
      <arglist>(Teuchos::XMLObjectImplem *p, Dealloc_T dealloc, bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a8711f68aa09dcaf4756aa19949d2d44a</anchor>
      <arglist>(const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab1c3e448a0ec56fe6176508c43e51c66</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCP</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a32c1a9a58e67a6d0a3fbdbb86bf8701b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aed3bf10956b92aeebe3bf42a37d7d05f</anchor>
      <arglist>(const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9f6fd39aa3520c4b4c7a1ca733ff07f9</anchor>
      <arglist>(ENull)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a680e6550b670c49798365a8db5f9b468</anchor>
      <arglist>(RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;r_ptr)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a82d9b20546a02253188039c484bf7e1b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLObjectImplem *</type>
      <name>operator-&gt;</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a093ff70ec999f2e08ae4bccdee6835de</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLObjectImplem &amp;</type>
      <name>operator*</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6389d1ecca483ebc29e3804488414bb7</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLObjectImplem *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6c70c3e4073cf89b9ec9d8a3ba15e7fc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::XMLObjectImplem *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6dc80856037bd8908aafa11ea1f54082</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLObjectImplem &gt;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a4c14fca0a5b1112dca76ac23a6813477</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLObjectImplem &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>af15be9a7c27995c887e068bdf409f572</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const Teuchos::XMLObjectImplem &gt;</type>
      <name>getConst</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a6157f90659de0be48bfa9e25dec3acc9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a33e0971c45f2d3ffc11dd9a3d0a9306b</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afb0a3fe89b6c69d57a18e8cc95e234cc</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a7f9577dd88522c03f42d6a2827b7dad9</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a94b3c4a7ce399f9d4edf1e17ef96331a</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a05b195252f989cbcfbab991180fe8a24</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2d8c9e61ac5f074a375478598f08ba05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a97c524ad4c7f78e111cfc2411a1abf9e</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; Teuchos::XMLObjectImplem &gt;</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a281058a75338ef844e6db99353bd6bfd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLObjectImplem &gt;</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a9b2fd6a9d63e9a9ca89ec45b15dcfdfe</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::XMLObjectImplem &gt;</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ac5abe5380443c0a0496a4ec2466b4360</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shares_resource</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ab3c01a6673adeba3353f7b3812e2aa88</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;r_ptr) const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae9309e8f2d1d75cba3f5097ff9ffb130</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>aefbcd47cc5624f169c6543bf98ebd022</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a89abfd1a60e5e0e2d1092f694f220885</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; Teuchos::XMLObjectImplem &gt; &amp;</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>afaa32f49b803a4456c0d22e9c2ef6ba6</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a2cb055f53bb8d7c624cdaa771e410dc1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a76a4649f01205b3e7c9906ccbb87628b</anchor>
      <arglist>(T2 *p, bool has_ownership=true)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>a80fec8776deaeb7099b47f595f5df7ef</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::RCPComp</name>
    <filename>structTeuchos_1_1RCPComp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structTeuchos_1_1RCPComp.html</anchorfile>
      <anchor>a4106f3bfac214e0831f9a94ff7ac2a79</anchor>
      <arglist>(const RCP&lt; T1 &gt; p1, const RCP&lt; T2 &gt; p2) const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::RCPConstComp</name>
    <filename>structTeuchos_1_1RCPConstComp.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>structTeuchos_1_1RCPConstComp.html</anchorfile>
      <anchor>add7b2235be4384fb8ff98efe4f8dcffa</anchor>
      <arglist>(const RCP&lt; const T1 &gt; p1, const RCP&lt; const T2 &gt; p2) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPDeleter</name>
    <filename>classTeuchos_1_1RCPDeleter.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>void</type>
      <name>result_type</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>a0cd274f559488b2c9a67cb841a6c21b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>argument_type</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>a7a07c3285b2a2c12afc56145fba2bd43</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPDeleter</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>ac62530484981c90a2659d3f49b016320</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;rcp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>afc82249b270e69febf413218e8f49fbe</anchor>
      <arglist>(T *x) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>a9ffdcec9da3dd0979c30b8247e9b17aa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPDeleter</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>a101b158ee2186f4bbedc149bc1cef666</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; T &gt;</type>
      <name>rcp_</name>
      <anchorfile>classTeuchos_1_1RCPDeleter.html</anchorfile>
      <anchor>a47fc0346c8f0022f4206ff6ce9b32c59</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPNode</name>
    <filename>classTeuchos_1_1RCPNode.html</filename>
    <class kind="struct">Teuchos::RCPNode::extra_data_entry_t</class>
    <member kind="function">
      <type></type>
      <name>RCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a5ceae2ed48a1ab5aa9686ebe0cb752c7</anchor>
      <arglist>(bool has_ownership_in)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~RCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>ab9d120ff1c23583659002be60b992f68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a166fab622ba2922c3d7a24932287819b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>ac74a04b7e43ef9ecfede4282f9989dda</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>incr_count</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a3099df769db443148206364401c4cfe8</anchor>
      <arglist>(const ERCPStrength strength)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>deincr_count</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a5efdc582e0a34da624fd9c1f67bad53d</anchor>
      <arglist>(const ERCPStrength strength)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>ab186529fd360e05a2a35a4463163520b</anchor>
      <arglist>(bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a5bb3c5886d260040215171d9674d06a4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a659bd8150d857f7b966ae786b4d321cf</anchor>
      <arglist>(const any &amp;extra_data, const std::string &amp;name, EPrePostDestruction destroy_when, bool force_unique)</arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a4ccc535b359bcc48365ea3bed8782fd9</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const any &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a7ad1db271b6d876e86b0be76646a3e70</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>any *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>aa8eae0d068092752b3563744d3c7ec4b</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const any *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a07227313ffadf9f9c4067eb64b936886</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a478ad3bb47cc4ecb24919d23a38fa2da</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>delete_obj</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a62ee66d23b36be96e0f39893bd142bac</anchor>
      <arglist>()=0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>throw_invalid_obj_exception</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a112adc8a3df1e75b93084b8673f14dae</anchor>
      <arglist>(const std::string &amp;rcp_type_name, const void *rcp_ptr, const RCPNode *rcp_node_ptr, const void *rcp_obj_ptr) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual const std::string</type>
      <name>get_base_obj_type_name</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a2b93f5fb7b179f39a558474853742e12</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>pre_delete_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a4b3d1520ae5fe4a0af8a9044abaa0dbb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; std::string, extra_data_entry_t &gt;</type>
      <name>extra_data_map_t</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a03cbe367da1ab14e77aa9058fb74efb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>impl_pre_delete_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a2b307d065b0ebc44f63ee027fa113b9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a4a737a2a1c5fa4f15394655b30f8edcf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>af4722a36f67191e5d6748f3718803db2</anchor>
      <arglist>(const RCPNode &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCPNode &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a5773fc85abd5b71c021079cd60663b7e</anchor>
      <arglist>(const RCPNode &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>af3731aaa2f2a7f28dd3af696b828002c</anchor>
      <arglist>[2]</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>has_ownership_</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>a44a393395e518edc864e413d29ba6f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>extra_data_map_t *</type>
      <name>extra_data_map_</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>aee2b5ad6881204959fe228102eb6c8a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>throw_null_ptr_error</name>
      <anchorfile>classTeuchos_1_1RCPNode.html</anchorfile>
      <anchor>add8647dbdcaaaddea91a87fea37973c9</anchor>
      <arglist>(const std::string &amp;type_name)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPNodeHandle</name>
    <filename>classTeuchos_1_1RCPNodeHandle.html</filename>
    <member kind="function">
      <type></type>
      <name>RCPNodeHandle</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a638dca1ad341a6c72d2ba3d30c47f6a4</anchor>
      <arglist>(ENull null_arg=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPNodeHandle</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a3e217a0ec4ab3202d05225346b9e6b7e</anchor>
      <arglist>(RCPNode *node, ERCPStrength strength_in=RCP_STRONG, bool newNode=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPNodeHandle</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a6c98c0ddffd593382fd6e8af1a721dd6</anchor>
      <arglist>(const RCPNodeHandle &amp;node_ref)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>swap</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ac98f24efd6aa84675e51b0ec6ed1374a</anchor>
      <arglist>(RCPNodeHandle &amp;node_ref)</arglist>
    </member>
    <member kind="function">
      <type>RCPNodeHandle &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ad7d66d113c4fbbc9ca22a2eeae717940</anchor>
      <arglist>(const RCPNodeHandle &amp;node_ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCPNodeHandle</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a6f2683f932b0024de67c24c716ab6f6f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCPNodeHandle</type>
      <name>create_weak</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ab18128bb32d46ab82f7c66d5f13e6d10</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCPNodeHandle</type>
      <name>create_strong</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a1ef628890a686ae50884724937867634</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>node_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a109dc98c04c77ea07c4ffeda2d55fe1e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_node_null</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>afa0cf8d916ba984d936af00e15b7fb3a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a58c93b6179ae43d9062de3386961be6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>same_node</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a996a629dc34f7387cf7b3ed89fb81e23</anchor>
      <arglist>(const RCPNodeHandle &amp;node2) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>strong_count</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a4ae9b2ca71edda1fbf420a3d4cef8ff2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>weak_count</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a8d2b58eb8fdaae9068f1d64ee12d7bb5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>total_count</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a42cd504ee608499a46825a21cd8e150f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>count</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a6c3268d6bfd401d4fff3e0fa0a5c63f8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ERCPStrength</type>
      <name>strength</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ae6f06015a3b86b421a0da176e583e319</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>af012fb48238c998d82556bbdf87a1cd8</anchor>
      <arglist>(bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>has_ownership</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>abddacd9c2093f825ad7f781904761c1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>set_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a33e24ddcb6b110bf39c67b1822c40f66</anchor>
      <arglist>(const any &amp;extra_data, const std::string &amp;name, EPrePostDestruction destroy_when, bool force_unique)</arglist>
    </member>
    <member kind="function">
      <type>any &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>aeca32a89269742d8b73e2277d41ca9ab</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const any &amp;</type>
      <name>get_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a9c0c6abd59e897f093315599ceedbb46</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>any *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ace9b8a3fd7a57dad3a3707f1e0f79cdb</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name)</arglist>
    </member>
    <member kind="function">
      <type>const any *</type>
      <name>get_optional_extra_data</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a1d537f3f6a25e414a7e0e3e9e6b50b3e</anchor>
      <arglist>(const std::string &amp;type_name, const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_assert_not_null</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ac08ba2b2726ca9d05b90e9977b83d2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>addc64f97f988f089de8317fef4ee9011</anchor>
      <arglist>(const RCPType &amp;rcp_obj) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debug_assert_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ac92b2a8fbb4e04e86a4b0feb4d376c55</anchor>
      <arglist>(const RCPType &amp;rcp_obj) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>bind</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>ac0accbb1f28f7147e83301822dc50039</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>unbind</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a5b7e4112ae10938ca6a676991dd14ba6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>unbindOne</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a5b34d20bda3d182fab2a735d73da74a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNode *</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a91e305a0d7c632f4160302629c90721e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ERCPStrength</type>
      <name>strength_</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a2a712c161717928eb821c39a86e836a5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1RCPNodeHandle.html</anchorfile>
      <anchor>a6ff6d950bfbcb1889b61782d3870504f</anchor>
      <arglist>(std::ostream &amp;out, const RCPNodeHandle &amp;node)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::RCPNodeTracer::RCPNodeStatistics</name>
    <filename>structTeuchos_1_1RCPNodeTracer_1_1RCPNodeStatistics.html</filename>
    <member kind="function">
      <type></type>
      <name>RCPNodeStatistics</name>
      <anchorfile>structTeuchos_1_1RCPNodeTracer_1_1RCPNodeStatistics.html</anchorfile>
      <anchor>a17c9e5a480363208168e2f3ba5f7aa25</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>maxNumRCPNodes</name>
      <anchorfile>structTeuchos_1_1RCPNodeTracer_1_1RCPNodeStatistics.html</anchorfile>
      <anchor>a9b984053326fc3ec96affab83e0c93f4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>totalNumRCPNodeAllocations</name>
      <anchorfile>structTeuchos_1_1RCPNodeTracer_1_1RCPNodeStatistics.html</anchorfile>
      <anchor>a31c68a542ed14b6b89552f9f681244e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>long int</type>
      <name>totalNumRCPNodeDeletions</name>
      <anchorfile>structTeuchos_1_1RCPNodeTracer_1_1RCPNodeStatistics.html</anchorfile>
      <anchor>ab53a430798fd6fff5f16e427625e8440</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPNodeThrowDeleter</name>
    <filename>classTeuchos_1_1RCPNodeThrowDeleter.html</filename>
    <member kind="function">
      <type></type>
      <name>RCPNodeThrowDeleter</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a13cc3971ee3b6a59abd4d4d8f433576f</anchor>
      <arglist>(RCPNode *node)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCPNodeThrowDeleter</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a4fe1190c212492f1a2152da55208e2f3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a0add6fa2c6c8d581b97838b6ed1e8f5d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>release</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a2db0b1ddf4a47205e4ea3e0b4884228c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNodeThrowDeleter</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>ab36d1b8f9ad553494deeea049fb097ed</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNodeThrowDeleter</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>ad5ed7af72a7a72d50229a69bd6243579</anchor>
      <arglist>(const RCPNodeThrowDeleter &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCPNodeThrowDeleter &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a1ed69aad71a618e1b1ce92b9383d70e8</anchor>
      <arglist>(const RCPNodeThrowDeleter &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCPNode *</type>
      <name>node_</name>
      <anchorfile>classTeuchos_1_1RCPNodeThrowDeleter.html</anchorfile>
      <anchor>a767dbcff5434f21a0f09b222abbe943b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPNodeTmpl</name>
    <filename>classTeuchos_1_1RCPNodeTmpl.html</filename>
    <templarg>T</templarg>
    <templarg>Dealloc_T</templarg>
    <base>Teuchos::RCPNode</base>
    <member kind="function">
      <type></type>
      <name>RCPNodeTmpl</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>ac2fb054992dfdc4becfaeaba54a8389b</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>RCPNodeTmpl</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a020e305ec389b4f528d66bce19700ac8</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in, ENull)</arglist>
    </member>
    <member kind="function">
      <type>Dealloc_T &amp;</type>
      <name>get_nonconst_dealloc</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a6d9cfd43b28289e02740c49f768d8ca0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const Dealloc_T &amp;</type>
      <name>get_dealloc</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a5f6cc25ea4dc0348d722a796360f0693</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~RCPNodeTmpl</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>acc039083daf09cfc500699046340955c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual bool</type>
      <name>is_valid_ptr</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a59b05a9f0392ba1987f020d2d4cab7bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>delete_obj</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a05ac093128697224cdc0c0535a32bdf2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>throw_invalid_obj_exception</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a22e88a389a89755180d4ef3c0f6918b9</anchor>
      <arglist>(const std::string &amp;rcp_type_name, const void *rcp_ptr, const RCPNode *rcp_node_ptr, const void *rcp_obj_ptr) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>get_base_obj_type_name</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a1184466dd6886f7cb669e42a9688e0e8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNodeTmpl</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a591ab07683d39daeb43301692340ee3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>RCPNodeTmpl</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a4ce56f52a5d8491d8fd3c774e90cbda8</anchor>
      <arglist>(const RCPNodeTmpl &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCPNodeTmpl &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a544dd705b6613341936ab797a6ca9363</anchor>
      <arglist>(const RCPNodeTmpl &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>acf0e6db592485eb488ff16f8022a24e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Dealloc_T</type>
      <name>dealloc_</name>
      <anchorfile>classTeuchos_1_1RCPNodeTmpl.html</anchorfile>
      <anchor>a81de36c45c26c7ade3307ea5934b612b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RCPNodeTracer</name>
    <filename>classTeuchos_1_1RCPNodeTracer.html</filename>
    <class kind="struct">Teuchos::RCPNodeTracer::RCPNodeStatistics</class>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isTracingActiveRCPNodes</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>ac85d34345d516d86c4cee37542608782</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>numActiveRCPNodes</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a9672360843236e16e8b0b611ece11407</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCPNodeStatistics</type>
      <name>getRCPNodeStatistics</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a7845596ec6525bfe5dd277969713409b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printRCPNodeStatistics</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a5fe7101228e8c779f56936556de673ae</anchor>
      <arglist>(const RCPNodeStatistics &amp;rcpNodeStatistics, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPrintRCPNodeStatisticsOnExit</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a7d9f8e070b44c94ff13bd2bf765df5be</anchor>
      <arglist>(bool printRCPNodeStatisticsOnExit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getPrintRCPNodeStatisticsOnExit</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a2e8b8fa3eb3238f09f564204a2d06c37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPrintActiveRcpNodesOnExit</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>aad31aa96b9d7906083e4c89d40e50104</anchor>
      <arglist>(bool printActiveRcpNodesOnExit)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getPrintActiveRcpNodesOnExit</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>ad8bb96c475ae4c2e0abb40953f9d7425</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printActiveRCPNodes</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>aca0dbbc783a6449f4a55e41520cc0421</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addNewRCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>af92af7d7e17679aa71ffbfaadc63e942</anchor>
      <arglist>(RCPNode *rcp_node, const std::string &amp;info)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>removeRCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>ac9f42e04f8e557a4a756f9173d185f93</anchor>
      <arglist>(RCPNode *rcp_node)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const void *</type>
      <name>getRCPNodeBaseObjMapKeyVoidPtr</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a947a72b0d26e0a5f76a2871381aac54e</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCPNode *</type>
      <name>getExistingRCPNodeGivenLookupKey</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a9d00c77c88355f56538663818abf6ffb</anchor>
      <arglist>(const void *lookupKey)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCPNode *</type>
      <name>getExistingRCPNode</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a133917aa70c8c2b8b7dd98abbfe0cf7b</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getActiveRCPNodeHeaderString</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>ac378a0594ca1444b1c7f422e0af7fe93</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getCommonDebugNotesString</name>
      <anchorfile>classTeuchos_1_1RCPNodeTracer.html</anchorfile>
      <anchor>a555bc3fb1042cdf66651734cd130faca</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::Reader</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>Reader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>a573c289e9b856bf8fd6ab995d6bb6391</anchor>
      <arglist>(const bool tolerant, const bool debug)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>ae51ac3d2791d3028ee5313b4893bff05</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Reader</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>ab0c2843dd615a7fc2e9c3e6c33f2e732</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setParameters</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>aed491bc928f476eabf31b74fad9e8b16</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterList &gt;</type>
      <name>getValidParameters</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>a017992e0ef91e7147eff3ac864edcb94</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readFile</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>ad1626193d6f013880588f1cd8d38f984</anchor>
      <arglist>(ArrayRCP&lt; Ordinal &gt; &amp;rowptr, ArrayRCP&lt; Ordinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values, Ordinal &amp;numRows, Ordinal &amp;numCols, const std::string &amp;filename)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>read</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>a4081714cbc059c5341cc5c5a2720fe3e</anchor>
      <arglist>(ArrayRCP&lt; Ordinal &gt; &amp;rowptr, ArrayRCP&lt; Ordinal &gt; &amp;colind, ArrayRCP&lt; Scalar &gt; &amp;values, Ordinal &amp;numRows, Ordinal &amp;numCols, std::istream &amp;in)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>init</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>aa81cd3a76c5ec44eadbe2e49d1b1dabd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>RCP&lt; const Banner &gt;</type>
      <name>readBanner</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>a7a9e9edd2b7394219442863ea9e37a05</anchor>
      <arglist>(std::istream &amp;in, size_t &amp;lineNumber)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>reportBadness</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>a658411a34d38cbe1093303796f32c085</anchor>
      <arglist>(std::ostream &amp;out, const std::pair&lt; bool, std::vector&lt; size_t &gt; &gt; &amp;results)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>tolerant_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>ade0e4c0faa566ee2f82738ca63e37d2d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>debug_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Reader.html</anchorfile>
      <anchor>af7710f22cb25235f197ecfff6ca4e7ef</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::Details::Allocator::rebind</name>
    <filename>structTeuchos_1_1Details_1_1Allocator_1_1rebind.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Allocator&lt; U &gt;</type>
      <name>other</name>
      <anchorfile>structTeuchos_1_1Details_1_1Allocator_1_1rebind.html</anchorfile>
      <anchor>a20b0c623a7f18cde72d31f8ace70f625</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ReferenceTypeDeserializationBuffer</name>
    <filename>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a2dda2ad0f00b3028d9c19a1d7427a752</anchor>
      <arglist>(const Serializer&lt; Ordinal, T &gt; &amp;serializer, const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a197f0a69f310cad149929c52612c9a67</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *const *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>acd183658e48b169edc36f1fd8b0efcee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ae033fc2673ef97b7bdbf522f9f3c6deb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>buffer_ptr_t</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ac2b076eb88b31afd4be6b3386ccbf611</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; T * &gt;</type>
      <name>buffer_t</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a8fb4bcf83c59471d7cf199eef57e1421</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ae2e05b03c05281c227da61e3d51b9de5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReferenceTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a087aa55b2c4cde47cc6cc35262fb901f</anchor>
      <arglist>(const ReferenceTypeDeserializationBuffer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ReferenceTypeDeserializationBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ab2f925356b54926dee703a50e9ffcb14</anchor>
      <arglist>(const ReferenceTypeDeserializationBuffer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Serializer&lt; Ordinal, T &gt; &amp;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a0480a92920a7242f981d5bffb2fa3167</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ab0de2a63622a451a3ec8dee5f6d38d3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a76a02a4b60948b34b604fd1683b4f55e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>buffer_ptr_t</type>
      <name>buffer_ptr_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>a75be4a58647b2024e587f708752c1661</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>buffer_t</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeDeserializationBuffer.html</anchorfile>
      <anchor>ac58010ae5de423d9f9be35a1e7df5b4f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ReferenceTypeReductionOp</name>
    <filename>classTeuchos_1_1ReferenceTypeReductionOp.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeReductionOp.html</anchorfile>
      <anchor>a04dc1b41c2dc71c7142b7acfbba0b3c9</anchor>
      <arglist>(const Ordinal count, const T *const inBuffer[], T *const inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ReferenceTypeSerializationBuffer</name>
    <filename>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>ReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a24b0b3343b8cf2a672aa52cab5cd80e3</anchor>
      <arglist>(const Serializer&lt; Ordinal, T &gt; &amp;serializer, const Ordinal count, T *const buffer[])</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>ab018488e993065694c195d856aa08fd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a3e28a64f4947ab75f2d4e3e45ef75b3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a885ccb042646f9d847e36dd3264ee241</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>aa0db0ecaf979e44959d10a5b7f6763f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ReferenceTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a70033e22a5c13ed2b968f4efc3c00508</anchor>
      <arglist>(const ReferenceTypeSerializationBuffer &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ReferenceTypeSerializationBuffer &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>ae90bcb489ec355b4ff69a60ef933f3ab</anchor>
      <arglist>(const ReferenceTypeSerializationBuffer &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const Serializer&lt; Ordinal, T &gt; &amp;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a4d5c2ee9ada8fdf0f7b6d92ecb4be2e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a5db74bfc69ad8a4f41938d87f941d973</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *const *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>a1cc66674cda6837af8903a46eabe435f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; char &gt;</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ReferenceTypeSerializationBuffer.html</anchorfile>
      <anchor>ac97f0fb7ca5fec04d6e73ae927c70e19</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>A::RegisterFactoryA</name>
    <filename>classA_1_1RegisterFactoryA.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RegisterFactoryA</name>
      <anchorfile>classA_1_1RegisterFactoryA.html</anchorfile>
      <anchor>ad7374044d3ec4717b202c31e248dec6b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B::RegisterFactoryB</name>
    <filename>classB_1_1RegisterFactoryB.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RegisterFactoryB</name>
      <anchorfile>classB_1_1RegisterFactoryB.html</anchorfile>
      <anchor>a85767ce901f36b73ac868fff0883e494</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>C::RegisterFactoryC</name>
    <filename>classC_1_1RegisterFactoryC.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>RegisterFactoryC</name>
      <anchorfile>classC_1_1RegisterFactoryC.html</anchorfile>
      <anchor>a41d3efa8e42ba3c25430b0c445d557ee</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RelErrSmallNumber</name>
    <filename>classTeuchos_1_1RelErrSmallNumber.html</filename>
    <templarg>hasMachineParameters</templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>smallNumber</name>
      <anchorfile>classTeuchos_1_1RelErrSmallNumber.html</anchorfile>
      <anchor>a0b2298a1800a800ded8352e417966c01</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RelErrSmallNumber&lt; false, Scalar &gt;</name>
    <filename>classTeuchos_1_1RelErrSmallNumber_3_01false_00_01Scalar_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>smallNumber</name>
      <anchorfile>classTeuchos_1_1RelErrSmallNumber_3_01false_00_01Scalar_01_4.html</anchorfile>
      <anchor>a155d28541d384b186dbf08c9a46886da</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::RelErrSmallNumber&lt; true, Scalar &gt;</name>
    <filename>classTeuchos_1_1RelErrSmallNumber_3_01true_00_01Scalar_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static Scalar</type>
      <name>smallNumber</name>
      <anchorfile>classTeuchos_1_1RelErrSmallNumber_3_01true_00_01Scalar_01_4.html</anchorfile>
      <anchor>a8ec1af021c5e170bc0dd6ae38fad251a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::ScalarAssigner</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1ScalarAssigner.html</filename>
    <templarg></templarg>
    <templarg>isComplex</templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1ScalarAssigner.html</anchorfile>
      <anchor>af960103e38512f7a100ee41493d55362</anchor>
      <arglist>(Scalar &amp;val, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;real, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;imag)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::ScalarAssigner&lt; RealType, false &gt;</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1ScalarAssigner_3_01RealType_00_01false_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1ScalarAssigner_3_01RealType_00_01false_01_4.html</anchorfile>
      <anchor>a0a6a289fd6632a6f0e8e3fea4732e082</anchor>
      <arglist>(RealType &amp;val, const typename Teuchos::ScalarTraits&lt; RealType &gt;::magnitudeType &amp;real, const typename Teuchos::ScalarTraits&lt; RealType &gt;::magnitudeType &amp;imag)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::ScalarTraits</name>
    <filename>structTeuchos_1_1ScalarTraits.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>T</type>
      <name>magnitudeType</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a19027ca394326dd41cab7bc0b56faad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>halfPrecision</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0dbfc9614eb88bfaee0b4a57bc985de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T</type>
      <name>doublePrecision</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a8f9e3f8d2cc1eeabd0d570877d93b3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>eps</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>aace84c4741c66871d00de3ae7bb16067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>sfmin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>af0f8203d4f3a1f24ca08cb4e77143d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>base</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a57a1eeed133d43b3d1a9a7f7fccc6cd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>prec</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>afe394147dc5d244004062410187da7f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>t</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>af2aa4d02dfd211daa86865e178f6ac50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rnd</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ab904496fd6c2eb14e05d8973b9e62c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>emin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>acf53d33f2d597b1b5538982c2d64c3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rmin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ae223e3d35fa42790565e868d22094b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>emax</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a76f3bfad474b3c6fd490552943e5283b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rmax</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a01fa1ca20a50e2abb0a20c266741cd44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>magnitude</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a09d4569fca3d1a965037a483dd86de56</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>zero</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a1d9fe4c2221fcd9df15a16cf525e0f24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>one</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a146d96d758b245a3ca2272680ebf52b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>real</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0ae4354f2ff8ddd0789125bb58b5d424</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>imag</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a854e483065dc2727079b57fb1c87c9e9</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>conjugate</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a493bf9b1bd853c747559b2f1cb9ab8d9</anchor>
      <arglist>(T a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>nan</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a4d71d35f1d8f187a9cced036c1b0e62d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isnaninf</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0bcd30d23cc17af6bf6a235dfc1dcd0c</anchor>
      <arglist>(const T &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>seedrandom</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a40ff95b0ae357d7e95c14daaa33afa0c</anchor>
      <arglist>(unsigned int s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>random</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a7814d4a2c43ba1c1b9ab3ae79a2f5a32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a46f3e156bb46ca2a14a9dab55b31b8a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>squareroot</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ac45885f032e1fb68eed6a25f5331beec</anchor>
      <arglist>(T x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>pow</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a02549beb92d1cae0298a080b4f17d14e</anchor>
      <arglist>(T x, T y)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComplex</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ad8d1f35a8f9a80d298879c600121fb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isOrdinal</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a6c374ed33be76c7ce41d2688515894d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComparable</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a63ec39b7f2847cc981ead9e106cf4783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>hasMachineParameters</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a9ad1100dd026b2469eb9be96d644631a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ScalarTraits&lt; ScalarType &gt;</name>
    <filename>structTeuchos_1_1ScalarTraits.html</filename>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>magnitudeType</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a19027ca394326dd41cab7bc0b56faad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>halfPrecision</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0dbfc9614eb88bfaee0b4a57bc985de6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>doublePrecision</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a8f9e3f8d2cc1eeabd0d570877d93b3b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>eps</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>aace84c4741c66871d00de3ae7bb16067</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>sfmin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>af0f8203d4f3a1f24ca08cb4e77143d72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>base</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a57a1eeed133d43b3d1a9a7f7fccc6cd1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>prec</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>afe394147dc5d244004062410187da7f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>t</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>af2aa4d02dfd211daa86865e178f6ac50</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rnd</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ab904496fd6c2eb14e05d8973b9e62c69</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>emin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>acf53d33f2d597b1b5538982c2d64c3c8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rmin</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ae223e3d35fa42790565e868d22094b66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>emax</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a76f3bfad474b3c6fd490552943e5283b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>rmax</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a01fa1ca20a50e2abb0a20c266741cd44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>magnitude</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a09d4569fca3d1a965037a483dd86de56</anchor>
      <arglist>(ScalarType a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>zero</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a1d9fe4c2221fcd9df15a16cf525e0f24</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>one</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a146d96d758b245a3ca2272680ebf52b4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>real</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0ae4354f2ff8ddd0789125bb58b5d424</anchor>
      <arglist>(ScalarType a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>imag</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a854e483065dc2727079b57fb1c87c9e9</anchor>
      <arglist>(ScalarType a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>conjugate</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a493bf9b1bd853c747559b2f1cb9ab8d9</anchor>
      <arglist>(ScalarType a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>nan</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a4d71d35f1d8f187a9cced036c1b0e62d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isnaninf</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a0bcd30d23cc17af6bf6a235dfc1dcd0c</anchor>
      <arglist>(const ScalarType &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>seedrandom</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a40ff95b0ae357d7e95c14daaa33afa0c</anchor>
      <arglist>(unsigned int s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>random</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a7814d4a2c43ba1c1b9ab3ae79a2f5a32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a46f3e156bb46ca2a14a9dab55b31b8a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>squareroot</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ac45885f032e1fb68eed6a25f5331beec</anchor>
      <arglist>(ScalarType x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static ScalarType</type>
      <name>pow</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a02549beb92d1cae0298a080b4f17d14e</anchor>
      <arglist>(ScalarType x, ScalarType y)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComplex</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>ad8d1f35a8f9a80d298879c600121fb49</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isOrdinal</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a6c374ed33be76c7ce41d2688515894d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComparable</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a63ec39b7f2847cc981ead9e106cf4783</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>hasMachineParameters</name>
      <anchorfile>structTeuchos_1_1ScalarTraits.html</anchorfile>
      <anchor>a9ad1100dd026b2469eb9be96d644631a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::ScalarTraits&lt; std::pair&lt; Packet, Packet &gt; &gt;</name>
    <filename>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>ScalarTraits&lt; Packet &gt;</type>
      <name>PST</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>aadc438f0293d09782108a7e2b54b6391</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; typename PST::magnitudeType, typename PST::magnitudeType &gt;</type>
      <name>magnitudeType</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a812e4a36ca717e96f13148467528cc52</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static magnitudeType</type>
      <name>magnitude</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a3340858bdce52c89b92ecdb7c916a2e4</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; a)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>zero</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a5dc0c6fef46f2424e7760e96de2f60e5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>one</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a17aba45ac9fe157ba32608ad4906042a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>conjugate</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a6b538ce8b86fb119ed790a96f30f6a95</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>real</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>abcdf99cbac80fbe9ae341305d5cb12db</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>imag</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a0de567a58634b56da0e77d505e856baf</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isnaninf</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a6b03e2a333a27a34a6c8b5085c992c28</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>seedrandom</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>ac229653177bf69a986219d8e04f8a1cf</anchor>
      <arglist>(unsigned int s)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>random</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a42c54ee83def96485bd290f30241ad3b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a294c477b951ec9eef3664bba2f4edd20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>squareroot</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a7e47847beb02d1912d6d20445b357283</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>pow</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a276315e449fba107a971c393513579f3</anchor>
      <arglist>(std::pair&lt; Packet, Packet &gt; x, std::pair&lt; Packet, Packet &gt; y)</arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComplex</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a1cf459c888fb1fc16ed5443d97271672</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>isComparable</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a36fca4ee3aa304034fb6bf60f8225de3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>hasMachineParameters</name>
      <anchorfile>structTeuchos_1_1ScalarTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_01_4.html</anchorfile>
      <anchor>a34982769567bd631bc956dc037c0c011</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ScopedThreadLock</name>
    <filename>classTeuchos_1_1ScopedThreadLock.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ScopedThreadLock</name>
      <anchorfile>classTeuchos_1_1ScopedThreadLock.html</anchorfile>
      <anchor>a4c0cf6dd9b328eaa567bfd28d24d53e7</anchor>
      <arglist>(ThreadLock &amp;lock)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ScopedThreadLock</name>
      <anchorfile>classTeuchos_1_1ScopedThreadLock.html</anchorfile>
      <anchor>a7c86712154814a4ab6a5e8cd21497338</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase::SelectActive</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1SelectActive.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type>bool</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase_1_1SelectActive.html</anchorfile>
      <anchor>a6a593712401263f9e82de07fe85ad75d</anchor>
      <arglist>(const KeyObjectPair&lt; ObjType &gt; &amp;key_and_obj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialBandDenseMatrix</name>
    <filename>classTeuchos_1_1SerialBandDenseMatrix.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <member kind="typedef">
      <type>OrdinalType</type>
      <name>ordinalType</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a55d6dfac51b4d298d862f85aac494f81</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>scalarType</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a50d74194082bfab97fed2d049c30581f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyMat</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>aff919cfe0889ac595d446558f4f0d316</anchor>
      <arglist>(ScalarType *inputMatrix, OrdinalType strideInput, OrdinalType numRows, OrdinalType numCols, ScalarType *outputMatrix, OrdinalType strideOutput, OrdinalType startCol, ScalarType alpha=ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteArrays</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a466c46cbc4839fd7651de30f83a70155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a68cc5bd4e489e9bd90c91ee7c131c761</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex=0) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numRows_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>aba5aeb38b5ea66e8647683984495e71e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numCols_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>adc9f08bbdff26884142b301567f34c59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>stride_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a9e35985c4669bab1121d0c3acd2e7dc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>kl_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a91c580edea7ac2cbced70765cd75bdc0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>ku_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a8fd68b3d6faddd0e901bfeaef585448a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>valuesCopied_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>adbd8074cf1f203ee76be583eba3d7ce1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ad2c05f8dcd7629b7216fdb19c460a772</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>generalToBanded</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a0c5f28bcb915dc8a4a8d0040af468298</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A, const OrdinalType kl, const OrdinalType ku, const bool factorFormat)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>bandedToGeneral</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ac5f7a12448c46719f4720199e4013ff0</anchor>
      <arglist>(const RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;AB)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a1c8b61b9febb8d7aebc48899f2a1721d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a838ec6a83bbacf7e9bff2619b90ad144</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, OrdinalType kl, OrdinalType ku, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a9288db5b0104798b4d9c62f5e74e1ec7</anchor>
      <arglist>(DataAccess CV, ScalarType *values, OrdinalType stride, OrdinalType numRows, OrdinalType numCols, OrdinalType kl, OrdinalType ku)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>af15051961d88c672c2c23a48f3728350</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, ETransp trans=Teuchos::NO_TRANS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a19952ad2fca91a0d999bed1f82d4eabe</anchor>
      <arglist>(DataAccess CV, const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, OrdinalType numRows, OrdinalType numCols, OrdinalType startCol=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialBandDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a18933286579c52dc44f845576f404930</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shape</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>aa1c7201d8c0b28cc659c972d6bb22ddb</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, OrdinalType kl, OrdinalType ku)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shapeUninitialized</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a1c230670cbf6a8b8ae3c45f211c6c45f</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, OrdinalType kl, OrdinalType ku)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reshape</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a8be32058a2393f03e0dba36f9b4dca68</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, OrdinalType kl, OrdinalType ku)</arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a5213edecb96601e924d3dd7cdfa7ad3d</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a8e059e27152fcfd63387ab555df42334</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a4745e53feb8ca504241e974105d1dffb</anchor>
      <arglist>(const ScalarType value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>putScalar</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a6975cabb416926a93606e6fd13523997</anchor>
      <arglist>(const ScalarType value=Teuchos::ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>random</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a224e1b85e914bd5341d6570551028e62</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>aa1c5edafb6fdc53cef1ea35793daea3f</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ac34ee777f2d85978fa105b6be9b00a57</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a671351f445b9e2978c966f2ea1fa99da</anchor>
      <arglist>(OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType *</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a70a4da4052714ab235c67c6b73752706</anchor>
      <arglist>(OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>values</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>afccbad0e47aa97320c6a9d00dea8d32f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a181ab25bc65804554c9685b0956b6d76</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a63abc8c10ed787609374c5d86d610963</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a6e7bf679eb73b3a8a867d475b22cd2e6</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a61a166d6d5fc9fc46143461ba73ca67b</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ab20068530ca154f3d4b8c9bfc010a462</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>adf1dc16a25a6cf4b62b62b2f3ad5ec2f</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a609b05977753015b3e0957c6136c5d1f</anchor>
      <arglist>(const SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a5233baec09bde9f8f89696c610e16281</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a4ac1a120ca41085e64ee231e8f3292b5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>lowerBandwidth</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a1499aeceb137cc3036242c8fa8adb777</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>upperBandwidth</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ae36c8634843a395cd967727907f3e28f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>stride</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ab64e8f0f60c77473ebfae8c7d8f64e8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ae0c10542641d45592e0329ced31c2e98</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normOne</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>aa0dc6afda1824ae6eba16e53543b65fa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>a52681bd92734f4f402a2416a9b098836</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normFrobenius</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ab3126bbe76a167611a8a01467c3e1b86</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseMatrix.html</anchorfile>
      <anchor>ab8927c3f9278e53435146ae31a8ed8f5</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialBandDenseSolver</name>
    <filename>classTeuchos_1_1SerialBandDenseSolver.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <base>Teuchos::LAPACK</base>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aa732c3af44a64c0a0527520deb580aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateWORK</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a872c31238e55ff80610d70b24ebf0a34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a4c50d43e64aed259def0f524d945b401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetVectors</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>afc4442e7ee9afd7d43380cded32b7efe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a43e958c0061eb378b260d17e93ec24f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>shouldEquilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a15fb4bdbef62575490dc21abc5bf6f5a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedA_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ab6ab8843e184da03902b6f29905d8510</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedB_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a591986d59d37b0a2237ee0387ab173e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>transpose_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac529e1f79c9eda888de538076697bae6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>factored_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a722b8ed0b251e8227552d23cd7729d8d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>estimateSolutionErrors_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a8788475ca68125e16737baa0baf2a6ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionErrorsEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a3cb7f2bb92b89180ca073fa47f0a2b2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solved_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a0fab153b4c1988d14597244264444801</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>reciprocalConditionEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae1aa911ca879f1a3615920d101f87b59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>refineSolution_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a2b0db66a7a0c6ea25e62392ead5c6cdb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionRefined_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac887b8a8e1aeca6f142aed9e0149289e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ETransp</type>
      <name>TRANS_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a78fc564dab5f997977d932ca588805f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>M_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>afb7b7aa2e9ef9dc9cc1499b095311791</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>N_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae261267fd44d6d53fa68ba50102f5d36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>KL_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac093d1466f08b0869e64c48ce130746f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>KU_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ace0b8051ac60a26780a49ba67818124a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>Min_MN_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a6efb10cdbd2142774b5b3fed54a74c0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDA_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a8a66abfa5fa35aa38fc94b74bd5756ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDAF_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>afc86f11c4ae9f06369f17293f22af5f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>INFO_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a1995c9b3d0a56d3ecfea690c825812cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LWORK_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a23db6e701f29b900775186cb01b55b9d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; OrdinalType &gt;</type>
      <name>IPIV_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aa36356007833c482b966136cb9371a2c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>IWORK_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a47987873e88f5401c5b23b87a792ab8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ANORM_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae1510b96e09b693ca37307233d61738a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>RCOND_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ab3648ce60beb7336f4376fb6a45f91a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ROWCND_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a86cd8eadbe32c1eae8411c7e7d9a45a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>COLCND_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a87c096ab9031f21e1684b309112924e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>AMAX_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a73a31333e935e10a62be53fb0cd3f692</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Matrix_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aa6024124a9381fdd79df26c91f179a1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>LHS_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a6def2d5290ba4365bbdb1a80f69deb6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>RHS_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a3df7c02abdcb0e41a8b22c69f79d3bb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Factor_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ab94bcacefac6b2f364ebcabfccfcca0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>A_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aa91bfe12c6dd1ad3fc55c8e9569d9948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>AF_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a8128da25b9eb6e1003ac5ab54aaa0f67</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a3981622ebfab26bed839a873d3b61047</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>adb3a2708bbbd450b9a6de7cb3da07f7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>WORK_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac0c1a7a8bccd5a59c52e033e44158449</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a2f2d6e5d7d5b53fbe90ed39e5c750fd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>C_</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ace5e4e632b32034a5f9518a8361562ba</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SerialBandDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a2010fbc39de2475fd010dbdf84b16f9e</anchor>
      <arglist>(const SerialBandDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SerialBandDenseSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a0aab91d4fb1f828e302632da7242a63e</anchor>
      <arglist>(const SerialBandDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialBandDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>afdfad5cd9ac33fadd4d32146e536b0d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialBandDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a694cf4ad23ac925ddeb2b79aa47a0396</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a732fde15855f6a516b1a7db32703348e</anchor>
      <arglist>(const RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;AB)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a387ebdc8c3fba6772ec73eaf491e38b9</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a82ada10b1b843dc1a3149e94c1cfced3</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a0ffbbf7d3fba670539caa1a0565c079d</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae7667b0464b6aeb123c6d410ab08e8ae</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveToRefinedSolution</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>af53fb1b38f9c36736e4939318fb9008a</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>estimateSolutionErrors</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a0c19552d650c4e88de0933e8e832e59f</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a845fd21584fa767a2237f5537b4a4eb3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aef20ae287348deced2ca022dbaa8f4f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>abf36245e1a046f59a5386fc090ed07ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ad6bd5bb9440db915c0e67a5b163c4d09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae609649b13011c2fd8a7718790f1b2c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>applyRefinement</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a41d7a7989d0f30e12a8800527b0dec14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac92a437f8598eb3ef58d518089f0fe17</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reciprocalConditionEstimate</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac89b25d91c8c7c74cdd998bae4b1c222</anchor>
      <arglist>(MagnitudeType &amp;Value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aa6ad219dd66f46a54aba35d7ed175e3d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a3b4c44e9953d9d6df147aecb4acfce03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a00dfaac07cd16d84c14ad159cc14ad94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac93ee4ef9428a9c889dfde31bf45b463</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a1e75dc9504aa3b5db6f71ff5481c2e14</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionErrorsEstimated</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a42d4e67f117ee1eabf209a41adeecef2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reciprocalConditionEstimated</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac4a1f02f6d70cd78c83ff82b4e77a6b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a53955d98d9d7b410ef4af40ab6db722b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionRefined</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>adafc32a89eb56a540a755484e4de9dc2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a61c86e4cbce895f0c42a622ff01d04b7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialBandDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a8ec4d98c6817b02c5f979cb9f4a1dd6d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>af733d91a580987e566f4ae67c45b7a2d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>afb1fc028acc1d11e8cd88a3c5257514d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a1c3b4bb775e833d3ba6bd44a65143561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>acf2d3d0e755b14fdeca6add53fc9b285</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numLower</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ac91755c5b698ebde81ace6c1c15dc9cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numUpper</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>aeb0d48ef57fbd20a238d784381b2950f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; OrdinalType &gt;</type>
      <name>IPIV</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a4026ecf0795ad8e154e5222a7c2a04a9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a3eb2895254357a9cfc26d5d96dac51b3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>RCOND</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>ae39181ab5fb380e5f400825245bad561</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ROWCND</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a41934e209d204c680d10887f0a9c14d3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>COLCND</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a829b233a56baad7d8ee9ac126adc9fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>AMAX</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a7b011f2b708c923251f3a474c35666e6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>af599395dd1d74e46bbe60a66f6e0a76c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a82f71ffd98c40648ffbf57fb3f6cbb40</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a7a013f5f8ef381caeace6ed80baa8dfc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>C</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a8cf4fd519f62ca88efae7b57b8b8cf96</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialBandDenseSolver.html</anchorfile>
      <anchor>a2f5c9ff77471e2fcfe96830be2b1ba1a</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Introduction">Teuchos_SerialBandDenseSolver_Intro</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="SerialBandDenseSolver and LAPACK">Teuchos_SerialBandDenseSolver_LAPACK</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Constructing SerialBandDenseSolver objects">Teuchos_SerialBandDenseSolver_Construct</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Setting vectors used for linear solves">Teuchos_SerialBandDenseSolver_Construct_Setting</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Format of the matrix A">Teuchos_SerialBandDenseSolver_Construct_Format</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Vector and Utility Functions">Teuchos_SerialBandDenseSolver_Util</docanchor>
    <docanchor file="classTeuchos_1_1SerialBandDenseSolver" title="Strategies for Solving Linear Systems">Teuchos_SerialBandDenseSolver_Strategies</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialComm</name>
    <filename>classTeuchos_1_1SerialComm.html</filename>
    <templarg>Ordinal</templarg>
    <base>Teuchos::Comm</base>
    <member kind="function">
      <type>int</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a639207c97a4933cfdb3ec11660af9efa</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialComm&lt; Ordinal &gt; &gt;</type>
      <name>createSerialComm</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>aa3bf623e704ea825b0f32c3eadd41935</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialComm</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a03f6a4f77e6643ff54df5f5eb4762dbf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialComm</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a58ee9a9e06ec417f111581364453b33e</anchor>
      <arglist>(const SerialComm&lt; Ordinal &gt; &amp;other)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getRank</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>ab43f17900b23ef11bba89508ee4b0d9a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>getSize</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a5a42c38007fc95602ae180ee7de093b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>barrier</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>ac7310f5f023ebe9d928d50deb6904772</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>broadcast</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a7f4fc1e2c66c26161bf92d101a84e460</anchor>
      <arglist>(const int rootRank, const Ordinal bytes, char buffer[]) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>gather</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a366cdeab8d527696eba1328350756bac</anchor>
      <arglist>(const Ordinal sendBytes, const char sendBuffer[], const Ordinal recvBytes, char recvBuffer[], const int root) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>gatherAll</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a3eaecd56ac6a00f6b2845b9f1ebc4da7</anchor>
      <arglist>(const Ordinal sendBytes, const char sendBuffer[], const Ordinal recvBytes, char recvBuffer[]) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>reduceAll</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>ad94945d6db10ab2a81c21e64c29d6c81</anchor>
      <arglist>(const ValueTypeReductionOp&lt; Ordinal, char &gt; &amp;reductOp, const Ordinal bytes, const char sendBuffer[], char globalReducts[]) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>scan</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a908d7dde65226e455940db60d02cad0c</anchor>
      <arglist>(const ValueTypeReductionOp&lt; Ordinal, char &gt; &amp;reductOp, const Ordinal bytes, const char sendBuffer[], char scanReducts[]) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a84a4005d6ab4b8a1712d4ea938ef2ee9</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>send</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a3796cbb30a7318120da828afd94fa622</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a9effb43cca517d2a89c52cb567834d6f</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>ssend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a406c751a57cbc23b2f752580061a9973</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual int</type>
      <name>receive</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a94eaff9f4d60c4170dfaf3042e031044</anchor>
      <arglist>(const int sourceRank, const Ordinal bytes, char recvBuffer[]) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a4c5a36e50b16806a135ee42dc7005300</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>readySend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a54638b620e8b1aca8a43c1ab1c59ffa8</anchor>
      <arglist>(const Ordinal bytes, const char sendBuffer[], const int destRank, const int tag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>aea8aa35e9af95cbdbfc9a56da5308ff7</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a1f46facd986a532c597e3a3cefccda97</anchor>
      <arglist>(const ArrayView&lt; const char &gt; &amp;sendBuffer, const int destRank, const int tag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a160a24b8ad8f4207ecdd57ca20ee46fe</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;Buffer, const int sourceRank) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>abc210e6ed3b787e0a9b4b14a3a936dab</anchor>
      <arglist>(const ArrayView&lt; char &gt; &amp;Buffer, const int sourceRank, const int tag) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a0abf1f8cca8b3963ba339cdc96edb5ed</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>waitAll</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a3d227ee301d7cad80ea85a96555f0703</anchor>
      <arglist>(const ArrayView&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;requests, const ArrayView&lt; RCP&lt; CommStatus&lt; Ordinal &gt; &gt; &gt; &amp;statuses) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; CommStatus&lt; Ordinal &gt; &gt;</type>
      <name>wait</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>abf71fdcca3570c20059326e370851a63</anchor>
      <arglist>(const Ptr&lt; RCP&lt; CommRequest&lt; Ordinal &gt; &gt; &gt; &amp;request) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Comm&lt; Ordinal &gt; &gt;</type>
      <name>duplicate</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a3d48abbd4f0d3b64c6c9f522b1758054</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Comm&lt; Ordinal &gt; &gt;</type>
      <name>split</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>afe0336bb79c7f4f0dff07d23f735325c</anchor>
      <arglist>(const int color, const int key) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; Comm&lt; Ordinal &gt; &gt;</type>
      <name>createSubcommunicator</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a189e068e149e7d67d535ee89024545e9</anchor>
      <arglist>(const ArrayView&lt; const int &gt; &amp;ranks) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>description</name>
      <anchorfile>classTeuchos_1_1SerialComm.html</anchorfile>
      <anchor>a2f76b4c5101363b5d34127a60fc85801</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialCommStatus</name>
    <filename>classTeuchos_1_1SerialCommStatus.html</filename>
    <templarg></templarg>
    <base>Teuchos::CommStatus</base>
    <member kind="function">
      <type></type>
      <name>SerialCommStatus</name>
      <anchorfile>classTeuchos_1_1SerialCommStatus.html</anchorfile>
      <anchor>ae753cf14865cdb660920265b1b93c575</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>getSourceRank</name>
      <anchorfile>classTeuchos_1_1SerialCommStatus.html</anchorfile>
      <anchor>a55a1227d33bab0e760ea2667be3fbbf0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1SerialCommStatus.html</anchorfile>
      <anchor>a9799b27fb9d8b06f7e644b8bd2038a32</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialDenseMatrix</name>
    <filename>classTeuchos_1_1SerialDenseMatrix.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <member kind="typedef">
      <type>OrdinalType</type>
      <name>ordinalType</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>ae96542a3876b5081ebaaebcfc13ae44c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>scalarType</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a8e18b6c7b6ad838303966c4a8ecde95d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyMat</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>abeaea25cae0962afa68bf320992e02b8</anchor>
      <arglist>(ScalarType *inputMatrix, OrdinalType strideInput, OrdinalType numRows, OrdinalType numCols, ScalarType *outputMatrix, OrdinalType strideOutput, OrdinalType startRow, OrdinalType startCol, ScalarType alpha=ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteArrays</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aea6279d1f7b9bc97c0ee0598e8861304</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a6702fd92e4590551f77eb2deb4f73e24</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex=0) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numRows_</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>af0a2fe6867919bd665ac325f52770ffd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numCols_</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a21d0dc4ae03c12c5e914f4999cb53c87</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>stride_</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a68ee1d681f7b7763bfb3f8f804e30381</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>valuesCopied_</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a2e0c0662a87b61c4777c738eacdd85a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a65db69b2410a017af53163da28ef5093</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>SerialDenseVector&lt; OrdinalType, ScalarType &gt;</type>
      <name>getCol</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>afb5f4832c82c8765e5914858fcbced0e</anchor>
      <arglist>(DataAccess CV, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A, const OrdinalType col)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>setCol</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a37258fa496912caf697ab9fc5066d52a</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;v, const OrdinalType col, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>ad5b51de714cdc0ed69613fc3f7b53501</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a1dd35888074dfd5d04ef2b3ce659902e</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aafdef25ce534e03e00d8b9eaf6772cca</anchor>
      <arglist>(DataAccess CV, ScalarType *values, OrdinalType stride, OrdinalType numRows, OrdinalType numCols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aa94513995942fd1970d5c6996755ab60</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, ETransp trans=Teuchos::NO_TRANS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a4eca7a3663f7c0bc29d1f77cc548c0d4</anchor>
      <arglist>(DataAccess CV, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a5d5994efd21b37a6ffa7816e5171c46d</anchor>
      <arglist>(DataAccess CV, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, OrdinalType numRows, OrdinalType numCols, OrdinalType startRow=0, OrdinalType startCol=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a4f371d03640d874cd4e30ef264556dd0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shape</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>ae81f7ef234b0989133115404e655ebb0</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shapeUninitialized</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aac46e59b15f40d691474c5d2dad1e94c</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reshape</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a2f003ab6b92774b377f37b61e592ae01</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a4999ce42cf36f470847b8d29c2407d29</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a2d198d65aa5e4d84d54374f22450d7af</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a1a20eabc03f62f2a307d2adb9a38ed06</anchor>
      <arglist>(const ScalarType value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>putScalar</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a0e3cdc2fae62879a39f2bc1bab840353</anchor>
      <arglist>(const ScalarType value=Teuchos::ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>random</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a70ac92f090c9a99804b42f44a00b8dae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a1e858c785bd9778650b6e7289d6d3cb1</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a4f8fa016fa89a37ca3ea9b7edf112ffb</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a5a0452925ccdf37d3f99501568c48733</anchor>
      <arglist>(OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType *</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a762af5e07cc7050b20bbbf857fdc0ff0</anchor>
      <arglist>(OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>values</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aacac233661a286edce217e7a05d0cdd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a5d71e0282e2a023b0d5d4d86cd792c37</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a550bb67436c2ca1b109b4c3dcd56b9bc</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>adb621d93ee5deaf7a5edeb996c5c7b69</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a3a1f062483bf76a8ee832c1d58c34f82</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a9be1317e615c1a967c799962bdc81c42</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiply</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>abfacde2eb37372ddc0489cfeab8540e0</anchor>
      <arglist>(ETransp transa, ETransp transb, ScalarType alpha, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;B, ScalarType beta)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiply</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>ae04057870d8d657585c6361464c03531</anchor>
      <arglist>(ESide sideA, ScalarType alpha, const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;B, ScalarType beta)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a509d0201e867b56c7994329f86561b3c</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a1538a0e0768658e0ecc63d00737c77a2</anchor>
      <arglist>(const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>aed4f2b4f34f58b5d2c2bcf094da7ae50</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a99f8f6255475799fe4e2e11571a3f5c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>stride</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a115a821e3af63e03f6830f180d069483</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>ae2d2a323495c8455050e2dd3ba98130e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normOne</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a769f824a98a5feb7ae5c264464db19e0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a7a980429acddb8106348cea1998bd2a7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normFrobenius</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a5590e5ce322ad3ec6bda091a78714c5f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1SerialDenseMatrix.html</anchorfile>
      <anchor>a35b1a81e4ea348c8b3bde835b2ef8578</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialDenseSolver</name>
    <filename>classTeuchos_1_1SerialDenseSolver.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <base>Teuchos::LAPACK</base>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a2e5bb7460e64011a5cd13fa9772ac1c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateWORK</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ad2d8612181fdcc24164f27030efec7eb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a41356f6eed327e87e83cde0357da068a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetVectors</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a3c36cd3065a377e851ed20961df34afe</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ad84f7af06c1fb549ae6ba5a0eeab670f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>shouldEquilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a69b9d7fa949922c402db9b8dc5a2b980</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedA_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a55c971d56091dacf810ee17814273ba9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedB_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a85bdbec100930cd91887a124907718eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>transpose_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a7686e6924f5c6256175e2e20cae138a4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>factored_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a41b743cabdb03fcc516acc7a1e622438</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>estimateSolutionErrors_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ac80ba58dcec1130f420fbb11f937aed9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionErrorsEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a34af77bc4a5145a907fe4be2e1028bc7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solved_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ada77429f2e69cb98b9363b9e84c924ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>inverted_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a613e4eb48d0993404e2d5355e7a696a8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>reciprocalConditionEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ae8232f8e7a04d8b345f07cafb2a00b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>refineSolution_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a12689c0913d5f7bb6a2473c830c229e3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionRefined_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a651817e10da7b77f5ca2a976cbac56b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ETransp</type>
      <name>TRANS_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a8ab2105dc934b8ef74ea629a7b256f18</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>M_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a1c5f0d36cb36d6650021f9aa7d4d6bec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>N_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aefaecb2afe0eee2c0a82f757281316c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>Min_MN_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a507f513e3e827d16daa001a716c5ab36</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDA_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4fef03a018d40c9f9a5ddd9d012859cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDAF_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>acd54770f04812d4b3c38fe4603f53b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>INFO_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ad8763a2abcb484fe862aae2c1a5b21be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LWORK_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a51160275e26d0b54a75d04d867908a28</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; OrdinalType &gt;</type>
      <name>IPIV_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4e0f00869be65b33f7381be0a5c7038b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ANORM_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a32e401fb3aff02830d77197905b0f13d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>RCOND_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a2c6f1609c7d8964bada04bfd2a47e5cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ROWCND_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ae1a4d7dc2edf055b8e35ae8784ab4f4c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>COLCND_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a1509801f6425708b6fac5b3af387772d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>AMAX_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aecc38ba9700fa81918cc063d811d735b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Matrix_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aec2e5414811fc7275287895ff5182df9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>LHS_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a6a9264f04044f9b1a1632d8c8409c9d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>RHS_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a3c6975951b14010c94df1a993912b700</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Factor_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>abdf8dfa4d563fdd69af6918666a0f2be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>A_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a44c78f552db7540cbe8ef58036d03635</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>AF_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a0699def95c144c63d8c35ce69816d832</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4c26fe21aceacf071599689a6e26e537</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a9e1b901faf5344e8735255f5ec965660</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>WORK_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aad93a73774148b7f328836ac4da9a77b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a08b12041221fdecdcbe422ae36ee4e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>C_</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a29b019cee4612f3123379f08223213bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SerialDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a7007506745b733d1f97d416a73f0cc03</anchor>
      <arglist>(const SerialDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SerialDenseSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a3d259a5b45bf3565f66878d6bd4caa55</anchor>
      <arglist>(const SerialDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aaa91c28fc338ce6ae32896a5ce59da12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aa9753f8a928c5ef5ba02c08f4dd46b32</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a325fabf86b7c975fe6af4feee4c101b5</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ab3f7b046d6d5644df3896c889dab25ae</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a1422dcce87edb34c50d9094d7b983749</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aa29a71dd8a0e8e8921eacd1a11b334e3</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a805e4d1bdfad31c3101ee916f6ad2c92</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveToRefinedSolution</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a9b8b4063a4a319289bce3f5a39234e48</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>estimateSolutionErrors</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a6debfa20f4cdfb785b3583e4bb8feef7</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a727e71258acf9c00707697ffadae94ee</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>adc64b51fe90fbabac20eb5ebc7278776</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>invert</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a700ba09e4c9f3e9680b63cc49715ee08</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a348d66bad68e3d4b921e8445b2fb3b20</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a7a9770bac58c7d1b43946f133aa0c672</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a40e3c12cf1b472dce410a64642d91b45</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>applyRefinement</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a8ea74faca2c47b26560f876af8e6db5f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a8f214879905b51f245030f1ef4fc9f0e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reciprocalConditionEstimate</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a83a5b2c8bd0932ff63b438f3c36f878b</anchor>
      <arglist>(MagnitudeType &amp;Value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ac48838b8ce857829a51a6dea24f2dc65</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a1dce3102ee34676e700e5ed8d0cd5480</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a474fd7d4cee8f52c9c258f06db8ef137</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ad9dc014092c6518707391a7e20db30ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4c599cefc44ff3185348e6971ce75de3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionErrorsEstimated</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ae6ecdadb429f57b6165319423b8c5af6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inverted</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4375c5e574dbee20844da34028d82461</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reciprocalConditionEstimated</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a81f39758787861bc1b5a2efd52356cde</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a4d098159817208bff8907744ea3df7a1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionRefined</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a121fe1cf24af9171cfe166c93a386f12</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a342cdeb0d50578969e275b5580e62e71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a56db80e5257e73f2956d3e6c852d3af4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>af511d8a68ed7208d74d11e354948cb8c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a45f86d0d1e26e2034e2eac3465bb7a62</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>afddb9d52e9f686ad53b0b03e9122f4da</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ad7a268b34e7a79d6e0f779901364979d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; OrdinalType &gt;</type>
      <name>IPIV</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a7892e2248870228a418d8ffdff6d050b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a002ff886ffd6fb3147c7d971e3ba5357</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>RCOND</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ab24df9721b40be523997d5d7ab50526e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ROWCND</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a595b987b5e23215b18d3c96ec127a8c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>COLCND</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>ae4b1b274ea7781399c561d5086c27db3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>AMAX</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>abdcd1a7a3dde8bd9ccd36ee2e8e61014</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a25a7b35c6c8b9785b0431bbe7e1da77d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a5a353d17b2f04c6caa73911bf1bf6819</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>aea105b308b6c3a657f4b5efa4aadb3c3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>C</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a78597eb3fcc6ad0197ec4273049f8fbe</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialDenseSolver.html</anchorfile>
      <anchor>a51294f1df8674a82042e2133de09594d</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialDenseVector</name>
    <filename>classTeuchos_1_1SerialDenseVector.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::SerialDenseMatrix</base>
    <member kind="function">
      <type></type>
      <name>SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a38b18caab0f852db4d33a0ee3c5610a0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a307764958d0614b835ef1923384af800</anchor>
      <arglist>(OrdinalType length, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ab689645e2fc63adfa6c65903e7ca105a</anchor>
      <arglist>(DataAccess CV, ScalarType *values, OrdinalType length)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a5ec503cc02f3eaa525fea2130f90ea87</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ab921680e83fe21cf98d8294f913f59d7</anchor>
      <arglist>(DataAccess CV, const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialDenseVector</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ad3be73a5672346081daecf25bfa4069b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a7f139767c0ee6ead57407cb106862c01</anchor>
      <arglist>(OrdinalType length_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>sizeUninitialized</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a7fdde4ea38f0d8511b6df3e816b53a44</anchor>
      <arglist>(OrdinalType length_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>resize</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a6686045927fb6e58422b55c4f84b6c23</anchor>
      <arglist>(OrdinalType length_in)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>abadfe41f90b7106f80c5b2154742e642</anchor>
      <arglist>(const ScalarType value)</arglist>
    </member>
    <member kind="function">
      <type>SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a5b5ef7b310ed5dff1bce3adf61e2e5d9</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a18754d9a5cf2dc0999c52cd0a9ade524</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ab8125cf2507164a1269b43baf71b45e5</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ac53e9a12fae31e06d11356ecd448c6f0</anchor>
      <arglist>(OrdinalType index)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>ad26d9a957961a627a4cfd76e0d6e4b89</anchor>
      <arglist>(OrdinalType index) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a426b97f256737832458deefb8b5401d5</anchor>
      <arglist>(OrdinalType index)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>aa80798636ad3cefdcec1a50afd4e3fa9</anchor>
      <arglist>(OrdinalType index) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType</type>
      <name>dot</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a69480cd7edded2a88e194fd7ee07b416</anchor>
      <arglist>(const SerialDenseVector&lt; OrdinalType, ScalarType &gt; &amp;x) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>length</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>af25b49cdcfa0700e799c9abc1ef79191</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1SerialDenseVector.html</anchorfile>
      <anchor>a58e068f0708ee771f43b8ee57e18a7e4</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits</name>
    <filename>classTeuchos_1_1SerializationTraits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="variable" static="yes">
      <type>static const bool</type>
      <name>supportsDirectSerialization</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a008f7216e94e10aa09b83dbf9ac0879b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToDirectBytes</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a27100490487721436318337dc976609e</anchor>
      <arglist>(const Ordinal count)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a5f7e90d798dd322e82571dc5f0a8fc06</anchor>
      <arglist>(T *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const char *</type>
      <name>convertToCharPtr</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>aa6b11022b77f21b7c4a50dc27301640b</anchor>
      <arglist>(const T *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromDirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a5404f65033cf2ec520d23c37e70834fb</anchor>
      <arglist>(const Ordinal bytes)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static T *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>abc8ceccb7fe504a1cd866a0c5feadbea</anchor>
      <arglist>(char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const T *</type>
      <name>convertFromCharPtr</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>ac825e331d329665eaf7612896126816a</anchor>
      <arglist>(const char *ptr)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromCountToIndirectBytes</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>af14ddb717447edd3c2cf48b142459c71</anchor>
      <arglist>(const Ordinal count, const T buffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a260a4cb6824640bc0f2408f77715ca0e</anchor>
      <arglist>(const Ordinal count, const T buffer[], const Ordinal bytes, char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>fromIndirectBytesToCount</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a260f105e6e14345dfd935c4bbdf63e30</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1SerializationTraits.html</anchorfile>
      <anchor>a5a3f9448eb95556dabf69b120cce12e7</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, T buffer[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, char &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01char_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, char &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, double &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01double_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, double &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, float &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01float_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, float &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, long int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01long_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, long int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, short int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01short_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, short int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, signed char &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01signed_01char_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, signed char &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, std::pair&lt; P1, P2 &gt; &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01std_1_1pair_3_01P1_00_01P2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, std::pair&lt; P1, P2 &gt; &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, unsigned char &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01unsigned_01char_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, unsigned char &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, unsigned int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01unsigned_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, unsigned int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, unsigned long int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01unsigned_01long_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, long unsigned int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerializationTraits&lt; Ordinal, unsigned short int &gt;</name>
    <filename>classTeuchos_1_1SerializationTraits_3_01Ordinal_00_01unsigned_01short_01int_01_4.html</filename>
    <templarg></templarg>
    <base>DirectSerializationTraits&lt; Ordinal, unsigned short int &gt;</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::Serializer</name>
    <filename>classTeuchos_1_1Serializer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Serializer</name>
      <anchorfile>classTeuchos_1_1Serializer.html</anchorfile>
      <anchor>ac6990c653ce7f30ae4251deb9f83c69d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual Ordinal</type>
      <name>getBufferSize</name>
      <anchorfile>classTeuchos_1_1Serializer.html</anchorfile>
      <anchor>af37075555de0366930a70d5ff4c46f2e</anchor>
      <arglist>(const Ordinal count) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>serialize</name>
      <anchorfile>classTeuchos_1_1Serializer.html</anchorfile>
      <anchor>ab0b44c9fd41afcae0c8d3c4ad6573dfa</anchor>
      <arglist>(const Ordinal count, const T *const objs[], const Ordinal bytes, char charBuffer[]) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; T &gt;</type>
      <name>createObj</name>
      <anchorfile>classTeuchos_1_1Serializer.html</anchorfile>
      <anchor>a727603d9a5ac7eac59ddde22c987b8b2</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>deserialize</name>
      <anchorfile>classTeuchos_1_1Serializer.html</anchorfile>
      <anchor>afd4b732ca0e9f1f5379f19ca5b70f7a6</anchor>
      <arglist>(const Ordinal bytes, const char charBuffer[], const Ordinal count, T *const objs[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialQRDenseSolver</name>
    <filename>classTeuchos_1_1SerialQRDenseSolver.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <base>Teuchos::LAPACK</base>
    <member kind="typedef">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a44b972a32ac9654f04dfd91b3b032480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateWORK</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af9735f68e49e81941b9aa8a727d9c4c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a7191b6ad460031e9a865172af6dcf5e0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a023a3912adcbdff1fd3baa0d219c4597</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a163b296018f9c688f01b4357d4f97276</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>shouldEquilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a6b669923b0d38edba10232e203216200</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedA_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a3486178100cb7918b5e93d48583e673e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedB_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a99d7a3df289ab4f9e6a657d913ffe1bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>equilibrationModeA_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a68c145223541d849cc8d3b8e42b328bd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>equilibrationModeB_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a9bf2816059fbc8574842a8ce376cb7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>transpose_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a0075104d5bb528758ae9e580ce88f73a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>factored_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a225bcd14c0ef7d391f46c5e88b4d04b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solved_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af41b1a69c5eca04b09d1ade9f131882d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>matrixIsZero_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a0c7620489576d29675d5b0282059c4a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>formedQ_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ae27fb1c1867721a2268a7514da48c571</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>formedR_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a3a6bfa321a68167e454e5b0b561d1517</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>Teuchos::ETransp</type>
      <name>TRANS_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a761074e15eaf8e7051a8935eeb7bb988</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>M_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af45e02953a580e3818c889d441668fbe</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>N_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a57ffd879bc53fda554bd4bf01d5e9f42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>Min_MN_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a37f3050737e4a80240ef0a911a3c3b48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDA_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a96dd83bc3a85beed7b5dc55867bdbd1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDAF_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a93ce8c6a2e4a6ef047a6c86c57eb96d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDQ_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a80f00e51c49d1748fd98f01eaee7b9ed</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDR_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a336cbe9c61738ce8ccf9b635f9b210e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>INFO_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aba98c4c66acdb9892af24af7492f644d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LWORK_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a2f1bbe0cf45e50e4a9405630242329c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>TAU_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ac3aa5ee1d94bf8bdf903752922f46ce0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ANORM_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a79dcd251fddbe043d2848fff7838cb3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>BNORM_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a67af54a22982e14daf6132199dc226c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Matrix_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a63c42211e2b157de190eb5786c1979d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>LHS_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a04ff865e1083cdffa9395c7a373660b9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>TMP_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a759fce2f5da81dd0449c4e87508c8b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>RHS_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a7c02d296ac25bc2fc1aad97a85f227e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Factor_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aa9678df05910cb82a7dc8f85780995de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>FactorQ_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a325fbb2e58b9d635cf647cbc0931c327</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>FactorR_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a011d5c4860670da0c6b4231adae5f4ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>A_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>abebea86363ff53137b6c8bf9189938d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>AF_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a6d7afa69e9587f95fb04dba773991044</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>Q_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a71efc97bae806dda0e22d978f1fd03be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>R_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a01ee67a1bc92d05694a6bb8420bcd869</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>WORK_</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a18a37acd1df824e9cc09525037c76e79</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a63cad3d6d455a2507c8683d1adce51c4</anchor>
      <arglist>(const SerialQRDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SerialQRDenseSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ae6b5c9f585e91d247707688cfe49c3a7</anchor>
      <arglist>(const SerialQRDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ab2e2d6cbcde6614792226dca2d8e85be</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialQRDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aa151e70f90a372057d1b07ef5c336c9e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ac9523c4f24ca7abc09bdb4ecf7eff942</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a5dc14306a257bbb0dc2c6e0f93e551c6</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a071bc1a8863836bbd609a35fd8cd1de2</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTranspose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a6b85aa936e274865be352fe6911e295e</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveWithTransposeFlag</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ab78e36fa748b2f4802ea4f9ee227d05b</anchor>
      <arglist>(Teuchos::ETransp trans)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aa4ff8234d91420cd57cd1d70c83f645f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ab0f237691fad0cec946f8d45d5d8e0b8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af8396c74539a3aa983787fba81115401</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>adc99b3808daa7a53723c6176ba332235</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af0098f5074e9da9db3e7312bce4b426e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af967ff0a70a3f230a682b22605cb84bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>ad860969dd7e50b0ed129bf07ca28fd40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>formR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a3ea3e2068db1e127605427bee3a28ef9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>multiplyQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a72ab92abcb2e6411a276898c2e740249</anchor>
      <arglist>(ETransp transq, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solveR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a1323acea674a473520517460312c0445</anchor>
      <arglist>(ETransp transr, SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;C)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a71dcaa22fbce4b497b0ea343a4ab51f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>abc1892bd326a29a3f4abd990aa6ddda9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af2db953a1dcfdff0a38e548322ea2013</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a1eb155a59ee757baee85b55c01113e89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a4b01b3af100b1623715acc45871e7489</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a15d2df526ec710f24cf0b32ff86441a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a88dfbebfe5768f7780bc693d96485623</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>formedR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a2d28b01ad26f67bdca47402bd043409a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a61a0298de6dd0016d9bacd366c5963ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aa6dee508f2daa3f4fa4bf00fb294bca4</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getQ</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aeafcfc56e955b591e6e7f8df60c86a0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getR</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a1d31fe2832be470cf48a3614a11635d0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a39cc2215c9f184ba974bef4b23b26bea</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>af5709e4e77347db35b6e982ee22c848a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a406eab44fe5d15103f9ad28ff73de57b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>affb9c98ba92c1d45b62c00891dd2bae6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>tau</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>aee38232f19bb0cd8b95d90b1f6a63c92</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a33a4f0c76d8a5740d18b27731c4d3808</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialQRDenseSolver.html</anchorfile>
      <anchor>a2e5f7ea8a3f4b7f11816132ec24f3c70</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialSpdDenseSolver</name>
    <filename>classTeuchos_1_1SerialSpdDenseSolver.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <base>Teuchos::LAPACK</base>
    <member kind="typedef">
      <type>Teuchos::ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>MagnitudeType</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a1b4959117e8d7473b90ac2db6fd724eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateWORK</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>abaac308c39b70575d4cb174a982e75d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>allocateIWORK</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a38aa2536e44c8d58de51207f0a3a8b35</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a4b3ebca60e0c34ab7d07ec6160e68ab2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>resetVectors</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a89a2bbd16685f2ba6329add7ccd696b5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a53bdcff050fe1218792ceef620b5afb9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>shouldEquilibrate_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aa977ff827c0dd9037f809a970b4c94d5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedA_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aca0cf5ce5dc22e1dd0edd2e3339a679c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>equilibratedB_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a2098ee22b4353255327babaacd63be83</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>transpose_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>adbc47398e94be7b031e46499e611ced1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>factored_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a178f797cb97a1afcb090e0663d0ed576</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>estimateSolutionErrors_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a2fb4648b7e42140342e0f375dc58397f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionErrorsEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ac1101e7b9176d1cee3b631d17e80d8e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solved_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a912dee9f9a7a9329e53f2df40a3c879c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>inverted_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a5f4f6504eb77fd90e088121524796621</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>reciprocalConditionEstimated_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a33ce61fac398c67921c694e9c6aeb3f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>refineSolution_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a0d85c8f74b1a081d912fc7a7ec5dc4e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>solutionRefined_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a736019297bb31a84f4502f619cbbb0d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numRowCols_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a1066f1c4d0a4b75996211cc788b3af4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDA_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a10c433d730d585ebb4cd75c00a9fe578</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LDAF_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aea41af626c829ba9dd5c5a15db466889</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>INFO_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a00a6fdfd56bc32f593362cbad9b78cdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>LWORK_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a454e6269f6e136d2e055d4609eaf2809</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; int &gt;</type>
      <name>IWORK_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a974fa467a7805ddd7e5983dfc0464794</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>ANORM_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a7ce4187ef88df303a998b3eb29767a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>RCOND_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ad19614328d8fd1a326f979c09b71ec88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>SCOND_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aa9f674141e11d00de1ed56b1f59c34cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>MagnitudeType</type>
      <name>AMAX_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>af33c470a7e3fe7090dc8090405bf8f9f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Matrix_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ad552da667eb6b9cb8fce3d4daddb9aae</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>LHS_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a9747c182a22637d2dfa0a91f991b6033</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>RHS_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a93d4eb82aa4a9104f78d5fc817e265e5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>Factor_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a217b047610dac7bc8d3ffdd22091d412</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>A_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a8490567227dc2aef0e6aa00677e015b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>AF_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a03c6413803ccff9cf77a5639e9a3c164</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a064eb5dda6f7d92be94c1c014d61c177</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a0595586e78f388db91da8842f9192110</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; ScalarType &gt;</type>
      <name>WORK_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a9240e7ae76081fc7d5d90d6473e26358</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R_</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ae320c888e09bfb698111ca0d32550b9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>SerialSpdDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a01b955f056a38a5dea3ccccc6da50fb5</anchor>
      <arglist>(const SerialSpdDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>SerialSpdDenseSolver &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>adac864d9ea6b47d84e0c346dc3f981b1</anchor>
      <arglist>(const SerialSpdDenseSolver&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSpdDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ab03ac0bc5647b6bd84dbdae5df97c93a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialSpdDenseSolver</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a72577280a6e2404ffa79aabb32898b72</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a028133b9e28ad8db77dc2ea830a15f96</anchor>
      <arglist>(const RCP&lt; SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;A_in)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>setVectors</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a5a9e501e560b89ac3b3e052cf54ea7a3</anchor>
      <arglist>(const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;X, const RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>factorWithEquilibration</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ac8e0f2dc9abf9ba3a39e266d639841ff</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solveToRefinedSolution</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a86b55b4c4c4440d6cc912a8a3f48ea58</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>estimateSolutionErrors</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a680ad23ccd7faedbd338ca8704a7f09e</anchor>
      <arglist>(bool flag)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>factor</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a5af6295f62ad5371c7875ff9f677354c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>solve</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a44d39e9cedac9cb7e10417ad27f478b1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>invert</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>acdee7403132eb69c90cbd70e0dde83d4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeEquilibrateScaling</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aecfa330b590bc9acb1ea9f5953025eb9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>accf64130d9b97aa864b484417b086fc8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>equilibrateRHS</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>af6364b4fe506a3946a9fca87ce46fe09</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>applyRefinement</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a2563f77bfa6f9ea8b7d221e00ded147a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>unequilibrateLHS</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ac284d38b74f2dcc6769087430f87c1ce</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reciprocalConditionEstimate</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>acfb6964fb6bc90465d344ca121774439</anchor>
      <arglist>(MagnitudeType &amp;Value)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>transpose</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a32817c7e473d3686c4875a3033e28ec4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>factored</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a9d124b29fde684eb5825cb9c0be3d3f2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedA</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>afe066e7af87b680b1f1db8becb20b19b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>equilibratedB</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ad3bcd13a3d2a1b79aac5864ce8fdf72b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>shouldEquilibrate</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>afd80a8ae070b9576ede7a80f4f89bad7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionErrorsEstimated</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a9b2fcdf931741b59bebccfaea3052e5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>inverted</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ad969bc3fc34fd28065481392cd4a7042</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>reciprocalConditionEstimated</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a7e876abb8d2457f0c864c91ae86acdf1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solved</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a7d7390b8f9155d998ddfef43b0401f03</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>solutionRefined</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a6b7b3a84a800b14876aaaddf0c360a43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a3ec44fc9ea992467f33136c4850e6cdf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getFactoredMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a48687dc62b6c97265eddbe10bb67c470</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getLHS</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a02f673ee11e336ee608f8ddb4695d110</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &gt;</type>
      <name>getRHS</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>acf6c1de9d11479c1358ab9652731d2ab</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a92a023aa55852c3f1c0dbe546b1d32a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>aa78511e91bc1f3a7f8c9f4ec2ed83fbc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>ANORM</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>afcf09079db8c928b43dfac21ba79e6e9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>RCOND</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a7be02b27a89a372b42f432c3a2d7e094</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>SCOND</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a01e65f898a7ede0e443852f6b500ed0d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>MagnitudeType</type>
      <name>AMAX</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a59cb12af484d02171d317ddfca6b23d7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>FERR</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>a103f7c6aa2c24bbbde526441d0f75243</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>BERR</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ac0b92dce4e741ca5a4aef0afdb08b13e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; MagnitudeType &gt;</type>
      <name>R</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>ad61a701b0a7456e6ab63126e967089c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>Print</name>
      <anchorfile>classTeuchos_1_1SerialSpdDenseSolver.html</anchorfile>
      <anchor>af4b2271815d7fc77b6dbffbd19f47654</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialSymDenseMatrix</name>
    <filename>classTeuchos_1_1SerialSymDenseMatrix.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <member kind="typedef">
      <type>OrdinalType</type>
      <name>ordinalType</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>afad94f0eeba3bbaf580291dfdfcd80b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>scalarType</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>aa84c86780b9821bdff159e213a2dd20b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a20ea11238f8887482f5045ed28f33e3f</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyMat</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a9bc04f30e2947684bfab210ee59b5622</anchor>
      <arglist>(bool inputUpper, ScalarType *inputMatrix, OrdinalType inputStride, OrdinalType numRowCols, bool outputUpper, ScalarType *outputMatrix, OrdinalType outputStride, OrdinalType startRowCol, ScalarType alpha=ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyUPLOMat</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a4b9510b7bd2537618b66604a25a3a367</anchor>
      <arglist>(bool inputUpper, ScalarType *inputMatrix, OrdinalType inputStride, OrdinalType inputRows)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteArrays</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ab5b63d58f59862018bba22c844bd807f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ac056e91353df8ac60180398f68567443</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex=0) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numRowCols_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a3e6c8a1c3451f464713d7aa57007760d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>stride_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a4a643706e827c7cbd59ba0bfddfdcb23</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>valuesCopied_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>af913cc011c3bb3dc246a7b11b7cd47be</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a735ed37b02e82b88cab6cb0b769e3778</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>upper_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>aa734e2514a7dacf40852cb53d2ab16e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>char</type>
      <name>UPLO_</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a73effa62019985b5a3e6873ca0226c24</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>symMatTripleProduct</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>abbcf39ee0ac001ceea32371f9336689d</anchor>
      <arglist>(ETransp transw, const ScalarType alpha, const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;A, const SerialDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;W, SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;B)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a0e68b94482086d51ed7e7922792062d6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a76748bbbaaa27c34c7aee6a00514c777</anchor>
      <arglist>(OrdinalType numRowsCols, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a6cd828aeadb68eab5d00fdcf188b49ef</anchor>
      <arglist>(DataAccess CV, bool upper, ScalarType *values, OrdinalType stride, OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>acc0af52cbf8082fb08c4f140da934d17</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a2bed62e77e5bc78c6f38bf784da25c3d</anchor>
      <arglist>(DataAccess CV, const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, OrdinalType numRowCols, OrdinalType startRowCol=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialSymDenseMatrix</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a6af4dc57d1e0637843933a97dba0de49</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shape</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a1553fb2e82e9c25e29270749d6884d1b</anchor>
      <arglist>(OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shapeUninitialized</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a1389992f497203ce067a1fc360249f64</anchor>
      <arglist>(OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reshape</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ae4c0140fe5a3fc820e7ef2dd0a738dcf</anchor>
      <arglist>(OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setLower</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ad8a242eb59b784dfcab7461b1f47b01a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setUpper</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>af54135e0fe391ba7fe5165154c0da08b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ac1162bf94ec869a665ea7cac96ead843</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>acb61bc9d8204db86534a6ae613541163</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a920295d442851d44953a7fba4da94ec6</anchor>
      <arglist>(const ScalarType value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>putScalar</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a6444153faeb552f90c63a6df8a1e9a0f</anchor>
      <arglist>(const ScalarType value=Teuchos::ScalarTraits&lt; ScalarType &gt;::zero(), bool fullMatrix=false)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>random</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a7cfd387a364f8a760631d1b8b5c7b055</anchor>
      <arglist>(const ScalarType bias=0.1 *Teuchos::ScalarTraits&lt; ScalarType &gt;::one())</arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a27d6d844e8b98181e59b310c13e5b7a7</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ac02c6c1af3a82c26116eac61dff2ef0b</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>values</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ab2156e5154c233a43188c4115115df57</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>upper</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>aaacc21d32ed28252d58671775bbeef02</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>char</type>
      <name>UPLO</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ac83e694253cbf7475f7d91931e7a9cce</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a75b5fa15d6ccfa3b6090734f18b6007f</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a4cc242b40e8e0a31af2cb141ea56943e</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a47ee9a6cbc9dcf5fb26a810278773f4d</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a3547697acc8dfa1a948d43f58429fc2d</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a3e3291b127e7f299a3a464f1df1bb220</anchor>
      <arglist>(const SerialSymDenseMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>ab9d8e6cfb93242851db4ed18a50aa8cd</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numCols</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a0f61a2517d4d1313f98f48c98d02e7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>stride</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a0b48782077644e25f192139bcfa580e2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a532a6edd287599018d6802aa0a5e658e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normOne</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>aa5bbc40d1fb8a682be07b539fdf50562</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a17e9ece30def2f2d2e3038d756635d15</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normFrobenius</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>acf1f0b1aea183643e9b1c0aa570a5444</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1SerialSymDenseMatrix.html</anchorfile>
      <anchor>a6a3f8be0678c50a5e90cf4612cbfacfc</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SerialTriDiMatrix</name>
    <filename>classTeuchos_1_1SerialTriDiMatrix.html</filename>
    <templarg>OrdinalType</templarg>
    <templarg>ScalarType</templarg>
    <base>Teuchos::CompObject</base>
    <base>Teuchos::Object</base>
    <base>Teuchos::BLAS</base>
    <member kind="typedef">
      <type>OrdinalType</type>
      <name>ordinalType</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ad0ceef3fbe2e1ffcbd3d71f662be554b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScalarType</type>
      <name>scalarType</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a2c02e41efceffa4bbc8cb45e08d3b2fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>copyMat</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a3c371d971a491365ff871d98d5c1c1f5</anchor>
      <arglist>(SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; matrix, OrdinalType startCol, ScalarType alpha=ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>deleteArrays</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a1dc4ff27fa980a33ce77416d0651d349</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>checkIndex</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a08ca8a024ae268413008059ed2973976</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex=0) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>OrdinalType</type>
      <name>numRowsCols_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>afd435d0aa3ec589c93af3ea8566b0bc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>bool</type>
      <name>valuesCopied_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ab2b1b25c073cac2b23a93e8bd1e563d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a951583f887f45523f0d478c36f1f37fb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>DL_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>af4031d98e0a989a4d019c1d1aeb31993</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>D_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aad7e60a3fc9564eb4e886ad355f33c0f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>DU_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a46c842f81b6f2f6b227bdfbb2fd1ac48</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>ScalarType *</type>
      <name>DU2_</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a53d1358d89d0c563052523d7c7243581</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a6ec1d497d85c6533cbf6f99d38110d47</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>af3c259c9124d2c7d695152fbbcb87ec4</anchor>
      <arglist>(OrdinalType numRows, OrdinalType numCols, bool zeroOut=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a1d7c548eb44d0ad282eb8a8653d3abbc</anchor>
      <arglist>(DataAccess CV, ScalarType *values, OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>af684717cfd751b1ef0cf27e47e81209a</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, ETransp trans=Teuchos::NO_TRANS)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a931b3d9217cad3debd53d045bd3dccef</anchor>
      <arglist>(DataAccess CV, const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source, OrdinalType numRowsCols, OrdinalType startRowCols=0)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~SerialTriDiMatrix</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aaae01dfe23635f77f9221597549f34ff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shape</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a6b6702a3593416aefa157d177fae7eb6</anchor>
      <arglist>(OrdinalType numRows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>shapeUninitialized</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aa11e3cbbcff0aef2ea9c9432f4fdc7e9</anchor>
      <arglist>(OrdinalType numRows)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>reshape</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a2485a2e7ec34f84998e4d5c9e43d02bb</anchor>
      <arglist>(OrdinalType numRowsCols)</arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ac3882e881291d939e4790a3df7f21923</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>assign</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a4f039981bf5a1d90f87246da9733d28a</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a3869d2d1581547ab707900e7ce2290db</anchor>
      <arglist>(const ScalarType value)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>putScalar</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aafb5500f1315943d8c64dc8079157e7d</anchor>
      <arglist>(const ScalarType value=Teuchos::ScalarTraits&lt; ScalarType &gt;::zero())</arglist>
    </member>
    <member kind="function">
      <type>ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ac465b4ae901e028e041f9ae37b508931</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex)</arglist>
    </member>
    <member kind="function">
      <type>const ScalarType &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a15918da6563e32960a8ab41a7c8d7bc7</anchor>
      <arglist>(OrdinalType rowIndex, OrdinalType colIndex) const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>values</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ac7c46457563198278ab2590e96d3526e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>D</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>af6b92876b4649924349f4765e51ce75d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>DL</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ad995795b73365c43b689144f14f78414</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>DU</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a6922934ed19496014a019a7897bdd034</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarType *</type>
      <name>DU2</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a880886fc3fe9c1d1dded7ba5609fe0d8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator+=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a7bdad84793e80d360712687b33e42660</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator-=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a80d30396b7f7dbbf311a2126afceccf4</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Source)</arglist>
    </member>
    <member kind="function">
      <type>SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;</type>
      <name>operator*=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>abc1b5e2e613a9c71bb1a5453f42aa822</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a6e440952354704ef3d3f1df23a18df89</anchor>
      <arglist>(const ScalarType alpha)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>scale</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aee7f5dc607c48b13b54bd6664b1bdcc8</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;A)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>abce506a3d3f39ab669f4f37741095414</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a80e319666eaf38b42189964a2017084f</anchor>
      <arglist>(const SerialTriDiMatrix&lt; OrdinalType, ScalarType &gt; &amp;Operand) const </arglist>
    </member>
    <member kind="function">
      <type>OrdinalType</type>
      <name>numRowsCols</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>ad6078eb8c2edeb368da470cd4e58ba3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>empty</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>adf9e6926a521f07b9c743c89fc557bd2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normOne</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>aa05872d17dfbeff273d39b8d9b3bb125</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normInf</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a8fe13e76d83f1b70ad1cab10d030fe1b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; ScalarType &gt;::magnitudeType</type>
      <name>normFrobenius</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>a0d4a3e38a9457f3a8377fb99ee00c9a3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1SerialTriDiMatrix.html</anchorfile>
      <anchor>af4a1b4be15eac088c2bcd1610740bd3f</anchor>
      <arglist>(std::ostream &amp;os) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::SetScientific</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientific.html</filename>
    <templarg>Scalar</templarg>
    <base>SetScientificImpl&lt; Scalar,!Teuchos::ScalarTraits&lt; Scalar &gt;::isOrdinal &gt;</base>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientific.html</anchorfile>
      <anchor>a99dfe6067cec03b99ecdea83e74be3ae</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetScientific</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientific.html</anchorfile>
      <anchor>a724aca72a0881dd4de057135f4f7db5a</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SetScientific</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientific.html</anchorfile>
      <anchor>a48f73f046e0355e4379364fc6167df40</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>SetScientificImpl&lt; Scalar,!Teuchos::ScalarTraits&lt; Scalar &gt;::isOrdinal &gt;</type>
      <name>base_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientific.html</anchorfile>
      <anchor>ae61201b18d8c49fed882b610e9455ac6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::SetScientificImpl</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</filename>
    <templarg>Scalar</templarg>
    <templarg>isFloatingPoint</templarg>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>ae5c382384533780c4d828a30c7ecd51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>a00b60f99c6d258ed610af780bb98a092</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>aea92333a396abc941f4e2f86a66765e4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, false &gt;</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01false_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>a83e2e16a98542ce246dccf07503ca36d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>aa29a2004d67eaeb053404729b73bd3b1</anchor>
      <arglist>(std::ostream &amp;)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01false_01_4.html</anchorfile>
      <anchor>a96c58a009e640f2395761e7ce0710107</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, true &gt;</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</anchorfile>
      <anchor>a2d9c97ea7453a097c2b1e1caa765867f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</anchorfile>
      <anchor>a65d47fc9a69eb2474a51c7e39c13d081</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</anchorfile>
      <anchor>a60f6dfd5439a11d127a3917ff093665f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::ostream &amp;</type>
      <name>out_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</anchorfile>
      <anchor>a4e90cbfac7dbdaaaecf7b92bd7fc335d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::ios_base::fmtflags</type>
      <name>originalFlags_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl_3_01Scalar_00_01true_01_4.html</anchorfile>
      <anchor>aa7483f8a5b9eefc8575a7ce0892d6efd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SetScientificImpl&lt; Scalar,!Teuchos::ScalarTraits&lt; Scalar &gt;::isOrdinal &gt;</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</filename>
    <member kind="typedef">
      <type>Scalar</type>
      <name>scalar_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>ae5c382384533780c4d828a30c7ecd51d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>a00b60f99c6d258ed610af780bb98a092</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SetScientificImpl</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1details_1_1SetScientificImpl.html</anchorfile>
      <anchor>aea92333a396abc941f4e2f86a66765e4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SharedAccessPolicy</name>
    <filename>classTeuchos_1_1SharedAccessPolicy.html</filename>
    <member kind="typedef">
      <type>ThreadLock</type>
      <name>lock_type</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>a7a467cdfa56c2c79a12a9489b444983e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ScopedThreadLock</type>
      <name>scoped_lock_type</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>a88606da4f680d7226529ff0171b54f1e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>int</type>
      <name>atomic_integral_type</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>a07d867f6da0ac455c0f6ce25e0952daa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>atomic_set</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>ad1dac312922a1cfef614e38588dd8ae0</anchor>
      <arglist>(atomic_integral_type *p, const atomic_integral_type v)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const atomic_integral_type</type>
      <name>atomic_fetch</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>ac0930eff8b4ac0ea8ae0bd93ac383709</anchor>
      <arglist>(const atomic_integral_type *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>atomic_increment</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>a77d54037b93cf8ab7cff5d7410cea3a9</anchor>
      <arglist>(atomic_integral_type *p)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>atomic_decrement</name>
      <anchorfile>classTeuchos_1_1SharedAccessPolicy.html</anchorfile>
      <anchor>a6a0134dcdcdf0db541e2d7df077de6e2</anchor>
      <arglist>(atomic_integral_type *p)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SimpleFunctionObject</name>
    <filename>classTeuchos_1_1SimpleFunctionObject.html</filename>
    <templarg>OperandType</templarg>
    <base>Teuchos::FunctionObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual OperandType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a0df81cef636ba1b394f4978efd31ef5c</anchor>
      <arglist>(OperandType arguement) const  =0</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a40c592b72612827088d4be0e81a17cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a9f70b07a3e1f9fde1c9b90943f59ee90</anchor>
      <arglist>(OperandType modifyingOperand)</arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>getModifiyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a231642a9c601a76a2325b31a6390a8cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>setModifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a577147e3f79227fa11a9567479767ad6</anchor>
      <arglist>(OperandType newOperand)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>OperandType</type>
      <name>_modifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a88943288a42c7083da8b214e0bea025a</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleFunctionObject&lt; DependeeType &gt;</name>
    <filename>classTeuchos_1_1SimpleFunctionObject.html</filename>
    <base>Teuchos::FunctionObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual DependeeType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a0df81cef636ba1b394f4978efd31ef5c</anchor>
      <arglist>(DependeeType arguement) const  =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>DependeeType</type>
      <name>_modifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a88943288a42c7083da8b214e0bea025a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a40c592b72612827088d4be0e81a17cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a9f70b07a3e1f9fde1c9b90943f59ee90</anchor>
      <arglist>(DependeeType modifyingOperand)</arglist>
    </member>
    <member kind="function">
      <type>DependeeType</type>
      <name>getModifiyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a231642a9c601a76a2325b31a6390a8cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>DependeeType</type>
      <name>setModifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a577147e3f79227fa11a9567479767ad6</anchor>
      <arglist>(DependeeType newOperand)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>SimpleFunctionObject&lt; T &gt;</name>
    <filename>classTeuchos_1_1SimpleFunctionObject.html</filename>
    <base>Teuchos::FunctionObject</base>
    <member kind="function" virtualness="pure">
      <type>virtual T</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a0df81cef636ba1b394f4978efd31ef5c</anchor>
      <arglist>(T arguement) const  =0</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>_modifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a88943288a42c7083da8b214e0bea025a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a40c592b72612827088d4be0e81a17cea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SimpleFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a9f70b07a3e1f9fde1c9b90943f59ee90</anchor>
      <arglist>(T modifyingOperand)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getModifiyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a231642a9c601a76a2325b31a6390a8cb</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>setModifyingOperand</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionObject.html</anchorfile>
      <anchor>a577147e3f79227fa11a9567479767ad6</anchor>
      <arglist>(T newOperand)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SimpleFunctionXMLConverter</name>
    <filename>classTeuchos_1_1SimpleFunctionXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::FunctionObjectXMLConverter</base>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; SimpleFunctionObject&lt; OperandType &gt; &gt;</type>
      <name>getSpecificSimpleFunction</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionXMLConverter.html</anchorfile>
      <anchor>addb6bbe135f541e22e74ff6102f7dca0</anchor>
      <arglist>(OperandType operand) const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>getSpecialSimpleFunctionXMLTraits</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionXMLConverter.html</anchorfile>
      <anchor>ab36ad592955db3523140c548a0fc97ae</anchor>
      <arglist>(const RCP&lt; const SimpleFunctionObject&lt; OperandType &gt; &gt; functionObject, XMLObject &amp;xmlObj) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; FunctionObject &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionXMLConverter.html</anchorfile>
      <anchor>af48fa288420ddf24f3913376d223522b</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertFunctionObject</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionXMLConverter.html</anchorfile>
      <anchor>ade0e70ce110228a38e1b60f30b581732</anchor>
      <arglist>(const RCP&lt; const FunctionObject &gt; functionObject, XMLObject &amp;xmlObj) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getOperandAttributeName</name>
      <anchorfile>classTeuchos_1_1SimpleFunctionXMLConverter.html</anchorfile>
      <anchor>a07f147a7995f3fbc34ce1c880df02ca2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SimpleObjectDB</name>
    <filename>classTeuchos_1_1SimpleObjectDB.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SimpleObjectDB</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a45ccb58d1ac73a43dca868221b0077e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>tableSize</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>ac39ef825274acf0c50266cbb7d83c724</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numFreeIndexes</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a28c25c231be33a581cc53fb67d3e48a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numObjects</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a0f7ec05388fa6686896fc4fe9c34cbcb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeNonconstObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a31a430643a1935ae448ca98af6ef42af</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeConstObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a54f35fa4adc899a3a8e6d851b0be5380</anchor>
      <arglist>(const RCP&lt; const T &gt; &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeCastedNonconstObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a1cda3d76b0a4f1bd6964cb90a8238acc</anchor>
      <arglist>(const RCP&lt; TOld &gt; &amp;robj_old)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a44cad2975375d00e012ee1211bc57a50</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>removeNonconstObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a43430611a2a8a58ac39f25edd32552b3</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const T &gt;</type>
      <name>removeConstObj</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a302fa3cc8324321cf79928a21838a8bf</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a25301f23f398b2bbb561075e1f6bfa5f</anchor>
      <arglist>(int &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; T &gt;</type>
      <name>getNonconstObjRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>ab0ec411957acfbc16348ba8cec743b4d</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const T &gt;</type>
      <name>getConstObjRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a19d136179ca4a85a0d9360dc782ccfb6</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; T &gt;</type>
      <name>getNonconstObjPtr</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a8831c25faf9925fcd12a610a941a3c5a</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const T &gt;</type>
      <name>getConstObjPtr</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>ae4c9e5934a3e12becb8178fd96ce145c</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a3438f4bdf1c15c0482c50bbaa4b12ea7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; ConstNonconstObjectContainer&lt; T &gt; &gt;</type>
      <name>tableOfObjects_t</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>ae059fcdb6684d4520eb2748591b5fb52</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Array&lt; int &gt;</type>
      <name>freedIndices_t</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a6fa74a64b45cde0b30947ce241aa29fa</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>validateIndex</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a5c35578fd1bb5126a05e397266f2876a</anchor>
      <arglist>(const int index) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>storeObjectImpl</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a5939518de24895b5b77d763a55285956</anchor>
      <arglist>(const RCP&lt; T2 &gt; &amp;robj)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>removeObjImpl</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>aa234b035a6c475ac5e979a092deb9863</anchor>
      <arglist>(const int index)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>tableOfObjects_t</type>
      <name>tableOfObjects_</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a774195a40355d4e6bae619b94df4c2b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>freedIndices_t</type>
      <name>freedIndices_</name>
      <anchorfile>classTeuchos_1_1SimpleObjectDB.html</anchorfile>
      <anchor>a519144b7f58e03673a53ef1a22481f27</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SimpleObjectTable</name>
    <filename>classTeuchos_1_1SimpleObjectTable.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>SimpleObjectTable</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>accef642babeeaab8eac082f7f9571e23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~SimpleObjectTable</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>af2aab540d689ebf1e09b566c22146131</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a40c78c3badc9cdc1c6bcd3d0b6ba4a1a</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;robj)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeNew</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>ac2da960bcd38547e6c4e38dbac526c62</anchor>
      <arglist>(T *obj, bool owned=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>storeCastedRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>ad7dcbd84000cc35a2f9e34e7f8df9132</anchor>
      <arglist>(const RCP&lt; TOld &gt; &amp;robj_old)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>removeRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a26eea1ba6a98c6c7ac2a437658fa37af</anchor>
      <arglist>(int &amp;index)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt;</type>
      <name>getRCP</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a112e519a0d9074e0f3791290b8ead7e6</anchor>
      <arglist>(int index)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>purge</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a914663c65c4ff373d6a1b06512a2fddd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>tableOfObjects</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a15604e8684f942fc6d5d65778f77cec2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; int &gt;</type>
      <name>freedIndices</name>
      <anchorfile>classTeuchos_1_1SimpleObjectTable.html</anchorfile>
      <anchor>a2b5373fdb76de2e07b4dd50696bb0384</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>A::Solver1</name>
    <filename>classA_1_1Solver1.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver1</name>
      <anchorfile>classA_1_1Solver1.html</anchorfile>
      <anchor>a5c4d52fce3128f893a786a1c1f041a1e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classA_1_1Solver1.html</anchorfile>
      <anchor>a1d0a8ca64be79327778f10b92673c25d</anchor>
      <arglist>(MV &amp;, const MV &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classA_1_1Solver1.html</anchorfile>
      <anchor>a6e32cbed3425d9b1087339b9d0c2e026</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>A::Solver2</name>
    <filename>classA_1_1Solver2.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver2</name>
      <anchorfile>classA_1_1Solver2.html</anchorfile>
      <anchor>a2aa22ff32f89f9d08fc894e9cfe90dba</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classA_1_1Solver2.html</anchorfile>
      <anchor>aaa63d449988b55c4417d9bcccc70ddd7</anchor>
      <arglist>(MV &amp;X, const MV &amp;Y)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classA_1_1Solver2.html</anchorfile>
      <anchor>a4d1b4acaf3e7ffd0a0a2b7a0be0f1915</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B::Solver3</name>
    <filename>classB_1_1Solver3.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver3</name>
      <anchorfile>classB_1_1Solver3.html</anchorfile>
      <anchor>a2e82f8a0aff021be34fcc82dad583474</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classB_1_1Solver3.html</anchorfile>
      <anchor>a4e927d168d643fbf23d82f36e881a9a3</anchor>
      <arglist>(MV &amp;, const MV &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classB_1_1Solver3.html</anchorfile>
      <anchor>a73fa079561c1dc26aef57940df196cbd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>B::Solver4</name>
    <filename>classB_1_1Solver4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver4</name>
      <anchorfile>classB_1_1Solver4.html</anchorfile>
      <anchor>a5e0c5e034e17f4cb80688504f73681e4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classB_1_1Solver4.html</anchorfile>
      <anchor>a0603affbca4acb2ba82ab637c4b68781</anchor>
      <arglist>(MV &amp;X, const MV &amp;B)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classB_1_1Solver4.html</anchorfile>
      <anchor>a652462c427ec8a9a10016e8fe69450c8</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>C::Solver5</name>
    <filename>classC_1_1Solver5.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver5</name>
      <anchorfile>classC_1_1Solver5.html</anchorfile>
      <anchor>abe4045eef06b5d5c675ff4624c3313d5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classC_1_1Solver5.html</anchorfile>
      <anchor>a4c9b78b49a4522c5bcf097a675fa0b66</anchor>
      <arglist>(MV &amp;, const MV &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classC_1_1Solver5.html</anchorfile>
      <anchor>af616245da37a7573f1268ef3f2a525bd</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>C::Solver6</name>
    <filename>classC_1_1Solver6.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <base>Common::LinearSolverTestBase</base>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~Solver6</name>
      <anchorfile>classC_1_1Solver6.html</anchorfile>
      <anchor>a7c4906f91c528c0e36ccae452a250d99</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>solve</name>
      <anchorfile>classC_1_1Solver6.html</anchorfile>
      <anchor>ad6a84356a51910d9c877030d6e5df2e5</anchor>
      <arglist>(MV &amp;, const MV &amp;)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>name</name>
      <anchorfile>classC_1_1Solver6.html</anchorfile>
      <anchor>aba5cf9e8e1a55b861fae9b661d6371b0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StandardTemplatedParameterConverter</name>
    <filename>classTeuchos_1_1StandardTemplatedParameterConverter.html</filename>
    <templarg>T</templarg>
    <base>Teuchos::ParameterEntryXMLConverter</base>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1StandardTemplatedParameterConverter.html</anchorfile>
      <anchor>a41fafe3b7638c367cad3216311d5ce89</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const std::string</type>
      <name>getValueAttributeValue</name>
      <anchorfile>classTeuchos_1_1StandardTemplatedParameterConverter.html</anchorfile>
      <anchor>ae7a15e7073dcede5987b4e6c389f02a9</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; entry) const </arglist>
    </member>
    <member kind="function">
      <type>any</type>
      <name>getAny</name>
      <anchorfile>classTeuchos_1_1StandardTemplatedParameterConverter.html</anchorfile>
      <anchor>a9db015331106056554c9f6e30a32acc5</anchor>
      <arglist>(const XMLObject &amp;xmlObj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StdSharedPtrRCPDeleter</name>
    <filename>classTeuchos_1_1StdSharedPtrRCPDeleter.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>void</type>
      <name>result_type</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a67c0b4d6ac27e9638bc55afb57d4c7c8</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>T *</type>
      <name>argument_type</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a0b5b81abe1263a02402e5492f72028df</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StdSharedPtrRCPDeleter</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a938d71798234834fdc62d58876a1cfa0</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;rcp)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a3864795894430697d361adc08ae36c53</anchor>
      <arglist>(T *x) const </arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; T &gt; &amp;</type>
      <name>ptr</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>ae6c9b60ec45770ab477db98cddc775c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>StdSharedPtrRCPDeleter</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a1c0ad7a134b382e6b6825039c8d4467f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; T &gt;</type>
      <name>rcp_</name>
      <anchorfile>classTeuchos_1_1StdSharedPtrRCPDeleter.html</anchorfile>
      <anchor>a79faedaab928e4743912df00ee506ce2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringCondition</name>
    <filename>classTeuchos_1_1StringCondition.html</filename>
    <base>Teuchos::ParameterCondition</base>
    <member kind="typedef">
      <type>Array&lt; std::string &gt;</type>
      <name>ValueList</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a71c93460c0bf32089d0a77c357fcb7ce</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringCondition</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a27e6be28c27ff68b0c6b24c007576433</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; parameter, std::string value)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringCondition</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a4cbb091370eaac25029df94d6550830e</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; parameter, ValueList values)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StringCondition</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a63dc14a2e5465cae2603ca602cc4aab8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a6e366883dc6a05caa4f39c52b9b8b2f2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>evaluateParameter</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a5632b275228417f4ec28093fc0cfb7b2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ValueList &amp;</type>
      <name>getValueList</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a82d7d2f641d48bb0370e6381cf8d3f8a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValueList</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a6b8b2f7f038e6253f0bb3055a0e2f38b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>checkParameterType</name>
      <anchorfile>classTeuchos_1_1StringCondition.html</anchorfile>
      <anchor>a48966c2408dd067ec553fcd9d255a593</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringConditionConverter</name>
    <filename>classTeuchos_1_1StringConditionConverter.html</filename>
    <base>Teuchos::ParameterConditionConverter</base>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValuesTagName</name>
      <anchorfile>classTeuchos_1_1StringConditionConverter.html</anchorfile>
      <anchor>a8e1bbfe9e27a97a77fa23fd19372ec18</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringTagName</name>
      <anchorfile>classTeuchos_1_1StringConditionConverter.html</anchorfile>
      <anchor>a2d7e83fc39cd430fc91ff71eaa1bc234</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringConditionConverter.html</anchorfile>
      <anchor>a5e2eee5694a1df426f890e8e8956d569</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParameterCondition &gt;</type>
      <name>getSpecificParameterCondition</name>
      <anchorfile>classTeuchos_1_1StringConditionConverter.html</anchorfile>
      <anchor>a31dac582af1e036a0d2db3b8a350a7bc</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; ParameterEntry &gt; parameterEntry) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addSpecificXMLTraits</name>
      <anchorfile>classTeuchos_1_1StringConditionConverter.html</anchorfile>
      <anchor>abbafd54df891652431b691197fe450ee</anchor>
      <arglist>(RCP&lt; const ParameterCondition &gt; condition, XMLObject &amp;xmlObj) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringEntry</name>
    <filename>classTeuchos_1_1StringEntry.html</filename>
    <base>Teuchos::TableEntry</base>
    <member kind="function">
      <type></type>
      <name>StringEntry</name>
      <anchorfile>classTeuchos_1_1StringEntry.html</anchorfile>
      <anchor>a175aaf1449589ada5ea8f5ef5f0c8e4c</anchor>
      <arglist>(std::string value)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1StringEntry.html</anchorfile>
      <anchor>abe2543fc7a12329b6268087c8cf7f6c8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1StringEntry.html</anchorfile>
      <anchor>aa1052027f6af5cd48f67c449dab8bf81</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainer</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</filename>
    <templarg>ObjType</templarg>
    <base protection="private">Teuchos::StringIndexedOrderedValueObjectContainerBase</base>
    <member kind="typedef" protection="private">
      <type>KeyObjectPair&lt; ObjType &gt;</type>
      <name>key_and_obj_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>aca94a8f9e6eaca1294ce68f58c924381</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::deque&lt; key_and_obj_t &gt;</type>
      <name>key_and_obj_array_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4e0ac7184d7bb6c42ccf8fe6441aac66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, OrdinalIndex &gt;</type>
      <name>key_to_idx_map_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a6fd45fbe102dd6c6d2b35d521c234a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertOrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a76d5822e1e4fe7dceee8b4413cd37eae</anchor>
      <arglist>(const Ordinal idx) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>key_and_obj_t &amp;</type>
      <name>getNonconstKeyAndObject</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a7fdc4c598f28dd375a8df00b4b32ad3b</anchor>
      <arglist>(const Ordinal idx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const key_and_obj_t &amp;</type>
      <name>getKeyAndObject</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>aebb348b8b4f6cce3af465329a976ec96</anchor>
      <arglist>(const Ordinal idx) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>throwInvalidKeyError</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a8b4d36b13e0796ab1cb2f162a75558e6</anchor>
      <arglist>(const Ordinal idx, const std::string &amp;key) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ordinal</type>
      <name>assertKeyGetOrdinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ac090fa59ea6de3f1cb5c3837215f49de</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>key_and_obj_array_t</type>
      <name>key_and_obj_array_</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a357fcfef37d3628888a59429c6e25ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>key_to_idx_map_t</type>
      <name>key_to_idx_map_</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a67de900af7cc03b6b6010b0f78efd451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringIndexedOrderedValueObjectContainerBase::Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ae23e3de4f5cd34717a9be8b76b273bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FilteredIterator&lt; typename key_and_obj_array_t::iterator, SelectActive&lt; ObjType &gt; &gt;</type>
      <name>Iterator</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4d8c680ece031f6f8699df3cdec17f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FilteredIterator&lt; typename key_and_obj_array_t::const_iterator, SelectActive&lt; ObjType &gt; &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a23e0183e3dab7321ca3bfa5d2ab9e81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringIndexedOrderedValueObjectContainer</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>af043f227ad19f19e0695db35e2ce9b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>numObjects</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a3ed887bad165551353b19508a032ab71</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>numStorage</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a0473b9f22a2dd91a76ebe099dc11d7f0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>setObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ab95a41b71847a7555017309920f6d356</anchor>
      <arglist>(const std::string &amp;key, const ObjType &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getObjOrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a3f53608c1811e5de6e5f4abd0c37d2c9</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; ObjType &gt;</type>
      <name>getNonconstObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a9e10102f5c479445923a692489f46d5b</anchor>
      <arglist>(const Ordinal &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ObjType &gt;</type>
      <name>getObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4d6cd85b994177f9b1a5c148fdaa1919</anchor>
      <arglist>(const Ordinal &amp;idx) const </arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; ObjType &gt;</type>
      <name>getNonconstObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a74d5d8d9997c5ca9d1b09ff3db727485</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ObjType &gt;</type>
      <name>getObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a50618af6e72f9e261cb84395bb5477c0</anchor>
      <arglist>(const std::string &amp;key) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a62951610fb5aeb3ad011a1664c8605a8</anchor>
      <arglist>(const Ordinal &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ae3aeb37855edf0ea2ac4b9eb81153eef</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>nonconstBegin</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4074e9db055e9f85f41b366ddf74fa9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>nonconstEnd</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a107d0ec8cf0e3979e4f65f559d0502a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a59dd22824da8ea73dfeb18375bd27fe2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>afdac9c09455b05986aff3c108dad4ae6</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringIndexedOrderedValueObjectContainer&lt; ParameterEntry &gt;</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</filename>
    <base protection="private">Teuchos::StringIndexedOrderedValueObjectContainerBase</base>
    <member kind="typedef" protection="private">
      <type>KeyObjectPair&lt; ParameterEntry &gt;</type>
      <name>key_and_obj_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>aca94a8f9e6eaca1294ce68f58c924381</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::deque&lt; key_and_obj_t &gt;</type>
      <name>key_and_obj_array_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4e0ac7184d7bb6c42ccf8fe6441aac66</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, OrdinalIndex &gt;</type>
      <name>key_to_idx_map_t</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a6fd45fbe102dd6c6d2b35d521c234a99</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>assertOrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a76d5822e1e4fe7dceee8b4413cd37eae</anchor>
      <arglist>(const Ordinal idx) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>key_and_obj_t &amp;</type>
      <name>getNonconstKeyAndObject</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a7fdc4c598f28dd375a8df00b4b32ad3b</anchor>
      <arglist>(const Ordinal idx)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>const key_and_obj_t &amp;</type>
      <name>getKeyAndObject</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>aebb348b8b4f6cce3af465329a976ec96</anchor>
      <arglist>(const Ordinal idx) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>throwInvalidKeyError</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a8b4d36b13e0796ab1cb2f162a75558e6</anchor>
      <arglist>(const Ordinal idx, const std::string &amp;key) const</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Ordinal</type>
      <name>assertKeyGetOrdinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ac090fa59ea6de3f1cb5c3837215f49de</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>key_and_obj_array_t</type>
      <name>key_and_obj_array_</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a357fcfef37d3628888a59429c6e25ceb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>key_to_idx_map_t</type>
      <name>key_to_idx_map_</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a67de900af7cc03b6b6010b0f78efd451</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>StringIndexedOrderedValueObjectContainerBase::Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ae23e3de4f5cd34717a9be8b76b273bdc</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FilteredIterator&lt; typename key_and_obj_array_t::iterator, SelectActive&lt; ParameterEntry &gt; &gt;</type>
      <name>Iterator</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4d8c680ece031f6f8699df3cdec17f07</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>FilteredIterator&lt; typename key_and_obj_array_t::const_iterator, SelectActive&lt; ParameterEntry &gt; &gt;</type>
      <name>ConstIterator</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a23e0183e3dab7321ca3bfa5d2ab9e81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringIndexedOrderedValueObjectContainer</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>af043f227ad19f19e0695db35e2ce9b6c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>numObjects</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a3ed887bad165551353b19508a032ab71</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>numStorage</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a0473b9f22a2dd91a76ebe099dc11d7f0</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>setObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ab95a41b71847a7555017309920f6d356</anchor>
      <arglist>(const std::string &amp;key, const ParameterEntry &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getObjOrdinalIndex</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a3f53608c1811e5de6e5f4abd0c37d2c9</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; ParameterEntry &gt;</type>
      <name>getNonconstObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a9e10102f5c479445923a692489f46d5b</anchor>
      <arglist>(const Ordinal &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; ParameterEntry &gt;</type>
      <name>getNonconstObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a74d5d8d9997c5ca9d1b09ff3db727485</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ParameterEntry &gt;</type>
      <name>getObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4d6cd85b994177f9b1a5c148fdaa1919</anchor>
      <arglist>(const Ordinal &amp;idx) const</arglist>
    </member>
    <member kind="function">
      <type>Ptr&lt; const ParameterEntry &gt;</type>
      <name>getObjPtr</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a50618af6e72f9e261cb84395bb5477c0</anchor>
      <arglist>(const std::string &amp;key) const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a62951610fb5aeb3ad011a1664c8605a8</anchor>
      <arglist>(const Ordinal &amp;idx)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeObj</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>ae3aeb37855edf0ea2ac4b9eb81153eef</anchor>
      <arglist>(const std::string &amp;key)</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>nonconstBegin</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a4074e9db055e9f85f41b366ddf74fa9a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Iterator</type>
      <name>nonconstEnd</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a107d0ec8cf0e3979e4f65f559d0502a7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>a59dd22824da8ea73dfeb18375bd27fe2</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>ConstIterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainer.html</anchorfile>
      <anchor>afdac9c09455b05986aff3c108dad4ae6</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringIndexedOrderedValueObjectContainerBase</name>
    <filename>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase.html</filename>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidKeyError</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::InvalidOrdinalIndexError</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::KeyObjectPair</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::OrdinalIndex</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase::SelectActive</class>
    <member kind="typedef">
      <type>Teuchos_Ordinal</type>
      <name>Ordinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase.html</anchorfile>
      <anchor>a8a23966aac195dc18184f19837ac55fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StringIndexedOrderedValueObjectContainerBase</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase.html</anchorfile>
      <anchor>a1b49058e99c339d8d8186de4d3e3ee2e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Ordinal</type>
      <name>getInvalidOrdinal</name>
      <anchorfile>classTeuchos_1_1StringIndexedOrderedValueObjectContainerBase.html</anchorfile>
      <anchor>a74e1eebf18068cbd0b5c8c09274c1db4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringInputSource</name>
    <filename>classTeuchos_1_1StringInputSource.html</filename>
    <base>Teuchos::XMLInputSource</base>
    <member kind="function">
      <type></type>
      <name>StringInputSource</name>
      <anchorfile>classTeuchos_1_1StringInputSource.html</anchorfile>
      <anchor>afa992f9c038a8059f81d8f2645de6570</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StringInputSource</name>
      <anchorfile>classTeuchos_1_1StringInputSource.html</anchorfile>
      <anchor>a8baf1bcda607ec9cef43730233552d75</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; XMLInputStream &gt;</type>
      <name>stream</name>
      <anchorfile>classTeuchos_1_1StringInputSource.html</anchorfile>
      <anchor>addbcd05eb12cd4217d509224f05c6c32</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>text_</name>
      <anchorfile>classTeuchos_1_1StringInputSource.html</anchorfile>
      <anchor>abf8afba28b8e72f84e62bbf181363114</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringInputStream</name>
    <filename>classTeuchos_1_1StringInputStream.html</filename>
    <base>Teuchos::XMLInputStream</base>
    <member kind="function">
      <type></type>
      <name>StringInputStream</name>
      <anchorfile>classTeuchos_1_1StringInputStream.html</anchorfile>
      <anchor>a02326005b83d4a56df2ffb5fc0ad2f44</anchor>
      <arglist>(const std::string &amp;text)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~StringInputStream</name>
      <anchorfile>classTeuchos_1_1StringInputStream.html</anchorfile>
      <anchor>a3db9377271eed0e01c9e66acea4f5e27</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>readBytes</name>
      <anchorfile>classTeuchos_1_1StringInputStream.html</anchorfile>
      <anchor>a15e1cbdf2b50f41de3c562b9ea1f5b04</anchor>
      <arglist>(unsigned char *const toFill, const unsigned int maxToRead)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>text_</name>
      <anchorfile>classTeuchos_1_1StringInputStream.html</anchorfile>
      <anchor>aa4da6a91b5087fff144882456733a5d3</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>unsigned int</type>
      <name>pos_</name>
      <anchorfile>classTeuchos_1_1StringInputStream.html</anchorfile>
      <anchor>a3a36222a3101f9a222b3dd0ec879a95f</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringToIntegralParameterEntryValidator</name>
    <filename>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</filename>
    <templarg>IntegralType</templarg>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, IntegralType &gt;</type>
      <name>map_t</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a982358b998d94329762bea1666c872bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setValidValues</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a9eba05ee7970d9dedcbcbd0e65f2da4e</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const std::string &gt; const *stringsDocs=NULL)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ad332b6d8de0f7435114b75125c6c6006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>upperCase</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a8128d34acc4e11b1ac4be171d41181d0</anchor>
      <arglist>(const std::string s)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>defaultParameterName_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a2fad908c2c4c81022dc5f195b081a615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>validValues_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>aa36e2de56c5cf4ddd231a79972efba14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidStringsList</type>
      <name>validStringValues_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a6525498648d2c7c90542b54bfbf58ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidStringsList</type>
      <name>validStringValuesDocs_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a26237174375e93761111f62d10dafdb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>map_t</type>
      <name>map_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a49854d5f8c19d1fb3e7bb7dae42a9e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>caseSensitive_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1dc2ba0c3405d8faf1eb72d3dac837db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a57cec30a1996ce3450693b9e6d2286af</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, std::string const &amp;defaultParameterName)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a2d9535af0d7a933c18c723275a7b2131</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, std::string const &amp;defaultParameterName, const bool caseSensitive)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>aa8885b92381f17248be6302db94e077e</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, std::string const &amp;defaultParameterName)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ad314a0a5285a6a1e344fff51944c7092</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, std::string const &amp;defaultParameterName, const bool caseSensitive)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>abf7d427309469aae9858a5e7fe95e2a1</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const std::string &gt; const &amp;stringsDocs, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, std::string const &amp;defaultParameterName)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>stringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ab2fab9da4333c8a24b67d8b472cfef95</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const std::string &gt; const &amp;stringsDocs, ArrayView&lt; const IntegralType &gt; const &amp;integralValues, std::string const &amp;defaultParameterName, const bool caseSensitive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1d174494c8e36b22815a6307566df921</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const std::string &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a3e20173b2c1766b8d6909025f6a30486</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const ArrayView&lt; const IntegralType &gt; &amp;integralValues, std::string const &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1eb35145d8ae11313797be6444d30f65</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const ArrayView&lt; const std::string &gt; &amp;stringsDocs, const ArrayView&lt; const IntegralType &gt; &amp;integralValues, const std::string &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>IntegralType</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ac08d16fed2238b7930791513e4b938c7</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>IntegralType</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a0c9eb0160225c58154d5fd14f6831a4d</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStringValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>acf1d5da3da5dd64e831af94d4fd0369e</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const </arglist>
    </member>
    <member kind="function">
      <type>IntegralType</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a28f15323d86e4b5f843074acee658001</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const std::string &amp;defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStringValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ae4a11afc22eb03471a47f842a25d1d47</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const std::string &amp;defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>getStringDocs</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a3960042a83661e110429087784722272</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDefaultParameterName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>aee091cf8224cb3c7c19e8306be2f3a34</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>validateString</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ad1349471732c452959afa17c7c9731c9</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCaseSensitive</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ab5358211b3b58d2a21266a497adea226</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a9e7b5e194380fbfddeec2007d5b60643</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a6a71e03e0670dd52fa0c7d1d5b606e5b</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a82e92928ba2ebe4aa197b26a3a2337c5</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a7a5dc0c850df8049e7e6ca118c3abea0</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>StringToIntegralParameterEntryValidator&lt; int &gt;</name>
    <filename>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>map_t</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a982358b998d94329762bea1666c872bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ad332b6d8de0f7435114b75125c6c6006</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>setValidValues</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a9eba05ee7970d9dedcbcbd0e65f2da4e</anchor>
      <arglist>(ArrayView&lt; const std::string &gt; const &amp;strings, ArrayView&lt; const std::string &gt; const *stringsDocs=NULL)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>upperCase</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a8128d34acc4e11b1ac4be171d41181d0</anchor>
      <arglist>(const std::string s)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>defaultParameterName_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a2fad908c2c4c81022dc5f195b081a615</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>validValues_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>aa36e2de56c5cf4ddd231a79972efba14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidStringsList</type>
      <name>validStringValues_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a6525498648d2c7c90542b54bfbf58ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidStringsList</type>
      <name>validStringValuesDocs_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a26237174375e93761111f62d10dafdb6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>map_t</type>
      <name>map_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a49854d5f8c19d1fb3e7bb7dae42a9e38</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const bool</type>
      <name>caseSensitive_</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1dc2ba0c3405d8faf1eb72d3dac837db</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1d174494c8e36b22815a6307566df921</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const std::string &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a3e20173b2c1766b8d6909025f6a30486</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const ArrayView&lt; const int &gt; &amp;integralValues, std::string const &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringToIntegralParameterEntryValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a1eb35145d8ae11313797be6444d30f65</anchor>
      <arglist>(const ArrayView&lt; const std::string &gt; &amp;strings, const ArrayView&lt; const std::string &gt; &amp;stringsDocs, const ArrayView&lt; const int &gt; &amp;integralValues, const std::string &amp;defaultParameterName, const bool caseSensitive=true)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ac08d16fed2238b7930791513e4b938c7</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a0c9eb0160225c58154d5fd14f6831a4d</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getIntegralValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a28f15323d86e4b5f843074acee658001</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const std::string &amp;defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStringValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>acf1d5da3da5dd64e831af94d4fd0369e</anchor>
      <arglist>(const ParameterEntry &amp;entry, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;, const bool activeQuery=true) const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getStringValue</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ae4a11afc22eb03471a47f842a25d1d47</anchor>
      <arglist>(ParameterList &amp;paramList, const std::string &amp;paramName, const std::string &amp;defaultValue) const</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>getStringDocs</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a3960042a83661e110429087784722272</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getDefaultParameterName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>aee091cf8224cb3c7c19e8306be2f3a34</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>validateString</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ad1349471732c452959afa17c7c9731c9</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;paramName=&quot;&quot;, const std::string &amp;sublistName=&quot;&quot;) const</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isCaseSensitive</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>ab5358211b3b58d2a21266a497adea226</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a9e7b5e194380fbfddeec2007d5b60643</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a6a71e03e0670dd52fa0c7d1d5b606e5b</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a82e92928ba2ebe4aa197b26a3a2337c5</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1StringToIntegralParameterEntryValidator.html</anchorfile>
      <anchor>a7a5dc0c850df8049e7e6ca118c3abea0</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringToIntegralValidatorXMLConverter</name>
    <filename>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>a111e4a815feba1c9babddd6b91d844f9</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>ab36909c0db29546c92656737a7821cfe</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getIntegralValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>ad7bf7165c3c28d05a42b8e02a7ac474b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringTagName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>a3fd7619f6afd36320d00c21a4077077e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>a491eef10e380254a47cffc64e9814b43</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringDocAttributeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>a316e55059c50dfb0dcfdfb2597ba6132</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDefaultParameterAttributeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>a266b5827b2fe92a41f1664186040725a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getCaseSensitiveAttributeName</name>
      <anchorfile>classTeuchos_1_1StringToIntegralValidatorXMLConverter.html</anchorfile>
      <anchor>ade7c6efd5465b08c19c9ae01a0de2f4a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringToIntMap</name>
    <filename>classTeuchos_1_1StringToIntMap.html</filename>
    <class kind="class">Teuchos::StringToIntMap::AlreadyExists</class>
    <class kind="class">Teuchos::StringToIntMap::DoesNotExist</class>
    <member kind="function">
      <type></type>
      <name>StringToIntMap</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a36e89c532f21ce9c83c93be4ec612584</anchor>
      <arglist>(const std::string &amp;defaultGroupName, int n, const char *strings[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a32271b280cbaaffdb185c31a3938adb6</anchor>
      <arglist>(const std::string &amp;option, const std::string &amp;groupName=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>EnumType</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a5cb6b9c5ee7a4ec8dc47ca9661237166</anchor>
      <arglist>(const std::string &amp;option, const std::string &amp;groupName=&quot;&quot;) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>defaultGroupName</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a5613a65b78c1ad31715ae66b0984dbd8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, int &gt;</type>
      <name>map_t</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a7cc56d5234ed68b92acf5b9088305360</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>std::string</type>
      <name>validSelections</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a929b9db514576e16309fc33f1352b42f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>StringToIntMap</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a567b5661ee75f44a539414a999c6337a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>defaultGroupName_</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>adbab37c6e30c2e91e1712635ec4411ad</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>map_t</type>
      <name>map_</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>ab7b5614adea9bc9f6de424c43e72c768</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>EnumType</type>
      <name>get</name>
      <anchorfile>classTeuchos_1_1StringToIntMap.html</anchorfile>
      <anchor>a4acf1a33435e5ac8941f39d26b5aa1ba</anchor>
      <arglist>(StringToIntMap const &amp;theMap, std::string const &amp;option, std::string const &amp;groupName=&quot;&quot;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringValidator</name>
    <filename>classTeuchos_1_1StringValidator.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="function">
      <type></type>
      <name>StringValidator</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>aadf3a1def5d2f77fc74493bffb9b4927</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringValidator</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>a55e024e5f1adde71c206f49e74d5c77c</anchor>
      <arglist>(const Teuchos::Array&lt; std::string &gt; &amp;validStrings)</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>setValidStrings</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>af3e77293405c25a2827c13214ec1c388</anchor>
      <arglist>(const Teuchos::Array&lt; std::string &gt; &amp;validStrings)</arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>a656f690e7abf7166a16c5e8870fb4b05</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>a8efb5cd66e893db1ec7f23e8cd32c04c</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>af90d4fb56a315b67b964150dbba18351</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>ad3d1d528fc1d5775dc0b4c2110b95cb7</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidStringsList</type>
      <name>validStrings_</name>
      <anchorfile>classTeuchos_1_1StringValidator.html</anchorfile>
      <anchor>a59a004d250f338a33afbfceae8d8dd09</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringValidatorDependency</name>
    <filename>classTeuchos_1_1StringValidatorDependency.html</filename>
    <base>Teuchos::ValidatorDependency</base>
    <member kind="typedef">
      <type>std::map&lt; std::string, RCP&lt; const ParameterEntryValidator &gt; &gt;</type>
      <name>ValueToValidatorMap</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>affd856ff1a141e36e400d04d39ded1f3</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; std::string, RCP&lt; const ParameterEntryValidator &gt; &gt;</type>
      <name>ValueToValidatorPair</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>ae68b2cd1b7a7e794cfdcbf273f8d6cc9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringValidatorDependency</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>af7396f4b77da8ede2fbd1c57c623769b</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, ValueToValidatorMap valuesAndValidators, RCP&lt; ParameterEntryValidator &gt; defaultValidator=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringValidatorDependency</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>afb1438d19885e4e851ad7be66c4f75a3</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, ValueToValidatorMap valuesAndValidators, RCP&lt; ParameterEntryValidator &gt; defaultValidator=null)</arglist>
    </member>
    <member kind="function">
      <type>const ValueToValidatorMap &amp;</type>
      <name>getValuesAndValidators</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a82d0f55ee546fa8b7f60664372c5618a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const ParameterEntryValidator &gt;</type>
      <name>getDefaultValidator</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a94280d86b53a0c83bb25b308db472892</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a72680deb24cdb2c4c2b2a836110e83c2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a956e2aff28ca8541904464522ef0c6b1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>ae2f51e3c28e9b39d92c9da205f781c0c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValueToValidatorMap</type>
      <name>valuesAndValidators_</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a2aaba7315bd59afc29660143b120f2fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>defaultValidator_</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependency.html</anchorfile>
      <anchor>a4c68380e107c1198e0cb26cbce709cf9</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringValidatorDependencyXMLConverter</name>
    <filename>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</filename>
    <base>Teuchos::ValidatorDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a5d882861caa47fdbe278041e46178d73</anchor>
      <arglist>(RCP&lt; const ValidatorDependency &gt; dependency, XMLObject &amp;xmlObj, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ValidatorDependency &gt;</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a408f1dc3ad06e46928286eb86965666b</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; const ParameterEntry &gt; dependee, const Dependency::ParameterEntryList dependents, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValuesAndValidatorsTag</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a4ea0e1c5d05129befc3d9fccb0e1c8cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPairTag</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ad296b7f2a0667381659cb4773fca7698</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>aeb018dcfb79d66cbb13379395cfd4102</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ac0b266a9b6a550b24df3b0a67b4816d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDefaultValidatorIdAttributeName</name>
      <anchorfile>classTeuchos_1_1StringValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a8e8fa977c02a56ad699a400d0b6c7e19</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringValidatorXMLConverter</name>
    <filename>classTeuchos_1_1StringValidatorXMLConverter.html</filename>
    <base>Teuchos::ValidatorXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1StringValidatorXMLConverter.html</anchorfile>
      <anchor>a1a4b0bbbeb83bf51d5887779c627c604</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1StringValidatorXMLConverter.html</anchorfile>
      <anchor>ac3dfcdcbbe370718cb8f1170bdaaf715</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringTagName</name>
      <anchorfile>classTeuchos_1_1StringValidatorXMLConverter.html</anchorfile>
      <anchor>ae5eae9953de63c27b614093a9ccf2c51</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringValidatorXMLConverter.html</anchorfile>
      <anchor>a35846d51e4e43f5f9845b18ec656cc71</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringVisualDependency</name>
    <filename>classTeuchos_1_1StringVisualDependency.html</filename>
    <base>Teuchos::VisualDependency</base>
    <member kind="typedef">
      <type>Array&lt; std::string &gt;</type>
      <name>ValueList</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a01803dab637debb0987f0fe3d18fd8da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringVisualDependency</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>aa618690f3df8ed9dc1ea3b9e826f21ad</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, std::string value, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringVisualDependency</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>ae7c6daaba6c14d0b6488eb82f7ac83de</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, const ValueList &amp;values, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringVisualDependency</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a675581d2281986b67ac1c24c458ba921</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, const std::string &amp;value, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>StringVisualDependency</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a4976e930a73f1684b83b8a7d12909acf</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, const ValueList &amp;values, bool showIf=true)</arglist>
    </member>
    <member kind="function">
      <type>const ValueList &amp;</type>
      <name>getValues</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a08b8c0b95ddbca293f346d2ad4305230</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getDependeeState</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a99df8f0501ba6047e2edea5319280a79</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a7499924903546fcbd4d8ac70aec27552</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>a0a320bb753a6ef91c0ff00d4b2cd753a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>const ValueList</type>
      <name>values_</name>
      <anchorfile>classTeuchos_1_1StringVisualDependency.html</anchorfile>
      <anchor>ab39915e0bbdc8f014a7d6cf1e888e7df</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StringVisualDependencyXMLConverter</name>
    <filename>classTeuchos_1_1StringVisualDependencyXMLConverter.html</filename>
    <base>Teuchos::VisualDependencyXMLConverter</base>
    <member kind="function">
      <type>void</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1StringVisualDependencyXMLConverter.html</anchorfile>
      <anchor>af93c4d42c3ac281eef1c312db22c5845</anchor>
      <arglist>(RCP&lt; const VisualDependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; VisualDependency &gt;</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1StringVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a6aeec5a20c8d514432d711c9328aa15e</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, bool showIf, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringValuesTagName</name>
      <anchorfile>classTeuchos_1_1StringVisualDependencyXMLConverter.html</anchorfile>
      <anchor>aa08969b88e4bd879516f9566954ee9c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getStringTagName</name>
      <anchorfile>classTeuchos_1_1StringVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a4187dbe56ea757cd26c976e25e3681f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValueAttributeName</name>
      <anchorfile>classTeuchos_1_1StringVisualDependencyXMLConverter.html</anchorfile>
      <anchor>a7db08afe41b11eaad7cd74c603dd2231</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::StrUtils</name>
    <filename>classTeuchos_1_1StrUtils.html</filename>
    <member kind="function" static="yes">
      <type>static Array&lt; std::string &gt;</type>
      <name>readFile</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>abe5ca6aa912eda89a8b5b076bdb1021e</anchor>
      <arglist>(std::istream &amp;is, char comment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Array&lt; std::string &gt;</type>
      <name>splitIntoLines</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a48d39c9f1170f0205b550a41b8d0db66</anchor>
      <arglist>(const std::string &amp;input)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Array&lt; Array&lt; std::string &gt; &gt;</type>
      <name>tokenizeFile</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a98b7509af02f7b0be350e1a96904737a</anchor>
      <arglist>(std::istream &amp;is, char comment)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>readLine</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>adc642ce8752135c964f01dc334e8bb13</anchor>
      <arglist>(std::istream &amp;is, std::string &amp;line)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Array&lt; std::string &gt;</type>
      <name>stringTokenizer</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>aab379bae061b221298afde0271e7b508</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static Array&lt; std::string &gt;</type>
      <name>getTokensPlusWhitespace</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a7cce854d753cf48b4353c6d3752feba6</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>reassembleFromTokens</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>aaa75863fa38c70f79451d46bb2195bce</anchor>
      <arglist>(const Array&lt; std::string &gt; &amp;tokens, int iStart=0)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>splitList</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a84b75e84ee2916f7f5c2b99360d0276f</anchor>
      <arglist>(const std::string &amp;bigstring, Array&lt; std::string &gt; &amp;elements)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findNextWhitespace</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a6f017be01f4e2f642e81440292872358</anchor>
      <arglist>(const std::string &amp;str, int offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>findNextNonWhitespace</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a293c66d9b0f87ffa48f831a541e6e7e0</anchor>
      <arglist>(const std::string &amp;str, int offset)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>varSubstitute</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a6387b5853a4fb7ab33646f2f141670a8</anchor>
      <arglist>(const std::string &amp;rawLine, const std::string &amp;varName, const std::string &amp;varValue)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>varTableSubstitute</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>ade9aaf0da80f754c8a437ddae4b85f35</anchor>
      <arglist>(const std::string &amp;rawLine, const Array&lt; std::string &gt; &amp;varNames, const Array&lt; std::string &gt; &amp;varValues)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>envSubstitute</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a33a212062f2a4fe6afb7e428cfa98ef5</anchor>
      <arglist>(const std::string &amp;line)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>before</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>af37b679fe1a4d035c4d85573f00ae19f</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;sub)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>before</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a78240534972c4c8d56227ed0d56d5d60</anchor>
      <arglist>(const std::string &amp;str, char sub)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>after</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a65c42678b83a22f118753deb37b2948f</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;sub)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>find</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a42a30f2b418b0af957548ec73ba407a9</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;sub)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isWhite</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>acaa9b90f0964c14fae0677e47f069bf3</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>fixUnprintableCharacters</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a8c9e00073840cb4efb582def651b24ed</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isNonWhite</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>abfa260d65b51f50f7c469790643923f3</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>between</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>aa19bc13d6ebeb751f5c4af44cbcb8f2a</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;begin, const std::string &amp;end, std::string &amp;front, std::string &amp;back)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>subString</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a8783e82ab6c1a3de2acaeee51aa7d882</anchor>
      <arglist>(const std::string &amp;str, int begin, int end)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>readFromStream</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a71c3f892d537c16b4d4d18c2ab5fc557</anchor>
      <arglist>(std::istream &amp;is)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>allCaps</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>ab07ad33eaba023e14f0962831b4f01f5</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>atof</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>aa1694be1e2035fec15dbb11076eae900</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>atoi</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>ad15edb592ff697ddb4f246be0f8b9fb7</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::ostream &amp;</type>
      <name>printLines</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>a5d0163a50f099b112b1a8ea19095d438</anchor>
      <arglist>(std::ostream &amp;os, const std::string &amp;linePrefix, const std::string &amp;lines)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>removeAllSpaces</name>
      <anchorfile>classTeuchos_1_1StrUtils.html</anchorfile>
      <anchor>ac45adbd430307273fba9534027096d2b</anchor>
      <arglist>(std::string stringToClean)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SubtractionFunction</name>
    <filename>classTeuchos_1_1SubtractionFunction.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionObject</base>
    <member kind="function">
      <type></type>
      <name>SubtractionFunction</name>
      <anchorfile>classTeuchos_1_1SubtractionFunction.html</anchorfile>
      <anchor>aa1939dfb5f3a14c970a056f85bb7fd5a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SubtractionFunction</name>
      <anchorfile>classTeuchos_1_1SubtractionFunction.html</anchorfile>
      <anchor>ac8924ea91c6d6376a6949f0f6f2efec6</anchor>
      <arglist>(OperandType amountToSubtract)</arglist>
    </member>
    <member kind="function">
      <type>OperandType</type>
      <name>runFunction</name>
      <anchorfile>classTeuchos_1_1SubtractionFunction.html</anchorfile>
      <anchor>a23ec52bb1d95ffb842f93869c8c6ac9e</anchor>
      <arglist>(OperandType arguement) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1SubtractionFunction.html</anchorfile>
      <anchor>a9f69bf9d1ed71e2e04f027a6362db9e0</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SubtractionFunctionXMLConverter</name>
    <filename>classTeuchos_1_1SubtractionFunctionXMLConverter.html</filename>
    <templarg></templarg>
    <base>Teuchos::SimpleFunctionXMLConverter</base>
    <member kind="function">
      <type>RCP&lt; SimpleFunctionObject&lt; OperandType &gt; &gt;</type>
      <name>getSpecificSimpleFunction</name>
      <anchorfile>classTeuchos_1_1SubtractionFunctionXMLConverter.html</anchorfile>
      <anchor>a62ebdcd1103ad32e26c3c0b8b4ea20ce</anchor>
      <arglist>(OperandType operand) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::SumValueReductionOp</name>
    <filename>classTeuchos_1_1SumValueReductionOp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeReductionOp&lt; Ordinal, Packet &gt;</base>
    <member kind="function">
      <type>void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1SumValueReductionOp.html</anchorfile>
      <anchor>a0378292bbcf5822b7095fc4c4862e8a2</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[]) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::SymmetrizingAdder</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>AdderType::index_type</type>
      <name>index_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a32dc3d8b3557326a1ae89f9c72d07d31</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>AdderType::value_type</type>
      <name>value_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a14177178999fc3d75baa8fac2f672480</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SymmetrizingAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a9c4ff1b8cb62d1ab5a414a5ffee649c9</anchor>
      <arglist>(const Teuchos::RCP&lt; AdderType &gt; &amp;adder, const std::string &amp;symmType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>ad97f438b002b33f530f835a6f72bf3bc</anchor>
      <arglist>(const index_type i, const index_type j, const value_type &amp;Aij)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; AdderType &gt;</type>
      <name>getAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a63d7e584033da0d9aca1cc6bc1625712</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; AdderType &gt;</type>
      <name>adder_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a13dd2339671b698feb5b60cd32659114</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>symmetrize_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>ad54c023d425ae8bf29c4bcbeed5c3e14</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>conjugate_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>a195c41cd0be450ae7e8881f9a965863c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>skew_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingAdder.html</anchorfile>
      <anchor>ab921bbd03e99d3558bb00d187b18a9fe</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::SymmetrizingGraphAdder</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>AdderType::index_type</type>
      <name>index_type</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>a5384a42132ff9551cb6299907e599b27</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>SymmetrizingGraphAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>a434db278c0997d541963cb4f7ee18728</anchor>
      <arglist>(const Teuchos::RCP&lt; AdderType &gt; &amp;adder, const std::string &amp;symmType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>a20b69c5e92e178a91e4bc04ae299f361</anchor>
      <arglist>(const index_type i, const index_type j)</arglist>
    </member>
    <member kind="function">
      <type>Teuchos::RCP&lt; AdderType &gt;</type>
      <name>getAdder</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>af79c3559af8836177ebcbb3df72a6db0</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::RCP&lt; AdderType &gt;</type>
      <name>adder_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>af32765548291055d7e68e3e3d9190948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>symmetrize_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>a3b05de68a47062a0023fb1cba264da54</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>skew_</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1SymmetrizingGraphAdder.html</anchorfile>
      <anchor>a447d36c2d56a78e16213c890ff34d848</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TableColumn</name>
    <filename>classTeuchos_1_1TableColumn.html</filename>
    <member kind="function">
      <type></type>
      <name>TableColumn</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>a66702814c44f824ce5e54a30547e6141</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TableColumn</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>a9f8fc27c4b80392eeea4d20ba6e47e80</anchor>
      <arglist>(const Array&lt; std::string &gt; &amp;vals)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TableColumn</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>aaa80729d61419f5b4ff6fd1d1da0185d</anchor>
      <arglist>(const Array&lt; double &gt; &amp;vals, int precision)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TableColumn</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>aea34fa6007256f0c29d913f97f91b35d</anchor>
      <arglist>(const Array&lt; double &gt; &amp;first, const Array&lt; double &gt; &amp;second, int precision, bool spaceBeforeParentheses)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numRows</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>a357fa1fa5a774c3161c9dac2b4319ee3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addEntry</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>afcd133cb06be204c22501d3acb41804a</anchor>
      <arglist>(const RCP&lt; TableEntry &gt; &amp;entry)</arglist>
    </member>
    <member kind="function">
      <type>const RCP&lt; TableEntry &gt; &amp;</type>
      <name>entry</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>a4c1c28b6b3ebced57a42142286869509</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; RCP&lt; TableEntry &gt; &gt;</type>
      <name>data_</name>
      <anchorfile>classTeuchos_1_1TableColumn.html</anchorfile>
      <anchor>a690e1254928f7a315701683ccb30b867</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TableEntry</name>
    <filename>classTeuchos_1_1TableEntry.html</filename>
    <member kind="function">
      <type></type>
      <name>TableEntry</name>
      <anchorfile>classTeuchos_1_1TableEntry.html</anchorfile>
      <anchor>a004f93a6815a503620100d4d19a3fe90</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TableEntry</name>
      <anchorfile>classTeuchos_1_1TableEntry.html</anchorfile>
      <anchor>a39c00cbb673bfbea2ae8181305f0d5da</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1TableEntry.html</anchorfile>
      <anchor>ab09f5dd09026ec373f041ac4b6e6e06d</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>toChoppedString</name>
      <anchorfile>classTeuchos_1_1TableEntry.html</anchorfile>
      <anchor>ad9eeb02813ccc10b443b289e32c5385d</anchor>
      <arglist>(int maxWidth) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TableFormat</name>
    <filename>classTeuchos_1_1TableFormat.html</filename>
    <member kind="function">
      <type></type>
      <name>TableFormat</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>abc5224052b9a4d9c40de6ad1b760d739</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>pageWidth</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>ad2d6e1a1d85af7d7eb16593507489881</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>precision</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a8183ed16e479dd21f1fde58beafa77ac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>columnSpacing</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>ad34f3a347cde2c701d9100137262c9a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPageWidth</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a8a1e959e50bd1f3d493184bab602fc49</anchor>
      <arglist>(int pw) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setPrecision</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a98cbfa0651363170273e3fb859c6e314</anchor>
      <arglist>(int p)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnSpacing</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a93b71fdb57c7e53d59d3fb2a4fc1f31f</anchor>
      <arglist>(int columnSpacing_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setRowsBetweenLines</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a9c978231549ce3fdfb16e4197f10dafe</anchor>
      <arglist>(int lineInterval)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>thinline</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a9d1db1372464d439513e79511deb7178</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>thickline</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>af2b96e58a61f85c7fd03be5e4d9ab212</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>blanks</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a2d455cfd5656a69ff4de4203e51c815a</anchor>
      <arglist>(int size) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>computeRequiredColumnWidth</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>abecbbfadfad135091a532eca3412bcf2</anchor>
      <arglist>(const std::string &amp;name, const TableColumn &amp;column) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setColumnWidths</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a38d47ebad735473338544de7a3d914f5</anchor>
      <arglist>(const Array&lt; int &gt; &amp;colWidths)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRow</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>af1b8abcb65234faadc8ed539fa4c27c3</anchor>
      <arglist>(std::ostream &amp;out, const Array&lt; RCP&lt; TableEntry &gt; &gt; &amp;entries) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeRow</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>afc43c19e5b7e84f7f0224418750bd9f7</anchor>
      <arglist>(std::ostream &amp;out, int rowIndex, const Array&lt; TableColumn &gt; &amp;columns) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>writeWholeTable</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a1a0f52414111fe0df487cf0503110896</anchor>
      <arglist>(std::ostream &amp;out, const std::string &amp;tableTitle, const Array&lt; std::string &gt; &amp;columnNames, const Array&lt; TableColumn &gt; &amp;columns) const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>int</type>
      <name>defaultColumnWidth</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a492f72199d3ab4df1afd0271da5964c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>pageWidth_</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>ab1d05c475b07fbf9faef3685694679e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>precision_</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>ac71cd3438b76bc7bb6833b7f39146fa4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>columnSpacing_</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a9b2cad6c4844bbdf3d20f943120629a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>lineInterval_</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>adb5203d6956ac3263c496f338e224540</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; int &gt;</type>
      <name>columnWidths_</name>
      <anchorfile>classTeuchos_1_1TableFormat.html</anchorfile>
      <anchor>a20906e5d336984344e27d43adc33ef23</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TabularOutputter</name>
    <filename>classTeuchos_1_1TabularOutputter.html</filename>
    <class kind="struct">Teuchos::TabularOutputter::FieldSpec</class>
    <class kind="class">Teuchos::TabularOutputter::InvalidFieldOutputError</class>
    <class kind="class">Teuchos::TabularOutputter::InvalidFieldSpecError</class>
    <class kind="class">Teuchos::TabularOutputter::MissingFieldsError</class>
    <class kind="class">Teuchos::TabularOutputter::MissingHeaderError</class>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a9f81c3cbd5ddc8a0a0e680025e42f76e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a0bac176e759f372b465560dd65af4e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a6ddff7ec453e4674f552c1adb2082915</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFieldTypes</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a4b0a350a8a218f6c285c61026cf97ea2a76829a209a146a1ca0f7d0010f98f331</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0a91e9e7cf379ffa47d57967d7da1be8a9f2112271c49779a599088d55e1ceb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0a91e9e7cf379ffa47d57967d7da1be8a4ebb642bcf65de1779739ad1faaa1944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFieldJustifications</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>ace12d8fee793bf50fb5a9b56270a3dd1acfce26063e79762afe52ef29ef947296</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIENTIFIC</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a5fac4349ced41dbac544d32d81a0ce89a4f6c3d0edc0efb30a1f725a4ce6d9f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a5fac4349ced41dbac544d32d81a0ce89afd3ada7d353e11c0d0d413ba0661b7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFloatingOutputTypes</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a7779261de34d56db84c8b5c3086f5095afef04b7d9eda5e0c644bc836cad99e5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TabularOutputter</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a955d30a730d58fd7bb7cde27b7bf2fda</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TabularOutputter</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a7f79fea868d1501cc8d541318148894a</anchor>
      <arglist>(const RCP&lt; std::ostream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setOStream</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aa2072d03d706b6542e70f2b40964e8c1</anchor>
      <arglist>(const RCP&lt; std::ostream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>pushFieldSpec</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a42ac9e29c6c7854c5201395b202b939d</anchor>
      <arglist>(const std::string &amp;fieldName, const EFieldType fieldType=DOUBLE, const EFieldJustification fieldJustification=RIGHT, const EFloatingOutputType floatingOutputType=SCIENTIFIC, const int width=-1)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setFieldTypePrecision</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a6743d1e68adfc3ee58db969be586e5e7</anchor>
      <arglist>(const EFieldType fieldType, const int prec)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputHeader</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a655a61d899a5a32bcc7202994b3187c0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>outputField</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>ad77f763f499fd199b347352c1d7428de</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>nextRow</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a56d70a8ea96a4357d5cc21f7d4e44c0e</anchor>
      <arglist>(const bool allowRemainingFields=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startTimer</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aba87b323f1f80df40b160cdf7f3dfa55</anchor>
      <arglist>(const int numLoops)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stopTimer</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a1aab0ef19b5793331089b25b943d271f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a15f2f48ba43db7beaa8f36399600db44</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>double</type>
      <name>adjustTime</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a9c5a5952498cedb80e3d4e92977cc5cf</anchor>
      <arglist>(const double &amp;time_in)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TabularOutputter</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a6052b373b8c9f7cb22245aae55fdf0bc</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; FieldSpec &gt;</type>
      <name>fieldSpecs_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a8e5bde89f87c51b416799273b034e00a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FancyOStream &gt;</type>
      <name>out_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>ad85dd3e0709184f2f59587905ace5bf5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Tuple&lt; int, numFieldTypes &gt;</type>
      <name>fieldTypePrecision_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a9ea7608997c6438690d45b75ee15f5e9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>currFieldIdx_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>ad7847284bd02598bd39c5464fadb2c31</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Time</type>
      <name>timer_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0e625bfa3dda757b0874fa39867524bf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numLoops_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a6353670224d736403ca8e68c7a460499</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static const std::string</type>
      <name>fieldSpacer_</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a1d54401fe91b4739a7610f3980b1c1b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EFieldType</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DOUBLE</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a9f81c3cbd5ddc8a0a0e680025e42f76e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>INT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a0bac176e759f372b465560dd65af4e4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>STRING</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>aab5e8a191e5ac60965906d9e94ee7095a6ddff7ec453e4674f552c1adb2082915</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFieldTypes</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a4b0a350a8a218f6c285c61026cf97ea2a76829a209a146a1ca0f7d0010f98f331</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EFieldJustification</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0a91e9e7cf379ffa47d57967d7da1be8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0a91e9e7cf379ffa47d57967d7da1be8a9f2112271c49779a599088d55e1ceb7a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a0a91e9e7cf379ffa47d57967d7da1be8a4ebb642bcf65de1779739ad1faaa1944</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFieldJustifications</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>ace12d8fee793bf50fb5a9b56270a3dd1acfce26063e79762afe52ef29ef947296</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EFloatingOutputType</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a5fac4349ced41dbac544d32d81a0ce89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SCIENTIFIC</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a5fac4349ced41dbac544d32d81a0ce89a4f6c3d0edc0efb30a1f725a4ce6d9f1b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>GENERAL</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a5fac4349ced41dbac544d32d81a0ce89afd3ada7d353e11c0d0d413ba0661b7fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>numFloatingOutputTypes</name>
      <anchorfile>classTeuchos_1_1TabularOutputter.html</anchorfile>
      <anchor>a7779261de34d56db84c8b5c3086f5095afef04b7d9eda5e0c644bc836cad99e5e</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TestVerboseObjectBaseInitialization</name>
    <filename>classTestVerboseObjectBaseInitialization.html</filename>
    <member kind="function">
      <type></type>
      <name>TestVerboseObjectBaseInitialization</name>
      <anchorfile>classTestVerboseObjectBaseInitialization.html</anchorfile>
      <anchor>aaa4a60521e177fa47dab9187f85102d2</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ThreadLock</name>
    <filename>classTeuchos_1_1ThreadLock.html</filename>
    <member kind="function">
      <type></type>
      <name>ThreadLock</name>
      <anchorfile>classTeuchos_1_1ThreadLock.html</anchorfile>
      <anchor>a8a9e2ea2deec45ebed99c79526c28ae0</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ThreadLock</name>
      <anchorfile>classTeuchos_1_1ThreadLock.html</anchorfile>
      <anchor>a3d75765c311a6776942de14756b9c327</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>try_lock</name>
      <anchorfile>classTeuchos_1_1ThreadLock.html</anchorfile>
      <anchor>a83b1b4a648ee0970e731f62cd645be5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>lock</name>
      <anchorfile>classTeuchos_1_1ThreadLock.html</anchorfile>
      <anchor>a4f1a41bcdb16c96194b82eb15a2c05c1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>unlock</name>
      <anchorfile>classTeuchos_1_1ThreadLock.html</anchorfile>
      <anchor>afcf7423fb84aa0bc7c7c5446dc88fe14</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Time</name>
    <filename>classTeuchos_1_1Time.html</filename>
    <member kind="function">
      <type></type>
      <name>Time</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>af1dafdd2db84d7b012fdd9b6c3970833</anchor>
      <arglist>(const std::string &amp;name, bool start=false)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>start</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>aad80826889aab7c2f7ab1a75528a5f99</anchor>
      <arglist>(bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>stop</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>ac7ab88fd826da31c6605fbc7364c43a6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>disable</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>af0110068be725200a0cc5210cc9f09c3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>enable</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a4099686ec93d18bca158e671cf1f79dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEnabled</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a72720d900c6fdc89972f14db73a636f9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>totalElapsedTime</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>ab52545938b2cd965b390229ba4b324ab</anchor>
      <arglist>(bool readCurrentTime=false) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reset</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>aad3b620ba7cd94d0afcc2eb36c45c83d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isRunning</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a2fd27e1231ea01b274df1d465defe66b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>af23ee562a92fb7643535681da6b3628e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>incrementNumCalls</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a96e2e5fc545c91fbaa664d3bca423b92</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numCalls</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a5ba14951d12047eacdcf5570c58fd436</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>wallTime</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>af9ad4a46eacc3ff0b8f4655953d17c26</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>startTime_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>afd438747304f7e8b08d176444e03051a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>double</type>
      <name>totalTime_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a5357eabb9bbd5bdd8bfab783fc476edd</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>isRunning_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a92ce3e55d764148f93c619623be7c0e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>enabled_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>abff51135bb4534b31aa70b424fb306cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>name_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>ae04e7e7c1afd0b2d036422a74eb2aea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>numCalls_</name>
      <anchorfile>classTeuchos_1_1Time.html</anchorfile>
      <anchor>a374155e6058f84fb329381ac9b4a84e5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TimeMonitor</name>
    <filename>classTeuchos_1_1TimeMonitor.html</filename>
    <base>PerformanceMonitorBase&lt; Time &gt;</base>
    <member kind="function" static="yes">
      <type>static RCP&lt; Time &gt;</type>
      <name>getNewTimer</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a713dec21c7b54a7118dc6b52880987d3</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>disableTimer</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>ad27d1b76c043259744488cabc9ec8e93</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>enableTimer</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a6187925b4161e81d3e5af87c6a0eb4c1</anchor>
      <arglist>(const std::string &amp;name)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>zeroOutTimers</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a66dd36693c57658f28a99938587fdc70</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeGlobalTimerStatistics</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a2de1ffb434fbcab32ff366168c98ce1c</anchor>
      <arglist>(stat_map_type &amp;statData, std::vector&lt; std::string &gt; &amp;statNames, Ptr&lt; const Comm&lt; int &gt; &gt; comm, const ECounterSetOp setOp=Intersection, const std::string &amp;filter=&quot;&quot;)</arglist>
      <docanchor file="classTeuchos_1_1TimeMonitor" title="Statistics collected">Teuchos_TimeMonitor_computeGlobalTimerStatistics_stats</docanchor>
      <docanchor file="classTeuchos_1_1TimeMonitor" title="Performance">Teuchos_TimeMonitor_computeGlobalTimerStatistics_perf</docanchor>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>computeGlobalTimerStatistics</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a1d820397fe500ad79ca24e8b1fcb5216</anchor>
      <arglist>(stat_map_type &amp;statData, std::vector&lt; std::string &gt; &amp;statNames, const ECounterSetOp setOp=Intersection, const std::string &amp;filter=&quot;&quot;)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>summarize</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a943add952f1c75ed13ce6a95a092e942</anchor>
      <arglist>(Ptr&lt; const Comm&lt; int &gt; &gt; comm, std::ostream &amp;out=std::cout, const bool alwaysWriteLocal=false, const bool writeGlobalStats=true, const bool writeZeroTimers=true, const ECounterSetOp setOp=Intersection, const std::string &amp;filter=&quot;&quot;, const bool ignoreZeroTimers=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>summarize</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a02a1131477e3395761cd74526c03e1a6</anchor>
      <arglist>(std::ostream &amp;out=std::cout, const bool alwaysWriteLocal=false, const bool writeGlobalStats=true, const bool writeZeroTimers=true, const ECounterSetOp setOp=Intersection, const std::string &amp;filter=&quot;&quot;, const bool ignoreZeroTimers=false)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>report</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a794bfee7c48341bdcd6c2e9e0dd91695</anchor>
      <arglist>(Ptr&lt; const Comm&lt; int &gt; &gt; comm, std::ostream &amp;out, const std::string &amp;filter, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
      <docanchor file="classTeuchos_1_1TimeMonitor" title="Supported parameters">Teuchos_TimeMonitor_report_SupportedParams</docanchor>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>report</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>aa7c31c3850cbf30315dd363b777c54fa</anchor>
      <arglist>(Ptr&lt; const Comm&lt; int &gt; &gt; comm, std::ostream &amp;out, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>report</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a41f35f40cb32a502dcc15db9eb0abb57</anchor>
      <arglist>(std::ostream &amp;out, const std::string &amp;filter, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>report</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a7aaebcfba20fb18e9bfb78f9240ca1e6</anchor>
      <arglist>(std::ostream &amp;out, const RCP&lt; ParameterList &gt; &amp;params=null)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ParameterList &gt;</type>
      <name>getValidReportParameters</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>aa61de17cc041ccfbc85407e7512f49d1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>ETimeMonitorReportFormat</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a164cdd0abe5f8226dd56334ed7bcc988</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>REPORT_FORMAT_YAML</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a164cdd0abe5f8226dd56334ed7bcc988a4a99774c69f3e5820341ecb2e2a9ea62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>REPORT_FORMAT_TABLE</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a164cdd0abe5f8226dd56334ed7bcc988a923f088bd909c3c61f58e804dcff1c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration" protection="private">
      <type></type>
      <name>ETimeMonitorYamlFormat</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a19a4ee736ed8ca24b0143d0b55c54780</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>YAML_FORMAT_COMPACT</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a19a4ee736ed8ca24b0143d0b55c54780a3e7c73cc6a96ab46d17dad6eb3db3d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>YAML_FORMAT_SPACIOUS</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a19a4ee736ed8ca24b0143d0b55c54780aa11ffd7ed293901a1a9f4c1a10458e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>REPORT_FORMAT_YAML</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a164cdd0abe5f8226dd56334ed7bcc988a4a99774c69f3e5820341ecb2e2a9ea62</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>REPORT_FORMAT_TABLE</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a164cdd0abe5f8226dd56334ed7bcc988a923f088bd909c3c61f58e804dcff1c4a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>YAML_FORMAT_COMPACT</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a19a4ee736ed8ca24b0143d0b55c54780a3e7c73cc6a96ab46d17dad6eb3db3d83</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue" protection="private">
      <name>YAML_FORMAT_SPACIOUS</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a19a4ee736ed8ca24b0143d0b55c54780aa11ffd7ed293901a1a9f4c1a10458e90</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>summarizeToYaml</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a588e3b9e1ba77d2688ee5496813e7173</anchor>
      <arglist>(Ptr&lt; const Comm&lt; int &gt; &gt; comm, std::ostream &amp;out, const ETimeMonitorYamlFormat yamlStyle, const std::string &amp;filter=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>summarizeToYaml</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a4f8d996997d9ae99fd6c1aba1a34896f</anchor>
      <arglist>(std::ostream &amp;out, const ETimeMonitorYamlFormat yamlStyle, const std::string &amp;filter=&quot;&quot;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>setReportFormatParameter</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>ad910f8d28eaeb7e201e2f60227a7ffc0</anchor>
      <arglist>(ParameterList &amp;plist)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>setYamlFormatParameter</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>ae84b8e89ac596fd2e630d1c2bed94354</anchor>
      <arglist>(ParameterList &amp;plist)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>setSetOpParameter</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a4502535dd89d05cc6706c662b4ec4761</anchor>
      <arglist>(ParameterList &amp;plist)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>setReportParameters</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a40700dc48de620f8d115803e5a84a5fb</anchor>
      <arglist>(const RCP&lt; ParameterList &gt; &amp;params)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>setParams_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>af9a1277415ab8d1c08f7febffa56798a</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TimeMonitor</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>aec1384035981470b89a178e88eef2b45</anchor>
      <arglist>(Time &amp;timer, bool reset=false)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~TimeMonitor</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a7a29650002be6d034583fa09e0838bea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ETimeMonitorReportFormat</type>
      <name>reportFormat_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a601f0e8a56c48ebbb9de4bdb25637ace</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ETimeMonitorYamlFormat</type>
      <name>yamlStyle_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>abd67a2ca867e0069a1d4785fef12f940</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static ECounterSetOp</type>
      <name>setOp_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>aaba2573a6cd6e062772f7216a13713d9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>alwaysWriteLocal_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>add079ab676fdde865ef6c508088ca8a0</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>writeGlobalStats_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a9e48739bbd60aa368c1b9fdc9849f3a2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static bool</type>
      <name>writeZeroTimers_</name>
      <anchorfile>classTeuchos_1_1TimeMonitor.html</anchorfile>
      <anchor>a7ed7a15ad3fd05e9577eea0a9606bde6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommandLineProcessor::TimeMonitorSurrogate</name>
    <filename>classTeuchos_1_1CommandLineProcessor_1_1TimeMonitorSurrogate.html</filename>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TimeMonitorSurrogate</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor_1_1TimeMonitorSurrogate.html</anchorfile>
      <anchor>a4051dd0486eb186f2414b4f210d7aa1c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>summarize</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor_1_1TimeMonitorSurrogate.html</anchorfile>
      <anchor>aa83f43cc3af33f0ee7add7572253d06f</anchor>
      <arglist>(std::ostream &amp;out=std::cout)=0</arglist>
    </member>
    <docanchor file="classTeuchos_1_1CommandLineProcessor_1_1TimeMonitorSurrogate" title="Summary">Teuchos_TimeMonitorSurrogate_Summary</docanchor>
    <docanchor file="classTeuchos_1_1CommandLineProcessor_1_1TimeMonitorSurrogate" title="Note to Teuchos developers">Teuchos_TimeMonitorSurrogate_Note</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::TimeMonitorSurrogateImpl</name>
    <filename>classTeuchos_1_1TimeMonitorSurrogateImpl.html</filename>
    <base>Teuchos::CommandLineProcessor::TimeMonitorSurrogate</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual void</type>
      <name>summarize</name>
      <anchorfile>classTeuchos_1_1TimeMonitorSurrogateImpl.html</anchorfile>
      <anchor>a6bfa77aa611fe7517619b38f904d0834</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TimeMonitorSurrogateImplInserter</name>
    <filename>classTeuchos_1_1TimeMonitorSurrogateImplInserter.html</filename>
    <member kind="function">
      <type></type>
      <name>TimeMonitorSurrogateImplInserter</name>
      <anchorfile>classTeuchos_1_1TimeMonitorSurrogateImplInserter.html</anchorfile>
      <anchor>a39f13681415878e56a3c9d493d7389ab</anchor>
      <arglist>()</arglist>
    </member>
    <docanchor file="classTeuchos_1_1TimeMonitorSurrogateImplInserter" title="Summary">Teuchos_TimeMonitorSurrogateImplInserter_Summary</docanchor>
    <docanchor file="classTeuchos_1_1TimeMonitorSurrogateImplInserter" title="Note to Teuchos developers">Teuchos_TimeMonitorSurrogateImplInserter_Note</docanchor>
  </compound>
  <compound kind="class">
    <name>Teuchos::TooManyDependeesException</name>
    <filename>classTeuchos_1_1TooManyDependeesException.html</filename>
    <member kind="function">
      <type></type>
      <name>TooManyDependeesException</name>
      <anchorfile>classTeuchos_1_1TooManyDependeesException.html</anchorfile>
      <anchor>aea8109a6f839650dce909dcb8c3bce29</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits</name>
    <filename>classTeuchos_1_1ToStringTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits.html</anchorfile>
      <anchor>af8e6bad02d842affca7efdfe06b47753</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; bool &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01bool_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01bool_01_4.html</anchorfile>
      <anchor>ac7da6360950bc293d22fc4349f732586</anchor>
      <arglist>(const bool &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; double &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01double_01_4.html</anchorfile>
      <anchor>a0c4becdd53041f6ec2f978344fc29973</anchor>
      <arglist>(const double &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; ERCPStrength &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01ERCPStrength_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01ERCPStrength_01_4.html</anchorfile>
      <anchor>abe65cd75846568e205ed2056ec902f85</anchor>
      <arglist>(const ERCPStrength &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; float &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01float_01_4.html</anchorfile>
      <anchor>afc2ff7be434bfa50e40ef0bcb428d8d7</anchor>
      <arglist>(const float &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; std::pair&lt; T1, T2 &gt; &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01std_1_1pair_3_01T1_00_01T2_01_4_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01std_1_1pair_3_01T1_00_01T2_01_4_01_4.html</anchorfile>
      <anchor>a89ce68ab4e80efd471de1b1d8c035c1a</anchor>
      <arglist>(const std::pair&lt; T1, T2 &gt; &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ToStringTraits&lt; std::string &gt;</name>
    <filename>classTeuchos_1_1ToStringTraits_3_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1ToStringTraits_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>addb44dadbad4eed62a146629a252b581</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Transformer</name>
    <filename>classTransformer.html</filename>
    <member kind="function">
      <type></type>
      <name>Transformer</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>a7d56456dadf3aa0bc60f59e7e7eda7a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformRaw</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>a250d02711241e75c8f7a9f93a692c8e4</anchor>
      <arglist>(const int size, double a[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformVector</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>a951866b37868bdb4f63a04e914688b68</anchor>
      <arglist>(const int size, double a[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformValarray</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>af5827f0712a315e6aa26fc82f1bf3e8f</anchor>
      <arglist>(const int size, double a[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>transformWorkspace</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>af512413980ee5a8752570ee7df158af6</anchor>
      <arglist>(const int size, double a[])</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>transform</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>a2be2f293eea66ab9cd5902c31bb222e2</anchor>
      <arglist>(const int size, double a[], double b[])</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::WorkspaceStore *</type>
      <name>wss_</name>
      <anchorfile>classTransformer.html</anchorfile>
      <anchor>a1297165deeb7a2cc8eeb2fcfef2a41d5</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TreeBuildingXMLHandler</name>
    <filename>classTeuchos_1_1TreeBuildingXMLHandler.html</filename>
    <member kind="function">
      <type></type>
      <name>TreeBuildingXMLHandler</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>ae2f098bb0842eca73e572df084908fcd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const XMLObject &amp;</type>
      <name>getObject</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>a4d97a3266ad37ea7caf667f5a628b715</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>characters</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>a14c21cb2dceb9cd3743d7bace6bbd3ad</anchor>
      <arglist>(const std::string &amp;chars)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>endElement</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>ae8647593f2cccff9e7793ad30d91c930</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>startElement</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>aca1a1e62377db7cf800feba62a616c4b</anchor>
      <arglist>(const std::string &amp;tag, const Map &amp;attributes)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; std::string, std::string &gt;</type>
      <name>Map</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>af5eb7193105d7c2e78d3a361016ea985</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XMLObject</type>
      <name>root_</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>ad38200d682205649b013fe308bc82816</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>XMLObject</type>
      <name>current_</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>a3b3077f814cd841cbd268d1eb5585629</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::stack&lt; XMLObject &gt;</type>
      <name>path_</name>
      <anchorfile>classTeuchos_1_1TreeBuildingXMLHandler.html</anchorfile>
      <anchor>a9286603a02f6dd6ac7989dfe3b46ba87</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Tuple</name>
    <filename>classTeuchos_1_1Tuple.html</filename>
    <templarg>T</templarg>
    <templarg>N</templarg>
    <base>Teuchos::ArrayView</base>
    <member kind="function">
      <type></type>
      <name>Tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a164b1cab7fa4c2d96e1620f409cdfbef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a86d01867ea57c5e55e73a2f761e8173d</anchor>
      <arglist>(const Tuple&lt; T, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, N &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a30e92f7f10442e47ccb280b9aad325d8</anchor>
      <arglist>(const Tuple&lt; T, N &gt; &amp;t)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T</type>
      <name>array_</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a1944a3805f9335d452869e845dcc70ab</anchor>
      <arglist>[N]</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 1 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>ac6cabf0a14b0184c5aba0eeeb0f52152</anchor>
      <arglist>(const T &amp;a)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 2 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a3b6e6a4a91809d238a02ebe0f4ee647f</anchor>
      <arglist>(const T &amp;a, const T &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 3 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a34162c8e320b93dd37256d489ce001bd</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 4 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a875ee93dbad94f9a00ddc437bd198a51</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 5 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a4d3c5e4180778aa6e3c7bafbc788a860</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 6 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a96dcca7291cd00cca9fb67168b50ae60</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 7 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>adfe2ac6a039e11dcfcb569c9479f666f</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 8 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a92c2811aa8ac8a9e5012b7093050ca9a</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 9 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>ada378509b0f6fb6ea4c22a4d991c81e8</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 10 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>ab12c2983a4dc9a927798aadba3ec8c26</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 11 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>ae93cfac4ee93a79141e522a016e354b9</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j, const T &amp;k)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 12 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a951013a4365047d5a9bb545579af3a65</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j, const T &amp;k, const T &amp;l)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 13 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a64302d3f3d03e0c47c8d96f9bb0e2dff</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j, const T &amp;k, const T &amp;l, const T &amp;m)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 14 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>afbe4053f51fdc169216af55282c290f3</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j, const T &amp;k, const T &amp;l, const T &amp;m, const T &amp;n)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; T, 15 &gt;</type>
      <name>tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a210306ba10f6f23b5b90fe894b85d7b7</anchor>
      <arglist>(const T &amp;a, const T &amp;b, const T &amp;c, const T &amp;d, const T &amp;e, const T &amp;f, const T &amp;g, const T &amp;h, const T &amp;i, const T &amp;j, const T &amp;k, const T &amp;l, const T &amp;m, const T &amp;n, const T &amp;o)</arglist>
    </member>
    <docanchor file="classTeuchos_1_1Tuple" title="Design Discussion">Teuchos_Tuple_DesignDiscussion_sec</docanchor>
  </compound>
  <compound kind="class">
    <name>Tuple&lt; int, numFieldTypes &gt;</name>
    <filename>classTeuchos_1_1Tuple.html</filename>
    <base>ArrayView&lt; int &gt;</base>
    <member kind="function">
      <type></type>
      <name>Tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a164b1cab7fa4c2d96e1620f409cdfbef</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>Tuple</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a86d01867ea57c5e55e73a2f761e8173d</anchor>
      <arglist>(const Tuple&lt; int, N &gt; &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>Tuple&lt; int, N &gt; &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a30e92f7f10442e47ccb280b9aad325d8</anchor>
      <arglist>(const Tuple&lt; int, N &gt; &amp;t)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>array_</name>
      <anchorfile>classTeuchos_1_1Tuple.html</anchorfile>
      <anchor>a1944a3805f9335d452869e845dcc70ab</anchor>
      <arglist>[N]</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArray</name>
    <filename>classTeuchos_1_1TwoDArray.html</filename>
    <templarg>T</templarg>
    <member kind="typedef">
      <type>Ordinal</type>
      <name>size_type</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>aea537b6274230fa8e2ebfa2719d23eb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>TwoDArray</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a43bba2ef6c457d939edcb860b9b73299</anchor>
      <arglist>(size_type numRows, size_type numCols, Array&lt; T &gt; data)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>_numRows</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a4cb12b0ccc2bbc19d46b3a940dda8c16</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_type</type>
      <name>_numCols</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a39453e3d583b9e85eecc7e52cde9788f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; T &gt;</type>
      <name>_data</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a22778db286a8b1a25ef0f7d2a1a27a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_symmetrical</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a7c9f8432c59874a371c7b3b32aff19c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTwoDArrayTypeNameTraitsFormat</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a4fde68d15b60d6bebef8cd80c9b2737c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDArray</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>afa13302b71f95a8887e2e942bcd40726</anchor>
      <arglist>(size_type numRows, size_type numCols, T value=T())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDArray</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a9d71b6c9892b51f0bd64f13b162662bb</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~TwoDArray</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a4ed52a8d0cc9e904d8b57b980661e619</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>afc34e6b1def3f2729dd05c26093fc96f</anchor>
      <arglist>(size_type i)</arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; T &gt;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a6f2dfe4b09f2e9cb9f36662341c2cea3</anchor>
      <arglist>(size_type i) const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>getNumRows</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a6a186ed14502e4f2212567b86458f1a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_type</type>
      <name>getNumCols</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>add80b372e7c2a36cd464b47eb7bd03ae</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Array&lt; T &gt; &amp;</type>
      <name>getDataArray</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a917e8cc58a5d4c690bec63bbb9d4db76</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a3b981469fb183efb02ecf9b786050099</anchor>
      <arglist>(size_type i, size_type j)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a260a1d1629a51b932b0f52aa4162c0bd</anchor>
      <arglist>(size_type i, size_type j) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>clear</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a42082ecd56c6fecac3a5c86e855344e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>ae78fb0107a2c4f934e724fa7e862e202</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isSymmetrical</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a6f09ecf3e416cbfdfea397065b108ea1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setSymmetrical</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>ad7c8dc25d754aa8ba8f322a24357ac3b</anchor>
      <arglist>(bool symmetrical)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeRows</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a0b60e00261cedb6a671a3510a5bc6826</anchor>
      <arglist>(size_type numberOfRows)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>resizeCols</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a3e39889250b3c7cfeb457d2ae718a0c9</anchor>
      <arglist>(size_type numberOfCols)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getMetaSeperator</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>ad8e3bddb0b5205d75700d6c745e98e94</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDimensionsDelimiter</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>a0e739371c7932eac5647420512424821</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>af1d06ec49a1f6786dc5cd25690b9f881</anchor>
      <arglist>(const TwoDArray&lt; T &gt; array)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TwoDArray&lt; T &gt;</type>
      <name>fromString</name>
      <anchorfile>classTeuchos_1_1TwoDArray.html</anchorfile>
      <anchor>aa4096fd3293381afe2755c21dea6cbb0</anchor>
      <arglist>(const std::string &amp;string)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayFileNameValidator</name>
    <filename>classTeuchos_1_1TwoDArrayFileNameValidator.html</filename>
    <base>TwoDArrayValidator&lt; FileNameValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayFileNameValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayFileNameValidator.html</anchorfile>
      <anchor>a97c1e841f5681429d9195536d871a3a0</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayModifierDependency</name>
    <filename>classTeuchos_1_1TwoDArrayModifierDependency.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ArrayModifierDependency</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayModifierDependency</name>
      <anchorfile>classTeuchos_1_1TwoDArrayModifierDependency.html</anchorfile>
      <anchor>ae7bf4be938bf8ffcde8b663c6c312484</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDArrayModifierDependency</name>
      <anchorfile>classTeuchos_1_1TwoDArrayModifierDependency.html</anchorfile>
      <anchor>a99d43f0a4e6955565dd935d08f885071</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>validateDep</name>
      <anchorfile>classTeuchos_1_1TwoDArrayModifierDependency.html</anchorfile>
      <anchor>a0c2ed44ad829a1da12e986215b1681b1</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayNumberValidator</name>
    <filename>classTeuchos_1_1TwoDArrayNumberValidator.html</filename>
    <templarg></templarg>
    <base>TwoDArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayNumberValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayNumberValidator.html</anchorfile>
      <anchor>a64110e087e657e04482e3b4a9e0a8931</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayStringValidator</name>
    <filename>classTeuchos_1_1TwoDArrayStringValidator.html</filename>
    <base>TwoDArrayValidator&lt; StringValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayStringValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayStringValidator.html</anchorfile>
      <anchor>afa153c8bca5e06720ccad757ee285b4a</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; prototypeValidator)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayValidator</name>
    <filename>classTeuchos_1_1TwoDArrayValidator.html</filename>
    <templarg>ValidatorType</templarg>
    <templarg>EntryType</templarg>
    <base>Teuchos::AbstractArrayValidator</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a3352ef0ac078e112400d02e352e04ec6</anchor>
      <arglist>(RCP&lt; const ValidatorType &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a683efb004c6874b4926ce834a95afb6f</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a99de9b6a86a24876a707392887265ec8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>abf5d2a95d88cf98155a0b675d7870f45</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoDArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</name>
    <filename>classTeuchos_1_1TwoDArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; EnhancedNumberValidator&lt; T &gt;, T &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a3352ef0ac078e112400d02e352e04ec6</anchor>
      <arglist>(RCP&lt; const EnhancedNumberValidator&lt; T &gt; &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a683efb004c6874b4926ce834a95afb6f</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a99de9b6a86a24876a707392887265ec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>abf5d2a95d88cf98155a0b675d7870f45</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoDArrayValidator&lt; FileNameValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1TwoDArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; FileNameValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a3352ef0ac078e112400d02e352e04ec6</anchor>
      <arglist>(RCP&lt; const FileNameValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a683efb004c6874b4926ce834a95afb6f</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a99de9b6a86a24876a707392887265ec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>abf5d2a95d88cf98155a0b675d7870f45</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>TwoDArrayValidator&lt; StringValidator, std::string &gt;</name>
    <filename>classTeuchos_1_1TwoDArrayValidator.html</filename>
    <base>AbstractArrayValidator&lt; StringValidator, std::string &gt;</base>
    <member kind="function">
      <type></type>
      <name>TwoDArrayValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a3352ef0ac078e112400d02e352e04ec6</anchor>
      <arglist>(RCP&lt; const StringValidator &gt; prototypeValidator)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a683efb004c6874b4926ce834a95afb6f</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>a99de9b6a86a24876a707392887265ec8</anchor>
      <arglist>() const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidator.html</anchorfile>
      <anchor>abf5d2a95d88cf98155a0b675d7870f45</anchor>
      <arglist>(std::string const &amp;docString, std::ostream &amp;out) const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDArrayValidatorXMLConverter</name>
    <filename>classTeuchos_1_1TwoDArrayValidatorXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::AbstractArrayValidatorXMLConverter</base>
    <member kind="function" protection="private" virtualness="virtual">
      <type>virtual RCP&lt; AbstractArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</type>
      <name>getConcreteValidator</name>
      <anchorfile>classTeuchos_1_1TwoDArrayValidatorXMLConverter.html</anchorfile>
      <anchor>af4c4b9a0d344de47c264e4284b02c6fa</anchor>
      <arglist>(RCP&lt; ValidatorType &gt; prototypeValidator) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDColDependency</name>
    <filename>classTeuchos_1_1TwoDColDependency.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::TwoDArrayModifierDependency</base>
    <member kind="function">
      <type></type>
      <name>TwoDColDependency</name>
      <anchorfile>classTeuchos_1_1TwoDColDependency.html</anchorfile>
      <anchor>a0cd16fc1cf7aa6f04b77146a15436aea</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDColDependency</name>
      <anchorfile>classTeuchos_1_1TwoDColDependency.html</anchorfile>
      <anchor>a2e0cb06814b5d77e442c202d57dd7317</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1TwoDColDependency.html</anchorfile>
      <anchor>a7a17f7319ec56ca9bc90c922a67d6307</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>modifyArray</name>
      <anchorfile>classTeuchos_1_1TwoDColDependency.html</anchorfile>
      <anchor>a6d234f245a0c9eb57389183a6187a27b</anchor>
      <arglist>(DependeeType newAmount, RCP&lt; ParameterEntry &gt; dependentToModify)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBadDependentValueErrorMessage</name>
      <anchorfile>classTeuchos_1_1TwoDColDependency.html</anchorfile>
      <anchor>a30da80844df7a3315316189b67520db7</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDColDependencyXMLConverter</name>
    <filename>classTeuchos_1_1TwoDColDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ArrayModifierDependencyXMLConverter</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual RCP&lt; ArrayModifierDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getConcreteDependency</name>
      <anchorfile>classTeuchos_1_1TwoDColDependencyXMLConverter.html</anchorfile>
      <anchor>a87fa90357587bb463cff7c2359f719b0</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; function) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDRowDependency</name>
    <filename>classTeuchos_1_1TwoDRowDependency.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::TwoDArrayModifierDependency</base>
    <member kind="function">
      <type></type>
      <name>TwoDRowDependency</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependency.html</anchorfile>
      <anchor>aad51af1e95616a271abc620f1232c63d</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TwoDRowDependency</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependency.html</anchorfile>
      <anchor>aaeec21c79fead9f7d08ceb1fd199af80</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; func=null)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getTypeAttributeValue</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependency.html</anchorfile>
      <anchor>a4f32cfef8703b8b7f982780b20c578d6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>modifyArray</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependency.html</anchorfile>
      <anchor>a023c063097e5af33039ce8323f3ea422</anchor>
      <arglist>(DependeeType newAmount, RCP&lt; ParameterEntry &gt; dependentToModify)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>std::string</type>
      <name>getBadDependentValueErrorMessage</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependency.html</anchorfile>
      <anchor>ac61d8165aae6791c1f62c68c65c34a90</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TwoDRowDependencyXMLConverter</name>
    <filename>classTeuchos_1_1TwoDRowDependencyXMLConverter.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::ArrayModifierDependencyXMLConverter</base>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual RCP&lt; ArrayModifierDependency&lt; DependeeType, DependentType &gt; &gt;</type>
      <name>getConcreteDependency</name>
      <anchorfile>classTeuchos_1_1TwoDRowDependencyXMLConverter.html</anchorfile>
      <anchor>a3db574b68ad24679d481d4363b03aaf7</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, Dependency::ParameterEntryList dependents, RCP&lt; const SimpleFunctionObject&lt; DependeeType &gt; &gt; function) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits</name>
    <filename>classTeuchos_1_1TypeNameTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits.html</anchorfile>
      <anchor>acd376f70f0fd37929269c42db3a0b641</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits.html</anchorfile>
      <anchor>a8511f0456c05a21ed85ced9c53eed969</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; Array&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01Array_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01Array_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a4049f2363844e23b5c014532a8623fe4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01Array_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a0c11294601e5ca4571bbd66370558132</anchor>
      <arglist>(const Array&lt; T &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; Opaque3_handle &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01Opaque3__handle_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01Opaque3__handle_01_4.html</anchorfile>
      <anchor>a66331681c041c8573ff1e45175399797</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01Opaque3__handle_01_4.html</anchorfile>
      <anchor>a513897fd3eeee5da2ab8a21137f6d248</anchor>
      <arglist>(Opaque3_handle)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; ParameterList &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01ParameterList_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01ParameterList_01_4.html</anchorfile>
      <anchor>a93a9324cf54e56ca6f87f1c229a9d7b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01ParameterList_01_4.html</anchorfile>
      <anchor>a88e3eb453c93d0be464fb90356274f95</anchor>
      <arglist>(const ParameterList &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; std::string &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>ac1d2ccfb00326db25e60517bb234b2b7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01std_1_1string_01_4.html</anchorfile>
      <anchor>a63982e57d462ea731e13ca7ac97c1c67</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; T * &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01T_01_5_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>T *</type>
      <name>T_ptr</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>a2930708c2fc18e726c60ab8172c4af9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>a0734b39070b90766b0907da5313bb61f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01T_01_5_01_4.html</anchorfile>
      <anchor>a8639456a3d4d2bfbd094a65d152c7365</anchor>
      <arglist>(T_ptr)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; TwoDArray&lt; T &gt; &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01TwoDArray_3_01T_01_4_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01TwoDArray_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a90375c6599c680faed52f2053287c0e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01TwoDArray_3_01T_01_4_01_4.html</anchorfile>
      <anchor>a7d91d212afe287a7c5c5dfca091ebe32</anchor>
      <arglist>(const TwoDArray&lt; T &gt; &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; UndefinedType2 &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01UndefinedType2_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01UndefinedType2_01_4.html</anchorfile>
      <anchor>adfe6659f6ec1b6a2191d972cd1974b23</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01UndefinedType2_01_4.html</anchorfile>
      <anchor>af979a9248687c2ead352624791558ad1</anchor>
      <arglist>(const UndefinedType2 &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; void * &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01void_01_5_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01void_01_5_01_4.html</anchorfile>
      <anchor>aa7ed29e44d3b4e58829812ee74b28072</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01void_01_5_01_4.html</anchorfile>
      <anchor>a9b4d788d821021d8b41e170b24af5916</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::TypeNameTraits&lt; void &gt;</name>
    <filename>classTeuchos_1_1TypeNameTraits_3_01void_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>name</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01void_01_4.html</anchorfile>
      <anchor>aa6805662d452cb0e415c9c2f61c731ab</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>concreteName</name>
      <anchorfile>classTeuchos_1_1TypeNameTraits_3_01void_01_4.html</anchorfile>
      <anchor>a2d9aac4cef101e4728634291e6eae0f4</anchor>
      <arglist>(const std::string &amp;)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::ConstTypeTraits::UnConst</name>
    <filename>structTeuchos_1_1ConstTypeTraits_1_1UnConst.html</filename>
    <templarg>U</templarg>
    <member kind="typedef">
      <type>U</type>
      <name>Result</name>
      <anchorfile>structTeuchos_1_1ConstTypeTraits_1_1UnConst.html</anchorfile>
      <anchor>ab17be4832745e1c734bd375abcc676a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::ConstTypeTraits::UnConst&lt; const U &gt;</name>
    <filename>structTeuchos_1_1ConstTypeTraits_1_1UnConst_3_01const_01U_01_4.html</filename>
    <templarg></templarg>
    <member kind="typedef">
      <type>U</type>
      <name>Result</name>
      <anchorfile>structTeuchos_1_1ConstTypeTraits_1_1UnConst_3_01const_01U_01_4.html</anchorfile>
      <anchor>af81876a940700649ccdfb45fa06ba23c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::UNDEFINED_PARAMETERENTRY_VALIDATOR</name>
    <filename>classTeuchos_1_1UNDEFINED__PARAMETERENTRY__VALIDATOR.html</filename>
    <base>Teuchos::ParameterEntryValidator</base>
    <member kind="function">
      <type>void</type>
      <name>printDoc</name>
      <anchorfile>classTeuchos_1_1UNDEFINED__PARAMETERENTRY__VALIDATOR.html</anchorfile>
      <anchor>ad8d2bffec7b0f5d7651d78958e355a75</anchor>
      <arglist>(const std::string &amp;docString, std::ostream &amp;out) const </arglist>
    </member>
    <member kind="function">
      <type>ValidStringsList</type>
      <name>validStringValues</name>
      <anchorfile>classTeuchos_1_1UNDEFINED__PARAMETERENTRY__VALIDATOR.html</anchorfile>
      <anchor>ade38b09edee27ac3d60fc269cacd77bf</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>validate</name>
      <anchorfile>classTeuchos_1_1UNDEFINED__PARAMETERENTRY__VALIDATOR.html</anchorfile>
      <anchor>aa01da58620636d42dc6cce0fec421428</anchor>
      <arglist>(ParameterEntry const &amp;entry, std::string const &amp;paramName, std::string const &amp;sublistName) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>getXMLTypeName</name>
      <anchorfile>classTeuchos_1_1UNDEFINED__PARAMETERENTRY__VALIDATOR.html</anchorfile>
      <anchor>a372dcaaa34ab7ff0a65906ed6532ad76</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::UndefinedEnhancedNumberTraits</name>
    <filename>structTeuchos_1_1UndefinedEnhancedNumberTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>notDefined</name>
      <anchorfile>structTeuchos_1_1UndefinedEnhancedNumberTraits.html</anchorfile>
      <anchor>a6d44916f1c2780d8afe7865c0c17303a</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::UndefinedLAPACKRoutine</name>
    <filename>structTeuchos_1_1UndefinedLAPACKRoutine.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>notDefined</name>
      <anchorfile>structTeuchos_1_1UndefinedLAPACKRoutine.html</anchorfile>
      <anchor>ae15b957577ba3ff5b3f2bcc06e63e451</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::UndefinedOrdinalTraits</name>
    <filename>structTeuchos_1_1UndefinedOrdinalTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>notDefined</name>
      <anchorfile>structTeuchos_1_1UndefinedOrdinalTraits.html</anchorfile>
      <anchor>a4be92de5ba93107ef3c2a20e3fe7b282</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::UndefinedScalarTraits</name>
    <filename>structTeuchos_1_1UndefinedScalarTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>notDefined</name>
      <anchorfile>structTeuchos_1_1UndefinedScalarTraits.html</anchorfile>
      <anchor>a87a7c71623e5787c50617149fe84542c</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::UndefinedSerializationTraits</name>
    <filename>structTeuchos_1_1UndefinedSerializationTraits.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static T</type>
      <name>notDefined</name>
      <anchorfile>structTeuchos_1_1UndefinedSerializationTraits.html</anchorfile>
      <anchor>a408ae352b10f899aa091c7a5a15b3253</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UndefinedType</name>
    <filename>structUndefinedType.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>val_</name>
      <anchorfile>structUndefinedType.html</anchorfile>
      <anchor>a906cb10aab180837cf94bbb8a2a27927</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>UndefinedType2</name>
    <filename>structUndefinedType2.html</filename>
    <member kind="variable">
      <type>int</type>
      <name>val_</name>
      <anchorfile>structUndefinedType2.html</anchorfile>
      <anchor>ae1bb836c0c98b262a1753397b3c09edb</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::UnitTestBase</name>
    <filename>classTeuchos_1_1UnitTestBase.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type></type>
      <name>UnitTestBase</name>
      <anchorfile>classTeuchos_1_1UnitTestBase.html</anchorfile>
      <anchor>a14ec9f1678d0abef33371c16d613c42f</anchor>
      <arglist>(const std::string groupName, std::string testName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>runUnitTest</name>
      <anchorfile>classTeuchos_1_1UnitTestBase.html</anchorfile>
      <anchor>a04ee319f57958ced094710ffe6c0068f</anchor>
      <arglist>(FancyOStream &amp;out) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual std::string</type>
      <name>unitTestFile</name>
      <anchorfile>classTeuchos_1_1UnitTestBase.html</anchorfile>
      <anchor>a0d665267cc716c812167e067f4d6aa7c</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual long int</type>
      <name>unitTestFileLineNumber</name>
      <anchorfile>classTeuchos_1_1UnitTestBase.html</anchorfile>
      <anchor>a25a7bbf8d3d984b52520b48e81eb1ac8</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="pure">
      <type>virtual void</type>
      <name>runUnitTestImpl</name>
      <anchorfile>classTeuchos_1_1UnitTestBase.html</anchorfile>
      <anchor>ac39c2fdbaafab5430bbdc6f8155e57f5</anchor>
      <arglist>(FancyOStream &amp;out, bool &amp;success) const  =0</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::UnitTestData</name>
    <filename>structTeuchos_1_1UnitTestData.html</filename>
    <member kind="function">
      <type></type>
      <name>UnitTestData</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>acf9f4dea4fbc6203f204432ecb1ce9de</anchor>
      <arglist>(Teuchos::UnitTestBase *unitTest_in, const std::string groupName_in, const std::string testName_in)</arglist>
    </member>
    <member kind="variable">
      <type>const Teuchos::UnitTestBase *</type>
      <name>unitTest</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>a8031322c08d527e9d6de559cc8ca7cc4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>groupName</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>aabbee541974b40b0df9edaa35dd9b420</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>testName</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>ad2980788d1c6771feae806e5c01a19dc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>insertionIndex</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>acbfd61425f5a43da7a5348c921c95887</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>UnitTestData</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>ab285e4bd41080d13f6c1b6b8be4f6a91</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static int</type>
      <name>insersionIndexCounter_</name>
      <anchorfile>structTeuchos_1_1UnitTestData.html</anchorfile>
      <anchor>ab13f0a37e8d1a817fa981c61db8e0d11</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::UnitTestRepository</name>
    <filename>classTeuchos_1_1UnitTestRepository.html</filename>
    <class kind="class">Teuchos::UnitTestRepository::InstanceData</class>
    <member kind="function" static="yes">
      <type>static CommandLineProcessor &amp;</type>
      <name>getCLP</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a8589167a21007bee9eb5a68840b64f8a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setGloballyReduceTestResult</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>aff1e538d7223fb6cfd171a7bd1cf34ca</anchor>
      <arglist>(const bool globallyReduceUnitTestResult)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>getGloballyReduceTestResult</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a4a41fa6dcd7c10060bb2897092a5c4dd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>runUnitTests</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a3d699e18cb15a6dd75a3036c7e1fe88a</anchor>
      <arglist>(FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>runUnitTestsFromMain</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a89015fd754cbf360ccb32d0c7e14d937</anchor>
      <arglist>(int argc, char *argv[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addUnitTest</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a944aeaadebb868af790db879544b8003</anchor>
      <arglist>(UnitTestBase *unitTest, const std::string groupName, const std::string testName)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>verboseUnitTests</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a36b8c3315b5c7d9ae389315ac2a4cb5d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>UnitTestRepository</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a73befe97b0d2a3cac42f0598ec59c8c5</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>setUpCLP</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a1d7354a0a7af49a5e7960708c5ee7b07</anchor>
      <arglist>(const Ptr&lt; CommandLineProcessor &gt; &amp;clp)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static InstanceData &amp;</type>
      <name>getData</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>a42d814620d88613eba00ee29cfd4ad68</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>runUnitTestImpl</name>
      <anchorfile>classTeuchos_1_1UnitTestRepository.html</anchorfile>
      <anchor>aef8295075f448cefe29ad75ee0e0f7cb</anchor>
      <arglist>(const UnitTestBase &amp;unitTest, FancyOStream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::CommandLineProcessor::UnrecognizedOption</name>
    <filename>classTeuchos_1_1CommandLineProcessor_1_1UnrecognizedOption.html</filename>
    <base>Teuchos::CommandLineProcessor::ParseError</base>
    <member kind="function">
      <type></type>
      <name>UnrecognizedOption</name>
      <anchorfile>classTeuchos_1_1CommandLineProcessor_1_1UnrecognizedOption.html</anchorfile>
      <anchor>a23c3e201e7f4e6e48c3ffb0e100b2ff6</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Utils</name>
    <filename>classTeuchos_1_1Utils.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>aboutBuild</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a2d367d3e798fca5a8fe6e28dadb525d7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>chop</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>ab6133e74d0d0f88823e1ec0d6d4c6b50</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>getChopVal</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a700cb2550e065988c8c48834929d08f7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setChopVal</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a0beaa642969f0865be13c3c7136358cf</anchor>
      <arglist>(double chopVal)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>isWhiteSpace</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>adb7caff16afee67f481a3edd0fbde1b7</anchor>
      <arglist>(const char c)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>trimWhiteSpace</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a96e887a7f80b5f202852681fb8452739</anchor>
      <arglist>(const std::string &amp;str)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a1b9a8d47e518926a6efaf513d3917538</anchor>
      <arglist>(const double &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>af833659ff38c14dd0714570b749dc7b9</anchor>
      <arglist>(const int &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>aae39702cf0114056282b7fc82ee04f03</anchor>
      <arglist>(const unsigned int &amp;x)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>pi</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>acd6b138bd4413699b75e0af7778e1d84</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>getParallelExtension</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>ab469130e32ca2e8b20c7684cfc419f85</anchor>
      <arglist>(int procRank=-1, int numProcs=-1)</arglist>
    </member>
    <member kind="variable" protection="private" static="yes">
      <type>static double</type>
      <name>chopVal_</name>
      <anchorfile>classTeuchos_1_1Utils.html</anchorfile>
      <anchor>a4e0ca54e47b6494226b0e6ffb5585996</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatorDependency</name>
    <filename>classTeuchos_1_1ValidatorDependency.html</filename>
    <base>Teuchos::Dependency</base>
    <member kind="function">
      <type></type>
      <name>ValidatorDependency</name>
      <anchorfile>classTeuchos_1_1ValidatorDependency.html</anchorfile>
      <anchor>a805e3321438a12e07ef716e3ccd82b0f</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatorDependency</name>
      <anchorfile>classTeuchos_1_1ValidatorDependency.html</anchorfile>
      <anchor>af1fdb507b0fe61101cd8f59e91363ac9</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, ParameterEntryList dependents)</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1ValidatorDependency.html</anchorfile>
      <anchor>a29707c1659155e8227d8209d85c34f8b</anchor>
      <arglist>()=0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatorDependencyXMLConverter</name>
    <filename>classTeuchos_1_1ValidatorDependencyXMLConverter.html</filename>
    <base>Teuchos::DependencyXMLConverter</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1ValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a1b3693831a0f4bfd1255e92d19969951</anchor>
      <arglist>(RCP&lt; const ValidatorDependency &gt; dependency, XMLObject &amp;xmlObj, ValidatortoIDMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; ValidatorDependency &gt;</type>
      <name>convertSpecialValidatorAttributes</name>
      <anchorfile>classTeuchos_1_1ValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ab460422bca29fe665ab592c1185196e3</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; const ParameterEntry &gt; dependee, const Dependency::ParameterEntryList dependents, const IDtoValidatorMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Dependency &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>a1b04e8ab57a6dc242e0de00b0cfd6fe2</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertDependency</name>
      <anchorfile>classTeuchos_1_1ValidatorDependencyXMLConverter.html</anchorfile>
      <anchor>ae926f0b4f65e5201b429a634db151718</anchor>
      <arglist>(const RCP&lt; const Dependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatorFactory</name>
    <filename>classTeuchos_1_1ValidatorFactory.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>ValidatorType</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Int</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43af644da78bc0bde81be3031106f0f10e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Short</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43ad195e0ca705d6a20eb1f3a765144c070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Double</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a361d0607157fc2965c3929c13cb67d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Float</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a2ee1b13e96cd0af89fa03b055255cde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileName</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a596881ac5a58272c304725dcd9e03b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IntArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a02c83c0b9547dc2cffaa499ccd23d737</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShortArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a9910650feca50d74f46c4f35ccd08a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoubleArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a6f63e319a29db528d57698dd1ac7d690</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FloatArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43ad0c5068a6606877c66832f386f5ee9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileNameArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a19825d9364965123f8b8f1f7715c3964</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Int</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43af644da78bc0bde81be3031106f0f10e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Short</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43ad195e0ca705d6a20eb1f3a765144c070</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Double</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a361d0607157fc2965c3929c13cb67d09</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Float</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a2ee1b13e96cd0af89fa03b055255cde4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileName</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a596881ac5a58272c304725dcd9e03b42</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>IntArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a02c83c0b9547dc2cffaa499ccd23d737</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>ShortArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a9910650feca50d74f46c4f35ccd08a0a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>DoubleArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a6f63e319a29db528d57698dd1ac7d690</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FloatArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43ad0c5068a6606877c66832f386f5ee9a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FileNameArray</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a245906e6cde8761c3c1e45d5f5b69f43a19825d9364965123f8b8f1f7715c3964</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ParameterEntryValidator &gt;</type>
      <name>createValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a78eccf4c630d15c55e12cb5c691dee67</anchor>
      <arglist>(ValidatorType valiType)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; EnhancedNumberValidator&lt; int &gt; &gt;</type>
      <name>getIntValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>ac778892322cd960dfa3fa64db05eb22b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; EnhancedNumberValidator&lt; short &gt; &gt;</type>
      <name>getShortValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>aefaea318c728d79825a3a5fed6672711</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>getDoubleValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a6fce74bcc40a0fd59db54c6ad32e69cf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; EnhancedNumberValidator&lt; float &gt; &gt;</type>
      <name>getFloatValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>ac07bd8083d7f92fadaefad3edc9e3a66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; FileNameValidator &gt;</type>
      <name>getFileNameValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a633c5c61131663a8d52c4fde3c3e8241</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayNumberValidator&lt; int &gt; &gt;</type>
      <name>getArrayIntValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>aff2b33b54a3cdd4e85c83352c96d9f89</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayNumberValidator&lt; short &gt; &gt;</type>
      <name>getArrayShortValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a16c8b446a41c36cf2920cd87e2e403e6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayNumberValidator&lt; double &gt; &gt;</type>
      <name>getArrayDoubleValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a5d54b8bf914923089b4f17b16107d58c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayNumberValidator&lt; float &gt; &gt;</type>
      <name>getArrayFloatValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>a334c3a28bc3d0f102132c6c12b9b9164</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ArrayFileNameValidator &gt;</type>
      <name>getArrayFileNameValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorFactory.html</anchorfile>
      <anchor>acb1df934df43c99de5bf63ae3deecd75</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatortoIDMap</name>
    <filename>classTeuchos_1_1ValidatortoIDMap.html</filename>
    <member kind="typedef">
      <type>std::map&lt; RCP&lt; const ParameterEntryValidator &gt;, int, RCPComp &gt;</type>
      <name>ValidatorMap</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a76fd4d3dad46350dbe7ddc858cf8e6e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::pair&lt; RCP&lt; const ParameterEntryValidator &gt;, int &gt;</type>
      <name>ValidatorIDPair</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a06a730afb12fb7433f395cc685a91660</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValidatorMap::iterator</type>
      <name>iterator</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>ad9b07e5ba2676f4f77a755922039023a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValidatorMap::const_iterator</type>
      <name>const_iterator</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a84aab9ad4b572e9bdec4be0a9e5055b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValidatortoIDMap</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a686f8e019a7ed15d889001a12b0f5c5e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>insert</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a5356125e36d59bd60f30d92b285b518b</anchor>
      <arglist>(RCP&lt; const ParameterEntryValidator &gt; toInsert)</arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>find</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a8d0905d7f0e26b6cc55b5272549a1fd8</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator) const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>begin</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>aec866a49071fa3a397cad958cfc9aeee</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const_iterator</type>
      <name>end</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a38d827bf23c2864d278c62cb784bbc30</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>ValidatorMap</type>
      <name>validatorMap</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>a96a13463e9416f2b0f683d1e5700f9c9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>counter</name>
      <anchorfile>classTeuchos_1_1ValidatortoIDMap.html</anchorfile>
      <anchor>ac0e2ad7911016690f61ea6399ea07f43</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatorXMLConverter</name>
    <filename>classTeuchos_1_1ValidatorXMLConverter.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function">
      <type>RCP&lt; ParameterEntryValidator &gt;</type>
      <name>fromXMLtoValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>a8885bfecf11a014ba835d0c77925e023</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>ade19c79d385ae75f059b2af68dcf23e1</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const IDtoValidatorMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>fromValidatortoXML</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>ae7ac0d230f24958501036abcb2c80600</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, const ValidatortoIDMap &amp;validatorIDsMap, bool assignedID=true) const </arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>ae55ae0bcba8c9c77c309e84003055292</anchor>
      <arglist>(const RCP&lt; const ParameterEntryValidator &gt; validator, XMLObject &amp;xmlObj, const ValidatortoIDMap &amp;validatorIDsMap) const  =0</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getIdAttributeName</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>aef3678a86efe229dcaa6a5f7c65ed1c6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getPrototypeIdAttributeName</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>a2894385533e78ff7410d68e72914620a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getTypeAttributeName</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>a0ae6210ae92f6d14b7471c089b308e66</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValidatorTagName</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverter.html</anchorfile>
      <anchor>a6a7e7be22e63f3b181f7a65de647621b</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValidatorXMLConverterDB</name>
    <filename>classTeuchos_1_1ValidatorXMLConverterDB.html</filename>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>addConverter</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a19ee64d70b60c672c1102d48a57bb841</anchor>
      <arglist>(RCP&lt; const ParameterEntryValidator &gt; validator, RCP&lt; ValidatorXMLConverter &gt; converterToAdd)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ValidatorXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>aa9a58d231423eac6743c6ddf46a56e26</anchor>
      <arglist>(const ParameterEntryValidator &amp;validator)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; const ValidatorXMLConverter &gt;</type>
      <name>getConverter</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a3c9f4da363a97b0aa3dae3677ce84acf</anchor>
      <arglist>(const XMLObject &amp;xmlObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static XMLObject</type>
      <name>convertValidator</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a235e730044b8012bd5d2865f4293906e</anchor>
      <arglist>(RCP&lt; const ParameterEntryValidator &gt; validator, const ValidatortoIDMap &amp;validatorIDsMap, bool assignedID=true)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; ParameterEntryValidator &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>ae57296dfc472e59cbc0e2c715fb2c67a</anchor>
      <arglist>(const XMLObject &amp;xmlObject, const IDtoValidatorMap &amp;validatorIDsMap)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>printKnownConverters</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a9adaa0343873a1da2c9a0ea2fbd82c15</anchor>
      <arglist>(std::ostream &amp;out)</arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::map&lt; std::string, RCP&lt; ValidatorXMLConverter &gt; &gt;</type>
      <name>ConverterMap</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a5bac34d27df87621aa6464542f170ac0</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>std::pair&lt; std::string, RCP&lt; ValidatorXMLConverter &gt; &gt;</type>
      <name>ConverterPair</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>a0235f9420493bc3e6d8149252b5dffde</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static ConverterMap &amp;</type>
      <name>getConverterMap</name>
      <anchorfile>classTeuchos_1_1ValidatorXMLConverterDB.html</anchorfile>
      <anchor>ace889f0075df7a34bed0ac59cd1f7644</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValuesTagMissingException</name>
    <filename>classTeuchos_1_1ValuesTagMissingException.html</filename>
    <member kind="function">
      <type></type>
      <name>ValuesTagMissingException</name>
      <anchorfile>classTeuchos_1_1ValuesTagMissingException.html</anchorfile>
      <anchor>ae4e72238b01227b42a749549bed19871</anchor>
      <arglist>(const std::string &amp;what_arg)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>Teuchos::ValueTolerance</name>
    <filename>structTeuchos_1_1ValueTolerance.html</filename>
    <member kind="function">
      <type></type>
      <name>ValueTolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>ad9cfde782a93cf36a4e98a6d4ffb8194</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a5bccb0c0ab7fdfe237952a1b15c4393a</anchor>
      <arglist>(double val, double tol)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>ae16d88600008581accab0220404fb586</anchor>
      <arglist>(double val, double low, double up)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a9d5971f3972b5e72a46c582bfebb4462</anchor>
      <arglist>(std::string str)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>aa8994fba602eea13ba43455c34a1f714</anchor>
      <arglist>(ValueTolerance &amp;rhs)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>as_string</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a159dbbedf38cb495adef0e8149223126</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>from_string</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a15dae634a9e59a8e66c3224134762043</anchor>
      <arglist>(const std::string &amp;valtol_str)</arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>value</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>abf95506431ca05c7daf0f03ee8b8b03b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>lower</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a2d7885dba7811bf9fd91aaf349b93410</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>upper</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a95c1a9f96f73853fbe8c702953cec31d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>double</type>
      <name>tolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>a9c744ca4a1fd782ed74ca5759556d07a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>bool</type>
      <name>use_tolerance</name>
      <anchorfile>structTeuchos_1_1ValueTolerance.html</anchorfile>
      <anchor>ad3e2c8616d8c856e8585d7c58450e152</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static TypeTo</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits.html</anchorfile>
      <anchor>a28579aa3a24365a9dbc0fb4c0d49bc4e</anchor>
      <arglist>(const TypeFrom t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static TypeTo</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits.html</anchorfile>
      <anchor>a011d85192ee683577894c0277cf6fd3a</anchor>
      <arglist>(const TypeFrom t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; double, long double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01long_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01long_01double_01_4.html</anchorfile>
      <anchor>ac846381492a3e3190b1aa63b10066112</anchor>
      <arglist>(const long double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01long_01double_01_4.html</anchorfile>
      <anchor>a9b4a2739638192a1de0428301ae779b5</anchor>
      <arglist>(const long double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; double, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>aca3c228d2f1a76ca290b7263b132d335</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static double</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01double_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a987b0978141b665f510ea4c2db804540</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; float, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01double_01_4.html</anchorfile>
      <anchor>a8693ba979e42eb4c357bf5e9de471135</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01double_01_4.html</anchorfile>
      <anchor>ad28c89458d87e209dc89a087d9f2943c</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; float, long double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01long_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01long_01double_01_4.html</anchorfile>
      <anchor>a7cae2ac35506902aca67c9e40c61b1aa</anchor>
      <arglist>(const long double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01long_01double_01_4.html</anchorfile>
      <anchor>abd32291cd9c1d777d13d88bd11855388</anchor>
      <arglist>(const long double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; float, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a6706b2115a5d6ec743fbd17c58e71265</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static float</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01float_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a50e8272f9ef4e8288c1d46ed0cd2234d</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>aacf1b8f25c08068b17deee10290cad2e</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01double_01_4.html</anchorfile>
      <anchor>afa0ec1ba65f1102bbe9776cd37e0156f</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>a259941224bdccc777a21956e892a7f1e</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01float_01_4.html</anchorfile>
      <anchor>addf8dadaebb75560d9daaa9c0c25817c</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01long_01_4.html</anchorfile>
      <anchor>a7d4a7371d174ea964e17769a77958221</anchor>
      <arglist>(const long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01long_01_4.html</anchorfile>
      <anchor>aa31d51028dc41bb2e1c0b240e7259a2d</anchor>
      <arglist>(const long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a1ac8ffd16a7932c275f0ad2f11433bd1</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a1cc6df87f1c035a957d16c0adfc54cf6</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static long</type>
      <name>safeConvertToLong</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a73dd613a24da18f6332a0f018765ec73</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, unsigned int &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a1ff7383f29e3058ce0134e5f7b30b321</anchor>
      <arglist>(const unsigned int t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a47da9bb111a539fa66bcc118203fda93</anchor>
      <arglist>(const unsigned int t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; int, unsigned long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a67db93f1b420cee72535dc4549d61859</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01int_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>ad8509da59b4833f3153b0ede478a1a44</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long double, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_01double_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long double</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_01double_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>adbe6d67d77e0e4dc47505e405f621f1d</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long double</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_01double_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a4e408de9d87be2900f55400a39251953</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01double_01_4.html</anchorfile>
      <anchor>aa265abea7daf0aff27a09f1b7c68ba29</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01double_01_4.html</anchorfile>
      <anchor>abdef5bfd28cd36f6a7f08e00f1267a7f</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01float_01_4.html</anchorfile>
      <anchor>ad9518b0c2c6ddb75cf6ae5b8fa207cff</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01float_01_4.html</anchorfile>
      <anchor>a703d5da0c709537fd9a4c68cfe297719</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a888909c4c4ffa006ea1052d72d66deaa</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a4290d9f8c50562d86d195fbbb888f445</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long, unsigned int &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a2a87b2e1e720f2544aec0d968c7e2289</anchor>
      <arglist>(const unsigned int t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01int_01_4.html</anchorfile>
      <anchor>a2ac3623de61e6ae5ada7ee9b520f0cdb</anchor>
      <arglist>(const unsigned int t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; long, unsigned long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a13c3b28a46dde8c5e243b55b28e7e259</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01long_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a610697b4762c0b5b8c54306e5b68ee7e</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; OutType, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01OutType_00_01std_1_1string_01_4.html</filename>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static OutType</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01OutType_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a106d14fc2ff006e1260dd9dd5d8b3449</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static OutType</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01OutType_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a80a81e6af0bebbbc2131a14ee574a022</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01double_01_4.html</anchorfile>
      <anchor>a989d83bb8477be7c3c64c163d9fb0750</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01double_01_4.html</anchorfile>
      <anchor>ac137119f3fff414cd0c3362cadecfa4a</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01float_01_4.html</anchorfile>
      <anchor>a3961449cc469d0e80f7323e7a29d5d1e</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01float_01_4.html</anchorfile>
      <anchor>a21380a93173dc0a9914153ae377641ba</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, int &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01int_01_4.html</anchorfile>
      <anchor>a8c17664196af9d9014127c1d1dd0280f</anchor>
      <arglist>(const int t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01int_01_4.html</anchorfile>
      <anchor>a983d65b9efeed70805b0957d345e1f5e</anchor>
      <arglist>(const int t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01long_01_4.html</anchorfile>
      <anchor>aa6103cfddb6f1db8984c4354f90b605f</anchor>
      <arglist>(const long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01long_01_4.html</anchorfile>
      <anchor>a0498a7b6965a39bc298f2bef0a14de12</anchor>
      <arglist>(const long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>ab35dc89d5f8b4614a46f3a3d2205a382</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>abaf6bd05691d9be2eb2a1e9b040c5116</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static long</type>
      <name>safeConvertToLong</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a9cc9363a7779721eadd2990315ef11d2</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; short, unsigned short &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01unsigned_01short_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01unsigned_01short_01_4.html</anchorfile>
      <anchor>a19ca5ddd02b17aaa42c63b38659413e6</anchor>
      <arglist>(const unsigned short t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01short_00_01unsigned_01short_01_4.html</anchorfile>
      <anchor>ac0da65aeee2ad75b860b3b4a9c661078</anchor>
      <arglist>(const unsigned short t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; std::pair&lt; Packet, Packet &gt;, ConvertToPacket &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_00_01ConvertToPacket_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_00_01ConvertToPacket_01_4.html</anchorfile>
      <anchor>af48cc1abb5c9973632c6c416ea324fe6</anchor>
      <arglist>(const ConvertToPacket t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; Packet, Packet &gt;</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1pair_3_01Packet_00_01Packet_01_4_00_01ConvertToPacket_01_4.html</anchorfile>
      <anchor>a036b0580017d5e72c410ab2d43cd679a</anchor>
      <arglist>(const ConvertToPacket t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; std::string, char[N]&gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1string_00_01char[N]_4.html</filename>
    <templarg>N</templarg>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1string_00_01char[N]_4.html</anchorfile>
      <anchor>ae1ffdf475e75de9d68def50d3b63c7b1</anchor>
      <arglist>(const char t[])</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::string</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01std_1_1string_00_01char[N]_4.html</anchorfile>
      <anchor>a87753db2610f80051ea5a984f3791758</anchor>
      <arglist>(const char t[])</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01double_01_4.html</anchorfile>
      <anchor>a56383afde451d851d176296dc03033df</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01double_01_4.html</anchorfile>
      <anchor>aaa1792c53c8ab5df6a0b2a9a2dfbab83</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01float_01_4.html</anchorfile>
      <anchor>acaabfb477e593d747a7a2cef659dacb4</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01float_01_4.html</anchorfile>
      <anchor>a8ea6bfe26bcdf2a1be293289aa1eef09</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, int &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01int_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01int_01_4.html</anchorfile>
      <anchor>adb19f025c832d805f87e30d87deee263</anchor>
      <arglist>(const int t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01int_01_4.html</anchorfile>
      <anchor>a61dfe83b032da2651266a1905a9d2c05</anchor>
      <arglist>(const int t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01long_01_4.html</anchorfile>
      <anchor>a81935cda59ab9b321b9327cbe4a7972a</anchor>
      <arglist>(const long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01long_01_4.html</anchorfile>
      <anchor>a8f5598be4deaaf48939f7e28099564db</anchor>
      <arglist>(const long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>ab73af1a9e4c985ec110fee5d91bbde71</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a9afdf68c94a5182dfd14907f1b97db7b</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static unsigned long</type>
      <name>safeConvertToUnsignedLong</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a18345067a61d11fb358cd3b7aa0c43fb</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned int, unsigned long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01unsigned_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a780051f0e366de713ffd9fb44faba03e</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned int</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01int_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>acefd2992ba3c8c1eca383307465e608a</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned long, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01double_01_4.html</anchorfile>
      <anchor>a2c576fee99118a25739286fc2b5961b7</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01double_01_4.html</anchorfile>
      <anchor>a4ee0c0693ac89cfb9b039cd655421fc4</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned long, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01float_01_4.html</anchorfile>
      <anchor>ad9628dfad00e71e90f6bca9a2e49977a</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01float_01_4.html</anchorfile>
      <anchor>a0f2cf4d3bc99706f0bf324465e28d2ef</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned long, long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01long_01_4.html</anchorfile>
      <anchor>ad99c4681e536d90c131b345c72a71ed5</anchor>
      <arglist>(const long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01long_01_4.html</anchorfile>
      <anchor>a9aad2bcc94bd3ec876a104d5e1a43530</anchor>
      <arglist>(const long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned long, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a4b556cf573d2317b74b052c321660128</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned long</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01long_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a26d2b36c67c4b061009a28ad521ec123</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned short, double &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01double_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01double_01_4.html</anchorfile>
      <anchor>a0bbbdc5ba28d4707e529ddbea7b988cb</anchor>
      <arglist>(const double t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01double_01_4.html</anchorfile>
      <anchor>a93cb5c6dcb3cebf17e135a47bc64039d</anchor>
      <arglist>(const double t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned short, float &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01float_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01float_01_4.html</anchorfile>
      <anchor>a0d476338995ca19ecdbd4f26b838ecf5</anchor>
      <arglist>(const float t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01float_01_4.html</anchorfile>
      <anchor>a1948623fbf16758a6e462cdf6e345b05</anchor>
      <arglist>(const float t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned short, short &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01short_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01short_01_4.html</anchorfile>
      <anchor>a3b77fee38c1a3500cf7649f52b76c96c</anchor>
      <arglist>(const short t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01short_01_4.html</anchorfile>
      <anchor>abf28b18b1df5ef07574eb21be9b51d67</anchor>
      <arglist>(const short t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned short, std::string &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01std_1_1string_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a5c2e3b823ea3b72f914c004d403df5f6</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a58bbbedfcb3a755a8fc437b7124919b2</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static unsigned long</type>
      <name>safeConvertToUnsignedLong</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01std_1_1string_01_4.html</anchorfile>
      <anchor>a330d6bf5e5aaf2aab68ec243f4872f57</anchor>
      <arglist>(const std::string &amp;t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeConversionTraits&lt; unsigned short, unsigned long &gt;</name>
    <filename>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01unsigned_01long_01_4.html</filename>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>convert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a45a55a8f5f90314dc133cfa053d80324</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static unsigned short</type>
      <name>safeConvert</name>
      <anchorfile>classTeuchos_1_1ValueTypeConversionTraits_3_01unsigned_01short_00_01unsigned_01long_01_4.html</anchorfile>
      <anchor>a81b48aeb43d9d0ba5d9253f4e708dd08</anchor>
      <arglist>(const unsigned long t)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeDeserializationBuffer</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</base>
    <member kind="typedef">
      <type>ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer.html</anchorfile>
      <anchor>a2af5e52e5bb9965fc47aee57aaf1210f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer.html</anchorfile>
      <anchor>a983f73227949b5c88f7d330f39a06838</anchor>
      <arglist>(const Ordinal bytes, char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialief4df5d16f81745301bbc8b645eba3b8.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeDeserializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</base>
    <member kind="typedef">
      <type>DefaultSerializer&lt; Ordinal, T &gt;</type>
      <name>DS</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialief4df5d16f81745301bbc8b645eba3b8.html</anchorfile>
      <anchor>a3e5118e2b99984804c6bab9f93e787c1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DS::DefaultSerializerType</type>
      <name>Serializer</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialief4df5d16f81745301bbc8b645eba3b8.html</anchorfile>
      <anchor>afb231cbb4b69c39a7b40ea530211274f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialief4df5d16f81745301bbc8b645eba3b8.html</anchorfile>
      <anchor>af35a7878a416f89ab0f97a797f0d5c06</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTypeDeserializationBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialief4df5d16f81745301bbc8b645eba3b8.html</anchorfile>
      <anchor>ab1cb0897563626d3b2aa93498b882e1f</anchor>
      <arglist>(const Ordinal bytes, char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer=DS::getDefaultSerializerRCP())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeDeserializationBufferImp</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBufferImp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>direct</templarg>
  </compound>
  <compound kind="class">
    <name>ValueTypeDeserializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer &gt;</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a4df47c556ea856c8ca040a220941665b</anchor>
      <arglist>(const Ordinal bytes, char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>aa1996ffae59b0efe4ab6db7f60f288a2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a0111425dfa015905efbaea25b2ffe3a1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>add4610ebd36174b4aa17d15deb78fcf3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>acb729e8f00791729bdfd375a24a77043</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a7ef4ecd502166bb1b4863b46d8e23e4a</anchor>
      <arglist>(const ValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ValueTypeDeserializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ad7e192baa988219db3e430f4e75461b8</anchor>
      <arglist>(const ValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a58451bc961e284c8f38b6c1e0855f123</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a5b2430f5855a6fa7d98477b7acc2400e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>aa99a28ffa6a4c93ad0bc1b58a194553d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; T &gt;</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>af92f77f9ee17e118db5e485f3581c74d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a772cdb3c4cb386977afe57dfb056bfbd</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</name>
    <filename>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a48a01361d2d92546631d08d23d19be36</anchor>
      <arglist>(const Ordinal bytes, char charBuffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a61f48981f749cd74645b050c6cdac9f6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a1edfb278e12a3c07f6fc6e256e541d73</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getCount</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>aa6b663973259ae1fbe3545eb6e30eb77</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ae6f8d04efe08a5cb3c8a08c1bd6c559a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeDeserializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a23f9c7ba8223bab2f07aad7c56cbafda</anchor>
      <arglist>(const ValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ValueTypeDeserializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>ab2ce37eb086d2a1f671f58d74266a59e</anchor>
      <arglist>(const ValueTypeDeserializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>abf7be63fe01f2fbf552cc4f88fc40c5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>aa291458c8ca65356ca153298f34901f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a6601415b926962bf7a09eb560997de50</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>af01f8413ba8c29a9d172afc53a603fe4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeDeserializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a69612478da043b9e22878152ac89abd6</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeReductionOp</name>
    <filename>classTeuchos_1_1ValueTypeReductionOp.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ValueTypeReductionOp.html</anchorfile>
      <anchor>a9f9af34d76b1947e102a6bae6e6b7e7d</anchor>
      <arglist>(const Ordinal count, const T inBuffer[], T inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTypeReductionOp&lt; Ordinal, char &gt;</name>
    <filename>classTeuchos_1_1ValueTypeReductionOp.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ValueTypeReductionOp.html</anchorfile>
      <anchor>a9f9af34d76b1947e102a6bae6e6b7e7d</anchor>
      <arglist>(const Ordinal count, const char inBuffer[], char inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTypeReductionOp&lt; Ordinal, Packet &gt;</name>
    <filename>classTeuchos_1_1ValueTypeReductionOp.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ValueTypeReductionOp.html</anchorfile>
      <anchor>a9f9af34d76b1947e102a6bae6e6b7e7d</anchor>
      <arglist>(const Ordinal count, const Packet inBuffer[], Packet inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; double, int &gt; &gt;</name>
    <filename>classTeuchos_1_1ValueTypeReductionOp.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ValueTypeReductionOp.html</anchorfile>
      <anchor>a9f9af34d76b1947e102a6bae6e6b7e7d</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; double, int &gt; inBuffer[], std::pair&lt; double, int &gt; inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>ValueTypeReductionOp&lt; Ordinal, std::pair&lt; ScalarType, IndexType &gt; &gt;</name>
    <filename>classTeuchos_1_1ValueTypeReductionOp.html</filename>
    <base>Teuchos::Describable</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>reduce</name>
      <anchorfile>classTeuchos_1_1ValueTypeReductionOp.html</anchorfile>
      <anchor>a9f9af34d76b1947e102a6bae6e6b7e7d</anchor>
      <arglist>(const Ordinal count, const std::pair&lt; ScalarType, IndexType &gt; inBuffer[], std::pair&lt; ScalarType, IndexType &gt; inoutBuffer[]) const  =0</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializationBuffer</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBuffer.html</filename>
    <templarg>Ordinal</templarg>
    <templarg>T</templarg>
    <templarg>Serializer</templarg>
    <base>ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</base>
    <member kind="typedef">
      <type>ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer.html</anchorfile>
      <anchor>a573bcb46c59ca205366f9a3794718e8e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer.html</anchorfile>
      <anchor>abedf99942ec5dfcb7820a1c38999ae33</anchor>
      <arglist>(const Ordinal count, T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialize39faddb759e8780700d529c25ae45c8a.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>ValueTypeSerializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</base>
    <member kind="typedef">
      <type>DefaultSerializer&lt; Ordinal, T &gt;</type>
      <name>DS</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialize39faddb759e8780700d529c25ae45c8a.html</anchorfile>
      <anchor>ac5f90c5d41fdeac57532b76ae908d755</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>DS::DefaultSerializerType</type>
      <name>Serializer</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialize39faddb759e8780700d529c25ae45c8a.html</anchorfile>
      <anchor>afa450902df8d92472c98c93e5f6005d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</type>
      <name>Base</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialize39faddb759e8780700d529c25ae45c8a.html</anchorfile>
      <anchor>ab96eca6b99feef790d04aff99ca86473</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ValueTypeSerializationBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBuffer_3_01Ordinal_00_01T_00_01typename_01DefaultSerialize39faddb759e8780700d529c25ae45c8a.html</anchorfile>
      <anchor>abbb4e2ac3fd632c1791b2a0b4327a963</anchor>
      <arglist>(const Ordinal count, T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer=DS::getDefaultSerializerRCP())</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializationBufferImp</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBufferImp.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <templarg>direct</templarg>
  </compound>
  <compound kind="class">
    <name>ValueTypeSerializationBufferImp&lt; Ordinal, T, DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer &gt;</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBufferImp.html</filename>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ac10f372d3bb82710e34dd37975542f28</anchor>
      <arglist>(const Ordinal count, T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ab5fcbe88140ec9857571e69ede660a2b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ad30ccfeca2784d875fa9ceefb9a4277a</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a8b4bd9c907634011ffda185d7554a2ca</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; char &gt;</type>
      <name>getCharBufferView</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>abd8225eb601f5d15bc5a8bdaeed6a51e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a75060eeafce3beeffb12c45004995e29</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>acbbc6f1a36682558b0f484d6206d52f9</anchor>
      <arglist>(const ValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ValueTypeSerializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a7982d3f6091e89b9c0bb69102e2d0475</anchor>
      <arglist>(const ValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a82ba5d460f6608b1ffbaaf67a75e0ec6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a7cce9711967451d1e1b80e588c5cc7cb</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a717cf10cb19612ad7688be0d83810214</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; char &gt;</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>a8bf9cdeb02785403d232c88d42da5038</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01false_01_4.html</anchorfile>
      <anchor>ae75956f529173356f5d636061a675590</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</name>
    <filename>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a116b60fc361a409f8df89aa57652ca1e</anchor>
      <arglist>(const Ordinal count, T buffer[], const RCP&lt; const Serializer &gt; &amp;serializer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a87d2ce19c06d0b05a43932ff794f1fe1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>char *</type>
      <name>getCharBuffer</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a4529302b11bc53dd99cc3b563a33900f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>Ordinal</type>
      <name>getBytes</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>adda002e81bfc146a839f2683276463db</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const ArrayView&lt; char &gt;</type>
      <name>getCharBufferView</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>af4488ebd76edca195d5da4a987a73305</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a347f522670f1754b4980de40327f5852</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>ValueTypeSerializationBufferImp</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a81d2a38d1caf431a1764eb62e155115f</anchor>
      <arglist>(const ValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>ValueTypeSerializationBufferImp &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a0a31c119101e296f8b23217be81a8f98</anchor>
      <arglist>(const ValueTypeSerializationBufferImp &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>count_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a3368a83971fb4e937b351e43c341801f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>T *</type>
      <name>buffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a561fef502d271a2d5c5349ae46fdb536</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Ordinal</type>
      <name>bytes_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a45c1ab247424ca1dccfdbe2b35936948</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>charBuffer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a8379861e97cc61cb1489677ed3ba2d24</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const Serializer &gt;</type>
      <name>serializer_</name>
      <anchorfile>classTeuchos_1_1ValueTypeSerializationBufferImp_3_01Ordinal_00_01T_00_01Serializer_00_01true_01_4.html</anchorfile>
      <anchor>a06b9ee431b07b48acef5eb05572c54ce</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::ValueTypeSerializer</name>
    <filename>classTeuchos_1_1ValueTypeSerializer.html</filename>
    <templarg></templarg>
    <templarg></templarg>
    <base>Teuchos::SerializationTraits</base>
  </compound>
  <compound kind="class">
    <name>Teuchos::VerboseObject</name>
    <filename>classTeuchos_1_1VerboseObject.html</filename>
    <templarg>ObjectType</templarg>
    <base virtualness="virtual">Teuchos::VerboseObjectBase</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeVerboseObject</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a7b0b10864e6051a1908b2a7f74ba129d</anchor>
      <arglist>(const EVerbosityLevel verbLevel=VERB_DEFAULT, const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static EVerbosityLevel &amp;</type>
      <name>privateDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a50f6ba0dc1a1139def7a8ad4f9c5b44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>thisVerbLevel_</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a0e74d95d08d888e0b278a556c8a167e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>thisOverridingVerbLevel_</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a143baee627f0f410f3c5ce58565bde3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; const ParameterList &gt;</type>
      <name>getValidVerboseObjectSublist</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>ad15bb1586d2222716f6ee809f2185fbd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>setupVerboseObjectSublist</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a4b39e9ec6251da9c5298c79b67258adb</anchor>
      <arglist>(ParameterList *paramList)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>readVerboseObjectSublist</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a3b0f4284eeba44cea285b9a819b48a28</anchor>
      <arglist>(ParameterList *paramList, RCP&lt; FancyOStream &gt; *oStream, EVerbosityLevel *verbLevel)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readVerboseObjectSublist</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a814cff71652eb301ec17c600d6fc3e52</anchor>
      <arglist>(ParameterList *paramList, VerboseObject&lt; ObjectType &gt; *verboseObject)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a1bb313e1be24741dc06abbf8a0bb633a</anchor>
      <arglist>(const EVerbosityLevel defaultVerbLevel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EVerbosityLevel</type>
      <name>getDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>ab8898b917014a14f781298c6cdb67989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VerboseObject</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a602f35f9a999bd33fd2ed84683206d08</anchor>
      <arglist>(const EVerbosityLevel verbLevel=VERB_DEFAULT, const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObject &amp;</type>
      <name>setVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a455723a6dcb828e66c277f66ac7a46a4</anchor>
      <arglist>(const EVerbosityLevel verbLevel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObject &amp;</type>
      <name>setOverridingVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a51e6eddb4b0a765ceefc9a4bd5597b58</anchor>
      <arglist>(const EVerbosityLevel verbLevel) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EVerbosityLevel</type>
      <name>getVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a9c89b80432b1924ee4afffe5dc7ca79a</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>VerboseObject&lt; AlgorithmA &gt;</name>
    <filename>classTeuchos_1_1VerboseObject.html</filename>
    <base virtualness="virtual">Teuchos::VerboseObjectBase</base>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeVerboseObject</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a7b0b10864e6051a1908b2a7f74ba129d</anchor>
      <arglist>(const EVerbosityLevel verbLevel=VERB_DEFAULT, const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static EVerbosityLevel &amp;</type>
      <name>privateDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a50f6ba0dc1a1139def7a8ad4f9c5b44a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>thisVerbLevel_</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a0e74d95d08d888e0b278a556c8a167e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>thisOverridingVerbLevel_</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a143baee627f0f410f3c5ce58565bde3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a1bb313e1be24741dc06abbf8a0bb633a</anchor>
      <arglist>(const EVerbosityLevel defaultVerbLevel)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static EVerbosityLevel</type>
      <name>getDefaultVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>ab8898b917014a14f781298c6cdb67989</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VerboseObject</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a602f35f9a999bd33fd2ed84683206d08</anchor>
      <arglist>(const EVerbosityLevel verbLevel=VERB_DEFAULT, const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObject &amp;</type>
      <name>setVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a455723a6dcb828e66c277f66ac7a46a4</anchor>
      <arglist>(const EVerbosityLevel verbLevel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObject &amp;</type>
      <name>setOverridingVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a51e6eddb4b0a765ceefc9a4bd5597b58</anchor>
      <arglist>(const EVerbosityLevel verbLevel) const</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual EVerbosityLevel</type>
      <name>getVerbLevel</name>
      <anchorfile>classTeuchos_1_1VerboseObject.html</anchorfile>
      <anchor>a9c89b80432b1924ee4afffe5dc7ca79a</anchor>
      <arglist>() const</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::VerboseObjectBase</name>
    <filename>classTeuchos_1_1VerboseObjectBase.html</filename>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>initializeVerboseObjectBase</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a3a22f79a661546b0823be36c579aef95</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" protection="protected" virtualness="virtual">
      <type>virtual void</type>
      <name>informUpdatedVerbosityState</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a822a7deac774421c9a4d91d806c8fee2</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static RCP&lt; FancyOStream &gt; &amp;</type>
      <name>privateDefaultOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>ada2d2863eb8e2ae059195a4d64d1b67b</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>thisLinePrefix_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>afbfe6212c5dd71502dd6a26b5dc68ff4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FancyOStream &gt;</type>
      <name>thisOStream_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a80f61b6e1effad91c70adf905d9267ec</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FancyOStream &gt;</type>
      <name>thisOverridingOStream_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>aa4d58d9a1dab649d28453781ba9fd1f9</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setDefaultOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>ab6e12fe0d1462a69179e163433f81844</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;defaultOStream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; FancyOStream &gt;</type>
      <name>getDefaultOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>ab9b501211e8b48b597e5ce3a83e4aaf7</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~VerboseObjectBase</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a34a9d92dcd88fcab74f20c92f4fd7404</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VerboseObjectBase</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a5d4f381b218de7092e3acaa2069fe617</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;oStream=Teuchos::null)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObjectBase &amp;</type>
      <name>setOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a45dd2d9cb60f5a211c7aaf850fed63e1</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;oStream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual const VerboseObjectBase &amp;</type>
      <name>setOverridingOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a4ca35ca91c8b4944dd023a795ed7c524</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;oStream) const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual VerboseObjectBase &amp;</type>
      <name>setLinePrefix</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a9b27655d69dd029b44f492afa8e29499</anchor>
      <arglist>(const std::string &amp;linePrefix)</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; FancyOStream &gt;</type>
      <name>getOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>ade4feddc2032e48c6ffe13be0b5e513d</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual RCP&lt; FancyOStream &gt;</type>
      <name>getOverridingOStream</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>ab6495d3917b8964c747dbacecee5d5a8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual std::string</type>
      <name>getLinePrefix</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a13733154a195a74ead03d51eb97ab726</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual OSTab</type>
      <name>getOSTab</name>
      <anchorfile>classTeuchos_1_1VerboseObjectBase.html</anchorfile>
      <anchor>a88940f49fbd43daf88aa2e95ae71045b</anchor>
      <arglist>(const int tabs=1, const std::string &amp;linePrefix=&quot;&quot;) const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::VerboseObjectTempState</name>
    <filename>classTeuchos_1_1VerboseObjectTempState.html</filename>
    <templarg></templarg>
    <member kind="function">
      <type></type>
      <name>VerboseObjectTempState</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>a35e2d2a10e19b257220386f2258a6a21</anchor>
      <arglist>(const RCP&lt; const VerboseObject&lt; ObjectType &gt; &gt; &amp;verboseObject, const RCP&lt; FancyOStream &gt; &amp;newOStream, const EVerbosityLevel newVerbLevel)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~VerboseObjectTempState</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>aca475077835b424a25e3643de2fbdac4</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VerboseObjectTempState</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>a7b26f4ff119666bd0b5e25600efc1186</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>VerboseObjectTempState</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>a2d87738b5a6fcc39cf29699d3b2fdd9c</anchor>
      <arglist>(const VerboseObjectTempState &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>VerboseObjectTempState &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>ac48c94fc58ea1f95e111c65e2a84ff03</anchor>
      <arglist>(const VerboseObjectTempState &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; const VerboseObject&lt; ObjectType &gt; &gt;</type>
      <name>verboseObject_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>aef0618c7289fe2de600bc05e2eb002f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; FancyOStream &gt;</type>
      <name>oldOStream_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>ae8ad8d18adc5277aa41a7af3fb1bf81c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>EVerbosityLevel</type>
      <name>oldVerbLevel_</name>
      <anchorfile>classTeuchos_1_1VerboseObjectTempState.html</anchorfile>
      <anchor>a7f7cdcdeb73b04746422dfcee6d7e9cf</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::VisualDependency</name>
    <filename>classTeuchos_1_1VisualDependency.html</filename>
    <base>Teuchos::Dependency</base>
    <member kind="function" static="yes">
      <type>static const bool &amp;</type>
      <name>getShowIfDefaultValue</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a8d44724f78387bd8783404aadd0a05ad</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualDependency</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>ade8f7006116f32cd1acaa77be36f5c97</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, RCP&lt; ParameterEntry &gt; dependent, bool showIf=getShowIfDefaultValue())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualDependency</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a6c8bbe2056004bf0939324cef47418d1</anchor>
      <arglist>(RCP&lt; const ParameterEntry &gt; dependee, ParameterEntryList dependents, bool showIf=getShowIfDefaultValue())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualDependency</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>af456743b15cbebb9abfd3b7a74826ed0</anchor>
      <arglist>(ConstParameterEntryList dependees, RCP&lt; ParameterEntry &gt; dependent, bool showIf=getShowIfDefaultValue())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VisualDependency</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a3fba1082f769eae07bd90cab8aa9986b</anchor>
      <arglist>(ConstParameterEntryList dependees, ParameterEntryList dependents, bool showIf=getShowIfDefaultValue())</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual bool</type>
      <name>getDependeeState</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>ab26f4477e9876a4da357ab4e5fb9ca37</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isDependentVisible</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a62dd0da02cb6d9bd28fabf87dae3bd4f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getShowIf</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a2ea983f952ceb0ef4f51b0118f06dec7</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>evaluate</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>af35019c0b8a5946e068588a43bb78980</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>dependentVisible_</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>a1be1efa44cec7eb835765b6f2e799a02</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>showIf_</name>
      <anchorfile>classTeuchos_1_1VisualDependency.html</anchorfile>
      <anchor>adef04cdab4c831a433a4c6c4ce9016a7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::VisualDependencyXMLConverter</name>
    <filename>classTeuchos_1_1VisualDependencyXMLConverter.html</filename>
    <base>Teuchos::DependencyXMLConverter</base>
    <member kind="function" virtualness="pure">
      <type>virtual void</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1VisualDependencyXMLConverter.html</anchorfile>
      <anchor>aa618b1330a7537f4a8becee328533d4c</anchor>
      <arglist>(RCP&lt; const VisualDependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap) const  =0</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; VisualDependency &gt;</type>
      <name>convertSpecialVisualAttributes</name>
      <anchorfile>classTeuchos_1_1VisualDependencyXMLConverter.html</anchorfile>
      <anchor>ad60cf9a6bbb40316d0623c343ac1b49a</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, bool showIf, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap) const  =0</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Dependency &gt;</type>
      <name>convertXML</name>
      <anchorfile>classTeuchos_1_1VisualDependencyXMLConverter.html</anchorfile>
      <anchor>a2b0ce7a47f51e6e89b7f9a4845258b1e</anchor>
      <arglist>(const XMLObject &amp;xmlObj, const Dependency::ConstParameterEntryList dependees, const Dependency::ParameterEntryList dependets, const XMLParameterListReader::EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>convertDependency</name>
      <anchorfile>classTeuchos_1_1VisualDependencyXMLConverter.html</anchorfile>
      <anchor>a1993ea4578fee45824e96b978b8783f7</anchor>
      <arglist>(const RCP&lt; const Dependency &gt; dependency, XMLObject &amp;xmlObj, const XMLParameterListWriter::EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static const std::string &amp;</type>
      <name>getShowIfAttributeName</name>
      <anchorfile>classTeuchos_1_1VisualDependencyXMLConverter.html</anchorfile>
      <anchor>a76f9d574ccd8b5c2d21e2bcced146109</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::Workspace</name>
    <filename>classTeuchos_1_1Workspace.html</filename>
    <templarg>T</templarg>
    <member kind="function">
      <type></type>
      <name>Workspace</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>ab48982f8340882c4318b9d8e69f35149</anchor>
      <arglist>(WorkspaceStore *workspace_store, size_t num_elements, bool call_constructors=true)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~Workspace</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a12aaf29efae4327bd16c0e4fb58331bf</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>size</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>abf12350af6d7c08d8a848073a3342ef8</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a90e56fe470d07a6cafc2ee7dcd3593e3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>const T *</type>
      <name>getRawPtr</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a1323980d6af64c5f323f93ddc8de148f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>af4028e8ed10f3213636e9474418e9802</anchor>
      <arglist>(size_t i)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>operator[]</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>aba61d97ac3aa822e7f5ae5cca451f21a</anchor>
      <arglist>(size_t i) const </arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>ad7627da20986657a999ed2fb3f05aa78</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const T &gt;</type>
      <name>operator()</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a3e876077c3b6d02402f927deb5d7170f</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; T &gt;</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>aa35d05fb07a2cc2b88e0b23d52e6eb00</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>operator ArrayView&lt; const T &gt;</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a7d207e0fdc0c17f6797ae342ffcccb45</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Workspace</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>aea5786b638b0e7156df2630ca81f4de6</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>Workspace</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a629b3dea48608dafb009d82690450e8e</anchor>
      <arglist>(const RawWorkspace &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>Workspace &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a37c5339713e3850f7c98203b990db594</anchor>
      <arglist>(const RawWorkspace &amp;)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void *</type>
      <name>operator new</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a2b49a0115d8ad7b90b1b63eef0cdb78f</anchor>
      <arglist>(size_t)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static void</type>
      <name>operator delete</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>aa9f14685e37952f630ecc3348e6c9985</anchor>
      <arglist>(void *)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RawWorkspace</type>
      <name>raw_workspace_</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a55f74c861c82be7c51a0aac43ca17449</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>call_constructors_</name>
      <anchorfile>classTeuchos_1_1Workspace.html</anchorfile>
      <anchor>a1633f103286028f2a7339d97f8a262db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::WorkspaceStore</name>
    <filename>classTeuchos_1_1WorkspaceStore.html</filename>
    <member kind="function">
      <type></type>
      <name>~WorkspaceStore</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>ad709474a6b0312ba0465a8a941ca73e1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>num_bytes_total</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>af2b5c7432eff717918c1f28d13a0bcac</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>num_bytes_remaining</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a1e060cccbcc63f95f87add8da21a2db3</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_static_allocations</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a1153a3bd9959d777b3ccb13a6aa5de66</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>num_dyn_allocations</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a94826645d6e0252f60610eb4e227937e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>num_current_bytes_total</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a8d61b8a2f197bee23395269761b3f36a</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>size_t</type>
      <name>num_max_bytes_needed</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>ad2fb85074bcdf63a0d5d0cb80ac1d7fc</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="protected">
      <type></type>
      <name>WorkspaceStore</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>aee087a101626055d1d79c3210d3a3c4b</anchor>
      <arglist>(size_t num_bytes)</arglist>
    </member>
    <member kind="function" protection="protected">
      <type>void</type>
      <name>protected_initialize</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a1ae6f8d81fb56ca2c345770d59ebf45d</anchor>
      <arglist>(size_t num_bytes)</arglist>
    </member>
    <member kind="function" protection="private">
      <type></type>
      <name>WorkspaceStore</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a32513b0aee53ca1dc471642d210821b3</anchor>
      <arglist>(const WorkspaceStore &amp;)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>WorkspaceStore &amp;</type>
      <name>operator=</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>ae0a8cab69695143307c6f35f78b2516d</anchor>
      <arglist>(const WorkspaceStore &amp;)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>workspace_begin_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a4394389fe31b9a81737a6b47faa19992</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>workspace_end_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a6cb885751811e942512a5a3433260f0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>char *</type>
      <name>curr_ws_ptr_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a4e6108062b9ac1262a286067b467cd9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_static_allocations_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>ad9532b348246f9c36e6970ea95971d5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>int</type>
      <name>num_dyn_allocations_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>ae890665bdaccb2a509185b29db2e0b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>num_current_bytes_total_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a6a39a3aaf1e033b9c2bbbace1916d61e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>size_t</type>
      <name>num_max_bytes_needed_</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a34e252533c08f6a65d66da9b18c81407</anchor>
      <arglist></arglist>
    </member>
    <member kind="friend">
      <type>friend class</type>
      <name>RawWorkspace</name>
      <anchorfile>classTeuchos_1_1WorkspaceStore.html</anchorfile>
      <anchor>a557c043c371ba0bdc747c45c077d7c88</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::WorkspaceStoreInitializeable</name>
    <filename>classTeuchos_1_1WorkspaceStoreInitializeable.html</filename>
    <base>Teuchos::WorkspaceStore</base>
    <member kind="function">
      <type></type>
      <name>WorkspaceStoreInitializeable</name>
      <anchorfile>classTeuchos_1_1WorkspaceStoreInitializeable.html</anchorfile>
      <anchor>a555cb579f64264f0f31341497d889e57</anchor>
      <arglist>(size_t num_bytes=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>initialize</name>
      <anchorfile>classTeuchos_1_1WorkspaceStoreInitializeable.html</anchorfile>
      <anchor>aeffcfdea2602d3ab780321870a1a4cf6</anchor>
      <arglist>(size_t num_bytes)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::MatrixMarket::Raw::Writer</name>
    <filename>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Writer.html</filename>
    <templarg>ScalarType</templarg>
    <templarg>OrdinalType</templarg>
    <member kind="function">
      <type>void</type>
      <name>writeFile</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Writer.html</anchorfile>
      <anchor>abfce350ee64e967b2952aafe15db097c</anchor>
      <arglist>(const std::string &amp;filename, const ArrayView&lt; const OrdinalType &gt; &amp;rowptr, const ArrayView&lt; const OrdinalType &gt; &amp;colind, const ArrayView&lt; const ScalarType &gt; &amp;values, const OrdinalType numRows, const OrdinalType numCols)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>write</name>
      <anchorfile>classTeuchos_1_1MatrixMarket_1_1Raw_1_1Writer.html</anchorfile>
      <anchor>a92ce9056d1164c1b78b8b8205393ebe0</anchor>
      <arglist>(std::ostream &amp;out, const ArrayView&lt; const OrdinalType &gt; &amp;rowptr, const ArrayView&lt; const OrdinalType &gt; &amp;colind, const ArrayView&lt; const ScalarType &gt; &amp;values, const OrdinalType numRows, const OrdinalType numCols)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLInputSource</name>
    <filename>classTeuchos_1_1XMLInputSource.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLInputSource</name>
      <anchorfile>classTeuchos_1_1XMLInputSource.html</anchorfile>
      <anchor>a4deac6c29bac9060104ba11e52a38223</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XMLInputSource</name>
      <anchorfile>classTeuchos_1_1XMLInputSource.html</anchorfile>
      <anchor>a3e4c56eaa15d02e2eb5f0df4341e78e2</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual RCP&lt; XMLInputStream &gt;</type>
      <name>stream</name>
      <anchorfile>classTeuchos_1_1XMLInputSource.html</anchorfile>
      <anchor>aa9395e711f4664aafc66fa6ab31f4cc3</anchor>
      <arglist>() const  =0</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>getObject</name>
      <anchorfile>classTeuchos_1_1XMLInputSource.html</anchorfile>
      <anchor>ab9133d9241822d33a571ccc2e44b1827</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLInputStream</name>
    <filename>classTeuchos_1_1XMLInputStream.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLInputStream</name>
      <anchorfile>classTeuchos_1_1XMLInputStream.html</anchorfile>
      <anchor>a9655b5f8812218ce665e43ffd49e8b3f</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual</type>
      <name>~XMLInputStream</name>
      <anchorfile>classTeuchos_1_1XMLInputStream.html</anchorfile>
      <anchor>a045479069d659e02e95340db79a51550</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" virtualness="pure">
      <type>virtual unsigned int</type>
      <name>readBytes</name>
      <anchorfile>classTeuchos_1_1XMLInputStream.html</anchorfile>
      <anchor>aefbaf20f9e5a41b4e5007cd531d9a457</anchor>
      <arglist>(unsigned char *const toFill, const unsigned int maxToRead)=0</arglist>
    </member>
    <member kind="function" virtualness="virtual">
      <type>virtual unsigned int</type>
      <name>curPos</name>
      <anchorfile>classTeuchos_1_1XMLInputStream.html</anchorfile>
      <anchor>a581ee1efef82d39ea87bb6cc438c4a93</anchor>
      <arglist>() const </arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLObject</name>
    <filename>classTeuchos_1_1XMLObject.html</filename>
    <member kind="function">
      <type>void</type>
      <name>appendContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a1c88f577d54b497bd2f3278cf6f44a7d</anchor>
      <arglist>(const size_t &amp;i, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a249cc12d01c26896168cc7d048b80f72</anchor>
      <arglist>(const size_t &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a7e0492bae0f05488668b3a50910ad376</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a591312a75f8d4a7a2baedf88a60a0e71</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a5bb700e55e81b74dc65141b7d847a190</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT bool</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a232a068fda206785b14276048ec649c3</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT int</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a38125d453741c96ba3d2fd4ae287a700</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT double</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a232d972ab2c7c4a2f1356d8ece29ccc3</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="variable" protection="protected">
      <type>RCP&lt; XMLObjectImplem &gt;</type>
      <name>ptr_</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a142f458d6cb0418c75b6c368f446bfd8</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>af1f72e01ad9b7dc64ab664c4b5d69a02</anchor>
      <arglist>(std::ostream &amp;os, const XMLObject &amp;xml)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ae9efd55fcc7989cd93c4370ed33ceee5</anchor>
      <arglist>(const XMLObject &amp;xml)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLObject</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ace236f0ade4a186be72431078716a10c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLObject</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a00be4b6f2bf7dee0a80e3e48e8b8efd2</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLObject</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a2bcdaf6dfad5a041ddab4b7ff17d80ef</anchor>
      <arglist>(XMLObjectImplem *ptr)</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>deepCopy</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a038a862493a7a87e7c626d155101f0c1</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a70aea87d417303052c5887de093fc2c9</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a0cc06d00f77280254916a40d637dac23</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a305e448a4fdb75153827b9a283b0d5e4</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>aa9250fb465fa75c5457c0fb9682f44fd</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>getRequiredDouble</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>af510141c988444dcb9da504d89ae517d</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>getRequiredInt</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a405c54d1b3dae29d9eaba25756bed100</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getRequired</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a4170544a0d9cfa8eea7c7d6135724de5</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getRequiredBool</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ac10c377ef6ca85f0e72a91489d51b21d</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>getWithDefault</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>af14218a12b4150d3f51ce9ff33d6bfe8</anchor>
      <arglist>(const std::string &amp;name, const T &amp;defaultValue) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numChildren</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a3ae2d9213200bdec5e869f0ba0f1ef9b</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const XMLObject &amp;</type>
      <name>getChild</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a1903fee07f2d9aeaaa98c2040350b2c1</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>findFirstChild</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ac16e647d47efdeb73c4596f5e450067c</anchor>
      <arglist>(std::string tagName) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numContentLines</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a605bc82d3411080b8bb1e3c319907ab6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ad4bc1b0323d4b61653e9c6401160ab65</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a4f5b59796d45928805d64e3bac837880</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a618459607fad69888d9d23968795a2c1</anchor>
      <arglist>(std::ostream &amp;os, int indent) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>header</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a3cdede4df8a5c2707a3c44634763eb7e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>terminatedHeader</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a3fdbc5bcf5775c191633f3e034bf637c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>footer</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a0818a67c44e7d774fcd4976ffe42b678</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>isEmpty</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a3dd9ae37104c81137edd9a8a61500426</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>checkTag</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>ae354fa01b13bbe3b8fd56886c479feda</anchor>
      <arglist>(const std::string &amp;expected) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDouble</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a198e221e69e026fb02f6d6ba72568ed7</anchor>
      <arglist>(const std::string &amp;name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInt</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a8f63a1452678a1a3ba5ade0acbf37f38</anchor>
      <arglist>(const std::string &amp;name, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBool</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a0bf8fef4784352ab748c63ffe19749ff</anchor>
      <arglist>(const std::string &amp;name, bool val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a8fd0bc34abda57f74ec1fd7e0580daf1</anchor>
      <arglist>(const std::string &amp;name, T value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a14a87a0b7a6e3bbe798e3119708a6451</anchor>
      <arglist>(const XMLObject &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addContent</name>
      <anchorfile>classTeuchos_1_1XMLObject.html</anchorfile>
      <anchor>a7f26075faef57ed9d6a61b38aa138b0c</anchor>
      <arglist>(const std::string &amp;contentLine)</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLObjectImplem</name>
    <filename>classTeuchos_1_1XMLObjectImplem.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLObjectImplem</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a9eb6b143676922c5b908899ab20a3b88</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type>XMLObjectImplem *</type>
      <name>deepCopy</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a788b360cd1d9e291db525e5b4d3e9902</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a68c8125915b920ad7be21191cfbe3631</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addChild</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ae5ff36973508e387b9bb7fb5c06c126a</anchor>
      <arglist>(const XMLObject &amp;child)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addContent</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a95400e846b8380da7373c230ebc0502c</anchor>
      <arglist>(const std::string &amp;contentLine)</arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getTag</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a1fb138b92d73171e3e60e5489ed61b68</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>af60b1e60363941ad4c9c5e74217c19ca</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getAttribute</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a1a1cf2383fef1e97f9d5b81e7ddaec15</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numChildren</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a9e8e040bd2caea3b5913e2036387fa28</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const XMLObject &amp;</type>
      <name>getChild</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ae2f84205188702fc87ff56b13516a58f</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>numContentLines</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a4db3264050dd5e321db30b87cd5f4af6</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const Map &amp;</type>
      <name>getAttributes</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a881b41db295149954cbf0c55b455745c</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>const std::string &amp;</type>
      <name>getContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>aee441eddf8688d2552a299c4472a90ec</anchor>
      <arglist>(int i) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>aaefb587282e681fca908d071aeb75148</anchor>
      <arglist>(const size_t &amp;i, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>removeContentLine</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a798bc33e8052010ce34b25195cd19015</anchor>
      <arglist>(const size_t &amp;i)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>print</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a4e2cff1682949ddaf1fdde379adf2174</anchor>
      <arglist>(std::ostream &amp;os, int indent) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a81c0458475e6f4a11bddfc18e6a20b3e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>header</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ab351b85c63507649c72fd8c4b3ebf636</anchor>
      <arglist>(bool strictXML=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>terminatedHeader</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a5cd4ae0f7edffd4e5d70dcaf73963a63</anchor>
      <arglist>(bool strictXML=false) const </arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>footer</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a29eadbd6d77d229dbd1726e2d7ae120e</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="typedef" protection="private">
      <type>Teuchos::map&lt; std::string, std::string &gt;</type>
      <name>Map</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a3f1df59ac8f92d8a35b23474ec2f00c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>printContent</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ada50c0c4b196d9892664a170451fffc1</anchor>
      <arglist>(std::ostream &amp;os, int indent) const </arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static std::string</type>
      <name>XMLifyAttVal</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a8e6ac0cacec7902a6a39aee5144ee214</anchor>
      <arglist>(const std::string &amp;attval)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>std::string</type>
      <name>tag_</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ae122c041e49a15be24f5c62e1276785d</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Map</type>
      <name>attributes_</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ab0f29243cd39dc4358064c37ecec3dd9</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; XMLObject &gt;</type>
      <name>children_</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>a597bab1cb7b4faf6187194bad4864a6c</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Array&lt; std::string &gt;</type>
      <name>content_</name>
      <anchorfile>classTeuchos_1_1XMLObjectImplem.html</anchorfile>
      <anchor>ab8908e67ea82be244bfc5ff382d4346b</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLParameterListReader</name>
    <filename>classTeuchos_1_1XMLParameterListReader.html</filename>
    <member kind="function">
      <type>RCP&lt; ParameterList &gt;</type>
      <name>toParameterList</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a2c15cc088ca0735464b931cf20a2afc4</anchor>
      <arglist>(const XMLObject &amp;xml, RCP&lt; DependencySheet &gt; depSheet) const </arglist>
    </member>
    <member kind="function">
      <type>ParameterList</type>
      <name>toParameterList</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a76ed067175e2255597e31d7dc99f854f</anchor>
      <arglist>(const XMLObject &amp;xml) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>setAllowsDuplicateSublists</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a1e66ce02afd86c1cd93dee8aa32010d7</anchor>
      <arglist>(bool policy)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>getAllowsDuplicateSublists</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a71f074acf916f383b5d7e972c4ef45cb</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>convertParameterList</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>af0f6a73f5ea5f3cfe12fecfa505ebd59</anchor>
      <arglist>(const XMLObject &amp;xml, RCP&lt; ParameterList &gt; parentList, EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>convertValidators</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a225abe88a5c231d310ee526af410c150</anchor>
      <arglist>(const XMLObject &amp;xml, IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>convertDependencies</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>a24ef272f25062f47e95cc0895c3eb11b</anchor>
      <arglist>(RCP&lt; DependencySheet &gt; depSheet, const XMLObject &amp;xml, const EntryIDsMap &amp;entryIDsMap, const IDtoValidatorMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>testForDuplicateValidatorIDs</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>ac40a4a3f3acd3608547ad262e3b0bb08</anchor>
      <arglist>(ParameterEntryValidator::ValidatorID potentialNewID, const IDtoValidatorMap &amp;currentMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>insertEntryIntoMap</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>ab8a9f7d9e26c720e6a7ac3d6f6c9181d</anchor>
      <arglist>(const XMLObject &amp;xmlObj, RCP&lt; ParameterEntry &gt; entryToInsert, EntryIDsMap &amp;entryIDsMap) const </arglist>
    </member>
    <member kind="variable" protection="private">
      <type>bool</type>
      <name>_allowDuplicateSublists</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>afd5185140f4f38601d302a6c64f4f990</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; ParameterEntry::ParameterEntryID, RCP&lt; ParameterEntry &gt; &gt;</type>
      <name>EntryIDsMap</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>aababd3eeedfed581c24769fce72eb3d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLParameterListReader</name>
      <anchorfile>classTeuchos_1_1XMLParameterListReader.html</anchorfile>
      <anchor>ae3f594f5dc973f237c2b33a9f5515ba4</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLParameterListWriter</name>
    <filename>classTeuchos_1_1XMLParameterListWriter.html</filename>
    <member kind="function">
      <type>XMLObject</type>
      <name>toXML</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a850a25d68b7d9fed1b67835f875796ff</anchor>
      <arglist>(const ParameterList &amp;p, RCP&lt; const DependencySheet &gt; depSheet=null) const </arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getParameterListTagName</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a6d17826011d3697aea0e918e6929c4fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getNameAttributeName</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>afb6e332e8bdca5aae143d9ffd4593196</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getValidatorsTagName</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>ac1028cbbdbb24e0986765fa151bcbbff</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static const std::string &amp;</type>
      <name>getDependenciesTagName</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>ae92358dacdf45f71dc6d89ea62f9aaea</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>XMLObject</type>
      <name>convertParameterList</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>addb6262b771ce2f812ecc8c283f6c9eb</anchor>
      <arglist>(const ParameterList &amp;p, ParameterEntry::ParameterEntryID &amp;idCounter, EntryIDsMap &amp;entryIDsMap, const ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>XMLObject</type>
      <name>convertValidators</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>aa42fe0a3146ab012a6fc5cb53950603e</anchor>
      <arglist>(const ParameterList &amp;p, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>XMLObject</type>
      <name>convertDependencies</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a6f697c32caa664b9729761dc008e69fc</anchor>
      <arglist>(RCP&lt; const DependencySheet &gt; depSheet, const EntryIDsMap &amp;entryIDsMap, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>buildInitialValidatorMap</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a810ab7010e300ae36fa110c929fb839f</anchor>
      <arglist>(const ParameterList &amp;p, ValidatortoIDMap &amp;validatorIDsMap) const </arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; RCP&lt; const ParameterEntry &gt;, ParameterEntry::ParameterEntryID, RCPConstComp &gt;</type>
      <name>EntryIDsMap</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a0931cae33e3367fb556ea39e93937b4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLParameterListWriter</name>
      <anchorfile>classTeuchos_1_1XMLParameterListWriter.html</anchorfile>
      <anchor>a2579e15fa60ad75169baa40fe9238df7</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLParser</name>
    <filename>classTeuchos_1_1XMLParser.html</filename>
    <member kind="function">
      <type></type>
      <name>XMLParser</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a90fbc963958203cd5af4c08d9955b9cb</anchor>
      <arglist>(RCP&lt; XMLInputStream &gt; is)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>~XMLParser</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a979d5e9c272aa217b1f7fd5e96f83049</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>XMLObject</type>
      <name>parse</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a6b75a48083745da56363aa7bbd1b284c</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getETag</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>ad85406448428765ec25332e7a324b17b</anchor>
      <arglist>(std::string &amp;tag)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getSTag</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>abff6c8e7d4cc3757204096c7a8dd4569</anchor>
      <arglist>(unsigned char lookahead, std::string &amp;tag, Teuchos::map&lt; std::string, string &gt; &amp;attrs, bool &amp;emptytag)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getComment</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>aeb3249c4324d032f2a980b91e5d5810e</anchor>
      <arglist>(long startLine)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>getSpace</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a5ab56b7debe666291fc0677387d802bf</anchor>
      <arglist>(unsigned char &amp;lookahead)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>getReference</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a57047d47781a2b8545e2eee77bc1e91c</anchor>
      <arglist>(std::string &amp;refstr)</arglist>
    </member>
    <member kind="function" protection="private">
      <type>void</type>
      <name>ignoreXMLDeclaration</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a79c5caa302ac2069f11e3a8e6adc5803</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function" protection="private">
      <type>int</type>
      <name>assertChar</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>ad6d84720bf8145cb8b24c9a74fcd783d</anchor>
      <arglist>(unsigned char cexp)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>isLetter</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a3c8d6a2748515fec3ed01f705b1317d0</anchor>
      <arglist>(unsigned char c)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>isNameChar</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a5e16aadd9084e8b4514d9a5dda555899</anchor>
      <arglist>(unsigned char c)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>isChar</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>ada3bce6412e46088ec1f48b1e1e6c7e1</anchor>
      <arglist>(unsigned char c)</arglist>
    </member>
    <member kind="function" protection="private" static="yes">
      <type>static bool</type>
      <name>isSpace</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a5866f7c2615554cb2ab850c9cf92efd9</anchor>
      <arglist>(unsigned char c)</arglist>
    </member>
    <member kind="variable" protection="private">
      <type>RCP&lt; XMLInputStream &gt;</type>
      <name>_is</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>ad64bbbe4b6b32730e6fa9ccc9c593fc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>Teuchos::map&lt; std::string, string &gt;</type>
      <name>_entities</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>af6a0f521c962dfa82e37038849f783c2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable" protection="private">
      <type>long</type>
      <name>_lineNo</name>
      <anchorfile>classTeuchos_1_1XMLParser.html</anchorfile>
      <anchor>a79de77392a7c8caa19b299879507cd01</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="class">
    <name>Teuchos::XMLTestNode</name>
    <filename>classTeuchos_1_1XMLTestNode.html</filename>
    <base>Teuchos::XMLObject</base>
    <member kind="function">
      <type></type>
      <name>XMLTestNode</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>aec736c0a3133376d16d9e90deb44c3f1</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLTestNode</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a9ee0c48e71e44a6246d81248c37969fe</anchor>
      <arglist>(const std::string &amp;tag)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLTestNode</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a6681a78631666f64b5ea05f479712711</anchor>
      <arglist>(XMLObjectImplem *ptr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>XMLTestNode</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a94ecbd6a6765d6d60078d3049d4b0a5e</anchor>
      <arglist>(XMLObject obj)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addDouble</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>ad4323e91719794dbd1705753af6bfb95</anchor>
      <arglist>(const std::string &amp;name, double val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addInt</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a77487c5a653da24ee32a207a4818cdf6</anchor>
      <arglist>(const std::string &amp;name, int val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addBool</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a2f4e3b98851948f4b271eef4995fbc33</anchor>
      <arglist>(const std::string &amp;name, bool val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addValueTolerance</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>aa591d580658c5fadce03b6c0f5dddfb1</anchor>
      <arglist>(const std::string &amp;name, ValueTolerance val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addString</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>ade4502f756e0ef42632782cfdfe504dc</anchor>
      <arglist>(const std::string &amp;name, std::string val)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>addAttribute</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a8e6bb955e2e8f9c69c213cf64c69f159</anchor>
      <arglist>(const std::string &amp;name, T val)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasChild</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a972519795228af1477bfff4d4c9cae31</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>appendContentLine</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a6d8a5ec6b25641c3c7af8a5386ec0f10</anchor>
      <arglist>(const size_t &amp;i, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>XMLTestNode</type>
      <name>getChild</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>ae52f0ed3e79e06c0706eb71e10706a9a</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>XMLTestNode</type>
      <name>getChild</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a80453d63f79c66656f33c73618ef7dd3</anchor>
      <arglist>(const int &amp;i) const </arglist>
    </member>
    <member kind="function">
      <type>const XMLObject *</type>
      <name>xml_object</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a2d12717bfbd0c7216a9ed990dc9de897</anchor>
      <arglist>() const </arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>hasSameElements</name>
      <anchorfile>classTeuchos_1_1XMLTestNode.html</anchorfile>
      <anchor>a0ed7398e7703c9438d9c9a3211f7cd09</anchor>
      <arglist>(XMLTestNode const &amp;lhs) const </arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>A</name>
    <filename>namespaceA.html</filename>
  </compound>
  <compound kind="namespace">
    <name>ArrayConversionsUnitTestHelpers</name>
    <filename>namespaceArrayConversionsUnitTestHelpers.html</filename>
    <member kind="function">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>generateArrayRcp</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a594cfeb9ad7c42761698b1c8964ddb97</anchor>
      <arglist>(const Teuchos_Ordinal n_in)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; RCP&lt; T &gt; &gt;</type>
      <name>generateArrayRcpGen</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>ad4a32c295aeff89133e55c454513dcdd</anchor>
      <arglist>(const Teuchos_Ordinal n_in)</arglist>
    </member>
    <member kind="function">
      <type>T</type>
      <name>testArrayViewInput</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>aa8751d27d721dac7e517de2148b1fcf3</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; const T &gt; &gt; &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>testArrayViewOutput</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a62c6b8010774fdd52f79bdb8db8d75e8</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; T &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="variable">
      <type>Teuchos_Ordinal</type>
      <name>n</name>
      <anchorfile>namespaceArrayConversionsUnitTestHelpers.html</anchorfile>
      <anchor>a8b482416ba121604b13bdbd5ad8be6b2</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>ArrayUnitTestHelpers</name>
    <filename>namespaceArrayUnitTestHelpers.html</filename>
    <member kind="function">
      <type>Teuchos::Array&lt; T &gt;</type>
      <name>generateArray</name>
      <anchorfile>namespaceArrayUnitTestHelpers.html</anchorfile>
      <anchor>a4a2206930101e13256de025f6001f5f8</anchor>
      <arglist>(const int n_in)</arglist>
    </member>
    <member kind="variable">
      <type>int</type>
      <name>n</name>
      <anchorfile>namespaceArrayUnitTestHelpers.html</anchorfile>
      <anchor>ad2fde5b923c02868d88c73711b49b70c</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>B</name>
    <filename>namespaceB.html</filename>
  </compound>
  <compound kind="namespace">
    <name>boost</name>
    <filename>namespaceboost.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>ga0148db5a21456be8682284228f04ad13</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaf28c8123a4b74115276d34ed1a256de7</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>C</name>
    <filename>namespaceC.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Common</name>
    <filename>namespaceCommon.html</filename>
    <class kind="class">Common::LinearSolverTestBase</class>
    <class kind="class">Common::MultiVector</class>
    <class kind="class">Common::Operator</class>
  </compound>
  <compound kind="namespace">
    <name>Details</name>
    <filename>namespaceDetails.html</filename>
  </compound>
  <compound kind="namespace">
    <name>details</name>
    <filename>namespacedetails.html</filename>
  </compound>
  <compound kind="namespace">
    <name>DummyNS</name>
    <filename>namespaceDummyNS.html</filename>
  </compound>
  <compound kind="namespace">
    <name>EvilPack</name>
    <filename>namespaceEvilPack.html</filename>
    <class kind="class">EvilPack::AEvil</class>
    <class kind="class">EvilPack::BEvil</class>
    <class kind="class">EvilPack::EvilBase</class>
  </compound>
  <compound kind="namespace">
    <name>MatrixMarket</name>
    <filename>namespaceMatrixMarket.html</filename>
  </compound>
  <compound kind="namespace">
    <name>Raw</name>
    <filename>namespaceRaw.html</filename>
  </compound>
  <compound kind="namespace">
    <name>std</name>
    <filename>namespacestd.html</filename>
    <member kind="function">
      <type>ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespacestd.html</anchorfile>
      <anchor>ab05b7b1449414a9ce0e6568a15738d9f</anchor>
      <arglist>(ostream &amp;os, const pair&lt; Packet, Packet &gt; &amp;arg)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos</name>
    <filename>namespaceTeuchos.html</filename>
    <namespace>Teuchos::Details</namespace>
    <namespace>Teuchos::details</namespace>
    <namespace>Teuchos::Exceptions</namespace>
    <namespace>Teuchos::MatrixMarket</namespace>
    <namespace>Teuchos::MixMaxUtilities</namespace>
    <namespace>Teuchos::PtrPrivateUtilityPack</namespace>
    <namespace>Teuchos::TwoDDetails</namespace>
    <namespace>Teuchos::TypeTraits</namespace>
    <namespace>Teuchos::Utilities</namespace>
    <class kind="class">Teuchos::AbstractArrayValidator</class>
    <class kind="class">Teuchos::AbstractArrayValidatorXMLConverter</class>
    <class kind="class">Teuchos::AbstractFactory</class>
    <class kind="class">Teuchos::AbstractFactoryStd</class>
    <class kind="class">Teuchos::ActiveRCPNodesSetup</class>
    <class kind="class">Teuchos::AdditionFunction</class>
    <class kind="class">Teuchos::AdditionFunctionXMLConverter</class>
    <class kind="class">Teuchos::AllocatorNew</class>
    <class kind="class">Teuchos::AndCondition</class>
    <class kind="class">Teuchos::AndConditionConverter</class>
    <class kind="class">Teuchos::ANDValueReductionOp</class>
    <class kind="class">Teuchos::any</class>
    <class kind="class">Teuchos::AnyNumberParameterEntryValidator</class>
    <class kind="class">Teuchos::AnyNumberValidatorXMLConverter</class>
    <class kind="class">Teuchos::AnyParameterEntryConverter</class>
    <class kind="class">Teuchos::ArcpReinterpretCastEmbeddedObj</class>
    <class kind="class">Teuchos::Array</class>
    <class kind="class">Teuchos::ArrayArg</class>
    <class kind="class">Teuchos::ArrayFileNameValidator</class>
    <class kind="class">Teuchos::ArrayModifierDependency</class>
    <class kind="class">Teuchos::ArrayModifierDependencyXMLConverter</class>
    <class kind="class">Teuchos::ArrayNumberValidator</class>
    <class kind="class">Teuchos::ArrayRCP</class>
    <class kind="class">Teuchos::ArrayRCP&lt; const T &gt;</class>
    <class kind="class">Teuchos::ArrayRCP&lt; const void &gt;</class>
    <class kind="class">Teuchos::ArrayRCP&lt; void &gt;</class>
    <class kind="class">Teuchos::ArrayStringValidator</class>
    <class kind="class">Teuchos::ArrayValidator</class>
    <class kind="class">Teuchos::ArrayValidatorXMLConverter</class>
    <class kind="class">Teuchos::ArrayView</class>
    <class kind="class">Teuchos::ArrayView&lt; const T &gt;</class>
    <class kind="class">Teuchos::asFunc</class>
    <class kind="class">Teuchos::bad_any_cast</class>
    <class kind="class">Teuchos::BadParameterEntryXMLConverterTypeException</class>
    <class kind="class">Teuchos::BadParameterListElementException</class>
    <class kind="class">Teuchos::BadTagException</class>
    <class kind="class">Teuchos::BadValidatorXMLConverterException</class>
    <class kind="class">Teuchos::BadXMLParameterListRootElementException</class>
    <class kind="class">Teuchos::basic_FancyOStream</class>
    <class kind="class">Teuchos::basic_FancyOStream_buf</class>
    <class kind="class">Teuchos::basic_oblackholestream</class>
    <class kind="class">Teuchos::basic_OSTab</class>
    <class kind="class">Teuchos::BLAS</class>
    <class kind="class">Teuchos::BLAS&lt; int, double &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, float &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, std::complex&lt; double &gt; &gt;</class>
    <class kind="class">Teuchos::BLAS&lt; int, std::complex&lt; float &gt; &gt;</class>
    <class kind="class">Teuchos::BoolCondition</class>
    <class kind="class">Teuchos::BoolConditionConverter</class>
    <class kind="class">Teuchos::BoolLogicCondition</class>
    <class kind="class">Teuchos::BoolLogicConditionConverter</class>
    <class kind="class">Teuchos::BoolValidatorDependency</class>
    <class kind="class">Teuchos::BoolValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::BoolVisualDependency</class>
    <class kind="class">Teuchos::BoolVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::CantFindConditionConverterException</class>
    <class kind="class">Teuchos::CantFindDependencyConverterException</class>
    <class kind="class">Teuchos::CantFindFunctionObjectConverterException</class>
    <class kind="class">Teuchos::CantFindParameterEntryConverterException</class>
    <class kind="class">Teuchos::CantFindValidatorConverterException</class>
    <class kind="class">Teuchos::CharToReferenceTypeReductionOp</class>
    <class kind="class">Teuchos::CharToValueTypeReductionOp</class>
    <class kind="class">Teuchos::CharToValueTypeReductionOp&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::CharToValueTypeReductionOpImp</class>
    <class kind="class">Teuchos::Comm</class>
    <class kind="class">Teuchos::CommandLineProcessor</class>
    <class kind="class">Teuchos::CommRequest</class>
    <class kind="class">Teuchos::CommStatus</class>
    <class kind="class">Teuchos::CompileTimeAssert</class>
    <class kind="class">Teuchos::CompileTimeAssert&lt; 0 &gt;</class>
    <class kind="class">Teuchos::CompObject</class>
    <class kind="class">Teuchos::CompoundEntryWithParentheses</class>
    <class kind="class">Teuchos::Condition</class>
    <class kind="class">Teuchos::ConditionVisualDependency</class>
    <class kind="class">Teuchos::ConditionVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::ConditionXMLConverter</class>
    <class kind="class">Teuchos::ConditionXMLConverterDB</class>
    <class kind="class">Teuchos::ConstHandle</class>
    <class kind="class">Teuchos::ConstHandleable</class>
    <class kind="class">Teuchos::ConstNonconstObjectContainer</class>
    <class kind="class">Teuchos::ConstReferenceTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ConstReferenceTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ConstTypeTraits</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ConstValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::CWrapperErrorHandling</class>
    <class kind="class">Teuchos::DanglingReferenceError</class>
    <class kind="class">Teuchos::DeallocArrayDelete</class>
    <class kind="class">Teuchos::DeallocBoostSharedPtr</class>
    <class kind="class">Teuchos::DeallocDelete</class>
    <class kind="class">Teuchos::DeallocFunctorDelete</class>
    <class kind="class">Teuchos::DeallocFunctorHandleDelete</class>
    <class kind="class">Teuchos::DeallocNull</class>
    <class kind="class">Teuchos::DeallocStdSharedPtr</class>
    <class kind="class">Teuchos::DefaultBLASImpl</class>
    <class kind="class">Teuchos::DefaultComm</class>
    <class kind="class">Teuchos::DefaultSerializer</class>
    <class kind="class">Teuchos::Dependency</class>
    <class kind="class">Teuchos::DependencySheet</class>
    <class kind="class">Teuchos::DependencyXMLConverter</class>
    <class kind="class">Teuchos::DependencyXMLConverterDB</class>
    <class kind="class">Teuchos::Describable</class>
    <class kind="struct">Teuchos::DescribableStreamManipulatorState</class>
    <class kind="class">Teuchos::DirectSerializationTraits</class>
    <class kind="class">Teuchos::DivisionFunction</class>
    <class kind="class">Teuchos::DivisionFunctionXMLConverter</class>
    <class kind="class">Teuchos::DoubleEntry</class>
    <class kind="class">Teuchos::DummyObjectGetter</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; AndCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; AnyNumberParameterEntryValidator &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; ArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolValidatorDependency &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; BoolVisualDependency &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; ConditionVisualDependency &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; EnhancedNumberValidator&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; EqualsCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; FileNameValidator &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NotCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberArrayLengthDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberCondition&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; NumberVisualDependency&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; OrCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; RangeValidatorDependency&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringCondition &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringValidator &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringValidatorDependency &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; StringVisualDependency &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDArrayValidator&lt; ValidatorType, EntryType &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDColDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <class kind="class">Teuchos::DummyObjectGetter&lt; TwoDRowDependency&lt; DependeeType, DependentType &gt; &gt;</class>
    <class kind="class">Teuchos::DuplicateOwningRCPError</class>
    <class kind="class">Teuchos::DuplicateParameterEntryException</class>
    <class kind="class">Teuchos::DuplicateParameterEntryIDException</class>
    <class kind="class">Teuchos::DuplicateParameterIDsException</class>
    <class kind="class">Teuchos::DuplicateParameterSublist</class>
    <class kind="class">Teuchos::DuplicateValidatorIDException</class>
    <class kind="class">Teuchos::DuplicateValidatorIDsException</class>
    <class kind="class">Teuchos::EmbeddedObjDealloc</class>
    <class kind="class">Teuchos::EmptyXMLError</class>
    <class kind="class">Teuchos::EnhancedNumberTraits</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; double &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; float &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; long int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; long unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; short int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; short unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberTraits&lt; unsigned int &gt;</class>
    <class kind="class">Teuchos::EnhancedNumberValidator</class>
    <class kind="class">Teuchos::EnhancedNumberValidatorXMLConverter</class>
    <class kind="class">Teuchos::EqualsCondition</class>
    <class kind="class">Teuchos::EqualsConditionConverter</class>
    <class kind="class">Teuchos::ExceptionBase</class>
    <class kind="class">Teuchos::FileInputSource</class>
    <class kind="class">Teuchos::FileInputStream</class>
    <class kind="class">Teuchos::FileNameValidator</class>
    <class kind="class">Teuchos::FileNameValidatorXMLConverter</class>
    <class kind="class">Teuchos::FILEstream</class>
    <class kind="class">Teuchos::FilteredIterator</class>
    <class kind="class">Teuchos::Flops</class>
    <class kind="class">Teuchos::Foo</class>
    <class kind="class">Teuchos::FooA</class>
    <class kind="class">Teuchos::FooB</class>
    <class kind="class">Teuchos::FooC</class>
    <class kind="class">Teuchos::FunctionObject</class>
    <class kind="class">Teuchos::FunctionObjectXMLConverter</class>
    <class kind="class">Teuchos::FunctionObjectXMLConverterDB</class>
    <class kind="class">Teuchos::GlobalMPISession</class>
    <class kind="class">Teuchos::Handle</class>
    <class kind="class">Teuchos::Handleable</class>
    <class kind="class">Teuchos::HashPair</class>
    <class kind="class">Teuchos::HashSet</class>
    <class kind="class">Teuchos::Hashtable</class>
    <class kind="class">Teuchos::HashUtils</class>
    <class kind="class">Teuchos::IDtoValidatorMap</class>
    <class kind="class">Teuchos::IncompatibleIteratorsError</class>
    <class kind="class">Teuchos::IntEntry</class>
    <class kind="class">Teuchos::InvalidArrayStringRepresentation</class>
    <class kind="class">Teuchos::InvalidConditionException</class>
    <class kind="class">Teuchos::InvalidDependencyException</class>
    <class kind="class">Teuchos::LabeledObject</class>
    <class kind="class">Teuchos::LAPACK</class>
    <class kind="class">Teuchos::m_bad_cast</class>
    <class kind="class">Teuchos::MaxLoc</class>
    <class kind="class">Teuchos::MaxLoc&lt; Ordinal, double, int &gt;</class>
    <class kind="class">Teuchos::MaxValueReductionOp</class>
    <class kind="class">Teuchos::MinLoc</class>
    <class kind="class">Teuchos::MinLoc&lt; Ordinal, double, int &gt;</class>
    <class kind="class">Teuchos::MinLocNonzero</class>
    <class kind="class">Teuchos::MinLocNonzero&lt; Ordinal, double, int &gt;</class>
    <class kind="class">Teuchos::MinValueReductionOp</class>
    <class kind="class">Teuchos::MissingConditionTagException</class>
    <class kind="class">Teuchos::MissingDependeeException</class>
    <class kind="class">Teuchos::MissingDependeesException</class>
    <class kind="class">Teuchos::MissingDependentException</class>
    <class kind="class">Teuchos::MissingDependentsException</class>
    <class kind="class">Teuchos::MissingParameterEntryDefinitionException</class>
    <class kind="class">Teuchos::MissingRangesAndValidatorsTagException</class>
    <class kind="class">Teuchos::MissingValidatorDefinitionException</class>
    <class kind="class">Teuchos::MissingValidatorException</class>
    <class kind="class">Teuchos::MissingValuesAndValidatorsTagException</class>
    <class kind="class">Teuchos::MissingValuesTagException</class>
    <class kind="class">Teuchos::MockRCP</class>
    <class kind="class">Teuchos::MPITraits</class>
    <class kind="class">Teuchos::MultiplicationFunction</class>
    <class kind="class">Teuchos::MultiplicationFunctionXMLConverter</class>
    <class kind="class">Teuchos::NoNameAttributeExecption</class>
    <class kind="class">Teuchos::NonconstAccessError</class>
    <class kind="class">Teuchos::NotCondition</class>
    <class kind="class">Teuchos::NotConditionConverter</class>
    <class kind="class">Teuchos::NoTypeAttributeExecption</class>
    <class kind="class">Teuchos::NoValueAttributeExecption</class>
    <class kind="class">Teuchos::NullIteratorTraits</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; ArrayRCP&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; RCP&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::NullIteratorTraits&lt; std::reverse_iterator&lt; Iter &gt; &gt;</class>
    <class kind="class">Teuchos::NullReferenceError</class>
    <class kind="class">Teuchos::NumberArrayLengthDependency</class>
    <class kind="class">Teuchos::NumberArrayLengthDependencyXMLConverter</class>
    <class kind="class">Teuchos::NumberCondition</class>
    <class kind="class">Teuchos::NumberConditionConverter</class>
    <class kind="class">Teuchos::NumberVisualDependency</class>
    <class kind="class">Teuchos::NumberVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::Object</class>
    <class kind="class">Teuchos::ObjectBuilder</class>
    <class kind="class">Teuchos::OpaqueWrapper</class>
    <class kind="class">Teuchos::OpaqueWrapperWithFree</class>
    <class kind="class">Teuchos::OrCondition</class>
    <class kind="class">Teuchos::OrConditionConverter</class>
    <class kind="struct">Teuchos::OrdinalTraits</class>
    <class kind="class">Teuchos::ParameterCondition</class>
    <class kind="class">Teuchos::ParameterConditionConverter</class>
    <class kind="class">Teuchos::ParameterEntry</class>
    <class kind="class">Teuchos::ParameterEntryValidator</class>
    <class kind="class">Teuchos::ParameterEntryXMLConverter</class>
    <class kind="class">Teuchos::ParameterEntryXMLConverterDB</class>
    <class kind="class">Teuchos::ParameterList</class>
    <class kind="class">Teuchos::ParameterListAcceptor</class>
    <class kind="class">Teuchos::ParameterListAcceptorDefaultBase</class>
    <class kind="class">Teuchos::ParameterListNonAcceptor</class>
    <class kind="class">Teuchos::ParameterXMLFileReader</class>
    <class kind="class">Teuchos::PerformanceMonitorBase</class>
    <class kind="class">Teuchos::Polynomial</class>
    <class kind="class">Teuchos::PolynomialTraits</class>
    <class kind="class">Teuchos::PostModNothing</class>
    <class kind="class">Teuchos::PromotionTraits</class>
    <class kind="class">Teuchos::PromotionTraits&lt; T, T &gt;</class>
    <class kind="class">Teuchos::Ptr</class>
    <class kind="class">Teuchos::Range1D</class>
    <class kind="class">Teuchos::RangeError</class>
    <class kind="class">Teuchos::RangeValidatorDependency</class>
    <class kind="class">Teuchos::RangeValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::RawPointerConversionTraits</class>
    <class kind="class">Teuchos::RawPointerConversionTraits&lt; ArrayRCP&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::RawPointerConversionTraits&lt; RawType * &gt;</class>
    <class kind="class">Teuchos::RawWorkspace</class>
    <class kind="class">Teuchos::RCP</class>
    <class kind="struct">Teuchos::RCPComp</class>
    <class kind="struct">Teuchos::RCPConstComp</class>
    <class kind="class">Teuchos::RCPDeleter</class>
    <class kind="class">Teuchos::RCPNode</class>
    <class kind="class">Teuchos::RCPNodeHandle</class>
    <class kind="class">Teuchos::RCPNodeThrowDeleter</class>
    <class kind="class">Teuchos::RCPNodeTmpl</class>
    <class kind="class">Teuchos::RCPNodeTracer</class>
    <class kind="class">Teuchos::ReferenceTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ReferenceTypeReductionOp</class>
    <class kind="class">Teuchos::ReferenceTypeSerializationBuffer</class>
    <class kind="class">Teuchos::RelErrSmallNumber</class>
    <class kind="class">Teuchos::RelErrSmallNumber&lt; false, Scalar &gt;</class>
    <class kind="class">Teuchos::RelErrSmallNumber&lt; true, Scalar &gt;</class>
    <class kind="struct">Teuchos::ScalarTraits</class>
    <class kind="struct">Teuchos::ScalarTraits&lt; std::pair&lt; Packet, Packet &gt; &gt;</class>
    <class kind="class">Teuchos::ScopedThreadLock</class>
    <class kind="class">Teuchos::SerialBandDenseMatrix</class>
    <class kind="class">Teuchos::SerialBandDenseSolver</class>
    <class kind="class">Teuchos::SerialComm</class>
    <class kind="class">Teuchos::SerialCommStatus</class>
    <class kind="class">Teuchos::SerialDenseMatrix</class>
    <class kind="class">Teuchos::SerialDenseSolver</class>
    <class kind="class">Teuchos::SerialDenseVector</class>
    <class kind="class">Teuchos::SerializationTraits</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, double &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, float &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, long int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, short int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, signed char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, std::pair&lt; P1, P2 &gt; &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned char &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned long int &gt;</class>
    <class kind="class">Teuchos::SerializationTraits&lt; Ordinal, unsigned short int &gt;</class>
    <class kind="class">Teuchos::Serializer</class>
    <class kind="class">Teuchos::SerialQRDenseSolver</class>
    <class kind="class">Teuchos::SerialSpdDenseSolver</class>
    <class kind="class">Teuchos::SerialSymDenseMatrix</class>
    <class kind="class">Teuchos::SerialTriDiMatrix</class>
    <class kind="class">Teuchos::SharedAccessPolicy</class>
    <class kind="class">Teuchos::SimpleFunctionObject</class>
    <class kind="class">Teuchos::SimpleFunctionXMLConverter</class>
    <class kind="class">Teuchos::SimpleObjectDB</class>
    <class kind="class">Teuchos::SimpleObjectTable</class>
    <class kind="class">Teuchos::StandardTemplatedParameterConverter</class>
    <class kind="class">Teuchos::StdSharedPtrRCPDeleter</class>
    <class kind="class">Teuchos::StringCondition</class>
    <class kind="class">Teuchos::StringConditionConverter</class>
    <class kind="class">Teuchos::StringEntry</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainer</class>
    <class kind="class">Teuchos::StringIndexedOrderedValueObjectContainerBase</class>
    <class kind="class">Teuchos::StringInputSource</class>
    <class kind="class">Teuchos::StringInputStream</class>
    <class kind="class">Teuchos::StringToIntegralParameterEntryValidator</class>
    <class kind="class">Teuchos::StringToIntegralValidatorXMLConverter</class>
    <class kind="class">Teuchos::StringToIntMap</class>
    <class kind="class">Teuchos::StringValidator</class>
    <class kind="class">Teuchos::StringValidatorDependency</class>
    <class kind="class">Teuchos::StringValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::StringValidatorXMLConverter</class>
    <class kind="class">Teuchos::StringVisualDependency</class>
    <class kind="class">Teuchos::StringVisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::StrUtils</class>
    <class kind="class">Teuchos::SubtractionFunction</class>
    <class kind="class">Teuchos::SubtractionFunctionXMLConverter</class>
    <class kind="class">Teuchos::SumValueReductionOp</class>
    <class kind="class">Teuchos::TableColumn</class>
    <class kind="class">Teuchos::TableEntry</class>
    <class kind="class">Teuchos::TableFormat</class>
    <class kind="class">Teuchos::TabularOutputter</class>
    <class kind="class">Teuchos::ThreadLock</class>
    <class kind="class">Teuchos::Time</class>
    <class kind="class">Teuchos::TimeMonitor</class>
    <class kind="class">Teuchos::TimeMonitorSurrogateImpl</class>
    <class kind="class">Teuchos::TimeMonitorSurrogateImplInserter</class>
    <class kind="class">Teuchos::TooManyDependeesException</class>
    <class kind="class">Teuchos::ToStringTraits</class>
    <class kind="class">Teuchos::ToStringTraits&lt; bool &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; double &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; ERCPStrength &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; float &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; std::pair&lt; T1, T2 &gt; &gt;</class>
    <class kind="class">Teuchos::ToStringTraits&lt; std::string &gt;</class>
    <class kind="class">Teuchos::TreeBuildingXMLHandler</class>
    <class kind="class">Teuchos::Tuple</class>
    <class kind="class">Teuchos::TwoDArray</class>
    <class kind="class">Teuchos::TwoDArrayFileNameValidator</class>
    <class kind="class">Teuchos::TwoDArrayModifierDependency</class>
    <class kind="class">Teuchos::TwoDArrayNumberValidator</class>
    <class kind="class">Teuchos::TwoDArrayStringValidator</class>
    <class kind="class">Teuchos::TwoDArrayValidator</class>
    <class kind="class">Teuchos::TwoDArrayValidatorXMLConverter</class>
    <class kind="class">Teuchos::TwoDColDependency</class>
    <class kind="class">Teuchos::TwoDColDependencyXMLConverter</class>
    <class kind="class">Teuchos::TwoDRowDependency</class>
    <class kind="class">Teuchos::TwoDRowDependencyXMLConverter</class>
    <class kind="class">Teuchos::TypeNameTraits</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; Array&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; Opaque3_handle &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; ParameterList &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; std::string &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; T * &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; TwoDArray&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; UndefinedType2 &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; void * &gt;</class>
    <class kind="class">Teuchos::TypeNameTraits&lt; void &gt;</class>
    <class kind="class">Teuchos::UNDEFINED_PARAMETERENTRY_VALIDATOR</class>
    <class kind="struct">Teuchos::UndefinedEnhancedNumberTraits</class>
    <class kind="struct">Teuchos::UndefinedLAPACKRoutine</class>
    <class kind="struct">Teuchos::UndefinedOrdinalTraits</class>
    <class kind="struct">Teuchos::UndefinedScalarTraits</class>
    <class kind="class">Teuchos::UndefinedSerializationTraits</class>
    <class kind="class">Teuchos::UnitTestBase</class>
    <class kind="struct">Teuchos::UnitTestData</class>
    <class kind="class">Teuchos::UnitTestRepository</class>
    <class kind="class">Teuchos::Utils</class>
    <class kind="class">Teuchos::ValidatorDependency</class>
    <class kind="class">Teuchos::ValidatorDependencyXMLConverter</class>
    <class kind="class">Teuchos::ValidatorFactory</class>
    <class kind="class">Teuchos::ValidatortoIDMap</class>
    <class kind="class">Teuchos::ValidatorXMLConverter</class>
    <class kind="class">Teuchos::ValidatorXMLConverterDB</class>
    <class kind="class">Teuchos::ValuesTagMissingException</class>
    <class kind="struct">Teuchos::ValueTolerance</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; double, long double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; double, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, long double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; float, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, unsigned int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; int, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long double, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, unsigned int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; long, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; OutType, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; short, unsigned short &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; std::pair&lt; Packet, Packet &gt;, ConvertToPacket &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; std::string, char[N]&gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, int &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned int, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, long &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned long, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, double &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, float &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, short &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, std::string &gt;</class>
    <class kind="class">Teuchos::ValueTypeConversionTraits&lt; unsigned short, unsigned long &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBuffer</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ValueTypeDeserializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ValueTypeReductionOp</class>
    <class kind="class">Teuchos::ValueTypeSerializationBuffer</class>
    <class kind="class">Teuchos::ValueTypeSerializationBuffer&lt; Ordinal, T, typename DefaultSerializer&lt; Ordinal, T &gt;::DefaultSerializerType &gt;</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, false &gt;</class>
    <class kind="class">Teuchos::ValueTypeSerializationBufferImp&lt; Ordinal, T, Serializer, true &gt;</class>
    <class kind="class">Teuchos::ValueTypeSerializer</class>
    <class kind="class">Teuchos::VerboseObject</class>
    <class kind="class">Teuchos::VerboseObjectBase</class>
    <class kind="class">Teuchos::VerboseObjectTempState</class>
    <class kind="class">Teuchos::VisualDependency</class>
    <class kind="class">Teuchos::VisualDependencyXMLConverter</class>
    <class kind="class">Teuchos::Workspace</class>
    <class kind="class">Teuchos::WorkspaceStore</class>
    <class kind="class">Teuchos::WorkspaceStoreInitializeable</class>
    <class kind="class">Teuchos::XMLInputSource</class>
    <class kind="class">Teuchos::XMLInputStream</class>
    <class kind="class">Teuchos::XMLObject</class>
    <class kind="class">Teuchos::XMLObjectImplem</class>
    <class kind="class">Teuchos::XMLParameterListReader</class>
    <class kind="class">Teuchos::XMLParameterListWriter</class>
    <class kind="class">Teuchos::XMLParser</class>
    <class kind="class">Teuchos::XMLTestNode</class>
    <member kind="typedef">
      <type>basic_FancyOStream&lt; char &gt;</type>
      <name>FancyOStream</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a348df63f6befd76c5cfad4f13414b2c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_OSTab&lt; char &gt;</type>
      <name>OSTab</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3d005da0acbcb4901c360164f8945cf4</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>basic_oblackholestream&lt; char, std::char_traits&lt; char &gt; &gt;</type>
      <name>oblackholestream</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0e0501e9c74a9fadd6e741c26456393</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned int</type>
      <name>uint</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a578a055c185e7f09509399ab523b057b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned short</type>
      <name>ushort</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b98e8decf2025a17c4bc35d056b1d40</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>unsigned long</type>
      <name>ulong</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a32e632bd910c2d7f22e9b583c1a1270d</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::string</type>
      <name>myString_t</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3c1f9118cb0e724a11c4cb9d4e0f508a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::pair&lt; double, int &gt; &gt;</type>
      <name>timer_map_t</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48624f8dac89d769d3af6f26104e9a4f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>std::map&lt; std::string, std::vector&lt; std::pair&lt; double, double &gt; &gt; &gt;</type>
      <name>stat_map_type</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b9d5ac516b67471bf9ab8da897e803a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ENull</name>
      <anchorfile>classTeuchos_1_1RCP.html</anchorfile>
      <anchor>ae62facd370a837a6e56086869977621b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPWeakNoDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe4e0a5f1f28e1d1bf8a53ed592577b7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_WEAK_NO_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe4e0a5f1f28e1d1bf8a53ed592577b7a4cb66e281ce104594bbbd800e5b70688</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPUndefinedWeakNoDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa56083deb6b6d324e46507d78b24af36</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_UNDEFINED_WEAK_NO_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa56083deb6b6d324e46507d78b24af36a77a75a97af5d158ee2991d5c6b81b093</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPUndefinedWithDealloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af166bb83c46add7a33fb7ad5fa9e2be6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_UNDEFINED_WITH_DEALLOC</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af166bb83c46add7a33fb7ad5fa9e2be6a281b31ffed917f6d2b982e0b41fa1714</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EPrePostDestruction</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PRE_DESTROY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5ea137b75ca558f38176c94f7fd980f16eb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>POST_DESTROY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acd85ba81c085fde11a3ccc0dfb6f0c5eae0bb1ca8f32aa497ec560b532465bf29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPStrength</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_STRONG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49ac664a561b20fcc5ce606a699cafd95c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_WEAK</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24eff8f12d227acf5e40935b75541c49a1bbc487ae206c2ccc0bfcdc26df61d23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ERCPNodeLookup</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_ENABLE_NODE_LOOKUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202a70e305eaba39e6dfddaa4a8e3d5f0afc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RCP_DISABLE_NODE_LOOKUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a593d17f65c92ef641d8ee93a99128202a04e7fe4bc84362777c19851919324049</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EShowTestDetails</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_ALL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525aa6ab02cb53475e76d6bf03cf9e2e88d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_TEST_NAMES</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525a8b77f8fa15ca2c89da9b31ef38fe097b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SHOW_TEST_DETAILS_FINAL_RESULTS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a8111824de8c424c9d3c3fa5dfc2525ad6c32b68d8153816b94c1e122a4b76d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EVerbosityLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_DEFAULT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fdaccb47191b0d1f808d367e807e4f20882</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_NONE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda8d918a74f650d850a81c8f3a6e8d74a6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_LOW</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fdad51bbaaddacc51f90e8a6d69a033a05b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_MEDIUM</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda478aa593777b1f7b0d68ed69cbf01562</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_HIGH</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda58629ea5d434a164ee03377a586c6d3d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>VERB_EXTREME</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee0d502bdc14742112591f00e28289fda880d1aeb26ce3710eba0095b3c3becc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EValidateUsed</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af91ca4b94600bcd7973d7303a3c18865</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EValidateDefaults</name>
      <anchorfile>classTeuchos_1_1ParameterList.html</anchorfile>
      <anchor>af87b97603488b43cfa1cb6b74ed2b97f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>PerfTestResult</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestFailed</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a62d337d66fec93ea7732e1e3b19ec990</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestPassed</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a8bf9637f5fd8eb6b2623a1b966166d7f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewMachine</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a9d1a31fe880b6d5110bee7ea78675cd0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewConfiguration</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a263d2ceb00aefc21d0dcc89cac76a5f5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13ab407ef2ed65f2f8a39046498b2720045</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestNewTestConfiguration</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a3d6151b0722b0468b795724414ebb443</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>PerfTestUpdatedTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa8dd7b5352ccb0f549c458c1359eca13a1453929e3179bdcc65423d54510af70c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EReductionType</name>
      <anchorfile>classTeuchos_1_1Comm.html</anchorfile>
      <anchor>ad9a5e78d71b65b2aa06b6e67747cb88e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ECounterSetOp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Intersection</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0aa1c321efb274d7f24cc5d4e3c3d37518</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Union</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a243a40dc3ba546b45e015346dac91ff0a52b4ee5629feffaaf2de6ca3510f3def</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ESide</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LEFT_SIDE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91a913227215c7326bc8ad7e00ce0100889</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>RIGHT_SIDE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d69c405faef2b64ef0583adadcdbf91af01e44b3bfce7cb55b7537f0b1e23bde</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>ETransp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NO_TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35a3547883feb9e2f4240a9ba8c959bb7b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35aeeeb6f6229ae1b1d1b23760f0b8f53ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>CONJ_TRANS</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a47640ddd62f44887527617b4f2255c35a24bf0d8a616611a5e996d407846b3bea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EUplo</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73aa84fe52e8c0ebbb2e4bb5028a511cfc5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73a942e55befb1773096e415ca844449b52</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNDEF_TRI</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30b92dd6b00dbab9d5d23b3cf869b73acb49eaa664e06a55d79fe64967d96807</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EDiag</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UNIT_DIAG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97ad4fae874351ccad12cb53a0a381635a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>NON_UNIT_DIAG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9903cb70d0f5393a37fde65059a73f97a5be3acb18d58a3898346dd569d38c39f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>EType</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>FULL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a91f06e11f663d1ca593cb4d7a74bc574</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>LOWER</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48acb5f81f0cb9718fc9e4518df47e7bf9b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>UPPER</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48aa6017626eaf4bd915387ba64545db211</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>HESSENBERG</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48ad98f768c2788b39e794e491163316c49</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYM_BAND_L</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48ac7892f275142e4ab3162b32416964b6a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>SYM_BAND_U</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a34da43ca96650b7115b350096ce59abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>BAND</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae30232414abdd924787afce923a24d48a30a5a490532dea841dec764f007571cf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>DataAccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5db</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>Copy</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5dba75cf60991c46575a971b238ed126e17d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>View</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3bdc029deab5a4f3a3fa94958c90a5dba0cf5f6737707c4da692702573bd1335d</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayViewPtrConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a016dd4a3036a8935bd55bcd2489ce70c</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in, const ArrayView&lt; Ptr&lt; T_out &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>arrayViewRcpConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac2bb4fa3638dc5c034a1d085468d2842</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in, const ArrayView&lt; RCP&lt; T_out &gt; &gt; &amp;a_out)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; Ptr&lt; T_out &gt; &gt;</type>
      <name>arrayPtrConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad60f8e7a4a47c671645a2e447cab2358</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>Array&lt; RCP&lt; T_out &gt; &gt;</type>
      <name>arrayRcpConv</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a876267d20c280b7523ddae96a5d2d170</anchor>
      <arglist>(const ArrayPtrT_in &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const Ptr&lt; const T &gt; &gt;</type>
      <name>arrayConstPtrConstCast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a634fa5232d8697ec2f2c119b2c9a3af6</anchor>
      <arglist>(const ArrayView&lt; const Ptr&lt; T &gt; &gt; &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>ArrayView&lt; const RCP&lt; const T &gt; &gt;</type>
      <name>arrayConstRcpConstCast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a00f21e8ef9c2d82fbce2c761a464f2ae</anchor>
      <arglist>(const ArrayView&lt; const RCP&lt; T &gt; &gt; &amp;a_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>ArrayRCP_createNewRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa4c6c3788d366ac07a8a011bcd6ef0e2</anchor>
      <arglist>(T *p, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>ArrayRCP_createNewDeallocRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae79131ac1288d62996f957dde2deb859</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo</type>
      <name>as</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0d92fda6dfdcb3b3c4cae5d0596ac9f2</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
      <docanchor file="namespaceTeuchos" title="User documentation">Teuchos_as_User</docanchor>
      <docanchor file="namespaceTeuchos" title="Developer documentation">Teuchos_as_Dev</docanchor>
    </member>
    <member kind="function">
      <type>TypeTo</type>
      <name>asSafe</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1eaf9982de1935ecdb910a41e1dbe53e</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
      <docanchor file="namespaceTeuchos" title="User documentation">Teuchos_asSafe_User</docanchor>
      <docanchor file="namespaceTeuchos" title="Developer documentation">Teuchos_asSafe_Dev</docanchor>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>dyn_cast_throw_exception</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adb103dd25f872805d11b8da2d03e754a</anchor>
      <arglist>(const std::string &amp;T_from, const std::string &amp;T_from_concr, const std::string &amp;T_to)</arglist>
    </member>
    <member kind="function">
      <type>T_To &amp;</type>
      <name>dyn_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a83b8843eaab7fa2229416838a4776932</anchor>
      <arglist>(T_From &amp;from)</arglist>
    </member>
    <member kind="function">
      <type>const T &amp;</type>
      <name>getConst</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af559355eca0b1f227caf7c40dd72ecbf</anchor>
      <arglist>(T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>RawPointerConversionTraits&lt; Container &gt;::Ptr_t</type>
      <name>getRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0a7e20aa835720fafc0e709c93b358a8</anchor>
      <arglist>(const Container &amp;c)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a82b1aac238579bd6c4eea4496a3a1e28</anchor>
      <arglist>(const HashSet&lt; Key &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a287ec9ca6414e3d490cde6832a0f0e48</anchor>
      <arglist>(std::ostream &amp;os, const HashSet&lt; Key &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1d42ecd3b77d84f0a7ed1c5d241aeec4</anchor>
      <arglist>(const Hashtable&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9233ded94b66e0d758650582a04ae04a</anchor>
      <arglist>(std::ostream &amp;os, const Hashtable&lt; Key, Value &gt; &amp;h)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo</type>
      <name>implicit_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2375d9db50e699e24bcecdb41ea44ebe</anchor>
      <arglist>(const TypeFrom &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo &amp;</type>
      <name>implicit_ref_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8072d95b3ba7f4783625eedb75a4be7b</anchor>
      <arglist>(TypeFrom &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>TypeTo *</type>
      <name>implicit_ptr_cast</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a315f995bbc0d0cff4dd38440c48177ea</anchor>
      <arglist>(TypeFrom *t)</arglist>
    </member>
    <member kind="function">
      <type>std::istream &amp;</type>
      <name>enumIstreamExtractor</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1f7acb270bef70f008cf22d16e3e992b</anchor>
      <arglist>(std::istream &amp;std_is, EnumType &amp;enum_value)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtrNonowned</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a02bdd9df30334d97c1d1a802b5b76dc1</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtrNonownedUndefined</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a11bcd808c00455fda270c69021707900</anchor>
      <arglist>(T *p)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac482d77c6e0c03d3f2ab302ee8da265c</anchor>
      <arglist>(T *p, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewDeallocRCPNodeRawPtr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad8823f0e2031d68b8ee3eb4262550eb7</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>RCP_createNewDeallocRCPNodeRawPtrUndefined</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a38048fc5f602807d69b7c7edf01aeb79</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool has_ownership_in)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED RCP&lt; T &gt;</type>
      <name>rcp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8ce99105ee4c7203a1ecb670a198671a</anchor>
      <arglist>(T *p, Dealloc_T dealloc, bool owns_mem)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ParentT &gt;</type>
      <name>getInvertedObjOwnershipParent</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36781a62aaf40511a8eb5a8c8d3914f9</anchor>
      <arglist>(const RCP&lt; T &gt; &amp;invertedChild)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>debugAssertStrength</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abcad1d07ecdbfa7a0014fb24aa495e62</anchor>
      <arglist>(ERCPStrength strength)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gade66554b0078fdf9b134723ef5da551f</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaecc73655aad3c6aaa1de138d2427426c</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; SimpleObjectDB&lt; T &gt; &gt;</type>
      <name>createSimpleObjectDB</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab04cd11b1d4766619f134452434e96c9</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_incrThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gac044ac48009404ffe538f4b7669083e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT int</type>
      <name>TestForException_getThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga053257c97eae8c526bd0cbe46e23209d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_break</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga2f43578ce3790815568a4d115a69e1ab</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_setEnableStacktrace</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga3198d526f9102bc157f200b82a9483c8</anchor>
      <arglist>(bool enableStrackTrace)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT bool</type>
      <name>TestForException_getEnableStacktrace</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a23f627e2e567dcad96f95b92eb1b36db</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>updateSuccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac6f1b3601783d0a411dcccc410755b29</anchor>
      <arglist>(const bool result, bool &amp;success)</arglist>
    </member>
    <member kind="function">
      <type>const std::string</type>
      <name>passfail</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab606d9963b2776124c0e373748b96dee</anchor>
      <arglist>(const bool result)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT const std::string</type>
      <name>passfail_with_location</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a175c5c14e319058f2caa225ad78867ac</anchor>
      <arglist>(const bool result, const std::string &amp;file, const int lineNumber)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>showTestFailureLocation</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abaa47cec7e4a8962d7763ba4c987ae5a</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>showTestFailureLocation</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8cd3fa3198b28e2f70eef5c7e87cfccd</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>Scalar</type>
      <name>defaultSmallNumber</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af9fe95973effcacca1b1b174a05351fa</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ScalarTraits&lt; Scalar &gt;::magnitudeType</type>
      <name>relErr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a05763969641f810d9e9b6c94237ba404</anchor>
      <arglist>(const Scalar &amp;s1, const Scalar &amp;s2)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>testRelErr</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9c0d90104626382fb9e0b9d663871e0c</anchor>
      <arglist>(const std::string &amp;v1_name, const Scalar &amp;v1, const std::string &amp;v2_name, const Scalar &amp;v2, const std::string &amp;maxRelErr_error_name, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;maxRelErr_error, const std::string &amp;maxRelErr_warning_name, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;maxRelErr_warning, const Ptr&lt; std::ostream &gt; &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareArrays</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a237bd5964518ff157cff1f7e59aa46</anchor>
      <arglist>(const Array1 &amp;a1, const std::string &amp;a1_name, const Array2 &amp;a2, const std::string &amp;a2_name, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>compareFloatingArrays</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6c68ba291316447349637a3e8098b749</anchor>
      <arglist>(const Array1 &amp;a1, const std::string &amp;a1_name, const Array2 &amp;a2, const std::string &amp;a2_name, const ScalarMag &amp;tol, Teuchos::FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb1a0d897682d59e225760fdaff60ca5</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::istringstream &amp;</type>
      <name>operator&gt;&gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8e6202fa40418680dd1047b9f13e1431</anchor>
      <arglist>(std::istringstream &amp;in, TwoDArray&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae120dec3b31080ab5cad9f8918df2ef9</anchor>
      <arglist>(std::ostream &amp;os, const TwoDArray&lt; T &gt; &amp;array)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a41e9372c2fde8d3e0610348a475fd86b</anchor>
      <arglist>(const TwoDArray&lt; T &gt; &amp;a1, const TwoDArray&lt; T &gt; &amp;a2)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>demangleName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab51ffd2f72e19eea6eb568cf76539e47</anchor>
      <arglist>(const std::string &amp;mangledName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>typeName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a25c8477479b9eef2988edbb7b967476a</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>concreteTypeName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a44bbd7d1fa58fc840ac087bccb6d86fe</anchor>
      <arglist>(const T &amp;t)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a72831cbb5902c3f0a1f512b4b4b4f825</anchor>
      <arglist>(bool)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab6efaee9beb69dd9a72cae163418e3af</anchor>
      <arglist>(char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93a6d74ca6048a6440dc6cc9efb1278</anchor>
      <arglist>(signed char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4ca38f5b1631f82bcad26dfa025a1d63</anchor>
      <arglist>(unsigned char)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a446f86d4318d8551d97df8e436cdc26a</anchor>
      <arglist>(short int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad5dc35ea9348f03cf2db32094bd0a7c0</anchor>
      <arglist>(int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adf9bdcba0c79121f9fdd0c006d63eb75</anchor>
      <arglist>(long int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a95da106e27f5af42525f8ad72921edbc</anchor>
      <arglist>(unsigned short int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2caba3fb86ba9f4409c5975d4bf4d18b</anchor>
      <arglist>(unsigned long int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a99fa123ce309c8d7496399e61bbadd89</anchor>
      <arglist>(float)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e7abafc1577f2d359ddc17fa4cfba6d</anchor>
      <arglist>(double)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb513a70d45e866a1be080237483a13b</anchor>
      <arglist>(const UnitTestData &amp;a, const UnitTestData &amp;b)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>getUnitTestName</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71f6a29a905112005a23f1a485c6c843</anchor>
      <arglist>(const std::string groupName, const std::string testName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>strMatch</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a58f9e88426384df4a26b3495858f41f2</anchor>
      <arglist>(const std::string &amp;fullMatchStr, const std::string &amp;str)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT std::string</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adb0f540330fd1652a344e3c048de6701</anchor>
      <arglist>(const EVerbosityLevel verbLevel)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT bool</type>
      <name>includesVerbLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8ab53557f886a129cbbc82ce0156f904</anchor>
      <arglist>(const EVerbosityLevel verbLevel, const EVerbosityLevel requestedVerbLevel, const bool isDefaultLevel=false)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT EVerbosityLevel</type>
      <name>incrVerbLevel</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab57bc2e2b1b8582eb5e8ca4693834c02</anchor>
      <arglist>(const EVerbosityLevel inputVerbLevel, const int numLevels)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>Teuchos_Version</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af543b117c61d1cf52e2b464f2c618309</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>set_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>gaca2f084f86654404e05467a423676242</anchor>
      <arglist>(const Teuchos::RCP&lt; WorkspaceStore &gt; &amp;default_workspace_store)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT Teuchos::RCP&lt; WorkspaceStore &gt;</type>
      <name>get_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga779918e84bc90004f7543acbccc70b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>print_memory_usage_stats</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga620281f771e65332f55ced465a0f3ce9</anchor>
      <arglist>(const WorkspaceStore *workspace_store, std::ostream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86b5c1c6fd34b37cc2f83459d68aabb8</anchor>
      <arglist>(ConstNonconstObjectContainer, create)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a33fabcf3dcc7e911ee27a55114499694</anchor>
      <arglist>(ConstNonconstObjectContainer, DefaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa607fd8173fdc28027532e5d81889982</anchor>
      <arglist>(ConstNonconstObjectContainer, NonconstConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7f3a5cffbc22b6266d2def3ceff11c3f</anchor>
      <arglist>(ConstNonconstObjectContainer, ConstConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a970d28dea8b1996303196a6d6576d46a</anchor>
      <arglist>(ConstNonconstObjectContainer, NonconstInitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8f5ef8f63f52b7052b9fa5f63821b505</anchor>
      <arglist>(ConstNonconstObjectContainer, ConstInitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad537aa25100c4d10095ca1cfb87d6618</anchor>
      <arglist>(ConstNonconstObjectContainer, AssignmentFromRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac150286a4b943516bdababec89814c87</anchor>
      <arglist>(ConstNonconstObjectContainer, uninitialize)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af407fab894bbc3a8fde8840995cff452</anchor>
      <arglist>(ConstNonconstObjectContainer, parens)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6024f08325d23ddfc36395c22548d873</anchor>
      <arglist>(ConstNonconstObjectContainer, arrow)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a54cb235eca83e93f128a4030e757af71</anchor>
      <arglist>(ConstNonconstObjectContainer, arrowEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae0875b6ff6dfe6c3a0869edbc2e57a10</anchor>
      <arglist>(ConstNonconstObjectContainer, dereference)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7a65ccd0829448d24de8136174f9e17a</anchor>
      <arglist>(ConstNonconstObjectContainer, dereferenceEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab0cb085bf2a42f386900fb517a33308a</anchor>
      <arglist>(ConstNonconstObjectContainer, castToRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2524133be9b6da2ac71bdc02c261905d</anchor>
      <arglist>(ConstNonconstObjectContainer, castFromRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab9ef0413be81c609784f2ba45928117f</anchor>
      <arglist>(ConstNonconstObjectContainer, is_null)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af2db1c14ec8810ffeffa8ff221f29a54</anchor>
      <arglist>(ConstNonconstObjectContainer, nonnull)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af1786434af5e043e0d5413c397bbc320</anchor>
      <arglist>(FilteredIterator, default_construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af249f8da862c8e04e6b8b91e715ff9b7</anchor>
      <arglist>(FilteredIterator, construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a09ee3c92d96511ef20e1b2eacd306376</anchor>
      <arglist>(FilteredIterator, deref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab6d48982893b662ee8918aa9dbd5411c</anchor>
      <arglist>(FilteredIterator, member_access)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1ae87d3a59aebfba9a119b0b4377630e</anchor>
      <arglist>(FilteredIterator, copy_construct_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8cf4ca65d0aa8cf0de90f08b3dfc5c82</anchor>
      <arglist>(FilteredIterator, copy_construct_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af4f2cd219733c8087a1a91e3a20615d8</anchor>
      <arglist>(FilteredIterator, assign_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abceb50782edd06e7a35436daa8156b1b</anchor>
      <arglist>(FilteredIterator, assign_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad70bccf3e5813dcd46e6b81cbc3527f5</anchor>
      <arglist>(FilteredIterator, equality_operators_same)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad9e9a43c66cec633bcc6039f2a236f3b</anchor>
      <arglist>(FilteredIterator, equality_operators_different)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9de4a686d2f7c5072b676ccaedc12bde</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36a221d22f723cc1a5f9064b86bd3e5c</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1403a72540245fd00f1a4b6d07593267</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab35e8f106f8332a2dfeaf6b8bac781bd</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_no_filtering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad2e21ebbba0b2422558c4e6503253333</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a217e5d76799ce9c802ed5cb774856221</anchor>
      <arglist>(FilteredIterator, pre_iterate_forward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ea0e370496982ecff448b306c91cbb6</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aab8bea31683f92d7a17ad5f3a322eb74</anchor>
      <arglist>(FilteredIterator, post_iterate_forward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab3166dfea1aef07fa60a60b79751d982</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9cdd1b6fc13826b334783f33ad562e89</anchor>
      <arglist>(FilteredIterator, pre_iterate_backward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4e33286b9486ee2d918d28e721fc3375</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_filter_even)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1e24114ef53c8b906789b723413a56fe</anchor>
      <arglist>(FilteredIterator, post_iterate_backward_filter_odd)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a026ae8c7d736af2617adf0311da2bebb</anchor>
      <arglist>(GetBaseObjVoidPtr, polymorphicClasses)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aafa922af07733e069abbeee8c998c986</anchor>
      <arglist>(GetBaseObjVoidPtr, nonPolymorphicClasses)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad838260d9f267f2018489a357e235c5d</anchor>
      <arglist>(GetBaseObjVoidPtr, nonPolymorphicBuiltInTypes)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_TYPE_NAME_TRAITS_BUILTIN_TYPE_SPECIALIZATION</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad16fc2055934ce032d9cc102ab42264d</anchor>
      <arglist>(DummyNS::UndefinedType)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>basicRCPNodeNoAlloc</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46455d6045092efbfadb5bd3efa8d511</anchor>
      <arglist>(T *p, const bool has_ownership)</arglist>
    </member>
    <member kind="function">
      <type>RCPNode *</type>
      <name>basicRCPNode</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe6047e078d17782d704d066016d42f2</anchor>
      <arglist>(const bool has_ownership, T **p_out=0)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>deleteRCPNode</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a34a52ad9755a97f8b9b34703411174d2</anchor>
      <arglist>(RCPNode **node)</arglist>
    </member>
    <member kind="function">
      <type>RCPNodeHandle</type>
      <name>basicRCPNodeHandle</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a198f3ecf3325a3f4fa4b18ffc3a3322a</anchor>
      <arglist>(const bool has_ownership, T **p_out=0)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_STATIC_SETUP</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8d6105adcd460c51cc7efda298a358ae</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab3b72226a34262ec0edf4e993e344155</anchor>
      <arglist>(RCPNodeHandle, assignSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8de70bc42bb091f81571db49c80cbae0</anchor>
      <arglist>(RCPNodeHandle, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac2df677c9000a71932c4f0ffb604999</anchor>
      <arglist>(RCPNodeHandle, basicConstruct_owns_mem, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af89a8e725cc3f19c9fb0336d8694ee69</anchor>
      <arglist>(RCPNodeHandle, basicConstruct_no_owns_mem, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aacb487036d4b38099dbac35e2c50191d</anchor>
      <arglist>(RCPNodeHandle, weakPtr_basic_1, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad41322d315b7dbba7109f8d552399a39</anchor>
      <arglist>(RCPNodeHandle, weakPtr_basic_2, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a49ff1d9cf5dd953ce5d37bcbc1bc2cb9</anchor>
      <arglist>(RCPNodeHandle, copyConstruct, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb80e00e44389fa5af5d9311a4972d3d</anchor>
      <arglist>(RCPNodeHandle, assignmentOperator, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a620801152f74bc2d38926f7b103deef6</anchor>
      <arglist>(RCPNodeHandle, extraData_basic, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8be04199c2988e11cc93d2114119d787</anchor>
      <arglist>(RCPNodeHandle, extraData_basic_const, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a60920cc3e0c8a6d728866221d500b6ed</anchor>
      <arglist>(RCPNodeHandle, extraData_failed, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afd92a0ea690d30b1e0f789b803001330</anchor>
      <arglist>(RCPNodeHandle, extraData_failed_const, T)</arglist>
    </member>
    <member kind="function">
      <type>TwoDArray&lt; int &gt;</type>
      <name>getSimpleTestTwoDArray</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af2e153e1fc45b89a01632cc68c072c34</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a19a0306ace91a132d9158d8474924b07</anchor>
      <arglist>(Teuchos_TwoDArrays, simpleTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a31661340ccdfbba03017e2a07ee2143d</anchor>
      <arglist>(Teuchos_TwoDArrays, stringFunctions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad9a6bd1aabb5d5bda7dead6117734c83</anchor>
      <arglist>(Teuchos_TwoDArrays, emptyTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0cd78bf1578cf33cee66e3d78797a2f6</anchor>
      <arglist>(Teuchos_TwoDArrays, streamTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab14ea79bb367052a2aab414ef58b6bff</anchor>
      <arglist>(Teuchos_TwoDArray, clearTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a8a4fe55fbd552267eb5f1f799fc9bd</anchor>
      <arglist>(Teuchos_TwoDArray, resizeTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8eeedda3df92a3fcb459032dd15f0469</anchor>
      <arglist>(Teuchos_TwoDArray, symmetryTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab92ea5d64a330687b241fdb845b4a797</anchor>
      <arglist>(Teuchos_TwoDArray, symmetrySerialization)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>globalReduceSuccess</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8425c5bc4900700509f4966aa62a1d35</anchor>
      <arglist>(bool &amp;success, FancyOStream &amp;out)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae2224d8ff064701b4f0c23782b90a104</anchor>
      <arglist>(GlobalMPISession, basic)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1dcace28a7a287c28226dcdeeca8b229</anchor>
      <arglist>(GlobalMPISession, barrier)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aee9e07a2257a209a8aae96136575d914</anchor>
      <arglist>(GlobalMPISession, sum)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad60f0b286a318937a65a895822187f1e</anchor>
      <arglist>(GlobalMPISession, allGather)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ObjectBuilder&lt; ObjectType &gt; &gt;</type>
      <name>objectBuilder</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aca8c0977ded0bdb1da41969c06805155</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; ObjectBuilder&lt; ObjectType &gt; &gt;</type>
      <name>objectBuilder</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a499bea0be0538b955d28d7c61614cd9e</anchor>
      <arglist>(const std::string &amp;objectName, const std::string &amp;objectTypeName)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>printValidParameters</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9a5fa1d8b51e6181bd2d1836b4fc5622</anchor>
      <arglist>(const ParameterListAcceptor &amp;paramListAccpetor, std::ostream &amp;out, const bool showDoc=true)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; const StringToIntegralParameterEntryValidator&lt; IntegralType &gt; &gt;</type>
      <name>getStringToIntegralParameterEntryValidator</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a223ac535aec7c1ab673df9062f13fa87</anchor>
      <arglist>(ParameterEntry const &amp;entry, ParameterList const &amp;paramList, std::string const &amp;paramName)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>XMLObject::getRequired&lt; std::string &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3cd664de83f670df19627549fc174fac</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>XMLObject::addAttribute&lt; const std::string &amp; &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7c544080dce5f3e2ffb195c6340a4c00</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT std::string</type>
      <name>XMLObject::getRequired&lt; std::string &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af0b2adfaf095908375cc6ade14208cd6</anchor>
      <arglist>(const std::string &amp;name) const </arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT void</type>
      <name>XMLObject::addAttribute&lt; const std::string &amp; &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3a1c5189d97ea51b7be1cdeb40758762</anchor>
      <arglist>(const std::string &amp;name, const std::string &amp;value)</arglist>
    </member>
    <member kind="function">
      <type>XMLTestNode</type>
      <name>PerfTest_MachineConfig</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a06b128170a8b3f07c278ec7e529a8b37</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>PerfTestResult</type>
      <name>PerfTest_CheckOrAdd_Test</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad1ca056055a458f2d45c0d81f81fa1f3</anchor>
      <arglist>(XMLTestNode machine_config, XMLTestNode new_test, const std::string filename, const std::string ext_hostname=std::string())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaa1c4477b3b8ce501a09af85309bc685</anchor>
      <arglist>(Teuchos_Conditions, StringConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac7eb528b3381be9c754e9972ea71bf57</anchor>
      <arglist>(Teuchos_Conditions, BoolConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ce8302d8a070e04ca4d6e4d80caa83f</anchor>
      <arglist>(Teuchos_Conditions, NumberConditionSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7e9b412e75954722aa2cbd506bd35673</anchor>
      <arglist>(Teuchos_Conditions, BoolLogicConditionSerialization, BinCondition)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a49e807e7c573f1e392d0869facb96074</anchor>
      <arglist>(Teuchos_Conditions, NotConditionSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a975f44b3dd4077bbe9f7e4d3f19b2451</anchor>
      <arglist>(Teuchos_Conditions, ConditionSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa058601b00a727d26ab11b297a1c994b</anchor>
      <arglist>(Teuchos_Conditions, testConditions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0dac549a8ad74768719666df2d543bdc</anchor>
      <arglist>(Teuchos_Conditions, testConditionGetterAndSetters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a398819585e03afef39f104e854f9fd33</anchor>
      <arglist>(Teuchos_Conditions, testConditionException)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aef6ee4691244089377fced8469312de9</anchor>
      <arglist>(Teuchos_Dependencies, SerializationTestMacros)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af5c0447eec5bc66117dfed97ac55cca3</anchor>
      <arglist>(Teuchos_Dependencies, StringVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aad8b09ed0691e8fc2745e83dc2c21f87</anchor>
      <arglist>(Teuchos_Dependencies, BoolVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a74a7e6c3bd389c804015c8e10fe8b432</anchor>
      <arglist>(Teuchos_Dependencies, NumberVisualDepSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1a0a7c299ba31069e9d8be8789bb3ccd</anchor>
      <arglist>(Teuchos_Dependencies, ConditionVisualDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayModifierTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af6ecd3641cf63eccda6a081639a9cd8c</anchor>
      <arglist>(NumberArrayLengthDependency, Array)                   ArrayModifierTest(TwoDRowDependency</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>ArrayModifierTest</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aae0f3620d7dcc63df796b608b12f9ff6</anchor>
      <arglist>(TwoDColDependency, TwoDArray)                   TEUCHOS_UNIT_TEST(Teuchos_Dependencies</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3234767934c41464f0fa452eb4e67511</anchor>
      <arglist>(dependee1,&quot;val1&quot;)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0d929be38bc1983a0131fac48d81de04</anchor>
      <arglist>(dependee2,&quot;val2&quot;)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8df4059596402d7b3d5608052597b404</anchor>
      <arglist>(dependent1, 2.0)</arglist>
    </member>
    <member kind="function">
      <type>myDepList</type>
      <name>set</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a83ca1b1433430ce68d8557797194a97f</anchor>
      <arglist>(dependent2, 3.0)</arglist>
    </member>
    <member kind="function">
      <type>dependentList</type>
      <name>insert</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae4088e4caac018b9978141a77ef1a8d9</anchor>
      <arglist>(myDepList.getEntryRCP(dependent1))</arglist>
    </member>
    <member kind="function">
      <type>dependentList</type>
      <name>insert</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae645bb8b80d8f521a58dd8ee94f2c9ab</anchor>
      <arglist>(myDepList.getEntryRCP(dependent2))</arglist>
    </member>
    <member kind="function">
      <type>myDepSheet</type>
      <name>addDependency</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a96d2a9b91b8c32534d60bc3dead78bb2</anchor>
      <arglist>(basicStringValiDep)</arglist>
    </member>
    <member kind="function">
      <type>myDepSheet</type>
      <name>addDependency</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aeaaa4e24ac63e663896a4c7fa4721d43</anchor>
      <arglist>(complexStringValiDep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BASIC_DEPENDENCY_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4772ce393c585ba4efeeb84a9fb99bde</anchor>
      <arglist>(readinDep1, StringValidatorDependency, 1, 1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDEE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8c921cbc908866832cf9831e2506c3ac</anchor>
      <arglist>(readinDep1, readinDependee1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a38ea376f60dc8e3400497058c56fbf13</anchor>
      <arglist>(readinDep1, readinDependent1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>BASIC_DEPENDENCY_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2ac2eb24b2d8733c9e9e1423a91d1384</anchor>
      <arglist>(readinDep2, StringValidatorDependency, 1, 2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDEE</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a10b54c69b04ec11eadb808f3c8ee7203</anchor>
      <arglist>(readinDep2, readinDependee2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af40901d641ffcbcdfc114e480d622be6</anchor>
      <arglist>(readinDep2, readinDependent1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>VERIFY_DEPENDENT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a52a70eaa35f4fcd871eafbc9c9f3c1d8</anchor>
      <arglist>(readinDep2, readinDependent2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a518193176c269b6565bb86cb57d7eabd</anchor>
      <arglist>(castedDep1-&gt;getValuesAndValidators().size()==2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6bfb55e653cede21b40e586cc715da6f</anchor>
      <arglist>(castedDep2-&gt;getValuesAndValidators().size()==2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a808721cbfd9cf706a388ce681c0cd3eb</anchor>
      <arglist>(castedDep1-&gt;getDefaultValidator().is_null())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_ASSERT</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3682a70f5a0830ba92f2e8ea20493f6e</anchor>
      <arglist>(nonnull(castedDep2-&gt;getDefaultValidator()))</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1e345920881c7e2afff8b07904e2869e</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep1-&gt;getValuesAndValidators().find(&quot;val1&quot;) -&gt;second, true) -&gt;getMax(), double1Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a502b96f39e291b48f0a242c689d45219</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getValuesAndValidators().find(&quot;val1&quot;) -&gt;second, true) -&gt;getMax(), double1Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a719d01e0f18f86631505ac8c7da9304c</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep1-&gt;getValuesAndValidators().find(&quot;val2&quot;) -&gt;second, true) -&gt;getMax(), double2Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a687d0cb18a9e11eb9092b135d0b5b436</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getValuesAndValidators().find(&quot;val2&quot;) -&gt;second, true) -&gt;getMax(), double2Vali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEST_EQUALITY</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a19000dfb222063703344e210f2d921b0</anchor>
      <arglist>(rcp_dynamic_cast&lt; const EnhancedNumberValidator&lt; double &gt; &gt;(               castedDep2-&gt;getDefaultValidator(), true) -&gt;getMax(), defaultVali-&gt;getMax())</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93cfce76de8d9b693c63be891c70386</anchor>
      <arglist>(Teuchos_Dependencies, BoolValidatorDepSerialization)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a966f4aaa9a97a71e2086e6ce5c19b9fa</anchor>
      <arglist>(Teuchos_Dependencies, RangeValidatorDepSerialization, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a356e01e1a71874a9e28227d21cc89c20</anchor>
      <arglist>(Teuchos_Dependencies, DependencySerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afebcae0d9ba657c35cbe303dc30236fe</anchor>
      <arglist>(Teuchos_Dependencies, NumberVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab196534e4107a103f132fa4de4179d91</anchor>
      <arglist>(Teuchos_Dependencies, BoolVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa5c6a4f18fc26343631e644717f11940</anchor>
      <arglist>(Teuchos_Dependencies, StringVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a382a4d3af676ff169b98bb7e83a936d8</anchor>
      <arglist>(Teuchos_Dependencies, ConditionVisualDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3f70bd444846190255d9115889a3ebfa</anchor>
      <arglist>(Teuchos_Dependencies, BoolValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adf91fccb00f1348dbd4f77005513ecee</anchor>
      <arglist>(Teuchos_Dependencies, StringValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a222733e22ae39fcb70b2b618aefdca89</anchor>
      <arglist>(Teuchos_Dependencies, RangeValidatorDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a96b6da5bea013e78be0ea7be98c9e36c</anchor>
      <arglist>(Teuchos_Dependencies, NumArrayLengthDepSerializationExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a544cb37b497680195498d6f810c6e77d</anchor>
      <arglist>(Teuchos_Dependencies, DepSheetTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ade3136538635ffb5b50ce5ea0bce6f31</anchor>
      <arglist>(Teuchos_Dependencies, testValiDeps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2856ac452203356ddcad608ccb1a8067</anchor>
      <arglist>(Teuchos_Dependencies, testVisualDeps)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9b972848d6774311ac91d2999429e825</anchor>
      <arglist>(Teuchos_Dependencies, testTwoDRowDependency)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a09b0d93a5acb82a5de55e4d2e19c4303</anchor>
      <arglist>(Teuchos_Dependencies, testTwoDColDependency)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae04a917766214ba83240b1814828eb77</anchor>
      <arglist>(Teuchos_Dependencies, testArrayLengthDep)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a81ad34b3b21bf998be7240bdf20e1b53</anchor>
      <arglist>(Teuchos_Dependencies, testDepExceptions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6728d3eea3d676198815a19463d855fa</anchor>
      <arglist>(Teuchos_Dependencies, DepSheetTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af8fbed22a50dd64c3ec0e3ff3ca72155</anchor>
      <arglist>(Teuchos_Functions, SubtractionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2aeb80a5b669a0f2e503085f21ebfb3a</anchor>
      <arglist>(Teuchos_Functions, AdditionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa2e034683948a8c41aba30e25706a65f</anchor>
      <arglist>(Teuchos_Functions, MultiplicationTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac85226b64bb8c22aad18516d7ffa147</anchor>
      <arglist>(Teuchos_Functions, DivisionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab08defe757e5a9163fadc3abc0fe4d51</anchor>
      <arglist>(Teuchos_ObjectBuilder, constructor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aca6659afffe33f27bcead7f4140dcb58</anchor>
      <arglist>(Teuchos_ObjectBuilder, setNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a95f3467170e59dff61fb6b68d69107bf</anchor>
      <arglist>(Teuchos_ObjectBuilder, setObjectFactory)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa7b582ee425fffc30a94a7f6872f6ac9</anchor>
      <arglist>(Teuchos_ObjectBuilder, setObjectFactory_bad)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac30c1dacc4b523d36b033086f637654b</anchor>
      <arglist>(Teuchos_ObjectBuilder, getObjectName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46b3294d2b59c88cdfe1bffd57ceaded</anchor>
      <arglist>(Teuchos_ObjectBuilder, create)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4acd82acc93ca8b23456c9758034aefa</anchor>
      <arglist>(Teuchos_ObjectBuilder, setParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84355a93ee043fe81c6b9ff0e65fabc0</anchor>
      <arglist>(Teuchos_ObjectBuilder, getParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2f3a8ecab6934da2fb9891c5b912730a</anchor>
      <arglist>(Teuchos_ObjectBuilder, getNonconstParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab57640162c79ed6733c42619ce897d77</anchor>
      <arglist>(Teuchos_ObjectBuilder, unsetParameterList)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a4e24ff5f077e085ef1d87cb298c5b3</anchor>
      <arglist>(Teuchos_ObjectBuilder, getValidParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a896848bf63a0e625c765a867ec556012</anchor>
      <arglist>(Teuchos_ObjectBuilder, usedParameters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a35384e5e6503978051b8601cc7f3a9d8</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withOneUsePL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48384505063ff9c26ff276f973dabc49</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withMultipleUsePL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b27020d93f05a9a02334a62b4e93629</anchor>
      <arglist>(Teuchos_ObjectBuilder, setDefaultObject_withoutPL)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a0a9863405ea7c51f2e884139fc5cc1</anchor>
      <arglist>(Teuchos_ParameterEntry, testTypeFunctions)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7aaa226d7023e6484a61472e893a2073</anchor>
      <arglist>(Teuchos_ParameterList, ADD_TYPE_AND_ARRAY_TYPE_PARAMETER)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a34a65782f318d29ef86321bc328833c4</anchor>
      <arglist>(Teuchos_ParameterList, parameterEntryXMLConverters)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69622077710b13854c5f1ce335143d98</anchor>
      <arglist>(Teuchos_ParameterList, parameterEntryConverterExceptions)</arglist>
    </member>
    <member kind="function">
      <type>ParameterList</type>
      <name>createMainPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa412d328a47b9c24b38bd4a1d6295ca3</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>ParameterList</type>
      <name>createValidMainPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae349214a1b1ca588fc214cbf113bab31</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a54f18e4b7db4b4841ff69ec7419b225b</anchor>
      <arglist>(ParameterList, construct_default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3eb7097b3160f962114cd28dbde4a02a</anchor>
      <arglist>(ParameterList, construct_withName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab49c44968916bdcd3e5adc535723ef3f</anchor>
      <arglist>(ParameterList, createParameterList_empty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a15d88ec03e4afac00c16cdadcc74ef06</anchor>
      <arglist>(ParameterList, createParameterList_withName)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5bde39629f13472e60335b5527d46cd6</anchor>
      <arglist>(ParameterList, set_get_int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad5fd7cd614123bfb1ff9e4777b8f3ede</anchor>
      <arglist>(ParameterList, param_isParameter_isSublist_isType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac4b9c97a002aca991cb00d31bed845dd</anchor>
      <arglist>(ParameterList, sublist_isParameter_isSublist_isType)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb0aa71df091caad8fb92bc156ca86f7</anchor>
      <arglist>(ParameterList, set_doc)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7880408efc2d85823902ea897b98d74d</anchor>
      <arglist>(ParameterList, set_doc_validator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afeb8325e24b158788121ef834f2b40bf</anchor>
      <arglist>(ParameterList, set_invalid_int_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae52f2b78b928e6dacdec5591804aa658</anchor>
      <arglist>(ParameterList, set_invalid_int_second)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0a098cb6f21857a38a921ee54dcda76b</anchor>
      <arglist>(ParameterList, set_get_entry)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6d219f31e7bbcc85514265b457186654</anchor>
      <arglist>(ParameterList, set_int_twice_keep_validator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad45e7c7e54c6d80cdfeb9182860bb402</anchor>
      <arglist>(ParameterList, set_get_char_str)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4392bdd9d7437c2270ea1c93d4fb0596</anchor>
      <arglist>(ParameterList, set_get_string)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a04a63f8cba113668fc72a7b6708924dc</anchor>
      <arglist>(ParameterList, get_nonexisting_param)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a46b7818f53ea790fe7328c3b65022af0</anchor>
      <arglist>(ParameterList, get_existing_incorrect_type)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84526b2ee2d6988fa6b564907b4e9a18</anchor>
      <arglist>(ParameterList, getPtr)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af96f70dafd5fb4183cd6104ff7362ece</anchor>
      <arglist>(ParameterList, getEntryRCP)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1b5dee46c02a73548b99fa0a617ae343</anchor>
      <arglist>(ParameterList, get_default_then_change)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a63486d0554bd7919bbdf1127a77446c0</anchor>
      <arglist>(ParameterList, remove_1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86782a1874c8eb6a3235514ec0b14f2b</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_default)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aab2e4e23a4098fef2763b53dd7cd7671</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_docString)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a26eaa3904a522eab9b30f0e97f8875f0</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_mustAlreadyExist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a10f38f964185992bcb89d69bda9c1b65</anchor>
      <arglist>(ParameterList, get_existing_sublist_nonsublist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0dd8c8c2042512e13de17588ac96aff</anchor>
      <arglist>(ParameterList, get_existing_sublist_nonconst)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2bdcb578f3f89d088f48686e32b1eb45</anchor>
      <arglist>(ParameterList, get_existing_sublist_const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a384d518bb2464da8436717ee32d30dd7</anchor>
      <arglist>(ParameterList, get_nonexisting_sublist_const)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac9ea4a680de02c2cfb3e53595d26f281</anchor>
      <arglist>(ParameterList, get_existing_sublist_const_nonsublist)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa0b47ef9bf4ea3ca7dbd97d813ff2d15</anchor>
      <arglist>(ParameterList, sublist_add_2)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad6d0850058f69aacedfb6f5fa84bbeb9</anchor>
      <arglist>(ParameterList, sublist_scenario_1)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adab6f75a8cfd2fa63fe02790c12a9c2c</anchor>
      <arglist>(ParameterList, copy_constructor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7ed51f622879cbef738a8d3d1c5f2a0e</anchor>
      <arglist>(ParameterList, assignment_operator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad447917a485ec3d5f3b73a439c9135e5</anchor>
      <arglist>(ParameterList, iterator_params)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abf4c1c9529d92cab7958978ab210576d</anchor>
      <arglist>(ParameterList, iterator_params_sublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abcab1de5ffd755e16b070ffdb0c86591</anchor>
      <arglist>(ParameterList, operatorEqualityWithEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9fadb85f5500c60fff8dee5c181bcbca</anchor>
      <arglist>(ParameterList, operatorEqualityDifferentSublistNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9158681c63058127eb113cd159f09e9d</anchor>
      <arglist>(ParameterList, operatorEqualityDifferentLengths)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa211da9bf6a28a575080cec53c8056f7</anchor>
      <arglist>(ParameterList, haveSameValuesWithEmpty)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a68e5c133db9d146a6bc9dfa80a0ca429</anchor>
      <arglist>(ParameterList, haveSameValuesDifferentSublistNames)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36b71cfe6eec24d853dd68299cbc1a12</anchor>
      <arglist>(ParameterList, validateAgainstSelf)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9b6610a8881152a23bd12bfb899bf97a</anchor>
      <arglist>(ParameterList, validateParametersAndSetDefaults)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa574513b4b6135564b0e4212edff6047</anchor>
      <arglist>(ParameterList, getIntegralValue_int)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae43a208f99bce6d40cd11a5aaff5e8c4</anchor>
      <arglist>(ParameterList, ExistingSublistIsOkay)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a709147d8fbf86bb71e972e3861ca217f</anchor>
      <arglist>(ParameterList, XMLDuplicatedSublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0ffd9b0d9c7e740a826655877920b111</anchor>
      <arglist>(XMLParameterListReader, XMLDuplicatedSublistsThrowsError)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a672081b28db3e8e6b0971a16a5cda6af</anchor>
      <arglist>(XMLParameterListReader, XMLDuplicatedSublistsBackwardsCompatible)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a576a6a6f7c709f32cdb3fb5e85d64ff2</anchor>
      <arglist>(OrdinalIndex, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7dfa574fd71acff4ef4722d4b869b167</anchor>
      <arglist>(OrdinalIndex, construct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7095fd8620dfacf427cd66312e69295b</anchor>
      <arglist>(KeyObjectPair, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab03d8f4105268ff85c94e8db4ada4dca</anchor>
      <arglist>(KeyObjectPair, construct_default_isActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3558c4267abd28af4886aaedc963d194</anchor>
      <arglist>(KeyObjectPair, makeInvalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a91525ae755a4a2bd663742278a59ca8b</anchor>
      <arglist>(KeyObjectPair, construct_set_isActive)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa444b0aadd14cc0bbfe61825fca7e794</anchor>
      <arglist>(KeyObjectPair, copyConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adbb1df237c97647daa2c920fd1e72395</anchor>
      <arglist>(KeyObjectPair, assign)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5ba16971b3e130f47e6a797aec09a6fe</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, defaultConstruct)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a370c3e39e7cb63fa2c4061c4e238828c</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basic_set_get)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7eb9de446c5886c0bc88411811788605</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, set_two_keep_ref)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4d14489e2200b767150d97536677adf9</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjOrdinalIndex)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab8183f44accba2ed01b116b7c45f8800</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, set_and_set_again)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a297aa9780db23a19137c077037bbaa55</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basicNonconstIterators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1f110d6356489b5cbcb02fbc9f13ade5</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, basicConstIterators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5208bd4b60e8a22544c76726fb616dd2</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5f4b7fb02937d0942c5039d68af226dd</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_first)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae54e1a7f2b8374f248a3de8b859566be</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_middle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aec9c8847b98a3c96570f7ae29f6a190d</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_middle)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5dc676d2cd11d1414593e03813b75748</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1eee1fee41870bdf98dfdf56dad60c94</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_last)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1ccd0611ad70b7a6a8d7174f7879a0ff</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getNonconstObjPtr_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2e974804bae2fa38047010aaea2271c7</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjPtr_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a86a1c573c4a2caec156661c458f7b0d3</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_idx_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7fd98e12409e2b263f0e8d5bc7a2ca12</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getNonconstObjPtr_key_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af26ce1f88bdbec7156ae440fe0bdba87</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, getObjPtr_key_invalid)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a81e492e2c8b4bfc2c261fb44fb02d1a8</anchor>
      <arglist>(StringIndexedOrderedValueObjectContainer, removeObj_key_invalid)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>writeThenReadPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad49389b0f0d0745e2b09ea28458155b2</anchor>
      <arglist>(ParameterList &amp;myList)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSPARAMETERLIST_LIB_DLL_EXPORT RCP&lt; ParameterList &gt;</type>
      <name>writeThenReadPL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>add76c8b2f1e3d097e2ebf3eb7f318fa6</anchor>
      <arglist>(ParameterList &amp;myList, RCP&lt; DependencySheet &gt; depSheetIn, RCP&lt; DependencySheet &gt; depSheetOut)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f185922a055f563457aa4cb5200d1a3</anchor>
      <arglist>(Teuchos_Validator, exceptionTests)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a91ff8e9d20de4874ed8dafb904c54e63</anchor>
      <arglist>(Teuchos_Validator, fileNameValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad217ea375a04d05d6b5610e5393dbbe8</anchor>
      <arglist>(Teuchos_Validator, stringValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa4d132f1429abfab5bb1569a76064691</anchor>
      <arglist>(Teuchos_Validator, anynumberValidatorConverter)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac28359fcd7229b774c2c4cbf63fb9a77</anchor>
      <arglist>(Teuchos_Validator, EnhancedNumberValidatorConverter, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2f4618d01f061926520603b3f5d1ec22</anchor>
      <arglist>(Teuchos_Validator, NumberArrayValidatorConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a751d3e9399749b0540cc390c0362c9f0</anchor>
      <arglist>(Teuchos_Validator, TwoDArrayNumberValidatorConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST_TEMPLATE_1_DECL</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac93623a79a764a688dededdd30f4ec67</anchor>
      <arglist>(Teuchos_Validator, StringToIntegralConverterTest, T)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae1f878e1594480a19fc19f1ec1a3b3d9</anchor>
      <arglist>(Teuchos_Validator, existingPrototypeTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a235f8f165eeb496f4101b7461a75b416</anchor>
      <arglist>(Teuchos_Validators, numberValidators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afc65f4fb8347460e5b0d8f1bf8ca50c1</anchor>
      <arglist>(Teuchos_Validators, stringValidator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af48bb85147b14af4b02222f6c5b610b8</anchor>
      <arglist>(Teuchos_Validators, fileNameValidator)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a78827beb4056f5fe16d93cb3b4782c5d</anchor>
      <arglist>(Teuchos_Validators, arrayValidators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af69455b4d75e9b7478ff12de7841f2aa</anchor>
      <arglist>(Teuchos_Validators, twoDArrayValidators)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7e407983091cfd23824bcc8e72e2b0bc</anchor>
      <arglist>(XMLParameterListHelpers, anonymousSublists)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2cfd76ea7aad31fe58deb7c7f4541035</anchor>
      <arglist>(XMLParameterListHelpers, anonymousParam)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8e2136cf3b5fcd80b154624cb22bcf95</anchor>
      <arglist>(XMLParameterListHelpers, toFromFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aadca1f44f8652d00963f9abf941a23d6</anchor>
      <arglist>(XMLParameterListHelpers, OverwriteTest)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab537b3c801d548d612cd85d092d1ea8a</anchor>
      <arglist>(XMLParser, orderedWriteRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a03930220d22d0402d7eb2b2a5c36b0a4</anchor>
      <arglist>(XMLParser, simpleOrderedRead)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af273c01a1542cbf1f794d8e19a18ea0a</anchor>
      <arglist>(XMLParser, ParseFile)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae87c243f58ce0980b49c949b4f245ed6</anchor>
      <arglist>(XMLParser, IgnoreDeclarations)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6fff75aeedfb38885770eeb348303fb</anchor>
      <arglist>(XMLParser, simpletest)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>toString</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a74fc3ddc7fbfe445af63ee8b8f6ee232</anchor>
      <arglist>(const EReductionType reductType)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a27916aae479af3a854007be89019edc6</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const double sendBuffer[], double globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a27e604e725078402d79daf512fff8c73</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a758a81b0d72dc75471e148835e187ba7</anchor>
      <arglist>(const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1715516b1409760b7c23a3e69f81214e</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const double sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aedc86442bf24a32f6ebfbdd1151f3a00</anchor>
      <arglist>(const double sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aac49d54dfc1d67d314cf930485a7280a</anchor>
      <arglist>(const ArrayRCP&lt; const double &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b31ac87d62add3712ee4553db2c72e7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const float sendBuffer[], float globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab9283a4f3c6b100940ced15f957f2c38</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaab5a1f6d96ea51d8c2d3999e46d0390</anchor>
      <arglist>(const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1c23b932ca3e341bb5b34d330378924b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const float sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9c0b3c7693b3452545bce7cfd8e0dc82</anchor>
      <arglist>(const float sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aba9ddf334a6b5afc39f3174a054bdf5e</anchor>
      <arglist>(const ArrayRCP&lt; const float &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa09bb1b26b97f3ea48d6597971e46101</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7b396e0116c8c2eb8bad8b03f839efe5</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5ef967e459242d295a446cc2d5e26c38</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const long sendBuffer[], long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8db7a8d30b11130e344bb57f8911a73f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa18b161c12fe88f4b695de8b6ad1f708</anchor>
      <arglist>(const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6aeb6546a09b242afa840fc210ccefba</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a90e48fe686108359fb3f1830f4545b69</anchor>
      <arglist>(const long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad045d311dd73ea8b31796bd65174b81b</anchor>
      <arglist>(const ArrayRCP&lt; const long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a137a8cf4c3fcecf4f2f91921e22c499c</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a138042fb29ebefd5aca4c1b2abf42eb6</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a216017e15c616d7ff8d3ee814d11c3e9</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned long sendBuffer[], unsigned long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7bd975526427945c1f975b61666b6645</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9016dabcec7d3ca9b54925567effedd4</anchor>
      <arglist>(const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa5cfdc7584771cc05438e37e53b30c26</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a84eee9a6a39d5e55be7fc34abf68de39</anchor>
      <arglist>(const unsigned long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3fb29eae10dc116d37c4decf052d2ca7</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1643e34d1931c5bd6c8cd9e44f9b7336</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aff205bd6057e66154f9b5744d25bffc5</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>scatter&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab8d9ec7760a93ece862603a6d22faf36</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduce&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3a740f5a3e8f81e968a7f14352c3e28c</anchor>
      <arglist>(const int sendBuf[], int recvBuf[], const int count, const EReductionType reductType, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a77a609f08b122ab2327051a3952c2a79</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const int sendBuffer[], int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e3e96176e7f2ca006f1ac2a1ffb591f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaabd7376099a952af0fb65769bbf2e44</anchor>
      <arglist>(const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb1845239b5d47aef6777f75d077b77d</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a300fba806f354cbed3e6539fc39673d5</anchor>
      <arglist>(const int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a11976239bc025c837b3a003c8b62a55a</anchor>
      <arglist>(const ArrayRCP&lt; const int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1af860a0e1eed42604029a72322867f9</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af424c82b352d575e00db202315dacf9b</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0aac06648db7f59357cf24f6c1f39cf8</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned int sendBuffer[], unsigned int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9400dee58781cb5dd2cd77ed3306175a</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aff1e7705b594f12c2f5ad174d024758c</anchor>
      <arglist>(const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a32b37607b7b926510aedb1171acf7ea1</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab340cab560cf42a83ff4bb75a77fdb1d</anchor>
      <arglist>(const unsigned int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab26cf7255d6c04abd0c4c7a16515d0dd</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gather&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9eef002fe30ae1a013eaf7176792b834</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>gatherv&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aeef24732ab76793f37ed3868006302be</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>reduceAll&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a80bb8e5a4c8c7cb1a0fb71b96d48719b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const short sendBuffer[], short globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2ca43164a01f2b6fafd53920e4fcfd08</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae1fb9c74805cd0f45a3c63be58e4835b</anchor>
      <arglist>(const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abb2c5481befcbd6ce317248c1659d4f5</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const short sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad3dd4850eabc7c8f90f8ba8d7dcb00f2</anchor>
      <arglist>(const short sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; Teuchos::CommRequest&lt; int &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae668fac97a225ccb40891fb047dd3cff</anchor>
      <arglist>(const ArrayRCP&lt; const short &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED void</type>
      <name>reduceAll</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a73421d39e556e6006c677e0d3ed0bd88</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, Packet *globalReduct)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED void</type>
      <name>scan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6e89ec4ec75fe3902d934b8881532f0</anchor>
      <arglist>(const Comm&lt; Ordinal &gt; &amp;comm, const EReductionType reductType, const Packet &amp;send, Packet *scanReduct)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>send</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acfd014f1b77797750fc62bf031dd93a9</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>ssend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a120e026584caa61a58ae4deace44ce58</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>readySend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a29ed792d55caa3483b4ae3bdd58dcc79</anchor>
      <arglist>(const Packet sendBuffer[], const Ordinal count, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>isend</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a0e340840bed50a4ddc29deb736d239</anchor>
      <arglist>(const ArrayRCP&lt; const Packet &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; CommRequest&lt; Ordinal &gt; &gt;</type>
      <name>ireceive</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2dca8fd69afa4c6dd9e0dce57f83a2a3</anchor>
      <arglist>(const ArrayRCP&lt; Packet &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; Ordinal &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>ValueTypeReductionOp&lt; Ordinal, Packet &gt; *</type>
      <name>createOp</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a23cccf08fd5b4c8d8cfab900c5a147c4</anchor>
      <arglist>(const EReductionType reductType)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afb033006fe5aea2188e20c32fda9bed8</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const double sendBuffer[], double globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af01b1d2c30fa89952f2edb3223d98f3f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac452abadd669bd41a7074c4533e0eb97</anchor>
      <arglist>(const ArrayRCP&lt; double &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac85acd10c7a23636cf20df29767299bf</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const double sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4973758acd41245e630083fe48c3f51f</anchor>
      <arglist>(const double sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, double &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a674fa529d7fccd7cfa7f96f4c34a8101</anchor>
      <arglist>(const ArrayRCP&lt; const double &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2d02e21ab2bb278f564d7f2f057ab53e</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const float sendBuffer[], float globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ada1017347a3b2b3924cd32146734b97b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5e6e9b8a369ca56828d2bbb34805bc63</anchor>
      <arglist>(const ArrayRCP&lt; float &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7bf149e99cd44f6d885d0adb8de0a5d2</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const float sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f17c00822711733e103ec90fb418e64</anchor>
      <arglist>(const float sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, float &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3000167b0252363ff6813ed2606759c3</anchor>
      <arglist>(const ArrayRCP&lt; const float &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6e8efcf065704762afd70965b836e520</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaf20da523a7c607eb719a5733f95eaa4</anchor>
      <arglist>(const long sendBuf[], const int sendCount, long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a18eaf96c3139f81bcad808c06e2e06c7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const long sendBuffer[], long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac2aa3a815bc9ae1da544a3af29b94c8f</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af973cd8bdb261a58f3d26ec9d73b2247</anchor>
      <arglist>(const ArrayRCP&lt; long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6f94027c076383e0914cef7822e3de3b</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a07d9759584944d86df135b6cfe841b92</anchor>
      <arglist>(const long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a97ccf4f0e036645afe82d0c385ba169f</anchor>
      <arglist>(const ArrayRCP&lt; const long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1df6caa415d24f954a7485e7c1eefdb9</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae72482daffe00460048dc114745cd332</anchor>
      <arglist>(const unsigned long sendBuf[], const int sendCount, unsigned long recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0853e8932f826fb4fd4ab755075e6097</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned long sendBuffer[], unsigned long globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3ec7cd7da616d115344a34d897425e09</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad0608ce793cc27e1f6eb07e3744f75e1</anchor>
      <arglist>(const ArrayRCP&lt; unsigned long &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afee74c42e4d4b6a008c658f686925786</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned long sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6b27d7f78c829cdd3691198cad2268b1</anchor>
      <arglist>(const unsigned long sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, unsigned long &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4fd70db0fa7d0a43c61a51757c60ea16</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned long &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0473db97d4770f3eb46ec6869f823b26</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab03029b8b29a1486bd7aa8728d0ebeba</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>scatter</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4b82b1e889e64a52d36351bee82c34b1</anchor>
      <arglist>(const int sendBuf[], const int sendCount, int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduce&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad17610323ac8ac90537120c0724cd2af</anchor>
      <arglist>(const int sendBuf[], int recvBuf[], const int count, const EReductionType reductType, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0f561e62c24b16223220790872534609</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const int sendBuffer[], int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad59d4ce846eef2f45dcbaccaf2b1bc79</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>af773d402988cda3417be2579f656e838</anchor>
      <arglist>(const ArrayRCP&lt; int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae6632f665a311b58f27492a540c961ea</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae542a56a78773b2f29c5ba6e68b9f571</anchor>
      <arglist>(const int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7123c626e9a0f0602cd38449a85e9394</anchor>
      <arglist>(const ArrayRCP&lt; const int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ad6a9b2e0b6d9c5089571e85c990abf29</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a72db82e8755c103d56b02e65896ba73d</anchor>
      <arglist>(const unsigned int sendBuf[], const int sendCount, unsigned int recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0fd339bc9ce6bd8465d4b55b87f2fab7</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const unsigned int sendBuffer[], unsigned int globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a03e2b95a1f5cdaf9eec0e6c4e72eaf01</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a97069f547a0361f139f2a71acff905e3</anchor>
      <arglist>(const ArrayRCP&lt; unsigned int &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a25e88cc03b73efa3b03ba6fc8249b430</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const unsigned int sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6098a55af07cc04cbac96f7499ba9865</anchor>
      <arglist>(const unsigned int sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, unsigned int &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4a812bb2e544a07bba6add0edaf45ccf</anchor>
      <arglist>(const ArrayRCP&lt; const unsigned int &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gather&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a164b89894d8bfa3422a9a5fef9f0d5c4</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCount, const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>gatherv&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8b6b99dd97d99563b940e1c39a08bcee</anchor>
      <arglist>(const short sendBuf[], const int sendCount, short recvBuf[], const int recvCounts[], const int displs[], const int root, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>reduceAll&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5a92288cbb987235fa5990bed7479e73</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const EReductionType reductType, const int count, const short sendBuffer[], short globalReducts[])</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71d8c8e5b268560b5b9e55d734da2d87</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>ireceive&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4aacc7c72b8c6a5625e4af017a4652b2</anchor>
      <arglist>(const ArrayRCP&lt; short &gt; &amp;recvBuffer, const int sourceRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a8a89d76ea32562ba797498881a878973</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const int count, const short sendBuffer[], const int destRank)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT void</type>
      <name>send&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a0e9c135427dee151d8c1db3d22b5989c</anchor>
      <arglist>(const short sendBuffer[], const int count, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCOMM_LIB_DLL_EXPORT RCP&lt; CommRequest&lt; int &gt; &gt;</type>
      <name>isend&lt; int, short &gt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a282623718a638b15498784a3b38432ca</anchor>
      <arglist>(const ArrayRCP&lt; const short &gt; &amp;sendBuffer, const int destRank, const int tag, const Comm&lt; int &gt; &amp;comm)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>mergeCounterNames</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a48c93abd49d2b687f88608aa5d60c0d9</anchor>
      <arglist>(const Comm&lt; int &gt; &amp;comm, const Array&lt; std::string &gt; &amp;localNames, Array&lt; std::string &gt; &amp;globalNames, const ECounterSetOp setOp)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aaac05438e2b20a5ac766f180127ff4b5</anchor>
      <arglist>(Teuchos_ParameterList, xmlUpdateAndBroadcast)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a15312f337b249035f2693ef18fa2895a</anchor>
      <arglist>(Teuchos_ParameterList, xmlUpdateAndBroadcastNoOverWrite)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a4400bee931aa5782b50b7d98157c8eff</anchor>
      <arglist>(TimeMonitor, FUNC_TIME_MONITOR)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a62ada1473236680dffdedb5ece4c54d2</anchor>
      <arglist>(TimeMonitor, enableTimer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a71f6623169cea8961406b7d75b62e371</anchor>
      <arglist>(TimeMonitor, YamlLabelQuoting)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a008d57970d233707693fb02413e24d3e</anchor>
      <arglist>(TimeMonitor, TimerLabelFiltering)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a682f5c609f3511b3b1022387960a5265</anchor>
      <arglist>(TimeMonitor, FUNC_TIME_MONITOR_tested)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a68cd056969dfbdde28929fb0fcdcbabe</anchor>
      <arglist>(TimeMonitor, SUMMARIZE_diffTimerSets)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a36899dffe2905df1607ad155d879dddf</anchor>
      <arglist>(TimeMonitor, FILTER_ZERO_TIMERS_sameParallelCallCounts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa761125d9efeb266687f72ea5e6aee17</anchor>
      <arglist>(TimeMonitor, FILTER_ZERO_TIMERS_differentParallelCallCounts)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a6be2b0421b378c9467fafb4caaab7ed0</anchor>
      <arglist>(TimeMonitor, IgnoreMissingTimers)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aae70d4e1dbc4b3843b5c6b7f4a85530e</anchor>
      <arglist>(UnitTestHarness, nonRootFails)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a541046d1cdfae4649f4e96427b446174</anchor>
      <arglist>(UnitTestHarness, nonRootThrowsTeuchosExcept)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>TEUCHOS_UNIT_TEST</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a331322dbc062c64362538d3091babd8d</anchor>
      <arglist>(UnitTestHarness, nonRootThrowsIntExcept)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3d91983b560dd687b96c6950dff7a945</anchor>
      <arglist>(std::ostream &amp;os, const Teuchos::Object &amp;obj)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 1, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga9fc0e1264c2081d2b8f2b22549785c47</anchor>
      <arglist>(T t1)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 2, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gad25b43a1cbe9e99069e5c08c26a8574d</anchor>
      <arglist>(T t1, T t2)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 3, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gac2527f96b0a457afe639f594cba50f7c</anchor>
      <arglist>(T t1, T t2, T t3)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 4, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga57a5810259c0fc3afb78c9e449fbdb59</anchor>
      <arglist>(T t1, T t2, T t3, T t4)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 5, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga326c9fe20c12a9d913feebddd0f5b387</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 6, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga445a2817e0b2aefec6529e0d6ea2a641</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5, T t6)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>doFloatingPointTrap</name>
      <anchorfile>group__Teuchos__FloatingPointTrap__grp.html</anchorfile>
      <anchor>ga34e4d04211025e5f620ef214fb40bc9e</anchor>
      <arglist>(bool enableTrap)</arglist>
    </member>
    <member kind="variable">
      <type>const float</type>
      <name>flt_nan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1b3a566bb79a9d600d69386a06aa27de</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const double</type>
      <name>dbl_nan</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a1d90b2ea410d23afbe81140232d89e42</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type></type>
      <name>StringValidatorDepSerialization</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a142583e4d30e9abeca011f4c9f3cfb40</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependee2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a45a36f533015aa9b5923081c938dba6e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependent1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>aa642e652bb46c800c8811a66dce64547</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>std::string</type>
      <name>dependent2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acbbe7b0458812725f9b8dc2391da141a</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>ParameterList</type>
      <name>myDepList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a40c52c2e5e3a6040f58339a44cc9c569</anchor>
      <arglist>(&quot;String Vali Dep List&quot;)</arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; DependencySheet &gt;</type>
      <name>myDepSheet</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>afa9a389e6a902cae9e19e20292862b69</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>double1Vali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9cd6803aee6315b84355c060a4e7b260</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>double2Vali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69c6bd67e485f5518db74d0245c6f497</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; EnhancedNumberValidator&lt; double &gt; &gt;</type>
      <name>defaultVali</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5fcb5a7df12f957eb442c9e49ee3f35b</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>StringValidatorDependency::ValueToValidatorMap</type>
      <name>valuesAndValidators</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a492d8e9c132761622d063c63af17b7e8</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>basicStringValiDep</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7cf3b0eb6f68b5eaddcbb7407d3cbbb5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>Dependency::ParameterEntryList</type>
      <name>dependentList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a2036a57196105a4a5bb3fb0dd84d54c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>complexStringValiDep</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ace2c9331583d7ace8083d738c790556e</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; DependencySheet &gt;</type>
      <name>readInDepSheet</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a7daf1a1f8d159eb49352a5dc7a714936</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>XMLParameterListWriter</type>
      <name>plWriter</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ac354c9c7db51f02797fc603a2eba7d5f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>XMLObject</type>
      <name>xmlOut</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abe6be0b624eb9cee14780e788acb5a1f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>out&lt;&lt; xmlOut.toString();RCP&lt; ParameterList &gt;</type>
      <name>readInList</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a5c67218288063432c14e29595e4cd0e6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependee1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a90c8e19e8a0e5107952594aa4a4e3c90</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependent1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a24ccd0223a691080793b402455468b6f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependee2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a9437a6fcfaaf4ad8cb79eed5a6a0a583</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; ParameterEntry &gt;</type>
      <name>readinDependent2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>abf5dc2b9a4515983ba97ab2e709e9e37</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Dependency &gt;</type>
      <name>readinDep1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>acbb858ac5d984c0fc7fe475f3da01cc6</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; Dependency &gt;</type>
      <name>readinDep2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a69033e4d140e6612336fbb7746a04b65</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>castedDep1</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a92b9724ac3703606aa4b2a298e2847d1</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>RCP&lt; StringValidatorDependency &gt;</type>
      <name>castedDep2</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a478c740fa7e59217fc5407a97ba99b15</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const std::string</type>
      <name>ObjectType_name</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a435bfa73b9c3faed4bedc54fd137d7a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>const int</type>
      <name>g_arraySize</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>adab7c12a0ef2dcd5d365f2d121f5b7bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ESideChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ae938c31c866c88acd4ac74647bcf2a85</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ETranspChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a26d6f15883b04e291e8771d8ea75f805</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>EUploChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a3c3e3b18a6f91859a1945dcd5c077e37</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>EDiagChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>ab4b7992ec12626f680891608390ef33b</anchor>
      <arglist>[]</arglist>
    </member>
    <member kind="variable">
      <type>TEUCHOSNUMERICS_LIB_DLL_EXPORT const char</type>
      <name>ETypeChar</name>
      <anchorfile>namespaceTeuchos.html</anchorfile>
      <anchor>a640e69651a3c03a0d32b93d863a3b523</anchor>
      <arglist>[]</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::details</name>
    <filename>namespaceTeuchos_1_1details.html</filename>
    <class kind="class">Teuchos::details::GivensRotator</class>
    <class kind="class">Teuchos::details::GivensRotator&lt; ScalarType, false &gt;</class>
    <class kind="class">Teuchos::details::GivensRotator&lt; ScalarType, true &gt;</class>
    <class kind="struct">Teuchos::details::lapack_traits</class>
    <class kind="struct">Teuchos::details::lapack_traits&lt; std::complex&lt; T &gt; &gt;</class>
    <class kind="class">Teuchos::details::MagValue</class>
    <class kind="class">Teuchos::details::MagValue&lt; ScalarType, false &gt;</class>
    <class kind="class">Teuchos::details::MagValue&lt; ScalarType, true &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::Details</name>
    <filename>namespaceTeuchos_1_1Details.html</filename>
    <class kind="class">Teuchos::Details::AllocationLogger</class>
    <class kind="class">Teuchos::Details::Allocator</class>
    <class kind="class">Teuchos::Details::MpiCommRequest</class>
    <member kind="function">
      <type>bool</type>
      <name>operator==</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>aff5f2714a8998bb9f68f840b99190bec</anchor>
      <arglist>(const Allocator&lt; T &gt; &amp;, const Allocator&lt; U &gt; &amp;)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>operator!=</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>ac9c1a30d9a4e3a2ec39f2e57b97cc63f</anchor>
      <arglist>(const Allocator&lt; T &gt; &amp;a_t, const Allocator&lt; U &gt; &amp;a_u)</arglist>
    </member>
    <member kind="function">
      <type>RCP&lt; MpiCommRequest &gt;</type>
      <name>mpiCommRequest</name>
      <anchorfile>namespaceTeuchos_1_1Details.html</anchorfile>
      <anchor>a419c34349e7c72727bddcd394b68babf</anchor>
      <arglist>(MPI_Request rawMpiRequest, const ArrayRCP&lt; const char &gt; &amp;buffer)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::Exceptions</name>
    <filename>namespaceTeuchos_1_1Exceptions.html</filename>
    <class kind="class">Teuchos::Exceptions::InvalidParameter</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterName</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterType</class>
    <class kind="class">Teuchos::Exceptions::InvalidParameterValue</class>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::MatrixMarket</name>
    <filename>namespaceTeuchos_1_1MatrixMarket.html</filename>
    <namespace>Teuchos::MatrixMarket::details</namespace>
    <namespace>Teuchos::MatrixMarket::Raw</namespace>
    <class kind="class">Teuchos::MatrixMarket::Banner</class>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReader</class>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReader&lt; Callback, Ordinal, Scalar, false &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::CoordDataReaderBase</class>
    <class kind="class">Teuchos::MatrixMarket::CoordPatternReader</class>
    <class kind="class">Teuchos::MatrixMarket::SymmetrizingAdder</class>
    <class kind="class">Teuchos::MatrixMarket::SymmetrizingGraphAdder</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a6f567c999cdcb01b40e045467b9552fa</anchor>
      <arglist>(std::ostream &amp;out, const Banner &amp;banner)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>maxLineLength</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>abb30e328d1df0e6f796f8828ac4ab664</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>checkCommentLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a4bd717b41090f13b7e9e5819e95d452d</anchor>
      <arglist>(const std::string &amp;line, size_t &amp;start, size_t &amp;size, const size_t lineNumber, const bool tolerant, const bool maybeBannerLine=false)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readPatternData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a219a3b506797c69cd6c3ccf1a432c49d</anchor>
      <arglist>(std::istream &amp;istr, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readRealData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>af3e287675a627409418a15ef51e181c4</anchor>
      <arglist>(std::istream &amp;istr, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, Real &amp;realValue, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readPatternLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>ace524f6918b3bbeb29b894730bd3ca3e</anchor>
      <arglist>(const std::string &amp;line, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readRealLine</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>ac4743cd282619c49f47dd390552755cd</anchor>
      <arglist>(const std::string &amp;line, Ordinal &amp;rowIndex, Ordinal &amp;colIndex, Real &amp;realValue, const size_t lineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>std::pair&lt; bool, std::vector&lt; size_t &gt; &gt;</type>
      <name>readPatternCoordinateData</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a64b6cf6bcc7e265171f314b4ac82bdc6</anchor>
      <arglist>(std::istream &amp;in, PatternCallback add, const size_t startingLineNumber, const bool tolerant)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>readCoordinateDimensions</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket.html</anchorfile>
      <anchor>a0b4516b195f7d45db476c1a674a05cdd</anchor>
      <arglist>(std::istream &amp;in, Ordinal &amp;numRows, Ordinal &amp;numCols, Ordinal &amp;numNonzeros, size_t &amp;lineNumber, const bool tolerant)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::MatrixMarket::details</name>
    <filename>namespaceTeuchos_1_1MatrixMarket_1_1details.html</filename>
    <class kind="class">Teuchos::MatrixMarket::details::ScalarAssigner</class>
    <class kind="class">Teuchos::MatrixMarket::details::ScalarAssigner&lt; RealType, false &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientific</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, false &gt;</class>
    <class kind="class">Teuchos::MatrixMarket::details::SetScientificImpl&lt; Scalar, true &gt;</class>
    <member kind="function">
      <type>void</type>
      <name>assignScalar</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a49905c03285cff67e0c01f58e3649894</anchor>
      <arglist>(Scalar &amp;val, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;real, const typename Teuchos::ScalarTraits&lt; Scalar &gt;::magnitudeType &amp;imag)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>ab24597d8633896c0edf54bc205de91f1</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a5ac6e44cf74b0bfe0adff0028d901e13</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function">
      <type>std::string</type>
      <name>trim_and_lowercase</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>aa111ea03e0279d14e49664d05cd3610a</anchor>
      <arglist>(const std::string &amp;in)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static bool</type>
      <name>endToken</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a1151389080490fde796d6d0af2970fe7</anchor>
      <arglist>(const std::pair&lt; size_t, size_t &gt; &amp;range)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static std::pair&lt; size_t, size_t &gt;</type>
      <name>nextToken</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a309e62a15084f859fd4564304e373643</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delimiters, const size_t start, const size_t size)</arglist>
    </member>
    <member kind="function">
      <type>std::vector&lt; std::string &gt;</type>
      <name>split</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1details.html</anchorfile>
      <anchor>a11dd907e7fdd7f5e49304173a3bc68cf</anchor>
      <arglist>(const std::string &amp;str, const std::string &amp;delimiters, const size_t start=0)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::MatrixMarket::Raw</name>
    <filename>namespaceTeuchos_1_1MatrixMarket_1_1Raw.html</filename>
    <class kind="class">Teuchos::MatrixMarket::Raw::Adder</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::Checker</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::Element</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::GraphAdder</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::GraphElement</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::Reader</class>
    <class kind="class">Teuchos::MatrixMarket::Raw::Writer</class>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1Raw.html</anchorfile>
      <anchor>a046b191164be939cbd23a0e35544729f</anchor>
      <arglist>(std::ostream &amp;out, const Element&lt; Scalar, Ordinal &gt; &amp;elt)</arglist>
    </member>
    <member kind="function">
      <type>std::ostream &amp;</type>
      <name>operator&lt;&lt;</name>
      <anchorfile>namespaceTeuchos_1_1MatrixMarket_1_1Raw.html</anchorfile>
      <anchor>a31f9015a3cc8229e80536f5be23127f0</anchor>
      <arglist>(std::ostream &amp;out, const GraphElement&lt; Ordinal &gt; &amp;elt)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::MixMaxUtilities</name>
    <filename>namespaceTeuchos_1_1MixMaxUtilities.html</filename>
    <class kind="class">Teuchos::MixMaxUtilities::AND</class>
    <class kind="class">Teuchos::MixMaxUtilities::AND&lt; false, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::AND&lt; true, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max&lt; false, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Max&lt; true, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min&lt; false, Ordinal, Packet &gt;</class>
    <class kind="class">Teuchos::MixMaxUtilities::Min&lt; true, Ordinal, Packet &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::PtrPrivateUtilityPack</name>
    <filename>namespaceTeuchos_1_1PtrPrivateUtilityPack.html</filename>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>throw_null</name>
      <anchorfile>namespaceTeuchos_1_1PtrPrivateUtilityPack.html</anchorfile>
      <anchor>a060e9d144429537066ba7e5eb3523b11</anchor>
      <arglist>(const std::string &amp;type_name)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::TwoDDetails</name>
    <filename>namespaceTeuchos_1_1TwoDDetails.html</filename>
    <member kind="function">
      <type>bool</type>
      <name>symmetricCompare</name>
      <anchorfile>namespaceTeuchos_1_1TwoDDetails.html</anchorfile>
      <anchor>a7683bf476b4e43e8350a1463bce8415f</anchor>
      <arglist>(const TwoDArray&lt; T &gt; &amp;a1, const TwoDArray&lt; T &gt; &amp;a2)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::TypeTraits</name>
    <filename>namespaceTeuchos_1_1TypeTraits.html</filename>
    <class kind="struct">Teuchos::TypeTraits::is_same</class>
    <class kind="struct">Teuchos::TypeTraits::is_same&lt; T, T &gt;</class>
  </compound>
  <compound kind="namespace">
    <name>Teuchos::Utilities</name>
    <filename>namespaceTeuchos_1_1Utilities.html</filename>
    <member kind="function">
      <type>void</type>
      <name>assert_shares_resource</name>
      <anchorfile>namespaceTeuchos_1_1Utilities.html</anchorfile>
      <anchor>a6abfd67310adb5e17e07c930a1a696d6</anchor>
      <arglist>(const ArrayRCP&lt; T1 &gt; &amp;p1, const ArrayRCP&lt; T2 &gt; &amp;p2)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Teuchosstd</name>
    <filename>namespaceTeuchosstd.html</filename>
    <class kind="class">Teuchosstd::map</class>
  </compound>
  <compound kind="namespace">
    <name>Trilinos</name>
    <filename>namespaceTrilinos.html</filename>
    <namespace>Trilinos::Details</namespace>
  </compound>
  <compound kind="namespace">
    <name>Trilinos::Details</name>
    <filename>namespaceTrilinos_1_1Details.html</filename>
    <namespace>Trilinos::Details::Impl</namespace>
    <class kind="class">Trilinos::Details::LinearSolver</class>
    <class kind="class">Trilinos::Details::LinearSolverFactory</class>
    <member kind="function">
      <type>Teuchos::RCP&lt; LinearSolver&lt; MV, OP, NormType &gt; &gt;</type>
      <name>getLinearSolver</name>
      <anchorfile>namespaceTrilinos_1_1Details.html</anchorfile>
      <anchor>a2a0bb5612b70d57694084eb739b9f141</anchor>
      <arglist>(const std::string &amp;packageName, const std::string &amp;solverName)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>registerLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details.html</anchorfile>
      <anchor>a1753005d87a3117c49301cca7d0b276c</anchor>
      <arglist>(const std::string &amp;packageName, const Teuchos::RCP&lt; LinearSolverFactory&lt; MV, OP, NormType &gt; &gt; &amp;factory)</arglist>
    </member>
  </compound>
  <compound kind="namespace">
    <name>Trilinos::Details::Impl</name>
    <filename>namespaceTrilinos_1_1Details_1_1Impl.html</filename>
    <class kind="class">Trilinos::Details::Impl::LinearSolverFactoryRepository</class>
    <member kind="function">
      <type>bool</type>
      <name>rememberRegisteredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a9c8ad7745636b91916c33cbee631786b</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>registeredSomeLinearSolverFactory</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>a8e34bcac649f747449516c541143e313</anchor>
      <arglist>(const std::string &amp;packageName)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>haveLinearSolverFactoryRunTimeRegistration</name>
      <anchorfile>namespaceTrilinos_1_1Details_1_1Impl.html</anchorfile>
      <anchor>ab87a2c478b3b3c6596992532b2cecf48</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>CompileTimeAssert_grp</name>
    <title>Template classes for testing assertions at compile time.</title>
    <filename>group__CompileTimeAssert__grp.html</filename>
    <class kind="class">Teuchos::CompileTimeAssert</class>
    <class kind="class">Teuchos::CompileTimeAssert&lt; 0 &gt;</class>
  </compound>
  <compound kind="group">
    <name>Teuchos_CWrapperSupport_grp</name>
    <title>.</title>
    <filename>group__Teuchos__CWrapperSupport__grp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_TRY</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga3819f2b13f3a265afcbd49dd60b57d4d</anchor>
      <arglist>(IERR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_CATCH_ERROR_CODE</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga0ad516d8c779d46f8ac74204a94a98d5</anchor>
      <arglist>(IERR)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_CWRAPPER_SET_ERROR_CODE</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga1c8dbaf2c2cd6988c26510ce173d43d2</anchor>
      <arglist>(IERR, IERR_VALUE)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static void</type>
      <name>setPrintErrorOStream</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>gaa7c16d88bde2d095f855891f9f5f792a</anchor>
      <arglist>(const RCP&lt; FancyOStream &gt; &amp;errorOStream)</arglist>
    </member>
    <member kind="function" static="yes">
      <type>static RCP&lt; FancyOStream &gt;</type>
      <name>getPrintErrorOStream</name>
      <anchorfile>group__Teuchos__CWrapperSupport__grp.html</anchorfile>
      <anchor>ga4d50ecbe14b983a2441b9ab34f62b5c0</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Teuchos_RCPBoostSharedPtrConversions_grp</name>
    <title>Conversion utilities for going between Teuchos::RCP and boost::shared_ptr.</title>
    <filename>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</filename>
    <class kind="class">Teuchos::DeallocBoostSharedPtr</class>
    <class kind="class">Teuchos::RCPDeleter</class>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>ga0148db5a21456be8682284228f04ad13</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPBoostSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaf28c8123a4b74115276d34ed1a256de7</anchor>
      <arglist>(const boost::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Teuchos_RCPStdSharedPtrConversions_grp</name>
    <title>Conversion utilities for going between Teuchos::RCP and std::shared_ptr.</title>
    <filename>group__Teuchos__RCPStdSharedPtrConversions__grp.html</filename>
    <class kind="class">Teuchos::DeallocStdSharedPtr</class>
    <class kind="class">Teuchos::StdSharedPtrRCPDeleter</class>
    <member kind="function">
      <type>bool</type>
      <name>is_null</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gade66554b0078fdf9b134723ef5da551f</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
    <member kind="function">
      <type>bool</type>
      <name>nonnull</name>
      <anchorfile>group__Teuchos__RCPStdSharedPtrConversions__grp.html</anchorfile>
      <anchor>gaecc73655aad3c6aaa1de138d2427426c</anchor>
      <arglist>(const std::shared_ptr&lt; T &gt; &amp;p)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>TestForException_grp</name>
    <title>Utility code for throwing exceptions and setting breakpoints.</title>
    <filename>group__TestForException__grp.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga01866f80ce83dda7221b83844edeff22</anchor>
      <arglist>(assertion_test)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_IN_RANGE_UPPER_EXCLUSIVE</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga68fb3eb00592518a99cddeea3cbe4f93</anchor>
      <arglist>(index, lower_inclusive, upper_exclusive)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_EQUALITY</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gae4bd9380ee7849faf0e0ecc7a611019c</anchor>
      <arglist>(val1, val2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_ASSERT_INEQUALITY</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gaccac59b1a49e9d1b9d814f5a331c726a</anchor>
      <arglist>(val1, comp, val2)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gaadb9556c5c1ba7da1c141e7529a8ebdf</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_CLASS_FUNC</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga91a1a9a9d6195f127f2c31e0351f5bac</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_PURE_MSG</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga310a73e502ce663691fb1d3d6b32e62f</anchor>
      <arglist>(throw_exception_test, Exception, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPTION_PRINT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gafd089effc4cb919a9e3dd400c3033d44</anchor>
      <arglist>(throw_exception_test, Exception, msg, out_ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga904c9f821383ba177d6c5de1fdc787a1</anchor>
      <arglist>(throw_exception_test)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT_MSG</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga61953b78b3ca85763029f4cc5e68371e</anchor>
      <arglist>(throw_exception_test, msg)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TEST_FOR_EXCEPT_PRINT</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga74e157f99451d49198d64907bf9dc61d</anchor>
      <arglist>(throw_exception_test, out_ptr)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>TEUCHOS_TRACE</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga53c0f43801689c025182e783b651605c</anchor>
      <arglist>(exc)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_incrThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>gac044ac48009404ffe538f4b7669083e8</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT int</type>
      <name>TestForException_getThrowNumber</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga053257c97eae8c526bd0cbe46e23209d</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_break</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga2f43578ce3790815568a4d115a69e1ab</anchor>
      <arglist>(const std::string &amp;msg)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>TestForException_setEnableStacktrace</name>
      <anchorfile>group__TestForException__grp.html</anchorfile>
      <anchor>ga3198d526f9102bc157f200b82a9483c8</anchor>
      <arglist>(bool enableStrackTrace)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Teuchos_Workspace_grp</name>
    <title>Set of utilities for allocating temporary workspace.</title>
    <filename>group__Teuchos__Workspace__grp.html</filename>
    <class kind="class">Teuchos::RawWorkspace</class>
    <class kind="class">Teuchos::Workspace</class>
    <class kind="class">Teuchos::WorkspaceStore</class>
    <class kind="class">Teuchos::WorkspaceStoreInitializeable</class>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>set_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>gaca2f084f86654404e05467a423676242</anchor>
      <arglist>(const Teuchos::RCP&lt; WorkspaceStore &gt; &amp;default_workspace_store)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT Teuchos::RCP&lt; WorkspaceStore &gt;</type>
      <name>get_default_workspace_store</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga779918e84bc90004f7543acbccc70b4e</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOSCORE_LIB_DLL_EXPORT void</type>
      <name>print_memory_usage_stats</name>
      <anchorfile>group__Teuchos__Workspace__grp.html</anchorfile>
      <anchor>ga620281f771e65332f55ced465a0f3ce9</anchor>
      <arglist>(const WorkspaceStore *workspace_store, std::ostream &amp;out)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>BLASEnum_grp</name>
    <title>Enumerations for character inputs in Teuchos::BLAS methods</title>
    <filename>group__BLASEnum__grp.html</filename>
  </compound>
  <compound kind="group">
    <name>Teuchos_Array_Arguments</name>
    <title>Utility functions for passing arrays into argument lists [Deprecated].</title>
    <filename>group__Teuchos__Array__Arguments.html</filename>
    <class kind="class">Teuchos::ArrayArg</class>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 1, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga9fc0e1264c2081d2b8f2b22549785c47</anchor>
      <arglist>(T t1)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 2, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gad25b43a1cbe9e99069e5c08c26a8574d</anchor>
      <arglist>(T t1, T t2)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 3, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>gac2527f96b0a457afe639f594cba50f7c</anchor>
      <arglist>(T t1, T t2, T t3)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 4, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga57a5810259c0fc3afb78c9e449fbdb59</anchor>
      <arglist>(T t1, T t2, T t3, T t4)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 5, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga326c9fe20c12a9d913feebddd0f5b387</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5)</arglist>
    </member>
    <member kind="function">
      <type>TEUCHOS_DEPRECATED ArrayArg&lt; 6, T &gt;</type>
      <name>arrayArg</name>
      <anchorfile>group__Teuchos__Array__Arguments.html</anchorfile>
      <anchor>ga445a2817e0b2aefec6529e0d6ea2a641</anchor>
      <arglist>(T t1, T t2, T t3, T t4, T t5, T t6)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>Teuchos_FloatingPointTrap_grp</name>
    <title>Floating Point Trapping Support Code</title>
    <filename>group__Teuchos__FloatingPointTrap__grp.html</filename>
    <member kind="function">
      <type>void</type>
      <name>doFloatingPointTrap</name>
      <anchorfile>group__Teuchos__FloatingPointTrap__grp.html</anchorfile>
      <anchor>ga34e4d04211025e5f620ef214fb40bc9e</anchor>
      <arglist>(bool enableTrap)</arglist>
    </member>
  </compound>
  <compound kind="page">
    <name>index</name>
    <title>Teuchos Package Browser (Single Doxygen Collection)</title>
    <filename>index</filename>
  </compound>
</tagfile>
